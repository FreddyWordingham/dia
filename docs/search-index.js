var searchIndex={};
searchIndex["addr2line"] = {"doc":"This crate provides a cross-platform library and binary…","i":[[3,"Context","addr2line","The state necessary to perform address to line translation.",null,null],[3,"FrameIter","","An iterator over function frames.",null,null],[3,"Frame","","A function frame.",null,null],[12,"dw_die_offset","","The DWARF unit offset corresponding to the DIE of the…",0,null],[12,"function","","The name of the function.",0,null],[12,"location","","The source location corresponding to this frame.",0,null],[3,"FunctionName","","A function name.",null,null],[12,"name","","The name of the function.",1,null],[12,"language","","The language of the compilation unit containing this…",1,null],[3,"Location","","A source location.",null,null],[12,"file","","The file name.",2,null],[12,"line","","The line number.",2,null],[12,"column","","The column number.",2,null],[5,"demangle","","Demangle a symbol name using the demangling scheme for the…",null,[[["str"],["dwlang"]],[["string"],["option",["string"]]]]],[5,"demangle_auto","","Apply 'best effort' demangling of a symbol name.",null,[[["cow",["str"]],["str"],["option",["dwlang"]],["dwlang"]],[["cow",["str"]],["str"]]]],[11,"from_sections","","Construct a new `Context` from DWARF sections.",3,[[["debuglinestr"],["debugline"],["debugabbrev"],["debugranges"],["debugrnglists"],["debugstr"],["debugstroffsets"],["debugaddr"],["debuginfo"],["r"]],[["error"],["result",["error"]]]]],[11,"from_dwarf","","Construct a new `Context` from an existing…",3,[[["dwarf"]],[["error"],["result",["error"]]]]],[11,"dwarf","","The dwarf sections associated with this `Context`.",3,[[["self"]],["dwarf"]]],[11,"find_dwarf_unit","","Find the DWARF unit corresponding to the given virtual…",3,[[["self"],["u64"]],[["unit"],["option",["unit"]]]]],[11,"find_location","","Find the source file and line corresponding to the given…",3,[[["self"],["u64"]],[["error"],["result",["option","error"]],["option",["location"]]]]],[11,"find_frames","","Return an iterator for the function frames corresponding…",3,[[["self"],["u64"]],[["error"],["frameiter"],["result",["frameiter","error"]]]]],[11,"next","","Advances the iterator and returns the next frame.",4,[[["self"]],[["option",["frame"]],["error"],["result",["option","error"]]]]],[11,"raw_name","","The raw name of this function before demangling.",1,[[["self"]],[["cow",["str"]],["error"],["result",["cow","error"]]]]],[11,"demangle","","The name of this function after demangling (if applicable).",1,[[["self"]],[["cow",["str"]],["error"],["result",["cow","error"]]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]]],"p":[[3,"Frame"],[3,"FunctionName"],[3,"Location"],[3,"Context"],[3,"FrameIter"]]};
searchIndex["adler32"] = {"doc":"A minimal implementation of Adler32 for Rust.","i":[[3,"RollingAdler32","adler32","A rolling version of the Adler32 hash, which can 'forget'…",null,null],[5,"adler32","","Consume a Read object and returns the Adler32 hash.",null,[[["read"]],[["u32"],["result",["u32"]]]]],[11,"new","","Creates an empty Adler32 context (with hash 1).",0,[[],["rollingadler32"]]],[11,"from_value","","Creates an Adler32 context with the given initial value.",0,[[["u32"]],["rollingadler32"]]],[11,"from_buffer","","Convenience function initializing a context from the hash…",0,[[],["rollingadler32"]]],[11,"hash","","Returns the current hash.",0,[[["self"]],["u32"]]],[11,"remove","","Removes the given `byte` that was fed to the algorithm…",0,[[["self"],["usize"],["u8"]]]],[11,"update","","Feeds a new `byte` to the algorithm to update the hash.",0,[[["self"],["u8"]]]],[11,"update_buffer","","Feeds a vector of bytes to the algorithm to update the hash.",0,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["rollingadler32"]]]],"p":[[3,"RollingAdler32"]]};
searchIndex["ansi_rgb"] = {"doc":"Colorful console text using ANSI escape sequences.","i":[[3,"WithBackground","ansi_rgb","Something with a background color",null,null],[3,"WithForeground","","Something with a foreground color",null,null],[5,"white","","Makes white",null,[[],["rgb8"]]],[5,"black","","Makes black",null,[[],["rgb8"]]],[5,"red","","Makes red",null,[[],["rgb8"]]],[5,"orange","","Makes orange",null,[[],["rgb8"]]],[5,"yellow","","Makes yellow",null,[[],["rgb8"]]],[5,"yellow_green","","Makes yellow green",null,[[],["rgb8"]]],[5,"green","","Makes green",null,[[],["rgb8"]]],[5,"green_cyan","","Makes green cyan",null,[[],["rgb8"]]],[5,"cyan","","Makes cyan",null,[[],["rgb8"]]],[5,"cyan_blue","","Makes cyan blue",null,[[],["rgb8"]]],[5,"blue","","Makes blue",null,[[],["rgb8"]]],[5,"blue_magenta","","Makes blue magenta",null,[[],["rgb8"]]],[5,"magenta","","Makes magenta",null,[[],["rgb8"]]],[5,"magenta_pink","","Makes magenta pink",null,[[],["rgb8"]]],[8,"Background","","Adds a background color",null,null],[10,"bg","","Adds the given background color",0,[[["rgb8"]],["withbackground"]]],[8,"Foreground","","Adds a foreground color",null,null],[10,"fg","","Adds the given foreground color",1,[[["rgb8"]],["withforeground"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]]],"p":[[8,"Background"],[8,"Foreground"],[3,"WithBackground"],[3,"WithForeground"]]};
searchIndex["approx"] = {"doc":"A crate that provides facilities for testing the…","i":[[3,"AbsDiff","approx","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",0,null],[3,"Relative","","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",1,null],[12,"max_relative","","The relative tolerance for testing values that are…",1,null],[3,"Ulps","","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",2,null],[12,"max_ulps","","The ULPs to tolerate when testing values that are far-apart.",2,null],[8,"AbsDiffEq","","Equality that is defined using the absolute difference of…",null,null],[16,"Epsilon","","Used for specifying relative comparisons.",3,null],[10,"default_epsilon","","The default tolerance to use when testing values that are…",3,[[]]],[10,"abs_diff_eq","","A test for equality that uses the absolute difference to…",3,[[["rhs"],["self"]],["bool"]]],[11,"abs_diff_ne","","The inverse of `ApproxEq::abs_diff_eq`.",3,[[["rhs"],["self"]],["bool"]]],[8,"RelativeEq","","Equality comparisons between two numbers using both the…",null,null],[10,"default_max_relative","","The default relative tolerance for testing values that are…",4,[[]]],[10,"relative_eq","","A test for equality that uses a relative comparison if the…",4,[[["rhs"],["self"]],["bool"]]],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",4,[[["rhs"],["self"]],["bool"]]],[8,"UlpsEq","","Equality comparisons between two numbers using both the…",null,null],[10,"default_max_ulps","","The default ULPs to tolerate when testing values that are…",5,[[],["u32"]]],[10,"ulps_eq","","A test for equality that uses units in the last place…",5,[[["u32"],["rhs"],["self"]],["bool"]]],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",5,[[["u32"],["rhs"],["self"]],["bool"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",0,[[],["absdiff"]]],[11,"eq","","Peform the equality comparison",0,[[["b"],["a"]],["bool"]]],[11,"ne","","Peform the inequality comparison",0,[[["b"],["a"]],["bool"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",1,[[],["relative"]]],[11,"max_relative","","Replace the maximum relative value with the one specified.",1,[[],["relative"]]],[11,"eq","","Peform the equality comparison",1,[[["b"],["a"]],["bool"]]],[11,"ne","","Peform the inequality comparison",1,[[["b"],["a"]],["bool"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",2,[[],["ulps"]]],[11,"max_ulps","","Replace the max ulps value with the one specified.",2,[[["u32"]],["ulps"]]],[11,"eq","","Peform the equality comparison",2,[[["b"],["a"]],["bool"]]],[11,"ne","","Peform the inequality comparison",2,[[["b"],["a"]],["bool"]]],[14,"abs_diff_eq","","Approximate equality of using the absolute difference.",null,null],[14,"abs_diff_ne","","Approximate inequality of using the absolute difference.",null,null],[14,"relative_eq","","Approximate equality using both the absolute difference…",null,null],[14,"relative_ne","","Approximate inequality using both the absolute difference…",null,null],[14,"ulps_eq","","Approximate equality using both the absolute difference…",null,null],[14,"ulps_ne","","Approximate inequality using both the absolute difference…",null,null],[14,"assert_abs_diff_eq","","An assertion that delegates to `abs_diff_eq!`, and panics…",null,null],[14,"assert_abs_diff_ne","","An assertion that delegates to `abs_diff_ne!`, and panics…",null,null],[14,"assert_relative_eq","","An assertion that delegates to `relative_eq!`, and panics…",null,null],[14,"assert_relative_ne","","An assertion that delegates to `relative_ne!`, and panics…",null,null],[14,"assert_ulps_eq","","An assertion that delegates to `ulps_eq!`, and panics with…",null,null],[14,"assert_ulps_ne","","An assertion that delegates to `ulps_ne!`, and panics with…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["absdiff"]]],[11,"default","","",1,[[],["relative"]]],[11,"default","","",2,[[],["ulps"]]],[11,"abs_diff_ne","","The inverse of `ApproxEq::abs_diff_eq`.",3,[[["rhs"],["self"]],["bool"]]],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",4,[[["rhs"],["self"]],["bool"]]],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",5,[[["u32"],["rhs"],["self"]],["bool"]]]],"p":[[3,"AbsDiff"],[3,"Relative"],[3,"Ulps"],[8,"AbsDiffEq"],[8,"RelativeEq"],[8,"UlpsEq"]]};
searchIndex["attr"] = {"doc":"Support library of attribute macros.","i":[[23,"input","attr","Create the attribute macro input.",null,null],[23,"output","","Create the attribute macro output.",null,null],[23,"load","","Create the attribute macro load.",null,null],[23,"save","","Create the attribute macro save.",null,null]],"p":[]};
searchIndex["atty"] = {"doc":"atty is a simple utility that answers one question > is…","i":[[4,"Stream","atty","possible stream sources",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[13,"Stdin","","",0,null],[5,"is","","returns true if this is a tty",null,[[["stream"]],["bool"]]],[5,"isnt","","returns true if this is not a tty",null,[[["stream"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"clone","","",0,[[["self"]],["stream"]]]],"p":[[4,"Stream"]]};
searchIndex["backtrace"] = {"doc":"A library for acquiring a backtrace at runtime","i":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to…",null,null],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic…",null,null],[3,"BacktraceFmt","","A formatter for backtraces.",null,null],[3,"BacktraceFrameFmt","","A formatter for just one frame of a backtrace.",null,null],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",null,null],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",null,null],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",null,null],[4,"BytesOrWideString","","A platform independent representation of a string. When…",null,null],[13,"Bytes","","A slice, typically provided on Unix platforms.",0,null],[13,"Wide","","Wide strings typically from Windows.",0,null],[4,"PrintFmt","","The styles of printing that we can print",null,null],[13,"Short","","Prints a terser backtrace which ideally only contains…",1,null],[13,"Full","","Prints a backtrace that contains all possible information",1,null],[5,"trace_unsynchronized","","Same as `trace`, only unsafe as it's unsynchronized.",null,[[["fnmut"]]]],[5,"resolve_frame_unsynchronized","","Same as `resolve_frame`, only unsafe as it's unsynchronized.",null,[[["f"],["frame"]]]],[5,"resolve_unsynchronized","","Same as `resolve`, only unsafe as it's unsynchronized.",null,[[["f"]]]],[5,"clear_symbol_cache","","Attempt to reclaim that cached memory used to symbolicate…",null,[[]]],[5,"trace","","Inspects the current call-stack, passing all active frames…",null,[[["fnmut"]]]],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the…",null,[[["fnmut"]]]],[5,"resolve_frame","","Resolve a previously capture frame to a symbol, passing…",null,[[["fnmut"],["frame"]]]],[11,"ip","","Returns the current instruction pointer of this frame.",2,[[["self"]]]],[11,"symbol_address","","Returns the starting symbol address of the frame of this…",2,[[["self"]]]],[11,"name","","Returns the name of this function.",3,[[["self"]],[["option",["symbolname"]],["symbolname"]]]],[11,"addr","","Returns the starting address of this function.",3,[[["self"]],["option"]]],[11,"filename_raw","","Returns the raw filename as a slice. This is mainly useful…",3,[[["self"]],[["option",["bytesorwidestring"]],["bytesorwidestring"]]]],[11,"lineno","","Returns the line number for where this symbol is currently…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"filename","","Returns the file name where this function was defined.",3,[[["self"]],[["option",["path"]],["path"]]]],[11,"new","","Creates a new symbol name from the raw underlying bytes.",4,[[],["symbolname"]]],[11,"as_str","","Returns the raw (mangled) symbol name as a `str` if the…",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",4,[[["self"]]]],[11,"to_str_lossy","","Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[["self"]],[["str"],["cow",["str"]]]]],[11,"into_path_buf","","Provides a `Path` representation of `BytesOrWideString`.",0,[[],["pathbuf"]]],[11,"new","","Create a new `BacktraceFmt` which will write output to the…",5,[[["fnmut"],["formatter"],["printfmt"]],["self"]]],[11,"add_context","","Prints a preamble for the backtrace about to be printed.",5,[[["self"]],["result"]]],[11,"frame","","Adds a frame to the backtrace output.",5,[[["self"]],["backtraceframefmt"]]],[11,"finish","","Completes the backtrace output.",5,[[["self"]],["result"]]],[11,"backtrace_frame","","Prints a `BacktraceFrame` with this frame formatter.",6,[[["self"],["backtraceframe"]],["result"]]],[11,"backtrace_symbol","","Prints a `BacktraceSymbol` within a `BacktraceFrame`.",6,[[["backtracesymbol"],["self"],["backtraceframe"]],["result"]]],[11,"symbol","","Prints a raw traced `Frame` and `Symbol`, typically from…",6,[[["self"],["frame"],["symbol"]],["result"]]],[11,"print_raw","","Adds a raw frame to the backtrace output.",6,[[["option",["bytesorwidestring"]],["u32"],["symbolname"],["option",["u32"]],["option",["symbolname"]],["bytesorwidestring"],["self"]],["result"]]],[11,"new","","Captures a backtrace at the callsite of this function,…",7,[[],["backtrace"]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any…",7,[[],["backtrace"]]],[11,"frames","","Returns the frames from when this backtrace was captured.",7,[[["self"]]]],[11,"resolve","","If this backtrace was created from `new_unresolved` then…",7,[[["self"]]]],[11,"ip","","Same as `Frame::ip`",8,[[["self"]]]],[11,"symbol_address","","Same as `Frame::symbol_address`",8,[[["self"]]]],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",8,[[["self"]]]],[11,"name","","Same as `Symbol::name`",9,[[["self"]],[["option",["symbolname"]],["symbolname"]]]],[11,"addr","","Same as `Symbol::addr`",9,[[["self"]],["option"]]],[11,"filename","","Same as `Symbol::filename`",9,[[["self"]],[["option",["path"]],["path"]]]],[11,"lineno","","Same as `Symbol::lineno`",9,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",7,[[["backtraceframe"],["vec",["backtraceframe"]]],["self"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["printfmt"]],["bool"]]],[11,"drop","","",6,[[["self"]]]],[11,"into","","",7,[[],[["backtraceframe"],["vec",["backtraceframe"]]]]],[11,"clone","","",2,[[["self"]],["frame"]]],[11,"clone","","",1,[[["self"]],["printfmt"]]],[11,"clone","","",7,[[["self"]],["backtrace"]]],[11,"clone","","",8,[[["self"]],["backtraceframe"]]],[11,"clone","","",9,[[["self"]],["backtracesymbol"]]],[11,"default","","",7,[[],["backtrace"]]]],"p":[[4,"BytesOrWideString"],[4,"PrintFmt"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"BacktraceFmt"],[3,"BacktraceFrameFmt"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and…","i":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for [`BigEndian`].",null,null],[6,"LE","","A type alias for [`LittleEndian`].",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For…",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["i8"]],["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["i16"],["result",["i16"]]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["u128"],["result",["u128"]]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["result",["i128"]],["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u64"],["result",["u64"]]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i64"]],["i64"]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u128"],["result",["u128"]]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i128"]],["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["f64"],["result",["f64"]]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For…",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,[[],["u16"]]],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[],["u32"]]],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,[[],["u32"]]],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[],["u64"]]],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,[[],["u64"]]],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",2,[[],["u128"]]],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u64"]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u128"]]],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,[[["u16"]]]],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[["u32"]]]],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,[[["u32"]]]],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[["u64"]]]],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,[[["u64"]]]],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",2,[[["u128"]]]],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u64"]]]],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u128"]]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,[[],["i16"]]],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[],["i32"]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,[[],["i32"]]],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[],["i64"]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,[[],["i64"]]],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",2,[[],["i128"]]],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i64"]]],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i128"]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,[[],["f32"]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,[[],["f64"]]],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,[[["i16"]]]],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[["i32"]]]],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,[[["i32"]]]],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[["i64"]]]],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,[[["i64"]]]],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",2,[[["i128"]]]],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i64"],["usize"]]]],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i128"],["usize"]]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,[[["f32"]]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,[[["f64"]]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f32_into_unchecked","","DEPRECATED.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f64_into_unchecked","","DEPRECATED.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u16","","",3,[[],["u16"]]],[11,"read_u32","","",3,[[],["u32"]]],[11,"read_u64","","",3,[[],["u64"]]],[11,"read_u128","","",3,[[],["u128"]]],[11,"read_uint","","",3,[[["usize"]],["u64"]]],[11,"read_uint128","","",3,[[["usize"]],["u128"]]],[11,"write_u16","","",3,[[["u16"]]]],[11,"write_u32","","",3,[[["u32"]]]],[11,"write_u64","","",3,[[["u64"]]]],[11,"write_u128","","",3,[[["u128"]]]],[11,"write_uint","","",3,[[["usize"],["u64"]]]],[11,"write_uint128","","",3,[[["usize"],["u128"]]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[],["u16"]]],[11,"read_u32","","",4,[[],["u32"]]],[11,"read_u64","","",4,[[],["u64"]]],[11,"read_u128","","",4,[[],["u128"]]],[11,"read_uint","","",4,[[["usize"]],["u64"]]],[11,"read_uint128","","",4,[[["usize"]],["u128"]]],[11,"write_u16","","",4,[[["u16"]]]],[11,"write_u32","","",4,[[["u32"]]]],[11,"write_u64","","",4,[[["u64"]]]],[11,"write_u128","","",4,[[["u128"]]]],[11,"write_uint","","",4,[[["usize"],["u64"]]]],[11,"write_uint128","","",4,[[["usize"],["u128"]]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"cmp","","",3,[[["bigendian"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"eq","","",3,[[["bigendian"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"partial_cmp","","",3,[[["bigendian"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["i8"]],["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["i16"],["result",["i16"]]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["u128"],["result",["u128"]]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["result",["i128"]],["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u64"],["result",["u64"]]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i64"]],["i64"]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u128"],["result",["u128"]]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i128"]],["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["f64"],["result",["f64"]]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]};
searchIndex["clicolors_control"] = {"doc":"This library implements basic clicolor control for other…","i":[[5,"colors_enabled","clicolors_control","Returns `true` if colors should be enabled.",null,[[],["bool"]]],[5,"configure_terminal","","Configures the terminal for ANSI color support.",null,[[],["bool"]]],[5,"set_colors_enabled","","Forces colorization on or off.",null,[[["bool"]]]],[0,"terminfo","","Auxiliary terminal information.",null,null],[5,"supports_colors","clicolors_control::terminfo","Returns `true` if colors are supported by this terminal.",null,[[],["bool"]]],[5,"is_atty","","Returns `true` if a terminal is connected.",null,[[],["bool"]]]],"p":[]};
searchIndex["colored"] = {"doc":"Coloring terminal so simple, you already know how to do it !","i":[[3,"Style","colored","A combinatorial style such as bold, italics, dimmed, etc.",null,null],[3,"ColoredString","","A string that may have color and/or style applied to it.",null,null],[4,"Color","","The 8 standard colors.",null,null],[13,"Black","","",0,null],[13,"Red","","",0,null],[13,"Green","","",0,null],[13,"Yellow","","",0,null],[13,"Blue","","",0,null],[13,"Magenta","","",0,null],[13,"Cyan","","",0,null],[13,"White","","",0,null],[13,"BrightBlack","","",0,null],[13,"BrightRed","","",0,null],[13,"BrightGreen","","",0,null],[13,"BrightYellow","","",0,null],[13,"BrightBlue","","",0,null],[13,"BrightMagenta","","",0,null],[13,"BrightCyan","","",0,null],[13,"BrightWhite","","",0,null],[4,"Styles","","",null,null],[13,"Clear","","",1,null],[13,"Bold","","",1,null],[13,"Dimmed","","",1,null],[13,"Underline","","",1,null],[13,"Reversed","","",1,null],[13,"Italic","","",1,null],[13,"Blink","","",1,null],[13,"Hidden","","",1,null],[13,"Strikethrough","","",1,null],[11,"to_fg_str","","",0,[[["self"]],["str"]]],[11,"to_bg_str","","",0,[[["self"]],["str"]]],[0,"control","","A couple of functions to enable and disable coloring.",null,null],[3,"ShouldColorize","colored::control","A flag to to if coloring should occur.",null,null],[3,"SHOULD_COLORIZE","","The persistent [`ShouldColorize`].",null,null],[5,"set_override","","Use this to force colored to ignore the environment and…",null,[[["bool"]]]],[5,"unset_override","","Remove the manual override and let the environment decide…",null,[[]]],[11,"from_env","","Reads environment variables and checks if output is a tty…",2,[[],["self"]]],[11,"should_colorize","","Returns if the current coloring is expected.",2,[[["self"]],["bool"]]],[11,"set_override","","Use this to force colored to ignore the environment and…",2,[[["self"],["bool"]]]],[11,"unset_override","","Remove the manual override and let the environment decide…",2,[[["self"]]]],[11,"contains","colored","Check if the current style has one of `Styles` switched on.",3,[[["styles"],["self"]],["bool"]]],[8,"Colorize","","The trait that enables something to be given color.",null,null],[11,"black","","",4,[[],["coloredstring"]]],[11,"red","","",4,[[],["coloredstring"]]],[11,"green","","",4,[[],["coloredstring"]]],[11,"yellow","","",4,[[],["coloredstring"]]],[11,"blue","","",4,[[],["coloredstring"]]],[11,"magenta","","",4,[[],["coloredstring"]]],[11,"purple","","",4,[[],["coloredstring"]]],[11,"cyan","","",4,[[],["coloredstring"]]],[11,"white","","",4,[[],["coloredstring"]]],[11,"bright_black","","",4,[[],["coloredstring"]]],[11,"bright_red","","",4,[[],["coloredstring"]]],[11,"bright_green","","",4,[[],["coloredstring"]]],[11,"bright_yellow","","",4,[[],["coloredstring"]]],[11,"bright_blue","","",4,[[],["coloredstring"]]],[11,"bright_magenta","","",4,[[],["coloredstring"]]],[11,"bright_purple","","",4,[[],["coloredstring"]]],[11,"bright_cyan","","",4,[[],["coloredstring"]]],[11,"bright_white","","",4,[[],["coloredstring"]]],[10,"color","","",4,[[["color"],["into",["color"]]],["coloredstring"]]],[11,"on_black","","",4,[[],["coloredstring"]]],[11,"on_red","","",4,[[],["coloredstring"]]],[11,"on_green","","",4,[[],["coloredstring"]]],[11,"on_yellow","","",4,[[],["coloredstring"]]],[11,"on_blue","","",4,[[],["coloredstring"]]],[11,"on_magenta","","",4,[[],["coloredstring"]]],[11,"on_purple","","",4,[[],["coloredstring"]]],[11,"on_cyan","","",4,[[],["coloredstring"]]],[11,"on_white","","",4,[[],["coloredstring"]]],[11,"on_bright_black","","",4,[[],["coloredstring"]]],[11,"on_bright_red","","",4,[[],["coloredstring"]]],[11,"on_bright_green","","",4,[[],["coloredstring"]]],[11,"on_bright_yellow","","",4,[[],["coloredstring"]]],[11,"on_bright_blue","","",4,[[],["coloredstring"]]],[11,"on_bright_magenta","","",4,[[],["coloredstring"]]],[11,"on_bright_purple","","",4,[[],["coloredstring"]]],[11,"on_bright_cyan","","",4,[[],["coloredstring"]]],[11,"on_bright_white","","",4,[[],["coloredstring"]]],[10,"on_color","","",4,[[["color"],["into",["color"]]],["coloredstring"]]],[10,"clear","","",4,[[],["coloredstring"]]],[10,"normal","","",4,[[],["coloredstring"]]],[10,"bold","","",4,[[],["coloredstring"]]],[10,"dimmed","","",4,[[],["coloredstring"]]],[10,"italic","","",4,[[],["coloredstring"]]],[10,"underline","","",4,[[],["coloredstring"]]],[10,"blink","","",4,[[],["coloredstring"]]],[10,"reverse","","Historical name of `Colorize::reversed`. May be removed in…",4,[[],["coloredstring"]]],[10,"reversed","","This should be preferred to `Colorize::reverse`.",4,[[],["coloredstring"]]],[10,"hidden","","",4,[[],["coloredstring"]]],[10,"strikethrough","","",4,[[],["coloredstring"]]],[11,"fgcolor","","Get the current background color applied.",5,[[["self"]],[["color"],["option",["color"]]]]],[11,"bgcolor","","Get the current background color applied.",5,[[["self"]],[["color"],["option",["color"]]]]],[11,"style","","Get the current [`Style`] which can be check if it…",5,[[["self"]],["style"]]],[11,"is_plain","","Checks if the colored string has no color or styling.",5,[[["self"]],["bool"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","colored::control","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"color","colored","",5,[[["color"],["into",["color"]]],["coloredstring"]]],[11,"on_color","","",5,[[["color"],["into",["color"]]],["coloredstring"]]],[11,"clear","","",5,[[],["coloredstring"]]],[11,"normal","","",5,[[],["coloredstring"]]],[11,"bold","","",5,[[],["coloredstring"]]],[11,"dimmed","","",5,[[],["coloredstring"]]],[11,"italic","","",5,[[],["coloredstring"]]],[11,"underline","","",5,[[],["coloredstring"]]],[11,"blink","","",5,[[],["coloredstring"]]],[11,"reverse","","",5,[[],["coloredstring"]]],[11,"reversed","","",5,[[],["coloredstring"]]],[11,"hidden","","",5,[[],["coloredstring"]]],[11,"strikethrough","","",5,[[],["coloredstring"]]],[11,"from","","",0,[[["str"]],["self"]]],[11,"from","","",0,[[["string"]],["self"]]],[11,"from","","",5,[[["str"]],["self"]]],[11,"clone","","",0,[[["self"]],["color"]]],[11,"clone","","",3,[[["self"]],["style"]]],[11,"clone","","",1,[[["self"]],["styles"]]],[11,"clone","","",5,[[["self"]],["coloredstring"]]],[11,"default","colored::control","",2,[[],["shouldcolorize"]]],[11,"default","colored","",5,[[],["self"]]],[11,"eq","","",0,[[["self"],["color"]],["bool"]]],[11,"eq","","",3,[[["self"],["style"]],["bool"]]],[11,"ne","","",3,[[["self"],["style"]],["bool"]]],[11,"eq","","",1,[[["self"],["styles"]],["bool"]]],[11,"eq","","",5,[[["coloredstring"],["self"]],["bool"]]],[11,"ne","","",5,[[["coloredstring"],["self"]],["bool"]]],[11,"deref","colored::control","",6,[[["self"]],["shouldcolorize"]]],[11,"deref","colored","",5,[[["self"]],["str"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"from_str","","",0,[[["str"]],["result"]]],[11,"initialize","colored::control","",6,[[["self"]]]]],"p":[[4,"Color"],[4,"Styles"],[3,"ShouldColorize"],[3,"Style"],[8,"Colorize"],[3,"ColoredString"],[3,"SHOULD_COLORIZE"]]};
searchIndex["console"] = {"doc":"console is a library for Rust that provides access to…","i":[[3,"Term","console","Abstraction around a terminal.",null,null],[3,"TermFeatures","","Gives access to the terminal features.",null,null],[3,"Emoji","","\"Intelligent\" emoji formatter.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"Style","","A stored style that can be applied.",null,null],[3,"StyledObject","","A formatting wrapper that can be styled for a terminal.",null,null],[3,"AnsiCodeIterator","","An iterator over ansi codes in a string.",null,null],[4,"Key","","Key mapping",null,null],[13,"Unknown","","",1,null],[13,"ArrowLeft","","",1,null],[13,"ArrowRight","","",1,null],[13,"ArrowUp","","",1,null],[13,"ArrowDown","","",1,null],[13,"Enter","","",1,null],[13,"Escape","","",1,null],[13,"Backspace","","",1,null],[13,"Char","","",1,null],[4,"TermFamily","","The family of the terminal.",null,null],[13,"File","","Redirected to a file or file like thing.",2,null],[13,"UnixTerm","","A standard unix terminal.",2,null],[13,"WindowsConsole","","A cmd.exe like windows console.",2,null],[13,"Dummy","","A dummy terminal (for instance on wasm)",2,null],[4,"TermTarget","","Where the term is writing.",null,null],[13,"Stdout","","",3,null],[13,"Stderr","","",3,null],[4,"Alignment","","Defines the alignment for padding operations.",null,null],[13,"Left","","",4,null],[13,"Center","","",4,null],[13,"Right","","",4,null],[4,"Attribute","","A terminal style attribute.",null,null],[13,"Bold","","",5,null],[13,"Dim","","",5,null],[13,"Italic","","",5,null],[13,"Underlined","","",5,null],[13,"Blink","","",5,null],[13,"Reverse","","",5,null],[13,"Hidden","","",5,null],[4,"Color","","A terminal color.",null,null],[13,"Black","","",6,null],[13,"Red","","",6,null],[13,"Green","","",6,null],[13,"Yellow","","",6,null],[13,"Blue","","",6,null],[13,"Magenta","","",6,null],[13,"Cyan","","",6,null],[13,"White","","",6,null],[5,"user_attended","","A fast way to check if the application has a user attended.",null,[[],["bool"]]],[5,"colors_enabled","","Returns `true` if colors should be enabled.",null,[[],["bool"]]],[5,"measure_text_width","","Measure the width of a string in terminal characters.",null,[[["str"]],["usize"]]],[5,"pad_str","","Pads a string to fill a certain number of characters.",null,[[["str"],["usize"],["alignment"],["option",["str"]],["str"]],[["str"],["cow",["str"]]]]],[5,"set_colors_enabled","","Forces colorization on or off.",null,[[["bool"]]]],[5,"style","","Wraps an object for formatting for styling.",null,[[["d"]],["styledobject"]]],[5,"truncate_str","","Truncates a string to a certain number of characters.",null,[[["str"],["str"],["usize"]],[["str"],["cow",["str"]]]]],[5,"strip_ansi_codes","","Helper function to strip ansi codes.",null,[[["str"]],[["str"],["cow",["str"]]]]],[11,"is_attended","","Checks if this is a real user attended terminal (`isatty`)",7,[[["self"]],["bool"]]],[11,"colors_supported","","Checks if colors are supported by this terminal.",7,[[["self"]],["bool"]]],[11,"is_msys_tty","","Checks if this terminal is an msys terminal.",7,[[["self"]],["bool"]]],[11,"wants_emoji","","Checks if this terminal wants emojis.",7,[[["self"]],["bool"]]],[11,"family","","Returns the family of the terminal.",7,[[["self"]],["termfamily"]]],[11,"stdout","","Return a new unbuffered terminal",8,[[],["term"]]],[11,"stderr","","Return a new unbuffered terminal to stderr",8,[[],["term"]]],[11,"buffered_stdout","","Return a new buffered terminal",8,[[],["term"]]],[11,"buffered_stderr","","Return a new buffered terminal to stderr",8,[[],["term"]]],[11,"target","","Returns the targert",8,[[["self"]],["termtarget"]]],[11,"write_line","","Writes a string to the terminal and adds a newline.",8,[[["str"],["self"]],["result"]]],[11,"read_char","","Read a single character from the terminal",8,[[["self"]],[["char"],["result",["char"]]]]],[11,"read_key","","Read a single key form the terminal.",8,[[["self"]],[["result",["key"]],["key"]]]],[11,"read_line","","Read one line of input.",8,[[["self"]],[["result",["string"]],["string"]]]],[11,"read_line_initial_text","","Read one line of input with initial text.",8,[[["str"],["self"]],[["result",["string"]],["string"]]]],[11,"read_secure_line","","Read securely a line of input.",8,[[["self"]],[["result",["string"]],["string"]]]],[11,"flush","","Flushes internal buffers.",8,[[["self"]],["result"]]],[11,"is_term","","Checks if the terminal is indeed a terminal.",8,[[["self"]],["bool"]]],[11,"features","","Checks for common terminal features.",8,[[["self"]],["termfeatures"]]],[11,"want_emoji","","Checks if this terminal wants emoji output.",8,[[["self"]],["bool"]]],[11,"size","","Returns the terminal size or gets sensible defaults.",8,[[["self"]]]],[11,"size_checked","","Returns the terminal size in rows and columns.",8,[[["self"]],["option"]]],[11,"move_cursor_to","","Moves the cursor to `x` and `y`",8,[[["self"],["usize"]],["result"]]],[11,"move_cursor_up","","Moves the cursor up `n` lines",8,[[["self"],["usize"]],["result"]]],[11,"move_cursor_down","","Moves the cursor down `n` lines",8,[[["self"],["usize"]],["result"]]],[11,"clear_line","","Clears the current line.",8,[[["self"]],["result"]]],[11,"clear_last_lines","","Clear the last `n` lines.",8,[[["self"],["usize"]],["result"]]],[11,"clear_screen","","Clears the entire screen.",8,[[["self"]],["result"]]],[11,"clear_chars","","Clears the last char in the the current line.",8,[[["self"],["usize"]],["result"]]],[11,"set_title","","Set the terminal title",8,[[["self"],["display"]]]],[11,"show_cursor","","Makes cursor visible again",8,[[["self"]],["result"]]],[11,"hide_cursor","","Hides cursor",8,[[["self"]],["result"]]],[11,"new","","Returns an empty default style.",9,[[],["style"]]],[11,"from_dotted_str","","Creates a style from a dotted string.",9,[[["str"]],["style"]]],[11,"apply_to","","Apply the style to something that can be displayed.",9,[[["d"],["self"]],["styledobject"]]],[11,"force_styling","","Forces styling on or off.",9,[[["bool"]],["style"]]],[11,"fg","","Sets a foreground color.",9,[[["color"]],["style"]]],[11,"bg","","Sets a background color.",9,[[["color"]],["style"]]],[11,"attr","","Adds a attr.",9,[[["attribute"]],["style"]]],[11,"black","","",9,[[],["style"]]],[11,"red","","",9,[[],["style"]]],[11,"green","","",9,[[],["style"]]],[11,"yellow","","",9,[[],["style"]]],[11,"blue","","",9,[[],["style"]]],[11,"magenta","","",9,[[],["style"]]],[11,"cyan","","",9,[[],["style"]]],[11,"white","","",9,[[],["style"]]],[11,"on_black","","",9,[[],["style"]]],[11,"on_red","","",9,[[],["style"]]],[11,"on_green","","",9,[[],["style"]]],[11,"on_yellow","","",9,[[],["style"]]],[11,"on_blue","","",9,[[],["style"]]],[11,"on_magenta","","",9,[[],["style"]]],[11,"on_cyan","","",9,[[],["style"]]],[11,"on_white","","",9,[[],["style"]]],[11,"bold","","",9,[[],["style"]]],[11,"dim","","",9,[[],["style"]]],[11,"italic","","",9,[[],["style"]]],[11,"underlined","","",9,[[],["style"]]],[11,"blink","","",9,[[],["style"]]],[11,"reverse","","",9,[[],["style"]]],[11,"hidden","","",9,[[],["style"]]],[11,"force_styling","","Forces styling on or off.",10,[[["bool"]],["styledobject"]]],[11,"fg","","Sets a foreground color.",10,[[["color"]],["styledobject"]]],[11,"bg","","Sets a background color.",10,[[["color"]],["styledobject"]]],[11,"attr","","Adds a attr.",10,[[["attribute"]],["styledobject"]]],[11,"black","","",10,[[],["styledobject"]]],[11,"red","","",10,[[],["styledobject"]]],[11,"green","","",10,[[],["styledobject"]]],[11,"yellow","","",10,[[],["styledobject"]]],[11,"blue","","",10,[[],["styledobject"]]],[11,"magenta","","",10,[[],["styledobject"]]],[11,"cyan","","",10,[[],["styledobject"]]],[11,"white","","",10,[[],["styledobject"]]],[11,"on_black","","",10,[[],["styledobject"]]],[11,"on_red","","",10,[[],["styledobject"]]],[11,"on_green","","",10,[[],["styledobject"]]],[11,"on_yellow","","",10,[[],["styledobject"]]],[11,"on_blue","","",10,[[],["styledobject"]]],[11,"on_magenta","","",10,[[],["styledobject"]]],[11,"on_cyan","","",10,[[],["styledobject"]]],[11,"on_white","","",10,[[],["styledobject"]]],[11,"bold","","",10,[[],["styledobject"]]],[11,"dim","","",10,[[],["styledobject"]]],[11,"italic","","",10,[[],["styledobject"]]],[11,"underlined","","",10,[[],["styledobject"]]],[11,"blink","","",10,[[],["styledobject"]]],[11,"reverse","","",10,[[],["styledobject"]]],[11,"hidden","","",10,[[],["styledobject"]]],[11,"new","","",0,[[["str"],["str"]],["emoji"]]],[11,"new","","Creates a new ansi code iterator.",11,[[["str"]],["ansicodeiterator"]]],[11,"current_slice","","Returns the string slice up to the current match.",11,[[["self"]],["str"]]],[11,"rest_slice","","Returns the string slice from the current match to the end.",11,[[["self"]],["str"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"clone","","",1,[[["self"]],["key"]]],[11,"clone","","",3,[[["self"]],["termtarget"]]],[11,"clone","","",2,[[["self"]],["termfamily"]]],[11,"clone","","",7,[[["self"]],["termfeatures"]]],[11,"clone","","",8,[[["self"]],["term"]]],[11,"clone","","",6,[[["self"]],["color"]]],[11,"clone","","",5,[[["self"]],["attribute"]]],[11,"clone","","",4,[[["self"]],["alignment"]]],[11,"clone","","",9,[[["self"]],["style"]]],[11,"clone","","",10,[[["self"]],["styledobject"]]],[11,"clone","","",0,[[["self"]],["emoji"]]],[11,"default","","",9,[[],["style"]]],[11,"cmp","","",5,[[["attribute"],["self"]],["ordering"]]],[11,"eq","","",1,[[["self"],["key"]],["bool"]]],[11,"ne","","",1,[[["self"],["key"]],["bool"]]],[11,"eq","","",3,[[["self"],["termtarget"]],["bool"]]],[11,"eq","","",2,[[["self"],["termfamily"]],["bool"]]],[11,"eq","","",6,[[["color"],["self"]],["bool"]]],[11,"eq","","",5,[[["attribute"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["alignment"]],["bool"]]],[11,"eq","","",9,[[["style"],["self"]],["bool"]]],[11,"ne","","",9,[[["style"],["self"]],["bool"]]],[11,"partial_cmp","","",5,[[["attribute"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"read","","",8,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",8,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",8,[[["self"]],["result"]]],[11,"as_raw_fd","","",8,[[["self"]],["rawfd"]]]],"p":[[3,"Emoji"],[4,"Key"],[4,"TermFamily"],[4,"TermTarget"],[4,"Alignment"],[4,"Attribute"],[4,"Color"],[3,"TermFeatures"],[3,"Term"],[3,"Style"],[3,"StyledObject"],[3,"AnsiCodeIterator"]]};
searchIndex["crc32fast"] = {"doc":"Example","i":[[3,"Hasher","crc32fast","Represents an in-progress CRC32 computation.",null,null],[11,"new","","Create a new `Hasher`.",0,[[],["self"]]],[11,"new_with_initial","","Create a new `Hasher` with an initial CRC32 state.",0,[[["u32"]],["self"]]],[11,"update","","Process the given byte slice and update the hash state.",0,[[["self"]]]],[11,"finalize","","Finalize the hash state and return the computed CRC32 value.",0,[[],["u32"]]],[11,"reset","","Reset the hash state.",0,[[["self"]]]],[11,"combine","","Combine the hash state with the hash state for the…",0,[[["self"],["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["hasher"]]],[11,"default","","",0,[[],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"write","","",0,[[["self"]]]],[11,"finish","","",0,[[["self"]],["u64"]]]],"p":[[3,"Hasher"]]};
searchIndex["crossbeam_deque"] = {"doc":"Concurrent work-stealing deques.","i":[[3,"Worker","crossbeam_deque","A worker queue.",null,null],[3,"Stealer","","A stealer handle of a worker queue.",null,null],[3,"Injector","","An injector queue.",null,null],[4,"Steal","","Possible outcomes of a steal operation.",null,null],[13,"Empty","","The queue was empty at the time of stealing.",0,null],[13,"Success","","At least one task was successfully stolen.",0,null],[13,"Retry","","The steal operation needs to be retried.",0,null],[11,"new_fifo","","Creates a FIFO worker queue.",1,[[],["worker"]]],[11,"new_lifo","","Creates a LIFO worker queue.",1,[[],["worker"]]],[11,"stealer","","Creates a stealer for this queue.",1,[[["self"]],["stealer"]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[["self"]],["bool"]]],[11,"push","","Pushes a task into the queue.",1,[[["self"],["t"]]]],[11,"pop","","Pops a task from the queue.",1,[[["self"]],["option"]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[["self"]],["bool"]]],[11,"steal","","Steals a task from the queue.",2,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into another worker.",2,[[["worker"],["self"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into another worker,…",2,[[["worker"],["self"]],["steal"]]],[11,"new","","Creates a new injector queue.",3,[[],["injector"]]],[11,"push","","Pushes a task into the queue.",3,[[["self"],["t"]]]],[11,"steal","","Steals a task from the queue.",3,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into a worker.",3,[[["worker"],["self"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into a worker, and…",3,[[["worker"],["self"]],["steal"]]],[11,"is_empty","","Returns `true` if the queue is empty.",3,[[["self"]],["bool"]]],[11,"is_empty","","Returns `true` if the queue was empty at the time of…",0,[[["self"]],["bool"]]],[11,"is_success","","Returns `true` if at least one task was stolen.",0,[[["self"]],["bool"]]],[11,"is_retry","","Returns `true` if the steal operation needs to be retried.",0,[[["self"]],["bool"]]],[11,"success","","Returns the result of the operation, if successful.",0,[[],["option"]]],[11,"or_else","","If no task was stolen, attempts another steal operation.",0,[[["f"]],["steal"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",3,[[["self"]]]],[11,"clone","","",2,[[["self"]],["stealer"]]],[11,"clone","","",0,[[["self"]],["steal"]]],[11,"eq","","",0,[[["steal"],["self"]],["bool"]]],[11,"ne","","",0,[[["steal"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"from_iter","","Consumes items until a `Success` is found and returns it.",0,[[["i"]],["steal"]]]],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]};
searchIndex["crossbeam_epoch"] = {"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",null,null],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",null,null],[12,"current","","The value in the atomic pointer at the time of the failed…",0,null],[12,"new","","The new value, which the operation failed to store.",0,null],[3,"Owned","","An owned heap-allocated object.",null,null],[3,"Shared","","A pointer to an object protected by the epoch GC.",null,null],[3,"Collector","","An epoch-based garbage collector.",null,null],[3,"LocalHandle","","A handle to a garbage collector.",null,null],[3,"Guard","","A guard that keeps the current thread pinned.",null,null],[5,"unprotected","","Returns a reference to a dummy guard that allows…",null,[[],["guard"]]],[5,"default_collector","","Returns the default global collector.",null,[[],["collector"]]],[5,"is_pinned","","Returns `true` if the current thread is pinned.",null,[[],["bool"]]],[5,"pin","","Pins the current thread.",null,[[],["guard"]]],[11,"null","","Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new","","Allocates `value` on the heap and returns a new atomic…",1,[[["t"]],["atomic"]]],[11,"load","","Loads a `Shared` from the atomic pointer.",1,[[["ordering"],["self"],["guard"]],["shared"]]],[11,"load_consume","","Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["guard"],["self"]],["shared"]]],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["ordering"],["self"],["pointer"]]]],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["ordering"],["guard"],["self"],["pointer"]],["shared"]]],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["o"],["p"],["guard"],["self"],["shared"]],[["result",["shared","compareandseterror"]],["shared"],["compareandseterror"]]]],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["o"],["p"],["guard"],["self"],["shared"]],[["result",["shared","compareandseterror"]],["shared"],["compareandseterror"]]]],[11,"fetch_and","","Bitwise \"and\" with the current tag.",1,[[["ordering"],["usize"],["guard"],["self"]],["shared"]]],[11,"fetch_or","","Bitwise \"or\" with the current tag.",1,[[["ordering"],["usize"],["guard"],["self"]],["shared"]]],[11,"fetch_xor","","Bitwise \"xor\" with the current tag.",1,[[["ordering"],["usize"],["guard"],["self"]],["shared"]]],[11,"into_owned","","Takes ownership of the pointee.",1,[[],["owned"]]],[11,"new","","Allocates `value` on the heap and returns a new owned…",2,[[["t"]],["owned"]]],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,[[],["owned"]]],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,[[["guard"]],["shared"]]],[11,"into_box","","Converts the owned pointer into a `Box`.",2,[[],["box"]]],[11,"tag","","Returns the tag stored within the pointer.",2,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",2,[[["usize"]],["owned"]]],[11,"null","","Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null","","Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,[[["self"]]]],[11,"deref","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"deref_mut","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"as_ref","","Converts the pointer to a reference.",3,[[["self"]],[["t"],["option"]]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[],["owned"]]],[11,"tag","","Returns the tag stored within the pointer.",3,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",3,[[["self"],["usize"]],["shared"]]],[11,"new","","Creates a new collector.",4,[[],["self"]]],[11,"register","","Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin","","Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,"collector","","Returns the `Collector` associated with this handle.",5,[[["self"]],["collector"]]],[11,"defer","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_unchecked","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_destroy","","Stores a destructor for an object so that it can be…",6,[[["self"],["shared"]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin","","Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after","","Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,"collector","","Returns the `Collector` associated with this guard.",6,[[["self"]],[["option",["collector"]],["collector"]]]],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",null,null],[10,"success","","The ordering of the operation when it succeeds.",7,[[["self"]],["ordering"]]],[10,"failure","","The ordering of the operation when it fails.",7,[[["self"]],["ordering"]]],[8,"Pointer","","A trait for either `Owned` or `Shared` pointers.",null,null],[10,"into_usize","","Returns the machine representation of the pointer.",8,[[],["usize"]]],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",8,[[["usize"]],["self"]]],[11,"from","","",1,[[],["t"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_usize","","",2,[[],["usize"]]],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",2,[[["usize"]],["self"]]],[11,"into_usize","","",3,[[],["usize"]]],[11,"from_usize","","",3,[[["usize"]],["self"]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"as_mut","","",2,[[["self"]],["t"]]],[11,"as_ref","","",2,[[["self"]],["t"]]],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from","","",1,[[["box"]],["self"]]],[11,"from","","",1,[[["t"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,[[],["self"]]],[11,"from","","",2,[[["t"]],["self"]]],[11,"from","","Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from","","Returns a new pointer pointing to `raw`.",3,[[],["self"]]],[11,"clone","","Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","","Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"cmp","","",3,[[["self"]],["ordering"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","Checks if both handles point to the same collector.",4,[[["self"],["collector"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]]],"p":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]};
searchIndex["crossbeam_queue"] = {"doc":"Concurrent queues.","i":[[3,"ArrayQueue","crossbeam_queue","A bounded multi-producer multi-consumer queue.",null,null],[3,"PopError","","Error which occurs when popping from an empty queue.",null,null],[3,"PushError","","Error which occurs when pushing into a full queue.",null,null],[12,"0","","",0,null],[3,"SegQueue","","An unbounded multi-producer multi-consumer queue.",null,null],[11,"new","","Creates a new bounded queue with the given capacity.",1,[[["usize"]],["arrayqueue"]]],[11,"push","","Attempts to push an element into the queue.",1,[[["self"],["t"]],[["pusherror"],["result",["pusherror"]]]]],[11,"pop","","Attempts to pop an element from the queue.",1,[[["self"]],[["result",["poperror"]],["poperror"]]]],[11,"capacity","","Returns the capacity of the queue.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[["self"]],["bool"]]],[11,"is_full","","Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the queue.",1,[[["self"]],["usize"]]],[11,"new","","Creates a new unbounded queue.",2,[[],["segqueue"]]],[11,"push","","Pushes an element into the queue.",2,[[["self"],["t"]]]],[11,"pop","","Pops an element from the queue.",2,[[["self"]],[["result",["poperror"]],["poperror"]]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the queue.",2,[[["self"]],["usize"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"clone","","",3,[[["self"]],["poperror"]]],[11,"clone","","",0,[[["self"]],["pusherror"]]],[11,"default","","",2,[[],["segqueue"]]],[11,"eq","","",3,[[["poperror"],["self"]],["bool"]]],[11,"eq","","",0,[[["pusherror"],["self"]],["bool"]]],[11,"ne","","",0,[[["pusherror"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"PushError"],[3,"ArrayQueue"],[3,"SegQueue"],[3,"PopError"]]};
searchIndex["crossbeam_utils"] = {"doc":"Miscellaneous tools for concurrent programming.","i":[[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",null,null],[3,"Backoff","","Performs exponential backoff in spin loops.",null,null],[0,"atomic","","Atomic types.",null,null],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",null,null],[11,"new","","Creates a new atomic cell initialized with `val`.",0,[[["t"]],["atomiccell"]]],[11,"into_inner","","Unwraps the atomic cell and returns its inner value.",0,[[],["t"]]],[11,"is_lock_free","","Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store","","Stores `val` into the atomic cell.",0,[[["self"],["t"]]]],[11,"swap","","Stores `val` into the atomic cell and returns the previous…",0,[[["self"],["t"]],["t"]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this…",0,[[["self"]]]],[11,"take","","Takes the value of the atomic cell, leaving…",0,[[["self"]],["t"]]],[11,"load","","Loads a value.",0,[[["self"]],["t"]]],[11,"compare_and_swap","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"]],["t"]]],[11,"compare_exchange","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"]],["result"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_and","","Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_or","","Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_xor","","Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types…",null,null],[16,"Val","","Type returned by `load_consume`.",1,null],[10,"load_consume","","Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",2,[[["t"]],["cachepadded"]]],[11,"into_inner","","Returns the inner value.",2,[[],["t"]]],[11,"new","","Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset","","Resets the `Backoff`.",3,[[["self"]]]],[11,"spin","","Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze","","Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed","","Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync","","Thread synchronization primitives.",null,null],[3,"Parker","crossbeam_utils::sync","A thread parking primitive.",null,null],[3,"Unparker","","Unparks a thread parked by the associated [`Parker`].",null,null],[3,"ShardedLock","","A sharded reader-writer lock.",null,null],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a…",null,null],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a…",null,null],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of…",null,null],[11,"new","","Creates a new `Parker`.",4,[[],["parker"]]],[11,"park","","Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout","","Blocks the current thread until the token is made…",4,[[["self"],["duration"]]]],[11,"unparker","","Returns a reference to an associated [`Unparker`].",4,[[["self"]],["unparker"]]],[11,"unpark","","Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new","","Creates a new sharded reader-writer lock.",6,[[["t"]],["shardedlock"]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",6,[[],["lockresult"]]],[11,"is_poisoned","","Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],[["lockresult"],["t"]]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",6,[[["self"]],[["shardedlockreadguard"],["trylockresult",["shardedlockreadguard"]]]]],[11,"read","","Locks with shared read access, blocking the current thread…",6,[[["self"]],[["shardedlockreadguard"],["lockresult",["shardedlockreadguard"]]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[["shardedlockwriteguard"],["trylockresult",["shardedlockwriteguard"]]]]],[11,"write","","Locks with exclusive write access, blocking the current…",6,[[["self"]],[["lockresult",["shardedlockwriteguard"]],["shardedlockwriteguard"]]]],[11,"new","","Creates a new wait group and returns the single reference…",7,[[],["waitgroup"]]],[11,"wait","","Drops this reference and waits until all other references…",7,[[]]],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",null,null],[3,"Scope","crossbeam_utils::thread","A scope for spawning threads.",null,null],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",null,null],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",null,null],[5,"scope","","Creates a new scope for spawning threads.",null,[[["f"]],["result"]]],[11,"spawn","","Spawns a scoped thread.",8,[[["self"],["f"]],["scopedjoinhandle"]]],[11,"builder","","Creates a builder that can configure a thread before…",8,[[["self"]],["scopedthreadbuilder"]]],[11,"name","","Sets the name for the new thread.",9,[[["string"]],["scopedthreadbuilder"]]],[11,"stack_size","","Sets the size of the stack for the new thread.",9,[[["usize"]],["scopedthreadbuilder"]]],[11,"spawn","","Spawns a scoped thread with this configuration.",9,[[["f"]],[["scopedjoinhandle"],["result",["scopedjoinhandle"]]]]],[11,"join","","Waits for the thread to finish and returns its result.",10,[[],["result"]]],[11,"thread","","Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"from","crossbeam_utils","",2,[[],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::atomic","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::sync","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[],["t"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::thread","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"drop","crossbeam_utils::sync","",12,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"from","crossbeam_utils","",2,[[["t"]],["self"]]],[11,"from","crossbeam_utils::sync","",6,[[["t"]],["self"]]],[11,"clone","crossbeam_utils","",2,[[["self"]],["cachepadded"]]],[11,"clone","crossbeam_utils::sync","",5,[[["self"]],["unparker"]]],[11,"clone","","",7,[[["self"]],["waitgroup"]]],[11,"default","crossbeam_utils::atomic","",0,[[],["atomiccell"]]],[11,"default","crossbeam_utils","",2,[[],["cachepadded"]]],[11,"default","","",3,[[],["backoff"]]],[11,"default","crossbeam_utils::sync","",6,[[],["shardedlock"]]],[11,"eq","crossbeam_utils","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"ne","","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref","crossbeam_utils::sync","",11,[[["self"]],["t"]]],[11,"deref","","",12,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils","",2,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils::sync","",12,[[["self"]],["t"]]],[11,"fmt","crossbeam_utils::atomic","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::thread","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"hash","crossbeam_utils","",2,[[["self"],["__h"]]]]],"p":[[3,"AtomicCell"],[8,"AtomicConsume"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"WaitGroup"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"]]};
searchIndex["deflate"] = {"doc":"An implementation an encoder using DEFLATE compression…","i":[[3,"CompressionOptions","deflate","A struct describing the options for a compressor or…",null,null],[12,"max_hash_checks","","The maximum number of checks to make in the hash table for…",0,null],[12,"lazy_if_less_than","","Only lazy match if we have a length less than this value.",0,null],[12,"matching_type","","Whether to use lazy or greedy matching.",0,null],[12,"special","","Force fixed/stored blocks (Not implemented yet). * Default…",0,null],[4,"Compression","","An enum describing the level of compression to be used by…",null,null],[13,"Fast","","Fast minimal compression (`CompressionOptions::fast()`).",1,null],[13,"Default","","Default level (`CompressionOptions::default()`).",1,null],[13,"Best","","Higher compression level (`CompressionOptions::high()`).",1,null],[4,"SpecialOptions","","Enum allowing some special options (not implemented yet)!",null,null],[13,"Normal","","Compress normally.",2,null],[13,"_ForceFixed","","Force fixed Huffman tables. (Unimplemented!).",2,null],[13,"_ForceStored","","Force stored (uncompressed) blocks only. (Unimplemented!).",2,null],[4,"MatchingType","","An enum describing whether we use lazy or greedy matching.",null,null],[13,"Greedy","","Use greedy matching: the matching algorithm simply uses a…",3,null],[13,"Lazy","","Use lazy matching: after finding a match, the next input…",3,null],[5,"deflate_bytes_conf","","Compress the given slice of bytes with DEFLATE compression.",null,[[["compressionoptions"],["into",["compressionoptions"]]],[["vec",["u8"]],["u8"]]]],[5,"deflate_bytes","","Compress the given slice of bytes with DEFLATE compression…",null,[[],[["vec",["u8"]],["u8"]]]],[5,"deflate_bytes_zlib_conf","","Compress the given slice of bytes with DEFLATE…",null,[[["compressionoptions"],["into",["compressionoptions"]]],[["vec",["u8"]],["u8"]]]],[5,"deflate_bytes_zlib","","Compress the given slice of bytes with DEFLATE…",null,[[],[["vec",["u8"]],["u8"]]]],[11,"high","","Returns compression settings roughly corresponding to the…",0,[[],["compressionoptions"]]],[11,"fast","","Returns  a fast set of compression settings",0,[[],["compressionoptions"]]],[11,"huffman_only","","Returns a set of compression settings that makes the…",0,[[],["compressionoptions"]]],[11,"rle","","Returns a set of compression settings that makes the…",0,[[],["compressionoptions"]]],[0,"write","","Encoders implementing a `Write` interface.",null,null],[3,"DeflateEncoder","deflate::write","A DEFLATE encoder/compressor.",null,null],[3,"ZlibEncoder","","A Zlib encoder/compressor.",null,null],[11,"from","deflate","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","deflate::write","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",4,[[["self"]]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",5,[[["self"]]]],[11,"from","deflate","",0,[[["compression"]],["compressionoptions"]]],[11,"clone","","",1,[[["self"]],["compression"]]],[11,"clone","","",2,[[["self"]],["specialoptions"]]],[11,"clone","","",0,[[["self"]],["compressionoptions"]]],[11,"clone","","",3,[[["self"]],["matchingtype"]]],[11,"default","","",1,[[],["compression"]]],[11,"default","","",2,[[],["specialoptions"]]],[11,"default","","Returns the options describing the default compression…",0,[[],["compressionoptions"]]],[11,"cmp","","",1,[[["self"],["compression"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["matchingtype"]],["ordering"]]],[11,"eq","","",1,[[["self"],["compression"]],["bool"]]],[11,"eq","","",2,[[["self"],["specialoptions"]],["bool"]]],[11,"eq","","",0,[[["self"],["compressionoptions"]],["bool"]]],[11,"ne","","",0,[[["self"],["compressionoptions"]],["bool"]]],[11,"eq","","",3,[[["self"],["matchingtype"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["compression"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",3,[[["self"],["matchingtype"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"write","deflate::write","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","Flush the encoder.",4,[[["self"]],["result"]]],[11,"write","","",5,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","Flush the encoder.",5,[[["self"]],["result"]]],[11,"new","","Creates a new encoder using the provided compression…",4,[[["w"],["compressionoptions"],["into",["compressionoptions"]]],["deflateencoder"]]],[11,"finish","","Encode all pending data to the contained writer, consume…",4,[[],["result"]]],[11,"reset","","Resets the encoder (except the compression options),…",4,[[["w"],["self"]],["result"]]],[11,"new","","Create a new `ZlibEncoder` using the provided compression…",5,[[["w"],["compressionoptions"],["into",["compressionoptions"]]],["zlibencoder"]]],[11,"finish","","Encode all pending data to the contained writer, consume…",5,[[],["result"]]],[11,"reset","","Resets the encoder (except the compression options),…",5,[[["w"],["self"]],["result"]]],[11,"checksum","","Return the adler32 checksum of the currently consumed data.",5,[[["self"]],["u32"]]]],"p":[[3,"CompressionOptions"],[4,"Compression"],[4,"SpecialOptions"],[4,"MatchingType"],[3,"DeflateEncoder"],[3,"ZlibEncoder"]]};
searchIndex["dia"] = {"doc":"Library core.","i":[[0,"error","dia","Error enumeration.",null,null],[4,"Error","dia::error","Error enumeration.",null,null],[13,"Load","","File loading error.",0,null],[13,"Read","","Reading error.",0,null],[13,"ParseHex","","Hexadecimal parsing error.",0,null],[13,"ParseInt","","Integer parsing error.",0,null],[13,"ParseFloat","","Float parsing error.",0,null],[13,"WriteJson","","Json writing error.",0,null],[13,"WriteNetCDF","","NetCDF writing error.",0,null],[13,"WritePng","","PNG writing error.",0,null],[13,"EnvVar","","Environment variable error.",0,null],[13,"Format","","Formatting error.",0,null],[13,"Shape","","Shape error.",0,null],[13,"Parallel","","Parallelisation poison.",0,null],[13,"Text","","String error.",0,null],[0,"file","dia","File module.",null,null],[0,"form","dia::file","Form module.",null,null],[0,"formula","dia::file::form","Formula form implementation.",null,null],[4,"Formula","dia::file::form::formula","Mathematical formulae accepting a single scalar argument.",null,null],[13,"Constant","","Constant value. = c",1,null],[13,"Line","","Line formula. = (x * m) + c",1,null],[13,"Bifurcation","","Bifurcation formula. = x < y ? a : b.",1,null],[13,"ConstantSpline","","Constant value spline.",1,null],[13,"LinearSpline","","Linear spline between points.",1,null],[13,"LinearSplineAuto","","Connected linear spline between points.",1,null],[13,"QuadraticSpline","","Quadratic spline between points.",1,null],[0,"gradient","dia::file::form","Gradient form implementation.",null,null],[3,"Gradient","dia::file::form::gradient","Loadable colour gradient structure.",null,null],[0,"light","dia::file::form","Light form implementation.",null,null],[3,"Light","dia::file::form::light","Loadable light structure.",null,null],[0,"mesh","dia::file::form","Mesh form implementation.",null,null],[3,"Mesh","dia::file::form::mesh","Loadable triangle mesh conglomerate structure.",null,null],[0,"probability","dia::file::form","Probability form implementation.",null,null],[4,"Probability","dia::file::form::probability","Probability distribution.",null,null],[13,"Point","","Point.",2,null],[13,"Points","","Points.",2,null],[13,"Uniform","","Uniform range.",2,null],[13,"Gaussian","","Gaussian distribution.",2,null],[13,"ConstantSpline","","Constant spline.",2,null],[0,"properties","dia::file::form","Properties form implementation.",null,null],[3,"Properties","dia::file::form::properties","Physical attributes structure.",null,null],[0,"trans3","dia::file::form","Transform form implementation.",null,null],[3,"Trans3","dia::file::form::trans3","Loadable transform structure.",null,null],[0,"io","dia::file","Input and output module.",null,null],[0,"build","dia::file::io","Build trait.",null,null],[8,"Build","dia::file::io::build","Types implementing this trait can be built at runtime from…",null,null],[16,"Inst","","End type to be built.",3,null],[10,"build","","Build the instance type. # Errors if a component could not…",3,[[["path"]],[["error"],["result",["error"]]]]],[0,"load","dia::file::io","Load trait.",null,null],[5,"from_json","dia::file::io::load","Deserialise the type in json format. # Errors if file can…",null,[[["path"]],[["error"],["result",["error"]]]]],[8,"Load","","Types implementing this trait can be loaded from a file.",null,null],[10,"load","","Deserialize the type from a given file. # Errors if the…",4,[[["path"]],[["error"],["result",["error"]]]]],[0,"redirect","dia::file::io","File re-direction implementation.",null,null],[4,"Redirect","dia::file::io::redirect","Possible file redirection structure.",null,null],[13,"There","","Path to file.",5,null],[13,"Here","","Direct value.",5,null],[0,"save","dia::file::io","Save trait.",null,null],[5,"as_json","dia::file::io::save","Serialise the type in json format. # Errors if the…",null,[[["t"],["path"]],[["error"],["result",["error"]]]]],[8,"Save","","Types implementing this trait can be saved to file.",null,null],[10,"save","","Serialise the type to a given file # Errors if the…",6,[[["path"],["self"]],[["error"],["result",["error"]]]]],[0,"sci","dia","Science module.",null,null],[0,"math","dia::sci","Math module.",null,null],[0,"alias","dia::sci::math","Aliases.",null,null],[6,"Vec3","dia::sci::math::alias","Three-dimensional vector alias.",null,null],[6,"Dir3","","Normalised three-dimensional vector alias.",null,null],[6,"Pos3","","Three-dimensional position alias.",null,null],[6,"Rot3","","Three-dimensional rotation alias.",null,null],[6,"Trans3","","Three-dimensional transformation alias.",null,null],[0,"func","dia::sci::math","Mathematical function module.",null,null],[0,"formula","dia::sci::math::func","Formula implementation.",null,null],[4,"Formula","dia::sci::math::func::formula","Mathematical formulae accepting a single scalar argument.",null,null],[13,"Constant","","Constant value. = c",7,null],[12,"c","dia::sci::math::func::formula::Formula","Constant.",8,null],[13,"Line","dia::sci::math::func::formula","Line formula. = mx + c",7,null],[12,"c","dia::sci::math::func::formula::Formula","Offset.",9,null],[12,"m","","Gradient.",9,null],[13,"Bifurcation","dia::sci::math::func::formula","Bifurcation formula. = if x < t { under } else { over }.",7,null],[12,"t","dia::sci::math::func::formula::Formula","Threshold value.",10,null],[12,"under","","Under value.",10,null],[12,"over","","Over value.",10,null],[13,"ConstantSpline","dia::sci::math::func::formula","Constant value spline.",7,null],[12,"xs","dia::sci::math::func::formula::Formula","X change points.",11,null],[12,"ys","","Y values.",11,null],[13,"LinearSpline","dia::sci::math::func::formula","Linear spline.",7,null],[12,"xs","dia::sci::math::func::formula::Formula","X change points.",12,null],[12,"ys","","Y values.",12,null],[12,"grads","","Gradient between points.",12,null],[13,"QuadraticSpline","dia::sci::math::func::formula","Quadratic spline.",7,null],[12,"xs","dia::sci::math::func::formula::Formula","X change points.",13,null],[12,"ys","","Y values.",13,null],[12,"grads","","Gradient between points.",13,null],[12,"quads","","Second order term between points.",13,null],[11,"new_constant_spline","dia::sci::math::func::formula","Construct a constant spline instance.",7,[[["f64"],["array1",["f64"]]],["self"]]],[11,"new_linear_spline","","Construct a linear spline instance.",7,[[["f64"],["array1",["f64"]]],["self"]]],[11,"new_linear_spline_auto","","Construct a linear spline instance.",7,[[["f64"],["array1",["f64"]]],["self"]]],[11,"new_quadratic_spline","","Construct a quadratic spline instance.",7,[[["f64"],["array1",["f64"]]],["self"]]],[11,"y","","Determine the corresponding output value for the given…",7,[[["f64"],["self"]],["f64"]]],[0,"geom","dia::sci::math","Geometry module.",null,null],[0,"dom","dia::sci::math::geom","Domain module.",null,null],[0,"grid","dia::sci::math::geom::dom","Regular grid cell scheme.",null,null],[3,"Grid","dia::sci::math::geom::dom::grid","Regular grid structure.",null,null],[0,"settings","","Regular grid settings implementation.",null,null],[3,"Settings","dia::sci::math::geom::dom::grid::settings","Loadable triangle mesh conglomerate structure.",null,null],[11,"bound","","",14,[[["self"]],["aabb"]]],[11,"res","","",14,[[["self"]]]],[11,"total_cells","","Determine the total number of cells.",14,[[["self"]],["usize"]]],[11,"bound","dia::sci::math::geom::dom::grid","",15,[[["self"]],["aabb"]]],[11,"res","","",15,[[["self"]]]],[11,"voxel_size","","",15,[[["self"]],["vec3"]]],[11,"new","","Construct a new instance. # Errors if the cell array can…",15,[[["settings"]],[["error"],["result",["error"]]]]],[11,"total_cells","","Determine the total number of cells.",15,[[["self"]],["usize"]]],[11,"gen_index","","If the given position is contained within the grid,…",15,[[["pos3"],["self"]],["option"]]],[11,"gen_index_voxel","","If the given position is contained within the grid,…",15,[[["pos3"],["self"]],["option"]]],[0,"tree","dia::sci::math::geom::dom","Adaptive tree cell scheme.",null,null],[4,"Cell","dia::sci::math::geom::dom::tree","Tree cell enumeration.",null,null],[13,"Root","","Root cell.",16,null],[12,"boundary","dia::sci::math::geom::dom::tree::Cell","Boundary.",17,null],[12,"children","","Children.",17,null],[13,"Branch","dia::sci::math::geom::dom::tree","Branching cell.",16,null],[12,"boundary","dia::sci::math::geom::dom::tree::Cell","Boundary.",18,null],[12,"children","","Children.",18,null],[13,"Leaf","dia::sci::math::geom::dom::tree","Terminal populated cell.",16,null],[12,"boundary","dia::sci::math::geom::dom::tree::Cell","Boundary.",19,null],[12,"tris","","Intersecting triangles.",19,null],[13,"Empty","dia::sci::math::geom::dom::tree","Terminal empty cell.",16,null],[12,"boundary","dia::sci::math::geom::dom::tree::Cell","Boundary.",20,null],[0,"construct","dia::sci::math::geom::dom::tree","Constructor methods.",null,null],[11,"new_root","","Construct a new tree root cell. Root cell has a depth of…",16,[[["settings"],["set"]],["self"]]],[0,"display","","Display trait implementation",null,null],[0,"info","","Information methods.",null,null],[11,"num_cells","","Determine the number of cells contained within the cell.…",16,[[["self"]],["usize"]]],[11,"num_leaf_cells","","Determine the number leaf of cells contained within the…",16,[[["self"]],["usize"]]],[11,"num_tri_refs","","Determine the number of reference pairs contained within…",16,[[["self"]],["usize"]]],[11,"depth","","Determine the maximum depth from this cell to a terminal…",16,[[["self"]],["usize"]]],[0,"observe","","Observation methods.",null,null],[11,"observe","","Determine what a ray would observe within the cell.",16,[[["ray"],["f64"],["self"]],[["option",["hit"]],["hit"]]]],[11,"hit_scan","","Scan for hits within the cell.",16,[[["f64"],["self"],["ray"]],["scan"]]],[0,"scan","","Scan result enumeration.",null,null],[4,"Scan","dia::sci::math::geom::dom::tree::scan","Hit-scan result enumeration.",null,null],[13,"Boundary","","Boundary collision.",21,null],[13,"Surface","","Surface collision.",21,null],[11,"new_boundary","","Construct a new cell boundary instance.",21,[[["f64"]],["self"]]],[11,"new_surface","","Construct a new surface instance.",21,[[["hit"]],["self"]]],[0,"search","dia::sci::math::geom::dom::tree","Search method.",null,null],[11,"find_terminal_cell","","Determine the terminal cell containing the given position.",16,[[["pos3"],["self"]],[["option"],["self"]]]],[0,"settings","","Adaptive tree settings implementation.",null,null],[3,"Settings","dia::sci::math::geom::dom::tree::settings","Tree settings.",null,null],[11,"tar_tris","","",22,[[["self"]],["usize"]]],[11,"max_depth","","",22,[[["self"]],["i32"]]],[11,"padding","","",22,[[["self"]],["f64"]]],[11,"boundary","dia::sci::math::geom::dom::tree","Reference the cell's boundary.",16,[[["self"]],["aabb"]]],[0,"props","dia::sci::math::geom","Properties module.",null,null],[0,"collide","dia::sci::math::geom::props","Collide trait.",null,null],[8,"Collide","dia::sci::math::geom::props::collide","Collide trait implementation. Types implementing this…",null,null],[10,"overlap","","Check for an overlapping collision.",23,[[["self"],["aabb"]],["bool"]]],[0,"emit","dia::sci::math::geom::props","Emit trait.",null,null],[8,"Emit","dia::sci::math::geom::props::emit","Emit trait implementation. Types implementing this trait…",null,null],[10,"cast","","Cast a new ray.",24,[[["threadrng"],["self"]],["ray"]]],[0,"trace","dia::sci::math::geom::props","Trace trait.",null,null],[8,"Trace","dia::sci::math::geom::props::trace","Trace trait implementation. Types implementing this trait…",null,null],[10,"hit","","Determine if a ray hit occurs.",25,[[["self"],["ray"]],["bool"]]],[10,"dist","","Distance to the surface along the ray's line of travel.",25,[[["self"],["ray"]],[["f64"],["option",["f64"]]]]],[10,"dist_side","","Distance to the surface along the ray's line of travel and…",25,[[["self"],["ray"]],["option"]]],[0,"transform","dia::sci::math::geom::props","Transform trait.",null,null],[8,"Transform","dia::sci::math::geom::props::transform","Types implementing this trait may be transformed.",null,null],[10,"transform","","Apply the given transformation.",26,[[["trans3"],["self"]]]],[0,"rt","dia::sci::math::geom","Ray-tracing module.",null,null],[0,"hit","dia::sci::math::geom::rt","Hit implementation.",null,null],[3,"Hit","dia::sci::math::geom::rt::hit","Hit collision information.",null,null],[11,"group","","",27,[[["self"]],["group"]]],[11,"dist","","",27,[[["self"]],["f64"]]],[11,"dist_mut","","",27,[[["self"]],["f64"]]],[11,"side","","",27,[[["self"]],["side"]]],[11,"new","","Construct a new instance.",27,[[["side"],["group"],["f64"]],["self"]]],[0,"orient","dia::sci::math::geom::rt","Orientation implementation.",null,null],[3,"Orient","dia::sci::math::geom::rt::orient","Orientation structure.",null,null],[11,"pos","","",28,[[["self"]],["pos3"]]],[11,"forward","","",28,[[["self"]],["dir3"]]],[11,"right","","",28,[[["self"]],["dir3"]]],[11,"up","","",28,[[["self"]],["dir3"]]],[11,"new","","Construct a new instance.",28,[[["ray"]],["self"]]],[11,"new_tar","","Construct a new instance.",28,[[["pos3"],["pos3"]],["self"]]],[11,"back","","Reference the backward direction.",28,[[["self"]],["dir3"]]],[11,"left","","Reference the left direction.",28,[[["self"]],["dir3"]]],[11,"down","","Reference the downward direction.",28,[[["self"]],["dir3"]]],[11,"forward_ray","","Create a forward ray.",28,[[["self"]],["ray"]]],[11,"backward_ray","","Create a backward ray.",28,[[["self"]],["ray"]]],[11,"up_ray","","Create a upward ray.",28,[[["self"]],["ray"]]],[11,"down_ray","","Create a downward ray.",28,[[["self"]],["ray"]]],[11,"right_ray","","Create a right ray.",28,[[["self"]],["ray"]]],[11,"left_ray","","Create a left ray.",28,[[["self"]],["ray"]]],[0,"ray","dia::sci::math::geom::rt","Ray implementation.",null,null],[3,"Ray","dia::sci::math::geom::rt::ray","Ray structure.",null,null],[11,"pos","","",29,[[["self"]],["pos3"]]],[11,"dir","","",29,[[["self"]],["dir3"]]],[11,"dir_mut","","",29,[[["self"]],["dir3"]]],[11,"new","","Construct a new instance.",29,[[["pos3"],["dir3"]],["self"]]],[11,"destruct","","Destruct self into components.",29,[[]]],[11,"travel","","Move along the direction of travel a given distance.",29,[[["self"],["f64"]]]],[11,"rotate","","Rotate the photon with a given pitch and subsequent roll…",29,[[["self"],["f64"]]]],[0,"side","dia::sci::math::geom::rt","Hit side enumeration.",null,null],[4,"Side","dia::sci::math::geom::rt::side","Side of a surface hit.",null,null],[13,"Inside","","Inside of surface hit. d.dot(n) > 0.0",30,null],[12,"norm","dia::sci::math::geom::rt::side::Side","Facing surface normal vector.",31,null],[13,"Outside","dia::sci::math::geom::rt::side","Outside of surface hit. d.dot(n) < 0.0",30,null],[12,"norm","dia::sci::math::geom::rt::side::Side","Facing surface normal vector.",32,null],[11,"new","dia::sci::math::geom::rt::side","Construct a new instance.",30,[[["dir3"],["dir3"]],["self"]]],[11,"norm","","Reference the normal vector.",30,[[["self"]],["dir3"]]],[11,"is_inside","","Check if the side is an inside.",30,[[["self"]],["bool"]]],[11,"is_outside","","Check if the side is an outside.",30,[[["self"]],["bool"]]],[0,"surf","dia::sci::math::geom","Surface module.",null,null],[0,"aabb","dia::sci::math::geom::surf","Axis-aligned-bounding-box implementation.",null,null],[3,"Aabb","dia::sci::math::geom::surf::aabb","Axis-aligned bounding box geometry. Used for spatial…",null,null],[11,"mins","","",33,[[["self"]],["pos3"]]],[11,"maxs","","",33,[[["self"]],["pos3"]]],[11,"new","","Construct a new instance.",33,[[["pos3"]],["self"]]],[11,"new_centred","","Construct a new axis-aligned bounding box centred on a…",33,[[["vec3"],["pos3"]],["self"]]],[11,"mins_maxs","","Get mins and maxs together.",33,[[["self"]]]],[11,"widths","","Calculate the widths.",33,[[["self"]],["vec3"]]],[11,"half_widths","","Calculate the half-widths.",33,[[["self"]],["vec3"]]],[11,"centre","","Calculate the centre position.",33,[[["self"]],["pos3"]]],[11,"area","","Calculate the surface area.",33,[[["self"]],["f64"]]],[11,"vol","","Calculate the volume.",33,[[["self"]],["f64"]]],[11,"contains","","Determine if the given point if contained.",33,[[["pos3"],["self"]],["bool"]]],[11,"shrink","","Shrink the aabb by a fraction of its lengths, maintaining…",33,[[["self"],["f64"]]]],[11,"expand","","Expand the aabb by a fraction of its lengths, maintaining…",33,[[["self"],["f64"]]]],[0,"mesh","dia::sci::math::geom::surf","Smooth triangle-mesh implementation.",null,null],[3,"Mesh","dia::sci::math::geom::surf::mesh","Mesh geometry.",null,null],[11,"boundary","","",34,[[["self"]],["aabb"]]],[11,"tris","","",34,[[["self"]],["vec"]]],[11,"area","","",34,[[["self"]],["f64"]]],[11,"new","","Construct a new instance.",34,[[["smoothtriangle"],["vec",["smoothtriangle"]]],["self"]]],[11,"into_tris","","Destruct the instance and retrieve the list of triangles.",34,[[],[["smoothtriangle"],["vec",["smoothtriangle"]]]]],[0,"smooth_triangle","dia::sci::math::geom::surf","Smooth triangle implementation.",null,null],[3,"SmoothTriangle","dia::sci::math::geom::surf::smooth_triangle","Triangle geometry with normal interpolation.",null,null],[11,"tri","","",35,[[["self"]],["triangle"]]],[11,"norms","","",35,[[["self"]]]],[11,"new","","Construct a new instance.",35,[[["triangle"]],["self"]]],[11,"new_from_verts","","Construct a new instance from vertices.",35,[[],["self"]]],[0,"triangle","dia::sci::math::geom::surf","Flat triangle implementation.",null,null],[3,"Triangle","dia::sci::math::geom::surf::triangle","Triangle.",null,null],[11,"verts","","",36,[[["self"]]]],[11,"plane_norm","","",36,[[["self"]],["dir3"]]],[11,"new","","Construct a new instance.",36,[[],["self"]]],[11,"side_lengths","","Calculate the side lengths.",36,[[["self"]]]],[11,"perimeter","","Calculate the perimeter length.",36,[[["self"]],["f64"]]],[11,"area","","Calculate the surface area.",36,[[["self"]],["f64"]]],[11,"centre","","Centre point.",36,[[["self"]],["pos3"]]],[11,"intersection_coors","","Determine the intersection distance along a `Ray`'s…",36,[[["self"],["ray"]],["option"]]],[0,"rng","dia::sci::math","Random-Number-Generation module.",null,null],[0,"distribution","dia::sci::math::rng","Distribution functions.",null,null],[5,"henyey_greenstein","dia::sci::math::rng::distribution","Sample the Henyey-Greenstein phase function with a given…",null,[[["threadrng"],["f64"]],["f64"]]],[5,"normal","","Sample the normal distribution.",null,[[["threadrng"]],["f64"]]],[5,"gaussian","","Sample a gaussian distribution.",null,[[["threadrng"],["f64"]],["f64"]]],[0,"probability","dia::sci::math::rng","Probability distribution implementation.",null,null],[4,"Probability","dia::sci::math::rng::probability","Probability distribution formulae.",null,null],[13,"Point","","Point.",37,null],[12,"c","dia::sci::math::rng::probability::Probability","Constant value.",38,null],[13,"Points","dia::sci::math::rng::probability","Points.",37,null],[12,"cs","dia::sci::math::rng::probability::Probability","Possible values.",39,null],[13,"Uniform","dia::sci::math::rng::probability","Uniform range.",37,null],[12,"min","dia::sci::math::rng::probability::Probability","Minimum value.",40,null],[12,"max","","Maximum value.",40,null],[13,"Gaussian","dia::sci::math::rng::probability","Gaussian distribution.",37,null],[12,"mu","dia::sci::math::rng::probability::Probability","Average value.",41,null],[12,"sigma","","Variance.",41,null],[13,"ConstantSpline","dia::sci::math::rng::probability","Constant spline.",37,null],[12,"cdf","dia::sci::math::rng::probability::Probability","Cumulative distribution function.",42,null],[11,"new_point","dia::sci::math::rng::probability","Construct a new point instance.",37,[[["f64"]],["self"]]],[11,"new_points","","Construct a new points instance.",37,[[["f64"],["array1",["f64"]]],["self"]]],[11,"new_uniform","","Construct a new uniform instance.",37,[[["f64"]],["self"]]],[11,"new_gaussian","","Construct a new gaussian instance.",37,[[["f64"]],["self"]]],[11,"new_constant_spline","","Construct a new constant spline instance.",37,[[["f64"],["array1",["f64"]],["array1"]],["self"]]],[11,"gen","","Generate a random number from the described distribution.",37,[[["threadrng"],["self"]],["f64"]]],[0,"sample","dia::sci::math","Sampling module.",null,null],[0,"golden","dia::sci::math::sample","Golden ratio sampling functions.",null,null],[5,"circle","dia::sci::math::sample::golden","Sample points within a circle using the golden ratio.",null,[[["i32"]]]],[5,"sphere","","Sample points on a sphere's surface using the golden ratio.",null,[[["i32"]]]],[5,"hemisphere","","Sample points on a hemisphere's surface using the golden…",null,[[["i32"]]]],[0,"sort","dia::sci::math","Sorting module.",null,null],[0,"order","dia::sci::math::sort","Ordering functions.",null,null],[5,"min","dia::sci::math::sort::order","Determine the minimum value within a list.",null,[[],["f64"]]],[5,"max","","Determine the maximum value within a list.",null,[[],["f64"]]],[5,"is_ascending","","Determine if the list is sorted in ascending order.",null,[[],["bool"]]],[5,"is_descending","","Determine if the list is sorted in descending order.",null,[[],["bool"]]],[0,"phys","dia::sci","Physics module.",null,null],[0,"opt","dia::sci::phys","Optics module.",null,null],[0,"crossing","dia::sci::phys::opt","Crossing implementation.",null,null],[3,"Crossing","dia::sci::phys::opt::crossing","Crossing structure implementation. Optical interface…",null,null],[11,"ref_prob","","",43,[[["self"]],["f64"]]],[11,"ref_dir","","",43,[[["self"]],["dir3"]]],[11,"trans_dir","","",43,[[["self"]],["option"]]],[11,"new","","Construct a new instance.",43,[[["dir3"],["f64"]],["self"]]],[11,"init_ref_dir","","Calculate the reflection direction.",43,[[["dir3"],["f64"]],["dir3"]]],[11,"trans_prob","","Get the transmission probability.",43,[[["self"]],["f64"]]],[0,"sim","dia","Simulation module.",null,null],[0,"mcrt","dia::sim","Monte-Carlo radiative transfer module.",null,null],[0,"data","dia::sim::mcrt","Output data structure.",null,null],[3,"Data","dia::sim::mcrt::data","Output data structure.",null,null],[12,"emitted_photons","","Local total weight of emitted photons.",44,null],[12,"dist_travelled","","Dist travelled by photons [m].",44,null],[12,"scatters","","Local total weight of scattering events.",44,null],[12,"rotations","","Average rotations made by photons [rad].",44,null],[12,"hits","","Local total weight of photon surface hits.",44,null],[12,"energy","","Local photo-energy.",44,null],[12,"absorptions","","Local absorbed photo-energy.",44,null],[11,"new","","Construct a new instance.",44,[[["aabb"]],["self"]]],[0,"environment","dia::sim::mcrt","Optical environment implementation.",null,null],[3,"Environment","dia::sim::mcrt::environment","Local optical environment structure.",null,null],[11,"ref_index","","",45,[[["self"]],["f64"]]],[11,"scat_coeff","","",45,[[["self"]],["f64"]]],[11,"abs_coeff","","",45,[[["self"]],["f64"]]],[11,"shift_coeff","","",45,[[["self"]],["f64"]]],[11,"asym","","",45,[[["self"]],["f64"]]],[11,"new","","Construct a new instance.",45,[[["f64"]],["self"]]],[11,"inter_coeff","","Determine the interaction coefficient.",45,[[["self"]],["f64"]]],[11,"albedo","","Calculate the albedo.",45,[[["self"]],["f64"]]],[11,"shift_prob","","Calculate the shifting probability.",45,[[["self"]],["f64"]]],[0,"event","dia::sim::mcrt","Event enumeration.",null,null],[4,"Event","dia::sim::mcrt::event","Event determination enumeration.",null,null],[13,"Voxel","","Voxel boundary collision.",46,null],[13,"Scattering","","Scattering event.",46,null],[13,"Surface","","Surface hit.",46,null],[11,"new","","Construct a new instance.",46,[[["option",["hit"]],["hit"],["f64"]],["self"]]],[0,"input","dia::sim::mcrt","Output data structure.",null,null],[3,"Input","dia::sim::mcrt::input","Input data collection.",null,null],[12,"sett","","Simulation settings.",47,null],[12,"props","","Properties.",47,null],[12,"light","","Emission source.",47,null],[12,"grid","","Regular grid.",47,null],[12,"tree","","Surface tree.",47,null],[11,"new","","Construct a new instance.",47,[[["settings"],["light"],["grid"],["set"],["cell"]],["self"]]],[0,"life","dia::sim::mcrt","Photon lifetime function module.",null,null],[0,"test","dia::sim::mcrt::life","Test photon lifetime function.",null,null],[5,"test","dia::sim::mcrt::life::test","Test photon lifetime function.",null,[[["input"],["threadrng"],["data"]]]],[5,"select_property","","Determine the next property from the hit event information.",null,[[["set"],["hit"]],["properties"]]],[6,"Life","dia::sim::mcrt::life","Photon lifetime function type.",null,null],[0,"light","dia::sim::mcrt","Light structure.",null,null],[3,"Light","dia::sim::mcrt::light","Photon emission structure.",null,null],[11,"surf","","",48,[[["self"]],["mesh"]]],[11,"spec","","",48,[[["self"]],["probability"]]],[11,"power","","",48,[[["self"]],["f64"]]],[11,"new","","Construct a new instance.",48,[[["mesh"],["f64"],["probability"]],["self"]]],[11,"emit","","Emit a photon.",48,[[["threadrng"],["self"],["u64"]],["photon"]]],[0,"photon","dia::sim::mcrt","Photon implementation.",null,null],[3,"Photon","dia::sim::mcrt::photon","Photon structure.",null,null],[11,"ray","","",49,[[["self"]],["ray"]]],[11,"ray_mut","","",49,[[["self"]],["ray"]]],[11,"weight","","",49,[[["self"]],["f64"]]],[11,"weight_mut","","",49,[[["self"]],["f64"]]],[11,"wavelength","","",49,[[["self"]],["f64"]]],[11,"wavelength_mut","","",49,[[["self"]],["f64"]]],[11,"power","","",49,[[["self"]],["f64"]]],[11,"new","","Construct a new instance.",49,[[["f64"],["ray"]],["self"]]],[0,"properties","dia::sim::mcrt","Properties structure.",null,null],[3,"Properties","dia::sim::mcrt::properties","Physical attributes structure.",null,null],[17,"DISPLAY_WAVELENGTH","","Wavelength [m] to use when printing example values.",null,null],[11,"ref_index","","",50,[[["self"]],["formula"]]],[11,"scat_coeff","","",50,[[["self"]],["formula"]]],[11,"abs_coeff","","",50,[[["self"]],["option"]]],[11,"shift_coeff","","",50,[[["self"]],["option"]]],[11,"asym_fact","","",50,[[["self"]],["formula"]]],[11,"new","","Construct a new instance.",50,[[["option",["formula"]],["formula"]],["self"]]],[11,"env","","Generate an optical environment for a given wavelength.",50,[[["f64"],["self"]],["environment"]]],[0,"run","dia::sim::mcrt","Simulation run functions.",null,null],[5,"simulate","dia::sim::mcrt::run","Run an MCRT simulation. # Errors if the progress bar can…",null,[[["input"],["life"]],[["result",["data","error"]],["data"],["error"]]]],[0,"settings","dia::sim::mcrt","Settings implementation.",null,null],[3,"Settings","dia::sim::mcrt::settings","MCRT settings structure.",null,null],[11,"block_size","","",51,[[["self"]],["u64"]]],[11,"num_phot","","",51,[[["self"]],["u64"]]],[11,"bump_dist","","",51,[[["self"]],["f64"]]],[0,"render","dia::sim","Rendering module.",null,null],[0,"attribute","dia::sim::render","Attribute structure.",null,null],[3,"Attribute","dia::sim::render::attribute","Rendering attributes structure.",null,null],[11,"ref_index","","",52,[[["self"]],["f64"]]],[11,"new","","Construct a new instance.",52,[[["f64"]],["self"]]],[0,"settings","dia::sim::render","Settings implementation.",null,null],[3,"Settings","dia::sim::render::settings","Rendering settings structure.",null,null],[11,"bump_dist","","",53,[[["self"]],["f64"]]],[0,"tools","dia","Tools module.",null,null],[0,"data","dia::tools","Data tools module.",null,null],[0,"average","dia::tools::data","Rolling average implementation.",null,null],[3,"Average","dia::tools::data::average","Rolling average value recording.",null,null],[11,"total","","",54,[[["self"]],["f64"]]],[11,"counts","","",54,[[["self"]],["i32"]]],[11,"new","","Construct a new instance.",54,[[["f64"],["i32"]],["self"]]],[11,"ave","","Calculate the average value.",54,[[["self"]],["f64"]]],[0,"histogram","dia::tools::data","Histogram implementation.",null,null],[3,"Histogram","dia::tools::data::histogram","Static range, constant bin width, Histogram.",null,null],[11,"binner","","",55,[[["self"]],["binner"]]],[11,"counts","","",55,[[["self"]],["array1"]]],[11,"new","","Construct a new instance",55,[[["f64"],["u64"]],["self"]]],[11,"collect","","Increment the bin corresponding to x by unity.",55,[[["self"],["f64"]]]],[11,"collect_weight","","Increment the bin corresponding to x by a given weight.",55,[[["self"],["f64"]]]],[11,"try_collect","","Increment the bin corresponding to x by unity if x is…",55,[[["self"],["f64"]]]],[11,"try_collect_weight","","Increment the bin corresponding to x by unity if x is…",55,[[["self"],["f64"]]]],[0,"img","dia::tools","Image tools module.",null,null],[0,"aspect_ratio","dia::tools::img","Formula implementation.",null,null],[4,"AspectRatio","dia::tools::img::aspect_ratio","Aspect-ratio enumeration.",null,null],[13,"Square","","Square. 1:1.",56,null],[13,"Classic","","Classic photographic film. 3:2.",56,null],[13,"Golden","","Golden ratio. ((1+sqrt(5))/2):1",56,null],[13,"Silver","","Silver ratio. (1+sqrt(2)):1",56,null],[13,"Standard","","Standard. 16:9",56,null],[13,"Widescreen","","Widescreen. 43:18",56,null],[13,"IPhoneXS","","IPhone XS. (1125 x 2436)",56,null],[13,"IPhone7","","IPhone 7. (750 x 1334)",56,null],[11,"ratio","","Get the pixel ratios.",56,[[["self"]],["f64"]]],[11,"resolution","","Determine a resolution for the target number of pixels.",56,[[["self"],["usize"]]]],[11,"vt_res","","Calculate the vertical resolution for a given horizontal…",56,[[["self"],["usize"]],["usize"]]],[0,"image","dia::tools::img","Image alias.",null,null],[6,"Image","dia::tools::img::image","Image alias.",null,null],[0,"lin","dia::tools","Linear tools module.",null,null],[0,"binner","dia::tools::lin","Binner implementation.",null,null],[3,"Binner","dia::tools::lin::binner","One-dimensional binning structure.",null,null],[11,"range","","",57,[[["self"]],["range"]]],[11,"bins","","",57,[[["self"]],["u64"]]],[11,"new","","Construct a new Range.",57,[[["u64"],["range"]],["self"]]],[11,"bin_width","","Calculate the bin width.",57,[[["self"]],["f64"]]],[11,"bin","","Determine the corresponding bin.",57,[[["f64"],["self"]],["usize"]]],[11,"try_bin","","Determine the corresponding bin if the value is within the…",57,[[["f64"],["self"]],[["usize"],["option",["usize"]]]]],[0,"index","dia::tools::lin","Index producing functions.",null,null],[5,"three_dim","dia::tools::lin::index","Create the next three-dimensional index from the given…",null,[[["usize"]]]],[0,"range","dia::tools::lin","Range implementation.",null,null],[3,"Range","dia::tools::lin::range","One-dimensional inclusive Range.",null,null],[11,"min","","",58,[[["self"]],["f64"]]],[11,"max","","",58,[[["self"]],["f64"]]],[11,"new","","Construct a new Range.",58,[[["f64"]],["self"]]],[11,"new_infinite","","Construct an infinite Range.",58,[[],["self"]]],[11,"width","","Calculate the width of the Range.",58,[[["self"]],["f64"]]],[11,"contains","","Determine if a value is contained within the Range.",58,[[["f64"],["self"]],["bool"]]],[11,"intersect","","Determine if the Range intersects with another given Range.",58,[[["self"]],["bool"]]],[11,"overlap","","From a range of overlapping values.",58,[[["self"]],["option"]]],[0,"ord","dia::tools","Ordering tools module.",null,null],[0,"group","dia::tools::ord","Group type implementation.",null,null],[6,"Group","dia::tools::ord::group","Group type alias.",null,null],[0,"set","dia::tools::ord","Set implementation.",null,null],[3,"Set","dia::tools::ord::set","Set map.",null,null],[11,"map","","",59,[[["self"]],["btreemap"]]],[11,"new","","Construct a new instance.",59,[[["btreemap",["group"]],["group"]],["self"]]],[11,"from_vec","","Construct an instance from a vector.",59,[[["vec"]],["self"]]],[0,"progress","dia::tools","Progress monitoring tools.",null,null],[0,"bar","dia::tools::progress","Progress-Bar implementation.",null,null],[3,"Bar","dia::tools::progress::bar","Progress-bar structure.",null,null],[11,"new","","Construct a new instance.",60,[[["str"],["u64"]],["self"]]],[11,"tick","","Tick the bar forward once.",60,[[["self"]]]],[11,"inc","","Increment the bar forward a given amount.",60,[[["self"],["u64"]]]],[11,"finish_with_message","","Finish with a message.",60,[[["self"],["str"]]]],[0,"par_bar","dia::tools::progress","Parallel progress-Bar implementation.",null,null],[3,"ParBar","dia::tools::progress::par_bar","Parallel progress-bar structure.",null,null],[11,"new","","Construct a new instance.",61,[[["str"],["u64"]],["self"]]],[11,"tick","","Tick the bar forward once.",61,[[["self"]]]],[11,"block","","Request a block of values to work on. Return the requested…",61,[[["self"],["u64"]],["option"]]],[11,"finish_with_message","","Finish with a message.",61,[[["self"],["str"]]]],[0,"util","dia","Utilities module.",null,null],[0,"fmt","dia::util","Formatting module.",null,null],[0,"banner","dia::util::fmt","Banner printing functions.",null,null],[5,"title","dia::util::fmt::banner","Print a main title bar.",null,[[["str"]]]],[5,"section","","Print a section bar.",null,[[["str"]]]],[5,"sub_section","","Print a sub-section bar.",null,[[["str"]]]],[5,"sub_sub_section","","Print a sub-sub-section bar.",null,[[["str"]]]],[0,"report","dia::util::fmt","Reporting functions.",null,null],[5,"obj","dia::util::fmt::report","Report the value of an object. # Errors if the object…",null,[[["str"],["display"]],[["error"],["result",["string","error"]],["string"]]]],[5,"obj_units","","Report the value of an object. # Errors if the object…",null,[[["str"],["display"]],[["error"],["result",["string","error"]],["string"]]]],[5,"list","","Report a list of items. # Errors if a list item could not…",null,[[["str"]],[["error"],["result",["string","error"]],["string"]]]],[5,"list_units","","Report a list of items. # Errors if a list item could not…",null,[[["str"]],[["error"],["result",["string","error"]],["string"]]]],[0,"term","dia::util::fmt","Terminal width calculation function.",null,null],[5,"width","dia::util::fmt::term","Determine the terminal width. Return the fallback size if…",null,[[],["usize"]]],[0,"input","dia::util","Input module.",null,null],[0,"args","dia::util::input","Command line argument macro.",null,null],[0,"install","dia::util","Installation information module.",null,null],[0,"dir","dia::util::install","Install directory information.",null,null],[5,"root","dia::util::install::dir","Get the arc installation directory path from the…",null,[[],[["result",["pathbuf","varerror"]],["varerror"],["pathbuf"]]]],[5,"io_dirs","","Set and get the input and output directories. Returned…",null,[[["option",["pathbuf"]],["pathbuf"]],[["error"],["result",["error"]]]]],[0,"exec","dia::util::install","Executable information.",null,null],[5,"name","dia::util::install::exec","Determine the name of the executable. # Errors if the…",null,[[],[["error"],["result",["string","error"]],["string"]]]],[0,"list","dia::util","Lists module.",null,null],[0,"az","dia::util::list","Alphabet lists module.",null,null],[0,"greek","dia::util::list::az","Greek implementation.",null,null],[4,"Greek","dia::util::list::az::greek","Greek letter indexing.",null,null],[13,"Alpha","","First letter.",62,null],[13,"Beta","","Second letter.",62,null],[13,"Gamma","","Third letter.",62,null],[17,"ALPHA","","Greek Alpha convenience constant.",null,null],[17,"BETA","","Greek Beta convenience constant.",null,null],[17,"GAMMA","","Greek Gamma convenience constant.",null,null],[0,"dim","dia::util::list","Dimension lists module.",null,null],[0,"cartesian","dia::util::list::dim","Cartesian implementation.",null,null],[4,"Cartesian","dia::util::list::dim::cartesian","Cartesian coordinate system.",null,null],[13,"X","","First spatial dimension.",63,null],[13,"Y","","Second spatial dimension.",63,null],[13,"Z","","Third spatial dimension.",63,null],[17,"X","","Cartesian X convenience constant.",null,null],[17,"Y","","Cartesian Y convenience constant.",null,null],[17,"Z","","Cartesian Z convenience constant.",null,null],[0,"polar","dia::util::list::dim","Spherical-polar implementation.",null,null],[4,"Polar","dia::util::list::dim::polar","Polar enumeration implementation.",null,null],[13,"Rho","","Radial distance.",64,null],[13,"Theta","","Angle.",64,null],[0,"spherical","dia::util::list::dim","Spherical implementation.",null,null],[4,"Spherical","dia::util::list::dim::spherical","Spherical-polar coordinate system.",null,null],[13,"Rho","","Radial distance.",65,null],[13,"Theta","","Polar angle.",65,null],[13,"Phi","","Azimuthal angle.",65,null],[0,"meta","dia::util","Meta-programming module.",null,null],[0,"access","dia::util::meta","Access macro.",null,null],[0,"map","","Map building macro.",null,null],[0,"pause","","Pause macro.",null,null],[14,"report","dia","Report an object and either its associated name, or a…",null,null],[14,"report_list","","Report a list of items with an associated name, or a human…",null,null],[14,"args","","Import command line arguments as a requested type.",null,null],[14,"access","","Succinctly create a reference method for the given variable.",null,null],[14,"clone","","Succinctly create a clone method for the given variable.",null,null],[14,"map","","Concisely construct a hashmap.",null,null],[14,"pause","","Pause the thread for the given number of milliseconds.",null,null],[11,"from","dia::error","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",0,[[["m"]],["d"]]],[11,"convert_into","","",0,[[],["u"]]],[11,"convert_unclamped_into","","",0,[[],["u"]]],[11,"try_convert_into","","",0,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"vzip","","",0,[[],["v"]]],[11,"bg","","",0,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",0,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::file::form::formula","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",1,[[["m"]],["d"]]],[11,"convert_into","","",1,[[],["u"]]],[11,"convert_unclamped_into","","",1,[[],["u"]]],[11,"try_convert_into","","",1,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"vzip","","",1,[[],["v"]]],[11,"bg","","",1,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",1,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::file::form::gradient","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_string","","",66,[[["self"]],["string"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",66,[[["m"]],["d"]]],[11,"convert_into","","",66,[[],["u"]]],[11,"convert_unclamped_into","","",66,[[],["u"]]],[11,"try_convert_into","","",66,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",66,[[["self"]],["option"]]],[11,"is_in_subset","","",66,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",66,[[["self"]],["ss"]]],[11,"from_subset","","",66,[[["ss"]],["sp"]]],[11,"vzip","","",66,[[],["v"]]],[11,"bg","","",66,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",66,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::file::form::light","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",67,[[["m"]],["d"]]],[11,"convert_into","","",67,[[],["u"]]],[11,"convert_unclamped_into","","",67,[[],["u"]]],[11,"try_convert_into","","",67,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",67,[[["self"]],["option"]]],[11,"is_in_subset","","",67,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",67,[[["self"]],["ss"]]],[11,"from_subset","","",67,[[["ss"]],["sp"]]],[11,"vzip","","",67,[[],["v"]]],[11,"bg","","",67,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",67,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::file::form::mesh","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_string","","",68,[[["self"]],["string"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",68,[[["m"]],["d"]]],[11,"convert_into","","",68,[[],["u"]]],[11,"convert_unclamped_into","","",68,[[],["u"]]],[11,"try_convert_into","","",68,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",68,[[["self"]],["option"]]],[11,"is_in_subset","","",68,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",68,[[["self"]],["ss"]]],[11,"from_subset","","",68,[[["ss"]],["sp"]]],[11,"vzip","","",68,[[],["v"]]],[11,"bg","","",68,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",68,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::file::form::probability","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",2,[[["m"]],["d"]]],[11,"convert_into","","",2,[[],["u"]]],[11,"convert_unclamped_into","","",2,[[],["u"]]],[11,"try_convert_into","","",2,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"vzip","","",2,[[],["v"]]],[11,"bg","","",2,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",2,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::file::form::properties","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",69,[[["m"]],["d"]]],[11,"convert_into","","",69,[[],["u"]]],[11,"convert_unclamped_into","","",69,[[],["u"]]],[11,"try_convert_into","","",69,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",69,[[["self"]],["option"]]],[11,"is_in_subset","","",69,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",69,[[["self"]],["ss"]]],[11,"from_subset","","",69,[[["ss"]],["sp"]]],[11,"vzip","","",69,[[],["v"]]],[11,"bg","","",69,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",69,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::file::form::trans3","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",70,[[["m"]],["d"]]],[11,"convert_into","","",70,[[],["u"]]],[11,"convert_unclamped_into","","",70,[[],["u"]]],[11,"try_convert_into","","",70,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",70,[[["self"]],["option"]]],[11,"is_in_subset","","",70,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",70,[[["self"]],["ss"]]],[11,"from_subset","","",70,[[["ss"]],["sp"]]],[11,"vzip","","",70,[[],["v"]]],[11,"bg","","",70,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",70,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::file::io::redirect","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",5,[[["m"]],["d"]]],[11,"convert_into","","",5,[[],["u"]]],[11,"convert_unclamped_into","","",5,[[],["u"]]],[11,"try_convert_into","","",5,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"vzip","","",5,[[],["v"]]],[11,"bg","","",5,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",5,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::func::formula","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",7,[[["m"]],["d"]]],[11,"convert_into","","",7,[[],["u"]]],[11,"convert_unclamped_into","","",7,[[],["u"]]],[11,"try_convert_into","","",7,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"vzip","","",7,[[],["v"]]],[11,"bg","","",7,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",7,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::geom::dom::grid","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",15,[[["m"]],["d"]]],[11,"convert_into","","",15,[[],["u"]]],[11,"convert_unclamped_into","","",15,[[],["u"]]],[11,"try_convert_into","","",15,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",15,[[["self"]],["option"]]],[11,"is_in_subset","","",15,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",15,[[["self"]],["ss"]]],[11,"from_subset","","",15,[[["ss"]],["sp"]]],[11,"vzip","","",15,[[],["v"]]],[11,"bg","","",15,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",15,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::geom::dom::grid::settings","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",14,[[["m"]],["d"]]],[11,"convert_into","","",14,[[],["u"]]],[11,"convert_unclamped_into","","",14,[[],["u"]]],[11,"try_convert_into","","",14,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",14,[[["self"]],["option"]]],[11,"is_in_subset","","",14,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",14,[[["self"]],["ss"]]],[11,"from_subset","","",14,[[["ss"]],["sp"]]],[11,"vzip","","",14,[[],["v"]]],[11,"bg","","",14,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",14,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::geom::dom::tree","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",16,[[["m"]],["d"]]],[11,"convert_into","","",16,[[],["u"]]],[11,"convert_unclamped_into","","",16,[[],["u"]]],[11,"try_convert_into","","",16,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",16,[[["self"]],["option"]]],[11,"is_in_subset","","",16,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",16,[[["self"]],["ss"]]],[11,"from_subset","","",16,[[["ss"]],["sp"]]],[11,"vzip","","",16,[[],["v"]]],[11,"bg","","",16,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",16,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::geom::dom::tree::scan","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",21,[[["m"]],["d"]]],[11,"convert_into","","",21,[[],["u"]]],[11,"convert_unclamped_into","","",21,[[],["u"]]],[11,"try_convert_into","","",21,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",21,[[["self"]],["option"]]],[11,"is_in_subset","","",21,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",21,[[["self"]],["ss"]]],[11,"from_subset","","",21,[[["ss"]],["sp"]]],[11,"vzip","","",21,[[],["v"]]],[11,"bg","","",21,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",21,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::geom::dom::tree::settings","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",22,[[["m"]],["d"]]],[11,"convert_into","","",22,[[],["u"]]],[11,"convert_unclamped_into","","",22,[[],["u"]]],[11,"try_convert_into","","",22,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",22,[[["self"]],["option"]]],[11,"is_in_subset","","",22,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",22,[[["self"]],["ss"]]],[11,"from_subset","","",22,[[["ss"]],["sp"]]],[11,"vzip","","",22,[[],["v"]]],[11,"bg","","",22,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",22,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::geom::rt::hit","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",27,[[["m"]],["d"]]],[11,"convert_into","","",27,[[],["u"]]],[11,"convert_unclamped_into","","",27,[[],["u"]]],[11,"try_convert_into","","",27,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",27,[[["self"]],["option"]]],[11,"is_in_subset","","",27,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",27,[[["self"]],["ss"]]],[11,"from_subset","","",27,[[["ss"]],["sp"]]],[11,"vzip","","",27,[[],["v"]]],[11,"bg","","",27,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",27,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::geom::rt::orient","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",28,[[["m"]],["d"]]],[11,"convert_into","","",28,[[],["u"]]],[11,"convert_unclamped_into","","",28,[[],["u"]]],[11,"try_convert_into","","",28,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",28,[[["self"]],["option"]]],[11,"is_in_subset","","",28,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",28,[[["self"]],["ss"]]],[11,"from_subset","","",28,[[["ss"]],["sp"]]],[11,"vzip","","",28,[[],["v"]]],[11,"bg","","",28,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",28,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::geom::rt::ray","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",29,[[["m"]],["d"]]],[11,"convert_into","","",29,[[],["u"]]],[11,"convert_unclamped_into","","",29,[[],["u"]]],[11,"try_convert_into","","",29,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",29,[[["self"]],["option"]]],[11,"is_in_subset","","",29,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",29,[[["self"]],["ss"]]],[11,"from_subset","","",29,[[["ss"]],["sp"]]],[11,"vzip","","",29,[[],["v"]]],[11,"bg","","",29,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",29,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::geom::rt::side","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",30,[[["m"]],["d"]]],[11,"convert_into","","",30,[[],["u"]]],[11,"convert_unclamped_into","","",30,[[],["u"]]],[11,"try_convert_into","","",30,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",30,[[["self"]],["option"]]],[11,"is_in_subset","","",30,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",30,[[["self"]],["ss"]]],[11,"from_subset","","",30,[[["ss"]],["sp"]]],[11,"vzip","","",30,[[],["v"]]],[11,"bg","","",30,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",30,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::geom::surf::aabb","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",33,[[["m"]],["d"]]],[11,"convert_into","","",33,[[],["u"]]],[11,"convert_unclamped_into","","",33,[[],["u"]]],[11,"try_convert_into","","",33,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",33,[[["self"]],["option"]]],[11,"is_in_subset","","",33,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",33,[[["self"]],["ss"]]],[11,"from_subset","","",33,[[["ss"]],["sp"]]],[11,"vzip","","",33,[[],["v"]]],[11,"bg","","",33,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",33,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::geom::surf::mesh","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",34,[[["m"]],["d"]]],[11,"convert_into","","",34,[[],["u"]]],[11,"convert_unclamped_into","","",34,[[],["u"]]],[11,"try_convert_into","","",34,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",34,[[["self"]],["option"]]],[11,"is_in_subset","","",34,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",34,[[["self"]],["ss"]]],[11,"from_subset","","",34,[[["ss"]],["sp"]]],[11,"vzip","","",34,[[],["v"]]],[11,"bg","","",34,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",34,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::geom::surf::smooth_triangle","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",35,[[["m"]],["d"]]],[11,"convert_into","","",35,[[],["u"]]],[11,"convert_unclamped_into","","",35,[[],["u"]]],[11,"try_convert_into","","",35,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",35,[[["self"]],["option"]]],[11,"is_in_subset","","",35,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",35,[[["self"]],["ss"]]],[11,"from_subset","","",35,[[["ss"]],["sp"]]],[11,"vzip","","",35,[[],["v"]]],[11,"bg","","",35,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",35,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::geom::surf::triangle","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",36,[[["m"]],["d"]]],[11,"convert_into","","",36,[[],["u"]]],[11,"convert_unclamped_into","","",36,[[],["u"]]],[11,"try_convert_into","","",36,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",36,[[["self"]],["option"]]],[11,"is_in_subset","","",36,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",36,[[["self"]],["ss"]]],[11,"from_subset","","",36,[[["ss"]],["sp"]]],[11,"vzip","","",36,[[],["v"]]],[11,"bg","","",36,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",36,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::math::rng::probability","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",37,[[["m"]],["d"]]],[11,"convert_into","","",37,[[],["u"]]],[11,"convert_unclamped_into","","",37,[[],["u"]]],[11,"try_convert_into","","",37,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",37,[[["self"]],["option"]]],[11,"is_in_subset","","",37,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",37,[[["self"]],["ss"]]],[11,"from_subset","","",37,[[["ss"]],["sp"]]],[11,"vzip","","",37,[[],["v"]]],[11,"bg","","",37,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",37,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sci::phys::opt::crossing","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",43,[[["m"]],["d"]]],[11,"convert_into","","",43,[[],["u"]]],[11,"convert_unclamped_into","","",43,[[],["u"]]],[11,"try_convert_into","","",43,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",43,[[["self"]],["option"]]],[11,"is_in_subset","","",43,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",43,[[["self"]],["ss"]]],[11,"from_subset","","",43,[[["ss"]],["sp"]]],[11,"vzip","","",43,[[],["v"]]],[11,"bg","","",43,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",43,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sim::mcrt::data","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",44,[[["m"]],["d"]]],[11,"convert_into","","",44,[[],["u"]]],[11,"convert_unclamped_into","","",44,[[],["u"]]],[11,"try_convert_into","","",44,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",44,[[["self"]],["option"]]],[11,"is_in_subset","","",44,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",44,[[["self"]],["ss"]]],[11,"from_subset","","",44,[[["ss"]],["sp"]]],[11,"vzip","","",44,[[],["v"]]],[11,"bg","","",44,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",44,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sim::mcrt::environment","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",45,[[["m"]],["d"]]],[11,"convert_into","","",45,[[],["u"]]],[11,"convert_unclamped_into","","",45,[[],["u"]]],[11,"try_convert_into","","",45,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",45,[[["self"]],["option"]]],[11,"is_in_subset","","",45,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",45,[[["self"]],["ss"]]],[11,"from_subset","","",45,[[["ss"]],["sp"]]],[11,"vzip","","",45,[[],["v"]]],[11,"bg","","",45,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",45,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sim::mcrt::event","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",46,[[["m"]],["d"]]],[11,"convert_into","","",46,[[],["u"]]],[11,"convert_unclamped_into","","",46,[[],["u"]]],[11,"try_convert_into","","",46,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",46,[[["self"]],["option"]]],[11,"is_in_subset","","",46,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",46,[[["self"]],["ss"]]],[11,"from_subset","","",46,[[["ss"]],["sp"]]],[11,"vzip","","",46,[[],["v"]]],[11,"bg","","",46,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",46,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sim::mcrt::input","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",47,[[["m"]],["d"]]],[11,"convert_into","","",47,[[],["u"]]],[11,"convert_unclamped_into","","",47,[[],["u"]]],[11,"try_convert_into","","",47,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",47,[[["self"]],["option"]]],[11,"is_in_subset","","",47,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",47,[[["self"]],["ss"]]],[11,"from_subset","","",47,[[["ss"]],["sp"]]],[11,"vzip","","",47,[[],["v"]]],[11,"bg","","",47,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",47,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sim::mcrt::light","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",48,[[["m"]],["d"]]],[11,"convert_into","","",48,[[],["u"]]],[11,"convert_unclamped_into","","",48,[[],["u"]]],[11,"try_convert_into","","",48,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",48,[[["self"]],["option"]]],[11,"is_in_subset","","",48,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",48,[[["self"]],["ss"]]],[11,"from_subset","","",48,[[["ss"]],["sp"]]],[11,"vzip","","",48,[[],["v"]]],[11,"bg","","",48,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",48,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sim::mcrt::photon","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",49,[[["m"]],["d"]]],[11,"convert_into","","",49,[[],["u"]]],[11,"convert_unclamped_into","","",49,[[],["u"]]],[11,"try_convert_into","","",49,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",49,[[["self"]],["option"]]],[11,"is_in_subset","","",49,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",49,[[["self"]],["ss"]]],[11,"from_subset","","",49,[[["ss"]],["sp"]]],[11,"vzip","","",49,[[],["v"]]],[11,"bg","","",49,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",49,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sim::mcrt::properties","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",50,[[["m"]],["d"]]],[11,"convert_into","","",50,[[],["u"]]],[11,"convert_unclamped_into","","",50,[[],["u"]]],[11,"try_convert_into","","",50,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",50,[[["self"]],["option"]]],[11,"is_in_subset","","",50,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",50,[[["self"]],["ss"]]],[11,"from_subset","","",50,[[["ss"]],["sp"]]],[11,"vzip","","",50,[[],["v"]]],[11,"bg","","",50,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",50,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sim::mcrt::settings","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",51,[[["m"]],["d"]]],[11,"convert_into","","",51,[[],["u"]]],[11,"convert_unclamped_into","","",51,[[],["u"]]],[11,"try_convert_into","","",51,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",51,[[["self"]],["option"]]],[11,"is_in_subset","","",51,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",51,[[["self"]],["ss"]]],[11,"from_subset","","",51,[[["ss"]],["sp"]]],[11,"vzip","","",51,[[],["v"]]],[11,"bg","","",51,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",51,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sim::render::attribute","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_string","","",52,[[["self"]],["string"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",52,[[["m"]],["d"]]],[11,"convert_into","","",52,[[],["u"]]],[11,"convert_unclamped_into","","",52,[[],["u"]]],[11,"try_convert_into","","",52,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",52,[[["self"]],["option"]]],[11,"is_in_subset","","",52,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",52,[[["self"]],["ss"]]],[11,"from_subset","","",52,[[["ss"]],["sp"]]],[11,"vzip","","",52,[[],["v"]]],[11,"bg","","",52,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",52,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::sim::render::settings","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",53,[[["m"]],["d"]]],[11,"convert_into","","",53,[[],["u"]]],[11,"convert_unclamped_into","","",53,[[],["u"]]],[11,"try_convert_into","","",53,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",53,[[["self"]],["option"]]],[11,"is_in_subset","","",53,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",53,[[["self"]],["ss"]]],[11,"from_subset","","",53,[[["ss"]],["sp"]]],[11,"vzip","","",53,[[],["v"]]],[11,"bg","","",53,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",53,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::tools::data::average","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",54,[[["m"]],["d"]]],[11,"convert_into","","",54,[[],["u"]]],[11,"convert_unclamped_into","","",54,[[],["u"]]],[11,"try_convert_into","","",54,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",54,[[["self"]],["option"]]],[11,"is_in_subset","","",54,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",54,[[["self"]],["ss"]]],[11,"from_subset","","",54,[[["ss"]],["sp"]]],[11,"vzip","","",54,[[],["v"]]],[11,"bg","","",54,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",54,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::tools::data::histogram","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",55,[[["m"]],["d"]]],[11,"convert_into","","",55,[[],["u"]]],[11,"convert_unclamped_into","","",55,[[],["u"]]],[11,"try_convert_into","","",55,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",55,[[["self"]],["option"]]],[11,"is_in_subset","","",55,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",55,[[["self"]],["ss"]]],[11,"from_subset","","",55,[[["ss"]],["sp"]]],[11,"vzip","","",55,[[],["v"]]],[11,"bg","","",55,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",55,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::tools::img::aspect_ratio","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",56,[[["m"]],["d"]]],[11,"convert_into","","",56,[[],["u"]]],[11,"convert_unclamped_into","","",56,[[],["u"]]],[11,"try_convert_into","","",56,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",56,[[["self"]],["option"]]],[11,"is_in_subset","","",56,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",56,[[["self"]],["ss"]]],[11,"from_subset","","",56,[[["ss"]],["sp"]]],[11,"vzip","","",56,[[],["v"]]],[11,"bg","","",56,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",56,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::tools::lin::binner","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",57,[[["m"]],["d"]]],[11,"convert_into","","",57,[[],["u"]]],[11,"convert_unclamped_into","","",57,[[],["u"]]],[11,"try_convert_into","","",57,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",57,[[["self"]],["option"]]],[11,"is_in_subset","","",57,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",57,[[["self"]],["ss"]]],[11,"from_subset","","",57,[[["ss"]],["sp"]]],[11,"vzip","","",57,[[],["v"]]],[11,"bg","","",57,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",57,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::tools::lin::range","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",58,[[["m"]],["d"]]],[11,"convert_into","","",58,[[],["u"]]],[11,"convert_unclamped_into","","",58,[[],["u"]]],[11,"try_convert_into","","",58,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",58,[[["self"]],["option"]]],[11,"is_in_subset","","",58,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",58,[[["self"]],["ss"]]],[11,"from_subset","","",58,[[["ss"]],["sp"]]],[11,"vzip","","",58,[[],["v"]]],[11,"bg","","",58,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",58,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::tools::ord::set","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_string","","",59,[[["self"]],["string"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",59,[[["m"]],["d"]]],[11,"convert_into","","",59,[[],["u"]]],[11,"convert_unclamped_into","","",59,[[],["u"]]],[11,"try_convert_into","","",59,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",59,[[["self"]],["option"]]],[11,"is_in_subset","","",59,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",59,[[["self"]],["ss"]]],[11,"from_subset","","",59,[[["ss"]],["sp"]]],[11,"vzip","","",59,[[],["v"]]],[11,"bg","","",59,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",59,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::tools::progress::bar","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",60,[[["m"]],["d"]]],[11,"convert_into","","",60,[[],["u"]]],[11,"convert_unclamped_into","","",60,[[],["u"]]],[11,"try_convert_into","","",60,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",60,[[["self"]],["option"]]],[11,"is_in_subset","","",60,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",60,[[["self"]],["ss"]]],[11,"from_subset","","",60,[[["ss"]],["sp"]]],[11,"vzip","","",60,[[],["v"]]],[11,"bg","","",60,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",60,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::tools::progress::par_bar","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",61,[[["m"]],["d"]]],[11,"convert_into","","",61,[[],["u"]]],[11,"convert_unclamped_into","","",61,[[],["u"]]],[11,"try_convert_into","","",61,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",61,[[["self"]],["option"]]],[11,"is_in_subset","","",61,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",61,[[["self"]],["ss"]]],[11,"from_subset","","",61,[[["ss"]],["sp"]]],[11,"vzip","","",61,[[],["v"]]],[11,"bg","","",61,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",61,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::util::list::az::greek","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",62,[[["m"]],["d"]]],[11,"convert_into","","",62,[[],["u"]]],[11,"convert_unclamped_into","","",62,[[],["u"]]],[11,"try_convert_into","","",62,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",62,[[["self"]],["option"]]],[11,"is_in_subset","","",62,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",62,[[["self"]],["ss"]]],[11,"from_subset","","",62,[[["ss"]],["sp"]]],[11,"vzip","","",62,[[],["v"]]],[11,"bg","","",62,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",62,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::util::list::dim::cartesian","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",63,[[["m"]],["d"]]],[11,"convert_into","","",63,[[],["u"]]],[11,"convert_unclamped_into","","",63,[[],["u"]]],[11,"try_convert_into","","",63,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",63,[[["self"]],["option"]]],[11,"is_in_subset","","",63,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",63,[[["self"]],["ss"]]],[11,"from_subset","","",63,[[["ss"]],["sp"]]],[11,"vzip","","",63,[[],["v"]]],[11,"bg","","",63,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",63,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::util::list::dim::polar","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",64,[[["m"]],["d"]]],[11,"convert_into","","",64,[[],["u"]]],[11,"convert_unclamped_into","","",64,[[],["u"]]],[11,"try_convert_into","","",64,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",64,[[["self"]],["option"]]],[11,"is_in_subset","","",64,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",64,[[["self"]],["ss"]]],[11,"from_subset","","",64,[[["ss"]],["sp"]]],[11,"vzip","","",64,[[],["v"]]],[11,"bg","","",64,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",64,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","dia::util::list::dim::spherical","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",65,[[["m"]],["d"]]],[11,"convert_into","","",65,[[],["u"]]],[11,"convert_unclamped_into","","",65,[[],["u"]]],[11,"try_convert_into","","",65,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",65,[[["self"]],["option"]]],[11,"is_in_subset","","",65,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",65,[[["self"]],["ss"]]],[11,"from_subset","","",65,[[["ss"]],["sp"]]],[11,"vzip","","",65,[[],["v"]]],[11,"bg","","",65,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",65,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"build","dia::file::form::formula","",1,[[["path"]],[["error"],["result",["error"]]]]],[11,"build","dia::file::form::gradient","",66,[[["path"]],[["error"],["result",["error"]]]]],[11,"build","dia::file::form::light","",67,[[["path"]],[["error"],["result",["error"]]]]],[11,"build","dia::file::form::mesh","",68,[[["path"]],[["error"],["result",["error"]]]]],[11,"build","dia::file::form::probability","",2,[[["path"]],[["error"],["result",["error"]]]]],[11,"build","dia::file::form::properties","",69,[[["path"]],[["error"],["result",["error"]]]]],[11,"build","dia::file::form::trans3","",70,[[["path"]],[["error"],["result",["error"]]]]],[11,"build","dia::file::io::redirect","",5,[[["path"]],[["error"],["result",["error"]]]]],[11,"build","dia::tools::ord::set","",59,[[["path"]],[["error"],["result",["error"]]]]],[11,"load","dia::file::form::formula","",1,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::file::form::gradient","",66,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::file::form::light","",67,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::file::form::mesh","",68,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::file::form::probability","",2,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::file::form::properties","",69,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::file::form::trans3","",70,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::file::io::redirect","",5,[[["path"]],[["error"],["result",["error"]]]]],[11,"load","dia::sci::math::geom::dom::grid::settings","",14,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::sci::math::geom::dom::tree::settings","",22,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::sci::math::geom::surf::aabb","",33,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::sci::math::geom::surf::mesh","",34,[[["path"]],[["error"],["result",["error"]]]]],[11,"load","dia::sim::mcrt::settings","",51,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::sim::render::attribute","",52,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::sim::render::settings","",53,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::tools::img::aspect_ratio","",56,[[["path"]],[["result",["error"]],["error"]]]],[11,"load","dia::tools::ord::set","",59,[[["path"]],[["error"],["result",["error"]]]]],[11,"save","dia::file::io::redirect","",5,[[["path"],["self"]],[["error"],["result",["error"]]]]],[11,"save","dia::sim::mcrt::data","",44,[[["path"],["self"]],[["error"],["result",["error"]]]]],[11,"save","dia::tools::data::histogram","",55,[[["path"],["self"]],[["error"],["result",["error"]]]]],[11,"save","dia::tools::ord::set","",59,[[["path"],["self"]],[["error"],["result",["error"]]]]],[11,"overlap","dia::sci::math::geom::surf::aabb","",33,[[["self"],["aabb"]],["bool"]]],[11,"overlap","dia::sci::math::geom::surf::mesh","",34,[[["self"],["aabb"]],["bool"]]],[11,"overlap","dia::sci::math::geom::surf::smooth_triangle","",35,[[["self"],["aabb"]],["bool"]]],[11,"overlap","dia::sci::math::geom::surf::triangle","",36,[[["self"],["aabb"]],["bool"]]],[11,"cast","dia","",71,[[["threadrng"],["self"]],["ray"]]],[11,"cast","dia::sci::math::geom::surf::mesh","",34,[[["threadrng"],["self"]],["ray"]]],[11,"cast","dia::sci::math::geom::surf::smooth_triangle","",35,[[["threadrng"],["self"]],["ray"]]],[11,"cast","dia::sci::math::geom::surf::triangle","",36,[[["threadrng"],["self"]],["ray"]]],[11,"hit","dia::sci::math::geom::surf::aabb","",33,[[["self"],["ray"]],["bool"]]],[11,"dist","","",33,[[["self"],["ray"]],[["f64"],["option",["f64"]]]]],[11,"dist_side","","",33,[[["self"],["ray"]],["option"]]],[11,"hit","dia::sci::math::geom::surf::mesh","",34,[[["self"],["ray"]],["bool"]]],[11,"dist","","",34,[[["self"],["ray"]],[["f64"],["option",["f64"]]]]],[11,"dist_side","","",34,[[["self"],["ray"]],["option"]]],[11,"hit","dia::sci::math::geom::surf::smooth_triangle","",35,[[["self"],["ray"]],["bool"]]],[11,"dist","","",35,[[["self"],["ray"]],[["f64"],["option",["f64"]]]]],[11,"dist_side","","",35,[[["self"],["ray"]],["option"]]],[11,"hit","dia::sci::math::geom::surf::triangle","",36,[[["self"],["ray"]],["bool"]]],[11,"dist","","",36,[[["self"],["ray"]],[["f64"],["option",["f64"]]]]],[11,"dist_side","","",36,[[["self"],["ray"]],["option"]]],[11,"transform","dia::sci::math::geom::surf::mesh","",34,[[["trans3"],["self"]]]],[11,"transform","dia::sci::math::geom::surf::smooth_triangle","",35,[[["trans3"],["self"]]]],[11,"transform","dia::sci::math::geom::surf::triangle","",36,[[["trans3"],["self"]]]],[11,"from","dia::error","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["fromhexerror"]],["self"]]],[11,"from","","",0,[[["parseinterror"]],["self"]]],[11,"from","","",0,[[["parsefloaterror"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["encodingerror"]],["self"]]],[11,"from","","",0,[[["varerror"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["shapeerror"]],["self"]]],[11,"from","","",0,[[["poisonerror"]],["self"]]],[11,"from","","",0,[[["str"]],["self"]]],[11,"clone","dia::file::form::trans3","",70,[[["self"]],["trans3"]]],[11,"clone","dia::sci::math::geom::rt::hit","",27,[[["self"]],["hit"]]],[11,"clone","dia::sci::math::geom::rt::ray","",29,[[["self"]],["ray"]]],[11,"clone","dia::sci::math::geom::rt::side","",30,[[["self"]],["side"]]],[11,"clone","dia::sci::math::geom::surf::aabb","",33,[[["self"]],["aabb"]]],[11,"clone","dia::tools::data::average","",54,[[["self"]],["average"]]],[11,"clone","dia::tools::img::aspect_ratio","",56,[[["self"]],["aspectratio"]]],[11,"clone","dia::tools::lin::binner","",57,[[["self"]],["binner"]]],[11,"clone","dia::tools::lin::range","",58,[[["self"]],["range"]]],[11,"default","dia::tools::data::average","",54,[[],["average"]]],[11,"eq","dia::tools::lin::binner","",57,[[["binner"],["self"]],["bool"]]],[11,"ne","","",57,[[["binner"],["self"]],["bool"]]],[11,"eq","dia::tools::lin::range","",58,[[["range"],["self"]],["bool"]]],[11,"ne","","",58,[[["range"],["self"]],["bool"]]],[11,"fmt","dia::error","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::form::formula","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::form::gradient","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::form::light","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::form::mesh","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::form::probability","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::form::properties","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::form::trans3","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::io::redirect","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sci::math::func::formula","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sci::math::geom::dom::grid::settings","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sci::math::geom::dom::tree::settings","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sci::math::geom::surf::aabb","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sim::mcrt::settings","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sim::render::attribute","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sim::render::settings","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::tools::img::aspect_ratio","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::tools::lin::binner","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::tools::lin::range","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::tools::ord::set","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::form::formula","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::form::gradient","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::form::light","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::form::mesh","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::form::probability","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::file::io::redirect","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sci::math::geom::dom::grid::settings","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sci::math::geom::dom::grid","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sci::math::geom::dom::tree","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sci::math::geom::dom::tree::settings","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sci::math::geom::surf::aabb","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sci::math::geom::surf::mesh","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sci::math::rng::probability","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sim::mcrt::data","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sim::mcrt::event","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sim::mcrt::light","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sim::mcrt::properties","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sim::mcrt::settings","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sim::render::attribute","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::sim::render::settings","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::tools::img::aspect_ratio","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","dia::tools::ord::set","",59,[[["formatter"],["self"]],["result"]]],[11,"add_assign","dia::sim::mcrt::data","",44,[[["self"],["self"]]]],[11,"add_assign","dia::tools::data::average","",54,[[["self"]]]],[11,"add_assign","","",54,[[["self"],["self"]]]],[11,"add_assign","","",54,[[["self"],["f64"]]]],[11,"add_assign","dia::tools::data::histogram","",55,[[["self"],["self"]]]],[11,"serialize","dia::file::io::redirect","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","dia::tools::ord::set","",59,[[["self"],["__s"]],["result"]]],[11,"deserialize","dia::file::form::formula","",1,[[["__d"]],["result"]]],[11,"deserialize","dia::file::form::gradient","",66,[[["__d"]],["result"]]],[11,"deserialize","dia::file::form::light","",67,[[["__d"]],["result"]]],[11,"deserialize","dia::file::form::mesh","",68,[[["__d"]],["result"]]],[11,"deserialize","dia::file::form::probability","",2,[[["__d"]],["result"]]],[11,"deserialize","dia::file::form::properties","",69,[[["__d"]],["result"]]],[11,"deserialize","dia::file::form::trans3","",70,[[["__d"]],["result"]]],[11,"deserialize","dia::file::io::redirect","",5,[[["__d"]],["result"]]],[11,"deserialize","dia::sci::math::geom::dom::grid::settings","",14,[[["__d"]],["result"]]],[11,"deserialize","dia::sci::math::geom::dom::tree::settings","",22,[[["__d"]],["result"]]],[11,"deserialize","dia::sci::math::geom::surf::aabb","",33,[[["__d"]],["result"]]],[11,"deserialize","dia::sim::mcrt::settings","",51,[[["__d"]],["result"]]],[11,"deserialize","dia::sim::render::attribute","",52,[[["__d"]],["result"]]],[11,"deserialize","dia::sim::render::settings","",53,[[["__d"]],["result"]]],[11,"deserialize","dia::tools::img::aspect_ratio","",56,[[["__d"]],["result"]]],[11,"deserialize","dia::tools::ord::set","",59,[[["__d"]],["result"]]]],"p":[[4,"Error"],[4,"Formula"],[4,"Probability"],[8,"Build"],[8,"Load"],[4,"Redirect"],[8,"Save"],[4,"Formula"],[13,"Constant"],[13,"Line"],[13,"Bifurcation"],[13,"ConstantSpline"],[13,"LinearSpline"],[13,"QuadraticSpline"],[3,"Settings"],[3,"Grid"],[4,"Cell"],[13,"Root"],[13,"Branch"],[13,"Leaf"],[13,"Empty"],[4,"Scan"],[3,"Settings"],[8,"Collide"],[8,"Emit"],[8,"Trace"],[8,"Transform"],[3,"Hit"],[3,"Orient"],[3,"Ray"],[4,"Side"],[13,"Inside"],[13,"Outside"],[3,"Aabb"],[3,"Mesh"],[3,"SmoothTriangle"],[3,"Triangle"],[4,"Probability"],[13,"Point"],[13,"Points"],[13,"Uniform"],[13,"Gaussian"],[13,"ConstantSpline"],[3,"Crossing"],[3,"Data"],[3,"Environment"],[4,"Event"],[3,"Input"],[3,"Light"],[3,"Photon"],[3,"Properties"],[3,"Settings"],[3,"Attribute"],[3,"Settings"],[3,"Average"],[3,"Histogram"],[4,"AspectRatio"],[3,"Binner"],[3,"Range"],[3,"Set"],[3,"Bar"],[3,"ParBar"],[4,"Greek"],[4,"Cartesian"],[4,"Polar"],[4,"Spherical"],[3,"Gradient"],[3,"Light"],[3,"Mesh"],[3,"Properties"],[3,"Trans3"],[6,"Pos3"]]};
searchIndex["either"] = {"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["r"],["l"],["either"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"from","","",0,[[["result"]],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["either"],["self"]],["bool"]]],[11,"ne","","",0,[[["either"],["self"]],["bool"]]],[11,"cmp","","",0,[[["either"],["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["either"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["either"],["self"]],["bool"]]],[11,"le","","",0,[[["either"],["self"]],["bool"]]],[11,"gt","","",0,[[["either"],["self"]],["bool"]]],[11,"ge","","",0,[[["either"],["self"]],["bool"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"into","","",0,[[],["result"]]],[11,"clone","","",0,[[["self"]],["either"]]]],"p":[[4,"Either"]]};
searchIndex["failure"] = {"doc":"An experimental new error-handling library. Guide-style…","i":[[3,"Backtrace","failure","A `Backtrace`.",null,null],[3,"Compat","","A compatibility wrapper around an error type from this…",null,null],[3,"Context","","An error with context around it.",null,null],[3,"SyncFailure","","Wrapper for `std` errors to make them `Sync`.",null,null],[3,"Error","","The `Error` type, which can contain any failure.",null,null],[3,"Causes","","A iterator over the causes of a `Fail`",null,null],[5,"err_msg","","Constructs a `Fail` type from a string.",null,[[["debug"],["send"],["sync"],["display"]],["error"]]],[11,"new","","Constructs a new backtrace. This will only create a real…",0,[[],["backtrace"]]],[11,"is_empty","","Returns true if displaying this backtrace would be an…",0,[[["self"]],["bool"]]],[11,"into_inner","","Unwraps this into the inner error.",1,[[],["e"]]],[11,"get_ref","","Gets a reference to the inner error.",1,[[["self"]],["e"]]],[11,"new","","Creates a new context without an underlying error message.",2,[[["d"]],["context"]]],[11,"get_context","","Returns a reference to the context provided with this error.",2,[[["self"]],["d"]]],[11,"map","","Maps `Context<D>` to `Context<T>` by applying a function…",2,[[["f"]],["context"]]],[11,"new","","Wraps a non-`Sync` `Error` in order to make it implement…",3,[[["e"]],["self"]]],[11,"from_boxed_compat","","Creates an `Error` from `Box<std::error::Error>`.",4,[[["stderror"],["box",["stderror"]]],["error"]]],[11,"as_fail","","Return a reference to the underlying failure that this…",4,[[["self"]],["fail"]]],[11,"name","","Returns the name of the underlying fail.",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","Returns a reference to the underlying cause of this…",4,[[["self"]],["fail"]]],[11,"backtrace","","Gets a reference to the `Backtrace` for this `Error`.",4,[[["self"]],["backtrace"]]],[11,"context","","Provides context for this `Error`.",4,[[["send"],["display"],["sync"]],[["context"],["send"],["display"],["sync"]]]],[11,"compat","","Wraps `Error` in a compatibility type.",4,[[],[["error"],["compat",["error"]]]]],[11,"downcast","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[],[["result",["error"]],["fail"],["error"]]]],[11,"find_root_cause","","Returns the \"root cause\" of this error - the last value in…",4,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this error with the…",4,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",4,[[["self"]],["causes"]]],[11,"downcast_ref","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],[["t"],["option"]]]],[11,"downcast_mut","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],[["option"],["t"]]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",4,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_causes`.",4,[[["self"]],["causes"]]],[6,"Fallible","","A common result with an `Error`.",null,null],[8,"AsFail","","The `AsFail` trait",null,null],[10,"as_fail","","Converts a reference to `Self` into a dynamic trait object…",5,[[["self"]],["fail"]]],[8,"ResultExt","","Extension methods for `Result`.",null,null],[10,"compat","","Wraps the error in `Compat` to make it compatible with…",6,[[],[["result",["compat"]],["compat"]]]],[10,"context","","Wraps the error type in a context type.",6,[[["d"]],[["context"],["result",["context"]]]]],[10,"with_context","","Wraps the error type in a context type generated by…",6,[[["f"]],[["context"],["result",["context"]]]]],[8,"Fail","","The `Fail` trait.",null,null],[11,"name","","Returns the \"name\" of the error.",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","Returns a reference to the underlying cause of this…",7,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","Returns a reference to the `Backtrace` carried by this…",7,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"context","","Provides context for this failure.",7,[[["d"]],["context"]]],[11,"compat","","Wraps this failure in a compatibility wrapper that…",7,[[],["compat"]]],[11,"downcast_ref","","Attempts to downcast this failure to a concrete type by…",7,[[["self"]],[["t"],["option"]]]],[11,"downcast_mut","","Attempts to downcast this failure to a concrete type by…",7,[[["self"]],[["option"],["t"]]]],[11,"find_root_cause","","Returns the \"root cause\" of this `Fail` - the last value…",7,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this `Fail` with the…",7,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",7,[[["self"]],["causes"]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",7,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_chain`.",7,[[["self"]],["causes"]]],[14,"bail","","Exits a function early with an `Error`.",null,null],[14,"ensure","","Exits a function early with an `Error` if the condition is…",null,null],[14,"format_err","","Constructs an `Error` using the standard string…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[],["t"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"as_fail","","",7,[[["self"]],["fail"]]],[11,"as_fail","","",4,[[["self"]],["fail"]]],[11,"name","","",2,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",2,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",2,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"as_ref","","",4,[[["self"]],["fail"]]],[11,"from","","",2,[[["d"]],["context"]]],[11,"from","","",4,[[["f"]],["error"]]],[11,"next","","",8,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"clone","","",1,[[["self"]],["compat"]]],[11,"default","","",0,[[],["backtrace"]]],[11,"default","","",1,[[],["compat"]]],[11,"eq","","",1,[[["self"],["compat"]],["bool"]]],[11,"ne","","",1,[[["self"],["compat"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"description","","",1,[[["self"]],["str"]]]],"p":[[3,"Backtrace"],[3,"Compat"],[3,"Context"],[3,"SyncFailure"],[3,"Error"],[8,"AsFail"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]};
searchIndex["failure_derive"] = {"doc":"","i":[[24,"Fail","failure_derive","",null,null]],"p":[]};
searchIndex["formula"] = {"doc":"Formula testing binary.","i":[[3,"Parameters","formula","Input parameters.",null,null],[12,"formula","","Formula.",0,null],[12,"start","","Starting value.",0,null],[12,"end","","End value.",0,null],[12,"samples","","Number of sample to take of the formula.",0,null],[5,"main","","Main function.",null,[[]]],[5,"init","","Initialise the command line arguments and directories.",null,[[]]],[5,"input","","Load the input files.",null,[[["path"]],["parameters"]]],[5,"build","","Build instances.",null,[[["path"],["parameters"]]]],[5,"simulate","","Run the simulation.",null,[[["formula"],["f64"],["u64"]],["vec"]]],[5,"save","","Save the output data.",null,[[["vec"],["path"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",0,[[["m"]],["d"]]],[11,"convert_into","","",0,[[],["u"]]],[11,"convert_unclamped_into","","",0,[[],["u"]]],[11,"try_convert_into","","",0,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"vzip","","",0,[[],["v"]]],[11,"bg","","",0,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",0,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"load","","",0,[[["path"]],[["error"],["result",["error"]]]]],[11,"deserialize","","",0,[[["__d"]],["result"]]]],"p":[[3,"Parameters"]]};
searchIndex["generic_array"] = {"doc":"This crate implements a structure that can be used as a…","i":[[3,"GenericArray","generic_array","Struct representing a generic array - `GenericArray<T, N>`…",null,null],[0,"arr","","Implementation for `arr!` macro.",null,null],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",null,null],[8,"AddLength","","Helper trait for `arr!` macro",null,null],[16,"Output","","Resulting length",0,null],[0,"functional","generic_array","Functional programming with generic sequences",null,null],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",null,null],[8,"MappedGenericSequence","","Defines the relationship between one generic sequence and…",null,null],[16,"Mapped","","Mapped sequence type",1,null],[8,"FunctionalSequence","","Defines functional programming methods for generic sequences",null,null],[11,"map","","Maps a `GenericSequence` to another `GenericSequence`.",2,[[["f"]],["mappedsequence"]]],[11,"zip","","Combines two `GenericSequence` instances and iterates…",2,[[["rhs"],["f"]],["mappedsequence"]]],[11,"fold","","Folds (or reduces) a sequence of data into a single value.",2,[[["u"],["f"]],["u"]]],[0,"iter","generic_array","`GenericArray` iterator implementation.",null,null],[3,"GenericArrayIter","generic_array::iter","An iterator that moves out of a `GenericArray`",null,null],[11,"as_slice","","Returns the remaining items of this iterator as a slice",3,[[["self"]]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",3,[[["self"]]]],[0,"sequence","generic_array","Useful traits for manipulating sequences of data stored in…",null,null],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",null,null],[8,"GenericSequence","","Defines some sequence with an associated length and…",null,null],[16,"Length","","`GenericArray` associated length",4,null],[16,"Sequence","","Concrete sequence type used in conjuction with reference…",4,null],[10,"generate","","Initializes a new sequence instance using the given…",4,[[["f"]]]],[8,"Lengthen","","Defines any `GenericSequence` which can be lengthened or…",null,null],[16,"Longer","","`GenericSequence` that has one more element than `Self`",5,null],[10,"append","","Returns a new array with the given element appended to the…",5,[[["t"]]]],[10,"prepend","","Returns a new array with the given element prepended to…",5,[[["t"]]]],[8,"Shorten","","Defines a `GenericSequence` which can be shortened by…",null,null],[16,"Shorter","","`GenericSequence` that has one less element than `Self`",6,null],[10,"pop_back","","Returns a new array without the last element, and the last…",6,[[]]],[10,"pop_front","","Returns a new array without the first element, and the…",6,[[]]],[8,"Split","","Defines a `GenericSequence` that can be split into two…",null,null],[16,"First","","First part of the resulting split array",7,null],[16,"Second","","Second part of the resulting split array",7,null],[10,"split","","Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat","","Defines `GenericSequence`s which can be joined together,…",null,null],[16,"Rest","","Sequence to be concatenated with `self`",8,null],[16,"Output","","Resulting sequence formed by the concatenation.",8,null],[10,"concat","","Concatenate, or join, two sequences.",8,[[]]],[8,"ArrayLength","generic_array","Trait making `GenericArray` work, marking types to be used…",null,null],[16,"ArrayType","","Associated type representing the array type for the number",9,null],[11,"as_slice","","Extracts a slice containing the entire array.",10,[[["self"]]]],[11,"as_mut_slice","","Extracts a mutable slice containing the entire array.",10,[[["self"]]]],[11,"from_slice","","Converts slice to a generic array reference with inferred…",10,[[],["genericarray"]]],[11,"from_mut_slice","","Converts mutable slice to a mutable generic array reference",10,[[],["genericarray"]]],[11,"clone_from_slice","","Construct a `GenericArray` from a slice by cloning its…",10,[[],["genericarray"]]],[11,"from_exact_iter","","Creates a new `GenericArray` instance from an iterator…",10,[[["i"]],["option"]]],[14,"arr","","Macro allowing for easy generation of Generic Arrays.…",null,null],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","generic_array::iter","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"map","generic_array","",10,[[["f"]],["mappedsequence"]]],[11,"zip","","",10,[[["rhs"],["f"]],["mappedsequence"]]],[11,"fold","","",10,[[["u"],["f"]],["u"]]],[11,"generate","","",10,[[["f"]],["genericarray"]]],[11,"append","","",10,[[["t"]]]],[11,"prepend","","",10,[[["t"]]]],[11,"pop_back","","",10,[[]]],[11,"pop_front","","",10,[[]]],[11,"split","","",10,[[]]],[11,"concat","","",10,[[]]],[11,"deref","","",10,[[["self"]]]],[11,"deref_mut","","",10,[[["self"]]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","generic_array::iter","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","generic_array","",10,[[["self"]],["bool"]]],[11,"cmp","","",10,[[["genericarray"],["self"]],["ordering"]]],[11,"partial_cmp","","",10,[[["genericarray"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"drop","generic_array::iter","",3,[[["self"]]]],[11,"hash","generic_array","",10,[[["self"],["h"]]]],[11,"next","generic_array::iter","",3,[[["self"]],["option"]]],[11,"fold","","",3,[[["b"],["f"]],["b"]]],[11,"size_hint","","",3,[[["self"]]]],[11,"count","","",3,[[],["usize"]]],[11,"nth","","",3,[[["self"],["usize"]],["option"]]],[11,"last","","",3,[[],["option"]]],[11,"next_back","","",3,[[["self"]],["option"]]],[11,"rfold","","",3,[[["b"],["f"]],["b"]]],[11,"from_iter","generic_array","",10,[[["i"]],["genericarray"]]],[11,"into_iter","","",10,[[]]],[11,"len","generic_array::iter","",3,[[["self"]],["usize"]]],[11,"as_ref","generic_array","",10,[[["self"]]]],[11,"as_mut","","",10,[[["self"]]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["genericarray"]]],[11,"clone","generic_array::iter","",3,[[["self"]],["self"]]],[11,"default","generic_array","",10,[[],["self"]]],[11,"borrow","","",10,[[["self"]]]],[11,"borrow_mut","","",10,[[["self"]]]]],"p":[[8,"AddLength"],[8,"MappedGenericSequence"],[8,"FunctionalSequence"],[3,"GenericArrayIter"],[8,"GenericSequence"],[8,"Lengthen"],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,"ArrayLength"],[3,"GenericArray"]]};
searchIndex["getrandom"] = {"doc":"Interface to the random number generator of the operating…","i":[[3,"Error","getrandom","A small and `no_std` compatible error type.",null,null],[5,"getrandom","","Fill `dest` with random bytes from the system's preferred…",null,[[],[["result",["error"]],["error"]]]],[18,"UNKNOWN","","Unknown error.",0,null],[18,"UNAVAILABLE","","System entropy source is unavailable.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],[["i32"],["option",["i32"]]]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["error"],["self"]],["bool"]]],[11,"ne","","",0,[[["error"],["self"]],["bool"]]],[11,"clone","","",0,[[["self"]],["error"]]]],"p":[[3,"Error"]]};
searchIndex["gimli"] = {"doc":"`gimli` is a library for reading and writing the DWARF…","i":[[3,"Encoding","gimli","Encoding parameters that are commonly used for multiple…",null,null],[12,"address_size","","The size of an address.",0,null],[12,"format","","Whether the DWARF format is 32- or 64-bit.",0,null],[12,"version","","The DWARF version of the header.",0,null],[3,"LineEncoding","","Encoding parameters for a line number program.",null,null],[12,"minimum_instruction_length","","The size in bytes of the smallest target machine…",1,null],[12,"maximum_operations_per_instruction","","The maximum number of individual operations that may be…",1,null],[12,"default_is_stmt","","The initial value of the `is_stmt` register.",1,null],[12,"line_base","","The minimum value which a special opcode can add to the…",1,null],[12,"line_range","","The range of values which a special opcode can add to the…",1,null],[3,"Register","","A DWARF register number.",null,null],[12,"0","","",2,null],[3,"DebugAbbrevOffset","","An offset into the `.debug_abbrev` section.",null,null],[12,"0","","",3,null],[3,"DebugAddrBase","","An offset to a set of entries in the `.debug_addr` section.",null,null],[12,"0","","",4,null],[3,"DebugAddrIndex","","An index into a set of addresses in the `.debug_addr`…",null,null],[12,"0","","",5,null],[3,"DebugInfoOffset","","An offset into the `.debug_info` section.",null,null],[12,"0","","",6,null],[3,"DebugLineOffset","","An offset into the `.debug_line` section.",null,null],[12,"0","","",7,null],[3,"DebugLineStrOffset","","An offset into the `.debug_line_str` section.",null,null],[12,"0","","",8,null],[3,"LocationListsOffset","","An offset into either the `.debug_loc` section or the…",null,null],[12,"0","","",9,null],[3,"DebugLocListsBase","","An offset to a set of location list offsets in the…",null,null],[12,"0","","",10,null],[3,"DebugLocListsIndex","","An index into a set of location list offsets in the…",null,null],[12,"0","","",11,null],[3,"DebugMacinfoOffset","","An offset into the `.debug_macinfo` section.",null,null],[12,"0","","",12,null],[3,"DebugMacroOffset","","An offset into the `.debug_macro` section.",null,null],[12,"0","","",13,null],[3,"RangeListsOffset","","An offset into either the `.debug_ranges` section or the…",null,null],[12,"0","","",14,null],[3,"DebugRngListsBase","","An offset to a set of range list offsets in the…",null,null],[12,"0","","",15,null],[3,"DebugRngListsIndex","","An index into a set of range list offsets in the…",null,null],[12,"0","","",16,null],[3,"DebugStrOffset","","An offset into the `.debug_str` section.",null,null],[12,"0","","",17,null],[3,"DebugStrOffsetsBase","","An offset to a set of entries in the `.debug_str_offsets`…",null,null],[12,"0","","",18,null],[3,"DebugStrOffsetsIndex","","An index into a set of entries in the `.debug_str_offsets`…",null,null],[12,"0","","",19,null],[3,"DebugTypesOffset","","An offset into the `.debug_types` section.",null,null],[12,"0","","",20,null],[3,"DebugTypeSignature","","A type signature as used in the `.debug_types` section.",null,null],[12,"0","","",21,null],[3,"DebugFrameOffset","","An offset into the `.debug_frame` section.",null,null],[12,"0","","",22,null],[3,"EhFrameOffset","","An offset into the `.eh_frame` section.",null,null],[12,"0","","",23,null],[3,"Arm","","ARM architecture specific definitions.",null,null],[3,"X86","","Intel i386 architecture specific definitions.",null,null],[3,"X86_64","","AMD64 architecture specific definitions.",null,null],[3,"BigEndian","","Big endian byte order.",null,null],[3,"LittleEndian","","Little endian byte order.",null,null],[4,"Format","","Whether the format of a compilation unit is 32- or 64-bit.",null,null],[13,"Dwarf64","","64-bit DWARF",24,null],[13,"Dwarf32","","32-bit DWARF",24,null],[4,"UnitSectionOffset","","An offset into the `.debug_info` or `.debug_types` sections.",null,null],[13,"DebugInfoOffset","","An offset into the `.debug_info` section.",25,null],[13,"DebugTypesOffset","","An offset into the `.debug_types` section.",25,null],[4,"SectionId","","An identifier for a DWARF section.",null,null],[13,"DebugAbbrev","","The `.debug_abbrev` section.",26,null],[13,"DebugAddr","","The `.debug_addr` section.",26,null],[13,"DebugAranges","","The `.debug_aranges` section.",26,null],[13,"DebugFrame","","The `.debug_frame` section.",26,null],[13,"EhFrame","","The `.eh_frame` section.",26,null],[13,"EhFrameHdr","","The `.eh_frame_hdr` section.",26,null],[13,"DebugInfo","","The `.debug_info` section.",26,null],[13,"DebugLine","","The `.debug_line` section.",26,null],[13,"DebugLineStr","","The `.debug_line_str` section.",26,null],[13,"DebugLoc","","The `.debug_loc` section.",26,null],[13,"DebugLocLists","","The `.debug_loclists` section.",26,null],[13,"DebugMacinfo","","The `.debug_macinfo` section.",26,null],[13,"DebugMacro","","The `.debug_macro` section.",26,null],[13,"DebugPubNames","","The `.debug_pubnames` section.",26,null],[13,"DebugPubTypes","","The `.debug_pubtypes` section.",26,null],[13,"DebugRanges","","The `.debug_ranges` section.",26,null],[13,"DebugRngLists","","The `.debug_rnglists` section.",26,null],[13,"DebugStr","","The `.debug_str` section.",26,null],[13,"DebugStrOffsets","","The `.debug_str_offsets` section.",26,null],[13,"DebugTypes","","The `.debug_types` section.",26,null],[4,"RunTimeEndian","","Byte order that is selectable at runtime.",null,null],[13,"Little","","Little endian byte order.",27,null],[13,"Big","","Big endian byte order.",27,null],[11,"initial_length_size","","Return the serialized size of an initial length field for…",24,[[],["u8"]]],[11,"word_size","","Return the natural word size for the format",24,[[],["u8"]]],[11,"name","","Returns the ELF section name for this kind.",26,[[],["str"]]],[18,"R0","","",28,null],[18,"R1","","",28,null],[18,"R2","","",28,null],[18,"R3","","",28,null],[18,"R4","","",28,null],[18,"R5","","",28,null],[18,"R6","","",28,null],[18,"R7","","",28,null],[18,"R8","","",28,null],[18,"R9","","",28,null],[18,"R10","","",28,null],[18,"R11","","",28,null],[18,"R12","","",28,null],[18,"R13","","",28,null],[18,"R14","","",28,null],[18,"R15","","",28,null],[11,"register_name","","The name of a register, or `None` if the register number…",28,[[["register"]],[["option",["str"]],["str"]]]],[18,"EAX","","",29,null],[18,"ECX","","",29,null],[18,"EDX","","",29,null],[18,"EBX","","",29,null],[18,"ESP","","",29,null],[18,"EBP","","",29,null],[18,"ESI","","",29,null],[18,"EDI","","",29,null],[18,"RA","","",29,null],[18,"ST0","","",29,null],[18,"ST1","","",29,null],[18,"ST2","","",29,null],[18,"ST3","","",29,null],[18,"ST4","","",29,null],[18,"ST5","","",29,null],[18,"ST6","","",29,null],[18,"ST7","","",29,null],[18,"XMM0","","",29,null],[18,"XMM1","","",29,null],[18,"XMM2","","",29,null],[18,"XMM3","","",29,null],[18,"XMM4","","",29,null],[18,"XMM5","","",29,null],[18,"XMM6","","",29,null],[18,"XMM7","","",29,null],[18,"MM0","","",29,null],[18,"MM1","","",29,null],[18,"MM2","","",29,null],[18,"MM3","","",29,null],[18,"MM4","","",29,null],[18,"MM5","","",29,null],[18,"MM6","","",29,null],[18,"MM7","","",29,null],[18,"MXCSR","","",29,null],[18,"ES","","",29,null],[18,"CS","","",29,null],[18,"SS","","",29,null],[18,"DS","","",29,null],[18,"FS","","",29,null],[18,"GS","","",29,null],[18,"TR","","",29,null],[18,"LDTR","","",29,null],[18,"FS_BASE","","",29,null],[18,"GS_BASE","","",29,null],[11,"register_name","","The name of a register, or `None` if the register number…",29,[[["register"]],[["option",["str"]],["str"]]]],[18,"RAX","","",30,null],[18,"RDX","","",30,null],[18,"RCX","","",30,null],[18,"RBX","","",30,null],[18,"RSI","","",30,null],[18,"RDI","","",30,null],[18,"RBP","","",30,null],[18,"RSP","","",30,null],[18,"R8","","",30,null],[18,"R9","","",30,null],[18,"R10","","",30,null],[18,"R11","","",30,null],[18,"R12","","",30,null],[18,"R13","","",30,null],[18,"R14","","",30,null],[18,"R15","","",30,null],[18,"RA","","",30,null],[18,"XMM0","","",30,null],[18,"XMM1","","",30,null],[18,"XMM2","","",30,null],[18,"XMM3","","",30,null],[18,"XMM4","","",30,null],[18,"XMM5","","",30,null],[18,"XMM6","","",30,null],[18,"XMM7","","",30,null],[18,"XMM8","","",30,null],[18,"XMM9","","",30,null],[18,"XMM10","","",30,null],[18,"XMM11","","",30,null],[18,"XMM12","","",30,null],[18,"XMM13","","",30,null],[18,"XMM14","","",30,null],[18,"XMM15","","",30,null],[18,"ST0","","",30,null],[18,"ST1","","",30,null],[18,"ST2","","",30,null],[18,"ST3","","",30,null],[18,"ST4","","",30,null],[18,"ST5","","",30,null],[18,"ST6","","",30,null],[18,"ST7","","",30,null],[18,"MM0","","",30,null],[18,"MM1","","",30,null],[18,"MM2","","",30,null],[18,"MM3","","",30,null],[18,"MM4","","",30,null],[18,"MM5","","",30,null],[18,"MM6","","",30,null],[18,"MM7","","",30,null],[18,"RFLAGS","","",30,null],[18,"ES","","",30,null],[18,"CS","","",30,null],[18,"SS","","",30,null],[18,"DS","","",30,null],[18,"FS","","",30,null],[18,"GS","","",30,null],[18,"FS_BASE","","",30,null],[18,"GS_BASE","","",30,null],[18,"TR","","",30,null],[18,"LDTR","","",30,null],[18,"MXCSR","","",30,null],[18,"FCW","","",30,null],[18,"FSW","","",30,null],[18,"XMM16","","",30,null],[18,"XMM17","","",30,null],[18,"XMM18","","",30,null],[18,"XMM19","","",30,null],[18,"XMM20","","",30,null],[18,"XMM21","","",30,null],[18,"XMM22","","",30,null],[18,"XMM23","","",30,null],[18,"XMM24","","",30,null],[18,"XMM25","","",30,null],[18,"XMM26","","",30,null],[18,"XMM27","","",30,null],[18,"XMM28","","",30,null],[18,"XMM29","","",30,null],[18,"XMM30","","",30,null],[18,"XMM31","","",30,null],[18,"K0","","",30,null],[18,"K1","","",30,null],[18,"K2","","",30,null],[18,"K3","","",30,null],[18,"K4","","",30,null],[18,"K5","","",30,null],[18,"K6","","",30,null],[18,"K7","","",30,null],[11,"register_name","","The name of a register, or `None` if the register number…",30,[[["register"]],[["option",["str"]],["str"]]]],[0,"constants","","Constant definitions.",null,null],[3,"DwUt","gimli::constants","The unit type field in a unit header.",null,null],[12,"0","","",31,null],[3,"DwCfa","","The opcode for a call frame instruction.",null,null],[12,"0","","",32,null],[3,"DwChildren","","The child determination encodings for DIE attributes.",null,null],[12,"0","","",33,null],[3,"DwTag","","The tag encodings for DIE attributes.",null,null],[12,"0","","",34,null],[3,"DwAt","","The attribute encodings for DIE attributes.",null,null],[12,"0","","",35,null],[3,"DwForm","","The attribute form encodings for DIE attributes.",null,null],[12,"0","","",36,null],[3,"DwAte","","The encodings of the constants used in the…",null,null],[12,"0","","",37,null],[3,"DwLle","","The encodings of the constants used in location list…",null,null],[12,"0","","",38,null],[3,"DwDs","","The encodings of the constants used in the…",null,null],[12,"0","","",39,null],[3,"DwEnd","","The encodings of the constants used in the…",null,null],[12,"0","","",40,null],[3,"DwAccess","","The encodings of the constants used in the…",null,null],[12,"0","","",41,null],[3,"DwVis","","The encodings of the constants used in the…",null,null],[12,"0","","",42,null],[3,"DwVirtuality","","The encodings of the constants used in the…",null,null],[12,"0","","",43,null],[3,"DwLang","","The encodings of the constants used in the…",null,null],[12,"0","","",44,null],[3,"DwAddr","","The encodings of the constants used in the…",null,null],[12,"0","","",45,null],[3,"DwId","","The encodings of the constants used in the…",null,null],[12,"0","","",46,null],[3,"DwCc","","The encodings of the constants used in the…",null,null],[12,"0","","",47,null],[3,"DwInl","","The encodings of the constants used in the `DW_AT_inline`…",null,null],[12,"0","","",48,null],[3,"DwOrd","","The encodings of the constants used in the…",null,null],[12,"0","","",49,null],[3,"DwDsc","","The encodings of the constants used in the…",null,null],[12,"0","","",50,null],[3,"DwIdx","","Name index attribute encodings.",null,null],[12,"0","","",51,null],[3,"DwDefaulted","","The encodings of the constants used in the…",null,null],[12,"0","","",52,null],[3,"DwLns","","The encodings for the standard opcodes for line number…",null,null],[12,"0","","",53,null],[3,"DwLne","","The encodings for the extended opcodes for line number…",null,null],[12,"0","","",54,null],[3,"DwLnct","","The encodings for the line number header entry formats.",null,null],[12,"0","","",55,null],[3,"DwMacro","","The encodings for macro information entry types.",null,null],[12,"0","","",56,null],[3,"DwRle","","Range list entry encoding values.",null,null],[12,"0","","",57,null],[3,"DwOp","","The encodings for DWARF expression operations.",null,null],[12,"0","","",58,null],[3,"DwEhPe","","Pointer encoding used by `.eh_frame`.",null,null],[12,"0","","",59,null],[17,"DW_UT_compile","","",null,null],[17,"DW_UT_type","","",null,null],[17,"DW_UT_partial","","",null,null],[17,"DW_UT_skeleton","","",null,null],[17,"DW_UT_split_compile","","",null,null],[17,"DW_UT_split_type","","",null,null],[17,"DW_UT_lo_user","","",null,null],[17,"DW_UT_hi_user","","",null,null],[17,"DW_CFA_advance_loc","","",null,null],[17,"DW_CFA_offset","","",null,null],[17,"DW_CFA_restore","","",null,null],[17,"DW_CFA_nop","","",null,null],[17,"DW_CFA_set_loc","","",null,null],[17,"DW_CFA_advance_loc1","","",null,null],[17,"DW_CFA_advance_loc2","","",null,null],[17,"DW_CFA_advance_loc4","","",null,null],[17,"DW_CFA_offset_extended","","",null,null],[17,"DW_CFA_restore_extended","","",null,null],[17,"DW_CFA_undefined","","",null,null],[17,"DW_CFA_same_value","","",null,null],[17,"DW_CFA_register","","",null,null],[17,"DW_CFA_remember_state","","",null,null],[17,"DW_CFA_restore_state","","",null,null],[17,"DW_CFA_def_cfa","","",null,null],[17,"DW_CFA_def_cfa_register","","",null,null],[17,"DW_CFA_def_cfa_offset","","",null,null],[17,"DW_CFA_def_cfa_expression","","",null,null],[17,"DW_CFA_expression","","",null,null],[17,"DW_CFA_offset_extended_sf","","",null,null],[17,"DW_CFA_def_cfa_sf","","",null,null],[17,"DW_CFA_def_cfa_offset_sf","","",null,null],[17,"DW_CFA_val_offset","","",null,null],[17,"DW_CFA_val_offset_sf","","",null,null],[17,"DW_CFA_val_expression","","",null,null],[17,"DW_CFA_lo_user","","",null,null],[17,"DW_CFA_hi_user","","",null,null],[17,"DW_CFA_MIPS_advance_loc8","","",null,null],[17,"DW_CFA_GNU_window_save","","",null,null],[17,"DW_CFA_GNU_args_size","","",null,null],[17,"DW_CFA_GNU_negative_offset_extended","","",null,null],[17,"DW_CHILDREN_no","","",null,null],[17,"DW_CHILDREN_yes","","",null,null],[17,"DW_TAG_null","","",null,null],[17,"DW_TAG_array_type","","",null,null],[17,"DW_TAG_class_type","","",null,null],[17,"DW_TAG_entry_point","","",null,null],[17,"DW_TAG_enumeration_type","","",null,null],[17,"DW_TAG_formal_parameter","","",null,null],[17,"DW_TAG_imported_declaration","","",null,null],[17,"DW_TAG_label","","",null,null],[17,"DW_TAG_lexical_block","","",null,null],[17,"DW_TAG_member","","",null,null],[17,"DW_TAG_pointer_type","","",null,null],[17,"DW_TAG_reference_type","","",null,null],[17,"DW_TAG_compile_unit","","",null,null],[17,"DW_TAG_string_type","","",null,null],[17,"DW_TAG_structure_type","","",null,null],[17,"DW_TAG_subroutine_type","","",null,null],[17,"DW_TAG_typedef","","",null,null],[17,"DW_TAG_union_type","","",null,null],[17,"DW_TAG_unspecified_parameters","","",null,null],[17,"DW_TAG_variant","","",null,null],[17,"DW_TAG_common_block","","",null,null],[17,"DW_TAG_common_inclusion","","",null,null],[17,"DW_TAG_inheritance","","",null,null],[17,"DW_TAG_inlined_subroutine","","",null,null],[17,"DW_TAG_module","","",null,null],[17,"DW_TAG_ptr_to_member_type","","",null,null],[17,"DW_TAG_set_type","","",null,null],[17,"DW_TAG_subrange_type","","",null,null],[17,"DW_TAG_with_stmt","","",null,null],[17,"DW_TAG_access_declaration","","",null,null],[17,"DW_TAG_base_type","","",null,null],[17,"DW_TAG_catch_block","","",null,null],[17,"DW_TAG_const_type","","",null,null],[17,"DW_TAG_constant","","",null,null],[17,"DW_TAG_enumerator","","",null,null],[17,"DW_TAG_file_type","","",null,null],[17,"DW_TAG_friend","","",null,null],[17,"DW_TAG_namelist","","",null,null],[17,"DW_TAG_namelist_item","","",null,null],[17,"DW_TAG_packed_type","","",null,null],[17,"DW_TAG_subprogram","","",null,null],[17,"DW_TAG_template_type_parameter","","",null,null],[17,"DW_TAG_template_value_parameter","","",null,null],[17,"DW_TAG_thrown_type","","",null,null],[17,"DW_TAG_try_block","","",null,null],[17,"DW_TAG_variant_part","","",null,null],[17,"DW_TAG_variable","","",null,null],[17,"DW_TAG_volatile_type","","",null,null],[17,"DW_TAG_dwarf_procedure","","",null,null],[17,"DW_TAG_restrict_type","","",null,null],[17,"DW_TAG_interface_type","","",null,null],[17,"DW_TAG_namespace","","",null,null],[17,"DW_TAG_imported_module","","",null,null],[17,"DW_TAG_unspecified_type","","",null,null],[17,"DW_TAG_partial_unit","","",null,null],[17,"DW_TAG_imported_unit","","",null,null],[17,"DW_TAG_condition","","",null,null],[17,"DW_TAG_shared_type","","",null,null],[17,"DW_TAG_type_unit","","",null,null],[17,"DW_TAG_rvalue_reference_type","","",null,null],[17,"DW_TAG_template_alias","","",null,null],[17,"DW_TAG_coarray_type","","",null,null],[17,"DW_TAG_generic_subrange","","",null,null],[17,"DW_TAG_dynamic_type","","",null,null],[17,"DW_TAG_atomic_type","","",null,null],[17,"DW_TAG_call_site","","",null,null],[17,"DW_TAG_call_site_parameter","","",null,null],[17,"DW_TAG_skeleton_unit","","",null,null],[17,"DW_TAG_immutable_type","","",null,null],[17,"DW_TAG_lo_user","","",null,null],[17,"DW_TAG_hi_user","","",null,null],[17,"DW_TAG_MIPS_loop","","",null,null],[17,"DW_TAG_HP_array_descriptor","","",null,null],[17,"DW_TAG_HP_Bliss_field","","",null,null],[17,"DW_TAG_HP_Bliss_field_set","","",null,null],[17,"DW_TAG_format_label","","",null,null],[17,"DW_TAG_function_template","","",null,null],[17,"DW_TAG_class_template","","",null,null],[17,"DW_TAG_GNU_BINCL","","",null,null],[17,"DW_TAG_GNU_EINCL","","",null,null],[17,"DW_TAG_GNU_template_template_param","","",null,null],[17,"DW_TAG_GNU_template_parameter_pack","","",null,null],[17,"DW_TAG_GNU_formal_parameter_pack","","",null,null],[17,"DW_TAG_GNU_call_site","","",null,null],[17,"DW_TAG_GNU_call_site_parameter","","",null,null],[17,"DW_TAG_APPLE_property","","",null,null],[17,"DW_TAG_SUN_function_template","","",null,null],[17,"DW_TAG_SUN_class_template","","",null,null],[17,"DW_TAG_SUN_struct_template","","",null,null],[17,"DW_TAG_SUN_union_template","","",null,null],[17,"DW_TAG_SUN_indirect_inheritance","","",null,null],[17,"DW_TAG_SUN_codeflags","","",null,null],[17,"DW_TAG_SUN_memop_info","","",null,null],[17,"DW_TAG_SUN_omp_child_func","","",null,null],[17,"DW_TAG_SUN_rtti_descriptor","","",null,null],[17,"DW_TAG_SUN_dtor_info","","",null,null],[17,"DW_TAG_SUN_dtor","","",null,null],[17,"DW_TAG_SUN_f90_interface","","",null,null],[17,"DW_TAG_SUN_fortran_vax_structure","","",null,null],[17,"DW_TAG_ALTIUM_circ_type","","",null,null],[17,"DW_TAG_ALTIUM_mwa_circ_type","","",null,null],[17,"DW_TAG_ALTIUM_rev_carry_type","","",null,null],[17,"DW_TAG_ALTIUM_rom","","",null,null],[17,"DW_TAG_upc_shared_type","","",null,null],[17,"DW_TAG_upc_strict_type","","",null,null],[17,"DW_TAG_upc_relaxed_type","","",null,null],[17,"DW_TAG_PGI_kanji_type","","",null,null],[17,"DW_TAG_PGI_interface_block","","",null,null],[17,"DW_TAG_BORLAND_property","","",null,null],[17,"DW_TAG_BORLAND_Delphi_string","","",null,null],[17,"DW_TAG_BORLAND_Delphi_dynamic_array","","",null,null],[17,"DW_TAG_BORLAND_Delphi_set","","",null,null],[17,"DW_TAG_BORLAND_Delphi_variant","","",null,null],[17,"DW_AT_null","","",null,null],[17,"DW_AT_sibling","","",null,null],[17,"DW_AT_location","","",null,null],[17,"DW_AT_name","","",null,null],[17,"DW_AT_ordering","","",null,null],[17,"DW_AT_byte_size","","",null,null],[17,"DW_AT_bit_offset","","",null,null],[17,"DW_AT_bit_size","","",null,null],[17,"DW_AT_stmt_list","","",null,null],[17,"DW_AT_low_pc","","",null,null],[17,"DW_AT_high_pc","","",null,null],[17,"DW_AT_language","","",null,null],[17,"DW_AT_discr","","",null,null],[17,"DW_AT_discr_value","","",null,null],[17,"DW_AT_visibility","","",null,null],[17,"DW_AT_import","","",null,null],[17,"DW_AT_string_length","","",null,null],[17,"DW_AT_common_reference","","",null,null],[17,"DW_AT_comp_dir","","",null,null],[17,"DW_AT_const_value","","",null,null],[17,"DW_AT_containing_type","","",null,null],[17,"DW_AT_default_value","","",null,null],[17,"DW_AT_inline","","",null,null],[17,"DW_AT_is_optional","","",null,null],[17,"DW_AT_lower_bound","","",null,null],[17,"DW_AT_producer","","",null,null],[17,"DW_AT_prototyped","","",null,null],[17,"DW_AT_return_addr","","",null,null],[17,"DW_AT_start_scope","","",null,null],[17,"DW_AT_bit_stride","","",null,null],[17,"DW_AT_upper_bound","","",null,null],[17,"DW_AT_abstract_origin","","",null,null],[17,"DW_AT_accessibility","","",null,null],[17,"DW_AT_address_class","","",null,null],[17,"DW_AT_artificial","","",null,null],[17,"DW_AT_base_types","","",null,null],[17,"DW_AT_calling_convention","","",null,null],[17,"DW_AT_count","","",null,null],[17,"DW_AT_data_member_location","","",null,null],[17,"DW_AT_decl_column","","",null,null],[17,"DW_AT_decl_file","","",null,null],[17,"DW_AT_decl_line","","",null,null],[17,"DW_AT_declaration","","",null,null],[17,"DW_AT_discr_list","","",null,null],[17,"DW_AT_encoding","","",null,null],[17,"DW_AT_external","","",null,null],[17,"DW_AT_frame_base","","",null,null],[17,"DW_AT_friend","","",null,null],[17,"DW_AT_identifier_case","","",null,null],[17,"DW_AT_macro_info","","",null,null],[17,"DW_AT_namelist_item","","",null,null],[17,"DW_AT_priority","","",null,null],[17,"DW_AT_segment","","",null,null],[17,"DW_AT_specification","","",null,null],[17,"DW_AT_static_link","","",null,null],[17,"DW_AT_type","","",null,null],[17,"DW_AT_use_location","","",null,null],[17,"DW_AT_variable_parameter","","",null,null],[17,"DW_AT_virtuality","","",null,null],[17,"DW_AT_vtable_elem_location","","",null,null],[17,"DW_AT_allocated","","",null,null],[17,"DW_AT_associated","","",null,null],[17,"DW_AT_data_location","","",null,null],[17,"DW_AT_byte_stride","","",null,null],[17,"DW_AT_entry_pc","","",null,null],[17,"DW_AT_use_UTF8","","",null,null],[17,"DW_AT_extension","","",null,null],[17,"DW_AT_ranges","","",null,null],[17,"DW_AT_trampoline","","",null,null],[17,"DW_AT_call_column","","",null,null],[17,"DW_AT_call_file","","",null,null],[17,"DW_AT_call_line","","",null,null],[17,"DW_AT_description","","",null,null],[17,"DW_AT_binary_scale","","",null,null],[17,"DW_AT_decimal_scale","","",null,null],[17,"DW_AT_small","","",null,null],[17,"DW_AT_decimal_sign","","",null,null],[17,"DW_AT_digit_count","","",null,null],[17,"DW_AT_picture_string","","",null,null],[17,"DW_AT_mutable","","",null,null],[17,"DW_AT_threads_scaled","","",null,null],[17,"DW_AT_explicit","","",null,null],[17,"DW_AT_object_pointer","","",null,null],[17,"DW_AT_endianity","","",null,null],[17,"DW_AT_elemental","","",null,null],[17,"DW_AT_pure","","",null,null],[17,"DW_AT_recursive","","",null,null],[17,"DW_AT_signature","","",null,null],[17,"DW_AT_main_subprogram","","",null,null],[17,"DW_AT_data_bit_offset","","",null,null],[17,"DW_AT_const_expr","","",null,null],[17,"DW_AT_enum_class","","",null,null],[17,"DW_AT_linkage_name","","",null,null],[17,"DW_AT_string_length_bit_size","","",null,null],[17,"DW_AT_string_length_byte_size","","",null,null],[17,"DW_AT_rank","","",null,null],[17,"DW_AT_str_offsets_base","","",null,null],[17,"DW_AT_addr_base","","",null,null],[17,"DW_AT_rnglists_base","","",null,null],[17,"DW_AT_dwo_name","","",null,null],[17,"DW_AT_reference","","",null,null],[17,"DW_AT_rvalue_reference","","",null,null],[17,"DW_AT_macros","","",null,null],[17,"DW_AT_call_all_calls","","",null,null],[17,"DW_AT_call_all_source_calls","","",null,null],[17,"DW_AT_call_all_tail_calls","","",null,null],[17,"DW_AT_call_return_pc","","",null,null],[17,"DW_AT_call_value","","",null,null],[17,"DW_AT_call_origin","","",null,null],[17,"DW_AT_call_parameter","","",null,null],[17,"DW_AT_call_pc","","",null,null],[17,"DW_AT_call_tail_call","","",null,null],[17,"DW_AT_call_target","","",null,null],[17,"DW_AT_call_target_clobbered","","",null,null],[17,"DW_AT_call_data_location","","",null,null],[17,"DW_AT_call_data_value","","",null,null],[17,"DW_AT_noreturn","","",null,null],[17,"DW_AT_alignment","","",null,null],[17,"DW_AT_export_symbols","","",null,null],[17,"DW_AT_deleted","","",null,null],[17,"DW_AT_defaulted","","",null,null],[17,"DW_AT_loclists_base","","",null,null],[17,"DW_AT_lo_user","","",null,null],[17,"DW_AT_hi_user","","",null,null],[17,"DW_AT_MIPS_fde","","",null,null],[17,"DW_AT_MIPS_loop_begin","","",null,null],[17,"DW_AT_MIPS_tail_loop_begin","","",null,null],[17,"DW_AT_MIPS_epilog_begin","","",null,null],[17,"DW_AT_MIPS_loop_unroll_factor","","",null,null],[17,"DW_AT_MIPS_software_pipeline_depth","","",null,null],[17,"DW_AT_MIPS_linkage_name","","",null,null],[17,"DW_AT_MIPS_stride","","",null,null],[17,"DW_AT_MIPS_abstract_name","","",null,null],[17,"DW_AT_MIPS_clone_origin","","",null,null],[17,"DW_AT_MIPS_has_inlines","","",null,null],[17,"DW_AT_MIPS_stride_byte","","",null,null],[17,"DW_AT_MIPS_stride_elem","","",null,null],[17,"DW_AT_MIPS_ptr_dopetype","","",null,null],[17,"DW_AT_MIPS_allocatable_dopetype","","",null,null],[17,"DW_AT_MIPS_assumed_shape_dopetype","","",null,null],[17,"DW_AT_MIPS_assumed_size","","",null,null],[17,"DW_AT_INTEL_other_endian","","",null,null],[17,"DW_AT_sf_names","","",null,null],[17,"DW_AT_src_info","","",null,null],[17,"DW_AT_mac_info","","",null,null],[17,"DW_AT_src_coords","","",null,null],[17,"DW_AT_body_begin","","",null,null],[17,"DW_AT_body_end","","",null,null],[17,"DW_AT_GNU_vector","","",null,null],[17,"DW_AT_GNU_guarded_by","","",null,null],[17,"DW_AT_GNU_pt_guarded_by","","",null,null],[17,"DW_AT_GNU_guarded","","",null,null],[17,"DW_AT_GNU_pt_guarded","","",null,null],[17,"DW_AT_GNU_locks_excluded","","",null,null],[17,"DW_AT_GNU_exclusive_locks_required","","",null,null],[17,"DW_AT_GNU_shared_locks_required","","",null,null],[17,"DW_AT_GNU_odr_signature","","",null,null],[17,"DW_AT_GNU_template_name","","",null,null],[17,"DW_AT_GNU_call_site_value","","",null,null],[17,"DW_AT_GNU_call_site_data_value","","",null,null],[17,"DW_AT_GNU_call_site_target","","",null,null],[17,"DW_AT_GNU_call_site_target_clobbered","","",null,null],[17,"DW_AT_GNU_tail_call","","",null,null],[17,"DW_AT_GNU_all_tail_call_sites","","",null,null],[17,"DW_AT_GNU_all_call_sites","","",null,null],[17,"DW_AT_GNU_all_source_call_sites","","",null,null],[17,"DW_AT_GNU_macros","","",null,null],[17,"DW_AT_GNU_dwo_name","","",null,null],[17,"DW_AT_GNU_dwo_id","","",null,null],[17,"DW_AT_GNU_ranges_base","","",null,null],[17,"DW_AT_GNU_addr_base","","",null,null],[17,"DW_AT_GNU_pubnames","","",null,null],[17,"DW_AT_GNU_pubtypes","","",null,null],[17,"DW_AT_GNU_discriminator","","",null,null],[17,"DW_AT_GNU_locviews","","",null,null],[17,"DW_AT_GNU_entry_view","","",null,null],[17,"DW_AT_SUN_template","","",null,null],[17,"DW_AT_SUN_alignment","","",null,null],[17,"DW_AT_SUN_vtable","","",null,null],[17,"DW_AT_SUN_count_guarantee","","",null,null],[17,"DW_AT_SUN_command_line","","",null,null],[17,"DW_AT_SUN_vbase","","",null,null],[17,"DW_AT_SUN_compile_options","","",null,null],[17,"DW_AT_SUN_language","","",null,null],[17,"DW_AT_SUN_browser_file","","",null,null],[17,"DW_AT_SUN_vtable_abi","","",null,null],[17,"DW_AT_SUN_func_offsets","","",null,null],[17,"DW_AT_SUN_cf_kind","","",null,null],[17,"DW_AT_SUN_vtable_index","","",null,null],[17,"DW_AT_SUN_omp_tpriv_addr","","",null,null],[17,"DW_AT_SUN_omp_child_func","","",null,null],[17,"DW_AT_SUN_func_offset","","",null,null],[17,"DW_AT_SUN_memop_type_ref","","",null,null],[17,"DW_AT_SUN_profile_id","","",null,null],[17,"DW_AT_SUN_memop_signature","","",null,null],[17,"DW_AT_SUN_obj_dir","","",null,null],[17,"DW_AT_SUN_obj_file","","",null,null],[17,"DW_AT_SUN_original_name","","",null,null],[17,"DW_AT_SUN_hwcprof_signature","","",null,null],[17,"DW_AT_SUN_amd64_parmdump","","",null,null],[17,"DW_AT_SUN_part_link_name","","",null,null],[17,"DW_AT_SUN_link_name","","",null,null],[17,"DW_AT_SUN_pass_with_const","","",null,null],[17,"DW_AT_SUN_return_with_const","","",null,null],[17,"DW_AT_SUN_import_by_name","","",null,null],[17,"DW_AT_SUN_f90_pointer","","",null,null],[17,"DW_AT_SUN_pass_by_ref","","",null,null],[17,"DW_AT_SUN_f90_allocatable","","",null,null],[17,"DW_AT_SUN_f90_assumed_shape_array","","",null,null],[17,"DW_AT_SUN_c_vla","","",null,null],[17,"DW_AT_SUN_return_value_ptr","","",null,null],[17,"DW_AT_SUN_dtor_start","","",null,null],[17,"DW_AT_SUN_dtor_length","","",null,null],[17,"DW_AT_SUN_dtor_state_initial","","",null,null],[17,"DW_AT_SUN_dtor_state_final","","",null,null],[17,"DW_AT_SUN_dtor_state_deltas","","",null,null],[17,"DW_AT_SUN_import_by_lname","","",null,null],[17,"DW_AT_SUN_f90_use_only","","",null,null],[17,"DW_AT_SUN_namelist_spec","","",null,null],[17,"DW_AT_SUN_is_omp_child_func","","",null,null],[17,"DW_AT_SUN_fortran_main_alias","","",null,null],[17,"DW_AT_SUN_fortran_based","","",null,null],[17,"DW_AT_ALTIUM_loclist","","",null,null],[17,"DW_AT_use_GNAT_descriptive_type","","",null,null],[17,"DW_AT_GNAT_descriptive_type","","",null,null],[17,"DW_AT_GNU_numerator","","",null,null],[17,"DW_AT_GNU_denominator","","",null,null],[17,"DW_AT_GNU_bias","","",null,null],[17,"DW_AT_upc_threads_scaled","","",null,null],[17,"DW_AT_PGI_lbase","","",null,null],[17,"DW_AT_PGI_soffset","","",null,null],[17,"DW_AT_PGI_lstride","","",null,null],[17,"DW_AT_BORLAND_property_read","","",null,null],[17,"DW_AT_BORLAND_property_write","","",null,null],[17,"DW_AT_BORLAND_property_implements","","",null,null],[17,"DW_AT_BORLAND_property_index","","",null,null],[17,"DW_AT_BORLAND_property_default","","",null,null],[17,"DW_AT_BORLAND_Delphi_unit","","",null,null],[17,"DW_AT_BORLAND_Delphi_class","","",null,null],[17,"DW_AT_BORLAND_Delphi_record","","",null,null],[17,"DW_AT_BORLAND_Delphi_metaclass","","",null,null],[17,"DW_AT_BORLAND_Delphi_constructor","","",null,null],[17,"DW_AT_BORLAND_Delphi_destructor","","",null,null],[17,"DW_AT_BORLAND_Delphi_anonymous_method","","",null,null],[17,"DW_AT_BORLAND_Delphi_interface","","",null,null],[17,"DW_AT_BORLAND_Delphi_ABI","","",null,null],[17,"DW_AT_BORLAND_Delphi_return","","",null,null],[17,"DW_AT_BORLAND_Delphi_frameptr","","",null,null],[17,"DW_AT_BORLAND_closure","","",null,null],[17,"DW_AT_LLVM_include_path","","",null,null],[17,"DW_AT_LLVM_config_macros","","",null,null],[17,"DW_AT_LLVM_isysroot","","",null,null],[17,"DW_AT_APPLE_optimized","","",null,null],[17,"DW_AT_APPLE_flags","","",null,null],[17,"DW_AT_APPLE_isa","","",null,null],[17,"DW_AT_APPLE_block","","",null,null],[17,"DW_AT_APPLE_major_runtime_vers","","",null,null],[17,"DW_AT_APPLE_runtime_class","","",null,null],[17,"DW_AT_APPLE_omit_frame_ptr","","",null,null],[17,"DW_AT_APPLE_property_name","","",null,null],[17,"DW_AT_APPLE_property_getter","","",null,null],[17,"DW_AT_APPLE_property_setter","","",null,null],[17,"DW_AT_APPLE_property_attribute","","",null,null],[17,"DW_AT_APPLE_objc_complete_type","","",null,null],[17,"DW_AT_APPLE_property","","",null,null],[17,"DW_FORM_null","","",null,null],[17,"DW_FORM_addr","","",null,null],[17,"DW_FORM_block2","","",null,null],[17,"DW_FORM_block4","","",null,null],[17,"DW_FORM_data2","","",null,null],[17,"DW_FORM_data4","","",null,null],[17,"DW_FORM_data8","","",null,null],[17,"DW_FORM_string","","",null,null],[17,"DW_FORM_block","","",null,null],[17,"DW_FORM_block1","","",null,null],[17,"DW_FORM_data1","","",null,null],[17,"DW_FORM_flag","","",null,null],[17,"DW_FORM_sdata","","",null,null],[17,"DW_FORM_strp","","",null,null],[17,"DW_FORM_udata","","",null,null],[17,"DW_FORM_ref_addr","","",null,null],[17,"DW_FORM_ref1","","",null,null],[17,"DW_FORM_ref2","","",null,null],[17,"DW_FORM_ref4","","",null,null],[17,"DW_FORM_ref8","","",null,null],[17,"DW_FORM_ref_udata","","",null,null],[17,"DW_FORM_indirect","","",null,null],[17,"DW_FORM_sec_offset","","",null,null],[17,"DW_FORM_exprloc","","",null,null],[17,"DW_FORM_flag_present","","",null,null],[17,"DW_FORM_ref_sig8","","",null,null],[17,"DW_FORM_strx","","",null,null],[17,"DW_FORM_addrx","","",null,null],[17,"DW_FORM_ref_sup4","","",null,null],[17,"DW_FORM_strp_sup","","",null,null],[17,"DW_FORM_data16","","",null,null],[17,"DW_FORM_line_strp","","",null,null],[17,"DW_FORM_implicit_const","","",null,null],[17,"DW_FORM_loclistx","","",null,null],[17,"DW_FORM_rnglistx","","",null,null],[17,"DW_FORM_ref_sup8","","",null,null],[17,"DW_FORM_strx1","","",null,null],[17,"DW_FORM_strx2","","",null,null],[17,"DW_FORM_strx3","","",null,null],[17,"DW_FORM_strx4","","",null,null],[17,"DW_FORM_addrx1","","",null,null],[17,"DW_FORM_addrx2","","",null,null],[17,"DW_FORM_addrx3","","",null,null],[17,"DW_FORM_addrx4","","",null,null],[17,"DW_FORM_GNU_addr_index","","",null,null],[17,"DW_FORM_GNU_str_index","","",null,null],[17,"DW_FORM_GNU_ref_alt","","",null,null],[17,"DW_FORM_GNU_strp_alt","","",null,null],[17,"DW_ATE_address","","",null,null],[17,"DW_ATE_boolean","","",null,null],[17,"DW_ATE_complex_float","","",null,null],[17,"DW_ATE_float","","",null,null],[17,"DW_ATE_signed","","",null,null],[17,"DW_ATE_signed_char","","",null,null],[17,"DW_ATE_unsigned","","",null,null],[17,"DW_ATE_unsigned_char","","",null,null],[17,"DW_ATE_imaginary_float","","",null,null],[17,"DW_ATE_packed_decimal","","",null,null],[17,"DW_ATE_numeric_string","","",null,null],[17,"DW_ATE_edited","","",null,null],[17,"DW_ATE_signed_fixed","","",null,null],[17,"DW_ATE_unsigned_fixed","","",null,null],[17,"DW_ATE_decimal_float","","",null,null],[17,"DW_ATE_UTF","","",null,null],[17,"DW_ATE_UCS","","",null,null],[17,"DW_ATE_ASCII","","",null,null],[17,"DW_ATE_lo_user","","",null,null],[17,"DW_ATE_hi_user","","",null,null],[17,"DW_LLE_end_of_list","","",null,null],[17,"DW_LLE_base_addressx","","",null,null],[17,"DW_LLE_startx_endx","","",null,null],[17,"DW_LLE_startx_length","","",null,null],[17,"DW_LLE_offset_pair","","",null,null],[17,"DW_LLE_default_location","","",null,null],[17,"DW_LLE_base_address","","",null,null],[17,"DW_LLE_start_end","","",null,null],[17,"DW_LLE_start_length","","",null,null],[17,"DW_LLE_GNU_view_pair","","",null,null],[17,"DW_DS_unsigned","","",null,null],[17,"DW_DS_leading_overpunch","","",null,null],[17,"DW_DS_trailing_overpunch","","",null,null],[17,"DW_DS_leading_separate","","",null,null],[17,"DW_DS_trailing_separate","","",null,null],[17,"DW_END_default","","",null,null],[17,"DW_END_big","","",null,null],[17,"DW_END_little","","",null,null],[17,"DW_END_lo_user","","",null,null],[17,"DW_END_hi_user","","",null,null],[17,"DW_ACCESS_public","","",null,null],[17,"DW_ACCESS_protected","","",null,null],[17,"DW_ACCESS_private","","",null,null],[17,"DW_VIS_local","","",null,null],[17,"DW_VIS_exported","","",null,null],[17,"DW_VIS_qualified","","",null,null],[17,"DW_VIRTUALITY_none","","",null,null],[17,"DW_VIRTUALITY_virtual","","",null,null],[17,"DW_VIRTUALITY_pure_virtual","","",null,null],[17,"DW_LANG_C89","","",null,null],[17,"DW_LANG_C","","",null,null],[17,"DW_LANG_Ada83","","",null,null],[17,"DW_LANG_C_plus_plus","","",null,null],[17,"DW_LANG_Cobol74","","",null,null],[17,"DW_LANG_Cobol85","","",null,null],[17,"DW_LANG_Fortran77","","",null,null],[17,"DW_LANG_Fortran90","","",null,null],[17,"DW_LANG_Pascal83","","",null,null],[17,"DW_LANG_Modula2","","",null,null],[17,"DW_LANG_Java","","",null,null],[17,"DW_LANG_C99","","",null,null],[17,"DW_LANG_Ada95","","",null,null],[17,"DW_LANG_Fortran95","","",null,null],[17,"DW_LANG_PLI","","",null,null],[17,"DW_LANG_ObjC","","",null,null],[17,"DW_LANG_ObjC_plus_plus","","",null,null],[17,"DW_LANG_UPC","","",null,null],[17,"DW_LANG_D","","",null,null],[17,"DW_LANG_Python","","",null,null],[17,"DW_LANG_OpenCL","","",null,null],[17,"DW_LANG_Go","","",null,null],[17,"DW_LANG_Modula3","","",null,null],[17,"DW_LANG_Haskell","","",null,null],[17,"DW_LANG_C_plus_plus_03","","",null,null],[17,"DW_LANG_C_plus_plus_11","","",null,null],[17,"DW_LANG_OCaml","","",null,null],[17,"DW_LANG_Rust","","",null,null],[17,"DW_LANG_C11","","",null,null],[17,"DW_LANG_Swift","","",null,null],[17,"DW_LANG_Julia","","",null,null],[17,"DW_LANG_Dylan","","",null,null],[17,"DW_LANG_C_plus_plus_14","","",null,null],[17,"DW_LANG_Fortran03","","",null,null],[17,"DW_LANG_Fortran08","","",null,null],[17,"DW_LANG_RenderScript","","",null,null],[17,"DW_LANG_BLISS","","",null,null],[17,"DW_LANG_lo_user","","",null,null],[17,"DW_LANG_hi_user","","",null,null],[17,"DW_LANG_Mips_Assembler","","",null,null],[17,"DW_LANG_GOOGLE_RenderScript","","",null,null],[17,"DW_LANG_SUN_Assembler","","",null,null],[17,"DW_LANG_ALTIUM_Assembler","","",null,null],[17,"DW_LANG_BORLAND_Delphi","","",null,null],[17,"DW_ADDR_none","","",null,null],[17,"DW_ID_case_sensitive","","",null,null],[17,"DW_ID_up_case","","",null,null],[17,"DW_ID_down_case","","",null,null],[17,"DW_ID_case_insensitive","","",null,null],[17,"DW_CC_normal","","",null,null],[17,"DW_CC_program","","",null,null],[17,"DW_CC_nocall","","",null,null],[17,"DW_CC_pass_by_reference","","",null,null],[17,"DW_CC_pass_by_value","","",null,null],[17,"DW_CC_lo_user","","",null,null],[17,"DW_CC_hi_user","","",null,null],[17,"DW_INL_not_inlined","","",null,null],[17,"DW_INL_inlined","","",null,null],[17,"DW_INL_declared_not_inlined","","",null,null],[17,"DW_INL_declared_inlined","","",null,null],[17,"DW_ORD_row_major","","",null,null],[17,"DW_ORD_col_major","","",null,null],[17,"DW_DSC_label","","",null,null],[17,"DW_DSC_range","","",null,null],[17,"DW_IDX_compile_unit","","",null,null],[17,"DW_IDX_type_unit","","",null,null],[17,"DW_IDX_die_offset","","",null,null],[17,"DW_IDX_parent","","",null,null],[17,"DW_IDX_type_hash","","",null,null],[17,"DW_IDX_lo_user","","",null,null],[17,"DW_IDX_hi_user","","",null,null],[17,"DW_DEFAULTED_no","","",null,null],[17,"DW_DEFAULTED_in_class","","",null,null],[17,"DW_DEFAULTED_out_of_class","","",null,null],[17,"DW_LNS_copy","","",null,null],[17,"DW_LNS_advance_pc","","",null,null],[17,"DW_LNS_advance_line","","",null,null],[17,"DW_LNS_set_file","","",null,null],[17,"DW_LNS_set_column","","",null,null],[17,"DW_LNS_negate_stmt","","",null,null],[17,"DW_LNS_set_basic_block","","",null,null],[17,"DW_LNS_const_add_pc","","",null,null],[17,"DW_LNS_fixed_advance_pc","","",null,null],[17,"DW_LNS_set_prologue_end","","",null,null],[17,"DW_LNS_set_epilogue_begin","","",null,null],[17,"DW_LNS_set_isa","","",null,null],[17,"DW_LNE_end_sequence","","",null,null],[17,"DW_LNE_set_address","","",null,null],[17,"DW_LNE_define_file","","",null,null],[17,"DW_LNE_set_discriminator","","",null,null],[17,"DW_LNE_lo_user","","",null,null],[17,"DW_LNE_hi_user","","",null,null],[17,"DW_LNCT_path","","",null,null],[17,"DW_LNCT_directory_index","","",null,null],[17,"DW_LNCT_timestamp","","",null,null],[17,"DW_LNCT_size","","",null,null],[17,"DW_LNCT_MD5","","",null,null],[17,"DW_LNCT_lo_user","","",null,null],[17,"DW_LNCT_hi_user","","",null,null],[17,"DW_MACRO_define","","",null,null],[17,"DW_MACRO_undef","","",null,null],[17,"DW_MACRO_start_file","","",null,null],[17,"DW_MACRO_end_file","","",null,null],[17,"DW_MACRO_define_strp","","",null,null],[17,"DW_MACRO_undef_strp","","",null,null],[17,"DW_MACRO_import","","",null,null],[17,"DW_MACRO_define_sup","","",null,null],[17,"DW_MACRO_undef_sup","","",null,null],[17,"DW_MACRO_import_sup","","",null,null],[17,"DW_MACRO_define_strx","","",null,null],[17,"DW_MACRO_undef_strx","","",null,null],[17,"DW_MACRO_lo_user","","",null,null],[17,"DW_MACRO_hi_user","","",null,null],[17,"DW_RLE_end_of_list","","",null,null],[17,"DW_RLE_base_addressx","","",null,null],[17,"DW_RLE_startx_endx","","",null,null],[17,"DW_RLE_startx_length","","",null,null],[17,"DW_RLE_offset_pair","","",null,null],[17,"DW_RLE_base_address","","",null,null],[17,"DW_RLE_start_end","","",null,null],[17,"DW_RLE_start_length","","",null,null],[17,"DW_OP_addr","","",null,null],[17,"DW_OP_deref","","",null,null],[17,"DW_OP_const1u","","",null,null],[17,"DW_OP_const1s","","",null,null],[17,"DW_OP_const2u","","",null,null],[17,"DW_OP_const2s","","",null,null],[17,"DW_OP_const4u","","",null,null],[17,"DW_OP_const4s","","",null,null],[17,"DW_OP_const8u","","",null,null],[17,"DW_OP_const8s","","",null,null],[17,"DW_OP_constu","","",null,null],[17,"DW_OP_consts","","",null,null],[17,"DW_OP_dup","","",null,null],[17,"DW_OP_drop","","",null,null],[17,"DW_OP_over","","",null,null],[17,"DW_OP_pick","","",null,null],[17,"DW_OP_swap","","",null,null],[17,"DW_OP_rot","","",null,null],[17,"DW_OP_xderef","","",null,null],[17,"DW_OP_abs","","",null,null],[17,"DW_OP_and","","",null,null],[17,"DW_OP_div","","",null,null],[17,"DW_OP_minus","","",null,null],[17,"DW_OP_mod","","",null,null],[17,"DW_OP_mul","","",null,null],[17,"DW_OP_neg","","",null,null],[17,"DW_OP_not","","",null,null],[17,"DW_OP_or","","",null,null],[17,"DW_OP_plus","","",null,null],[17,"DW_OP_plus_uconst","","",null,null],[17,"DW_OP_shl","","",null,null],[17,"DW_OP_shr","","",null,null],[17,"DW_OP_shra","","",null,null],[17,"DW_OP_xor","","",null,null],[17,"DW_OP_bra","","",null,null],[17,"DW_OP_eq","","",null,null],[17,"DW_OP_ge","","",null,null],[17,"DW_OP_gt","","",null,null],[17,"DW_OP_le","","",null,null],[17,"DW_OP_lt","","",null,null],[17,"DW_OP_ne","","",null,null],[17,"DW_OP_skip","","",null,null],[17,"DW_OP_lit0","","",null,null],[17,"DW_OP_lit1","","",null,null],[17,"DW_OP_lit2","","",null,null],[17,"DW_OP_lit3","","",null,null],[17,"DW_OP_lit4","","",null,null],[17,"DW_OP_lit5","","",null,null],[17,"DW_OP_lit6","","",null,null],[17,"DW_OP_lit7","","",null,null],[17,"DW_OP_lit8","","",null,null],[17,"DW_OP_lit9","","",null,null],[17,"DW_OP_lit10","","",null,null],[17,"DW_OP_lit11","","",null,null],[17,"DW_OP_lit12","","",null,null],[17,"DW_OP_lit13","","",null,null],[17,"DW_OP_lit14","","",null,null],[17,"DW_OP_lit15","","",null,null],[17,"DW_OP_lit16","","",null,null],[17,"DW_OP_lit17","","",null,null],[17,"DW_OP_lit18","","",null,null],[17,"DW_OP_lit19","","",null,null],[17,"DW_OP_lit20","","",null,null],[17,"DW_OP_lit21","","",null,null],[17,"DW_OP_lit22","","",null,null],[17,"DW_OP_lit23","","",null,null],[17,"DW_OP_lit24","","",null,null],[17,"DW_OP_lit25","","",null,null],[17,"DW_OP_lit26","","",null,null],[17,"DW_OP_lit27","","",null,null],[17,"DW_OP_lit28","","",null,null],[17,"DW_OP_lit29","","",null,null],[17,"DW_OP_lit30","","",null,null],[17,"DW_OP_lit31","","",null,null],[17,"DW_OP_reg0","","",null,null],[17,"DW_OP_reg1","","",null,null],[17,"DW_OP_reg2","","",null,null],[17,"DW_OP_reg3","","",null,null],[17,"DW_OP_reg4","","",null,null],[17,"DW_OP_reg5","","",null,null],[17,"DW_OP_reg6","","",null,null],[17,"DW_OP_reg7","","",null,null],[17,"DW_OP_reg8","","",null,null],[17,"DW_OP_reg9","","",null,null],[17,"DW_OP_reg10","","",null,null],[17,"DW_OP_reg11","","",null,null],[17,"DW_OP_reg12","","",null,null],[17,"DW_OP_reg13","","",null,null],[17,"DW_OP_reg14","","",null,null],[17,"DW_OP_reg15","","",null,null],[17,"DW_OP_reg16","","",null,null],[17,"DW_OP_reg17","","",null,null],[17,"DW_OP_reg18","","",null,null],[17,"DW_OP_reg19","","",null,null],[17,"DW_OP_reg20","","",null,null],[17,"DW_OP_reg21","","",null,null],[17,"DW_OP_reg22","","",null,null],[17,"DW_OP_reg23","","",null,null],[17,"DW_OP_reg24","","",null,null],[17,"DW_OP_reg25","","",null,null],[17,"DW_OP_reg26","","",null,null],[17,"DW_OP_reg27","","",null,null],[17,"DW_OP_reg28","","",null,null],[17,"DW_OP_reg29","","",null,null],[17,"DW_OP_reg30","","",null,null],[17,"DW_OP_reg31","","",null,null],[17,"DW_OP_breg0","","",null,null],[17,"DW_OP_breg1","","",null,null],[17,"DW_OP_breg2","","",null,null],[17,"DW_OP_breg3","","",null,null],[17,"DW_OP_breg4","","",null,null],[17,"DW_OP_breg5","","",null,null],[17,"DW_OP_breg6","","",null,null],[17,"DW_OP_breg7","","",null,null],[17,"DW_OP_breg8","","",null,null],[17,"DW_OP_breg9","","",null,null],[17,"DW_OP_breg10","","",null,null],[17,"DW_OP_breg11","","",null,null],[17,"DW_OP_breg12","","",null,null],[17,"DW_OP_breg13","","",null,null],[17,"DW_OP_breg14","","",null,null],[17,"DW_OP_breg15","","",null,null],[17,"DW_OP_breg16","","",null,null],[17,"DW_OP_breg17","","",null,null],[17,"DW_OP_breg18","","",null,null],[17,"DW_OP_breg19","","",null,null],[17,"DW_OP_breg20","","",null,null],[17,"DW_OP_breg21","","",null,null],[17,"DW_OP_breg22","","",null,null],[17,"DW_OP_breg23","","",null,null],[17,"DW_OP_breg24","","",null,null],[17,"DW_OP_breg25","","",null,null],[17,"DW_OP_breg26","","",null,null],[17,"DW_OP_breg27","","",null,null],[17,"DW_OP_breg28","","",null,null],[17,"DW_OP_breg29","","",null,null],[17,"DW_OP_breg30","","",null,null],[17,"DW_OP_breg31","","",null,null],[17,"DW_OP_regx","","",null,null],[17,"DW_OP_fbreg","","",null,null],[17,"DW_OP_bregx","","",null,null],[17,"DW_OP_piece","","",null,null],[17,"DW_OP_deref_size","","",null,null],[17,"DW_OP_xderef_size","","",null,null],[17,"DW_OP_nop","","",null,null],[17,"DW_OP_push_object_address","","",null,null],[17,"DW_OP_call2","","",null,null],[17,"DW_OP_call4","","",null,null],[17,"DW_OP_call_ref","","",null,null],[17,"DW_OP_form_tls_address","","",null,null],[17,"DW_OP_call_frame_cfa","","",null,null],[17,"DW_OP_bit_piece","","",null,null],[17,"DW_OP_implicit_value","","",null,null],[17,"DW_OP_stack_value","","",null,null],[17,"DW_OP_implicit_pointer","","",null,null],[17,"DW_OP_addrx","","",null,null],[17,"DW_OP_constx","","",null,null],[17,"DW_OP_entry_value","","",null,null],[17,"DW_OP_const_type","","",null,null],[17,"DW_OP_regval_type","","",null,null],[17,"DW_OP_deref_type","","",null,null],[17,"DW_OP_xderef_type","","",null,null],[17,"DW_OP_convert","","",null,null],[17,"DW_OP_reinterpret","","",null,null],[17,"DW_OP_GNU_push_tls_address","","",null,null],[17,"DW_OP_GNU_implicit_pointer","","",null,null],[17,"DW_OP_GNU_entry_value","","",null,null],[17,"DW_OP_GNU_const_type","","",null,null],[17,"DW_OP_GNU_regval_type","","",null,null],[17,"DW_OP_GNU_deref_type","","",null,null],[17,"DW_OP_GNU_convert","","",null,null],[17,"DW_OP_GNU_reinterpret","","",null,null],[17,"DW_OP_GNU_parameter_ref","","",null,null],[17,"DW_EH_PE_uleb128","","",null,null],[17,"DW_EH_PE_udata2","","",null,null],[17,"DW_EH_PE_udata4","","",null,null],[17,"DW_EH_PE_udata8","","",null,null],[17,"DW_EH_PE_sleb128","","",null,null],[17,"DW_EH_PE_sdata2","","",null,null],[17,"DW_EH_PE_sdata4","","",null,null],[17,"DW_EH_PE_sdata8","","",null,null],[17,"DW_EH_PE_pcrel","","",null,null],[17,"DW_EH_PE_textrel","","",null,null],[17,"DW_EH_PE_datarel","","",null,null],[17,"DW_EH_PE_funcrel","","",null,null],[17,"DW_EH_PE_aligned","","",null,null],[17,"DW_EH_PE_indirect","","",null,null],[17,"DW_EH_PE_absptr","","",null,null],[17,"DW_EH_PE_omit","","",null,null],[11,"static_string","","",31,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",32,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",33,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",34,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",35,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",36,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",37,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",38,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",39,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",40,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",41,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",42,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",43,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",44,[[["self"]],[["option",["str"]],["str"]]]],[11,"default_lower_bound","","Get the default DW_AT_lower_bound for this language.",44,[[],[["option",["usize"]],["usize"]]]],[11,"static_string","","",45,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",46,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",47,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",48,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",49,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",50,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",51,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",52,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",53,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",54,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",55,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",56,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",57,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",58,[[["self"]],[["option",["str"]],["str"]]]],[11,"static_string","","",59,[[["self"]],[["option",["str"]],["str"]]]],[11,"format","","Get the pointer encoding's format.",59,[[],["dwehpe"]]],[11,"application","","Get the pointer encoding's application.",59,[[],["dwehpe"]]],[11,"is_absent","","Is this encoding the absent pointer encoding?",59,[[],["bool"]]],[11,"is_indirect","","Is this coding indirect? If so, its encoded value is the…",59,[[],["bool"]]],[11,"is_valid_encoding","","Is this a known, valid pointer encoding?",59,[[],["bool"]]],[0,"leb128","gimli","Read and write DWARF's \"Little Endian Base 128\" (LEB128)…",null,null],[0,"read","gimli::leb128","A module for reading signed and unsigned integers that…",null,null],[5,"unsigned","gimli::leb128::read","Read an unsigned LEB128 number from the given `Reader` and…",null,[[["r"]],[["result",["u64"]],["u64"]]]],[5,"u16","","Read an LEB128 u16 from the given `Reader` and return it…",null,[[["r"]],[["u16"],["result",["u16"]]]]],[5,"signed","","Read a signed LEB128 number from the given `Reader` and…",null,[[["r"]],[["result",["i64"]],["i64"]]]],[0,"read","gimli","Read DWARF debugging information.",null,null],[3,"DebugAddr","gimli::read","The raw contents of the `.debug_addr` section.",null,null],[3,"DebugFrame","","`DebugFrame` contains the `.debug_frame` section's frame…",null,null],[3,"EhFrameHdr","","`EhFrameHdr` contains the information about the…",null,null],[3,"ParsedEhFrameHdr","","`ParsedEhFrameHdr` contains the parsed information from…",null,null],[3,"EhHdrTable","","The CFI binary search table that is an optional part of…",null,null],[3,"EhFrame","","`EhFrame` contains the frame unwinding information needed…",null,null],[3,"BaseAddresses","","Optional base addresses for the relative `DW_EH_PE_*`…",null,null],[12,"eh_frame_hdr","","The base addresses to use for pointers in the…",60,null],[12,"eh_frame","","The base addresses to use for pointers in the `.eh_frame`…",60,null],[3,"SectionBaseAddresses","","Optional base addresses for the relative `DW_EH_PE_*`…",null,null],[12,"section","","The address of the section containing the pointer.",61,null],[12,"text","","The base address for text relative pointers. This is…",61,null],[12,"data","","The base address for data relative pointers.",61,null],[3,"CfiEntriesIter","","An iterator over CIE and FDE entries in a `.debug_frame`…",null,null],[3,"Augmentation","","We support the z-style augmentation [defined by…",null,null],[3,"CommonInformationEntry","","A Common Information Entry holds information that is…",null,null],[3,"PartialFrameDescriptionEntry","","A partially parsed `FrameDescriptionEntry`.",null,null],[3,"FrameDescriptionEntry","","A `FrameDescriptionEntry` is a set of CFA instructions for…",null,null],[3,"UninitializedUnwindContext","","Common context needed when evaluating the call frame…",null,null],[3,"UnwindContext","","An unwinding context.",null,null],[3,"UnwindTable","","The `UnwindTable` iteratively evaluates a…",null,null],[3,"RegisterRuleIter","","An unordered iterator for register rules.",null,null],[3,"UnwindTableRow","","A row in the virtual unwind table that describes how to…",null,null],[3,"CallFrameInstructionIter","","A lazy iterator parsing call frame instructions.",null,null],[3,"Dwarf","","All of the commonly used DWARF sections, and other common…",null,null],[12,"debug_abbrev","","The `.debug_abbrev` section.",62,null],[12,"debug_addr","","The `.debug_addr` section.",62,null],[12,"debug_info","","The `.debug_info` section.",62,null],[12,"debug_line","","The `.debug_line` section.",62,null],[12,"debug_line_str","","The `.debug_line_str` section.",62,null],[12,"debug_str","","The `.debug_str` section.",62,null],[12,"debug_str_offsets","","The `.debug_str_offsets` section.",62,null],[12,"debug_str_sup","","The `.debug_str` section for a supplementary object file.",62,null],[12,"debug_types","","The `.debug_types` section.",62,null],[12,"locations","","The location lists in the `.debug_loc` and…",62,null],[12,"ranges","","The range lists in the `.debug_ranges` and…",62,null],[3,"Unit","","All of the commonly used information for a unit in the…",null,null],[12,"offset","","The section offset of the unit.",63,null],[12,"header","","The header of the unit.",63,null],[12,"abbreviations","","The parsed abbreviations for the unit.",63,null],[12,"name","","The `DW_AT_name` attribute of the unit.",63,null],[12,"comp_dir","","The `DW_AT_comp_dir` attribute of the unit.",63,null],[12,"low_pc","","The `DW_AT_low_pc` attribute of the unit. Defaults to 0.",63,null],[12,"str_offsets_base","","The `DW_AT_str_offsets_base` attribute of the unit.…",63,null],[12,"addr_base","","The `DW_AT_addr_base` attribute of the unit. Defaults to 0.",63,null],[12,"loclists_base","","The `DW_AT_loclists_base` attribute of the unit. Defaults…",63,null],[12,"rnglists_base","","The `DW_AT_rnglists_base` attribute of the unit. Defaults…",63,null],[12,"line_program","","The line number program of the unit.",63,null],[3,"RangeIter","","An iterator for the address ranges of a…",null,null],[3,"EndianSlice","","A `&[u8]` slice with endianity metadata.",null,null],[3,"ReaderOffsetId","","An identifier for an offset within a section reader.",null,null],[12,"0","","",64,null],[3,"DebugAbbrev","","The `DebugAbbrev` struct represents the abbreviations…",null,null],[3,"Abbreviations","","A set of type abbreviations.",null,null],[3,"Abbreviation","","An abbreviation describes the shape of a…",null,null],[3,"AttributeSpecification","","The description of an attribute in an abbreviated type. It…",null,null],[3,"ArangeEntry","","A single parsed arange.",null,null],[3,"DebugAranges","","The `DebugAranges` struct represents the DWARF address…",null,null],[3,"ArangeEntryIter","","An iterator over the aranges from a `.debug_aranges`…",null,null],[3,"DebugLine","","The `DebugLine` struct contains the source location to…",null,null],[3,"LineRows","","Executes a `LineProgram` to iterate over the rows in the…",null,null],[3,"LineInstructions","","An iterator yielding parsed instructions.",null,null],[3,"LineRow","","A row in the line number program's resulting matrix.",null,null],[3,"LineSequence","","A sequence within a line number program. A sequence, as…",null,null],[12,"start","","The first address that is covered by this sequence within…",65,null],[12,"end","","The first address that is not covered by this sequence…",65,null],[3,"LineProgramHeader","","A header for a line number program in the `.debug_line`…",null,null],[3,"IncompleteLineProgram","","A line number program that has not been run to completion.",null,null],[3,"CompleteLineProgram","","A line number program that has previously been run to…",null,null],[3,"FileEntry","","An entry in the `LineProgramHeader`'s `file_names` set.",null,null],[3,"FileEntryFormat","","The format of a component of an include directory or file…",null,null],[12,"content_type","","The type of information that is represented by the…",66,null],[12,"form","","The encoding form of the component value.",66,null],[3,"DebugLoc","","The raw contents of the `.debug_loc` section.",null,null],[3,"DebugLocLists","","The `DebugLocLists` struct represents the DWARF data found…",null,null],[3,"LocationLists","","The DWARF data found in `.debug_loc` and `.debug_loclists`…",null,null],[3,"RawLocListIter","","A raw iterator over a location list.",null,null],[3,"LocListIter","","An iterator over a location list.",null,null],[3,"LocationListEntry","","A location list entry from the `.debug_loc` or…",null,null],[12,"range","","The address range that this location is valid for.",67,null],[12,"data","","The data containing a single location description.",67,null],[3,"Piece","","The description of a single piece of the result of a DWARF…",null,null],[12,"size_in_bits","","If given, the size of the piece in bits. If `None`, there…",68,null],[12,"bit_offset","","If given, the bit offset of the piece within the location.…",68,null],[12,"location","","Where this piece is to be found.",68,null],[3,"Expression","","The bytecode for a DWARF expression or location description.",null,null],[12,"0","","",69,null],[3,"OperationIter","","An iterator for the operations in an expression.",null,null],[3,"Evaluation","","A DWARF expression evaluator.",null,null],[3,"PubNamesEntry","","A single parsed pubname.",null,null],[3,"DebugPubNames","","The `DebugPubNames` struct represents the DWARF public…",null,null],[3,"PubNamesEntryIter","","An iterator over the pubnames from a `.debug_pubnames`…",null,null],[3,"PubTypesEntry","","A single parsed pubtype.",null,null],[3,"DebugPubTypes","","The `DebugPubTypes` struct represents the DWARF public…",null,null],[3,"PubTypesEntryIter","","An iterator over the pubtypes from a `.debug_pubtypes`…",null,null],[3,"DebugRanges","","The raw contents of the `.debug_ranges` section.",null,null],[3,"DebugRngLists","","The `DebugRngLists` struct represents the contents of the…",null,null],[3,"RangeLists","","The DWARF data found in `.debug_ranges` and…",null,null],[3,"RawRngListIter","","A raw iterator over an address range list.",null,null],[3,"RngListIter","","An iterator over an address range list.",null,null],[3,"Range","","An address range from the `.debug_ranges` or…",null,null],[12,"begin","","The beginning address of the range.",70,null],[12,"end","","The first address past the end of the range.",70,null],[3,"DebugStr","","The `DebugStr` struct represents the DWARF strings found…",null,null],[3,"DebugStrOffsets","","The raw contents of the `.debug_str_offsets` section.",null,null],[3,"DebugLineStr","","The `DebugLineStr` struct represents the DWARF strings…",null,null],[3,"UnitOffset","","An offset into the current compilation or type unit.",null,null],[12,"0","","",71,null],[3,"DebugInfo","","The `DebugInfo` struct represents the DWARF debugging…",null,null],[3,"CompilationUnitHeadersIter","","An iterator over the compilation- and partial-units of a…",null,null],[3,"CompilationUnitHeader","","The header of a compilation unit's debugging information.",null,null],[3,"UnitHeader","","The common fields for the headers of compilation units and…",null,null],[3,"DebuggingInformationEntry","","A Debugging Information Entry (DIE).",null,null],[3,"Attribute","","An attribute in a `DebuggingInformationEntry`, consisting…",null,null],[3,"AttrsIter","","An iterator over a particular entry's attributes.",null,null],[3,"EntriesRaw","","A raw reader of the data that defines the Debugging…",null,null],[3,"EntriesCursor","","A cursor into the Debugging Information Entries tree for a…",null,null],[3,"EntriesTree","","The state information for a tree view of the Debugging…",null,null],[3,"EntriesTreeNode","","A node in the Debugging Information Entry tree.",null,null],[3,"EntriesTreeIter","","An iterator that allows traversal of the children of an…",null,null],[3,"DebugTypes","","The `DebugTypes` struct represents the DWARF type…",null,null],[3,"TypeUnitHeadersIter","","An iterator over the type-units of this `.debug_types`…",null,null],[3,"TypeUnitHeader","","The header of a type unit's debugging information.",null,null],[4,"CieOrFde","","Either a `CommonInformationEntry` (CIE) or a…",null,null],[13,"Cie","","This CFI entry is a `CommonInformationEntry`.",72,null],[13,"Fde","","This CFI entry is a `FrameDescriptionEntry`, however fully…",72,null],[4,"CfaRule","","The canonical frame address (CFA) recovery rules.",null,null],[13,"RegisterAndOffset","","The CFA is given offset from the given register's value.",73,null],[12,"register","gimli::read::CfaRule","The register containing the base value.",74,null],[12,"offset","","The offset from the register's base value.",74,null],[13,"Expression","gimli::read","The CFA is obtained by evaluating this `Reader` as a DWARF…",73,null],[4,"RegisterRule","","An entry in the abstract CFI table that describes how to…",null,null],[13,"Undefined","","A register that has this rule has no recoverable value in…",75,null],[13,"SameValue","","This register has not been modified from the previous…",75,null],[13,"Offset","","\"The previous value of this register is saved at the…",75,null],[13,"ValOffset","","\"The previous value of this register is the value CFA+N…",75,null],[13,"Register","","\"The previous value of this register is stored in another…",75,null],[13,"Expression","","\"The previous value of this register is located at the…",75,null],[13,"ValExpression","","\"The previous value of this register is the value produced…",75,null],[13,"Architectural","","\"The rule is defined externally to this specification by…",75,null],[4,"CallFrameInstruction","","A parsed call frame instruction.",null,null],[13,"SetLoc","","",76,null],[12,"address","gimli::read::CallFrameInstruction","The target address.",77,null],[13,"AdvanceLoc","gimli::read","The `AdvanceLoc` instruction is used for all of…",76,null],[12,"delta","gimli::read::CallFrameInstruction","The delta to be added to the current address.",78,null],[13,"DefCfa","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",79,null],[12,"offset","","The non-factored offset.",79,null],[13,"DefCfaSf","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",80,null],[12,"factored_offset","","The factored offset.",80,null],[13,"DefCfaRegister","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",81,null],[13,"DefCfaOffset","gimli::read","",76,null],[12,"offset","gimli::read::CallFrameInstruction","The non-factored offset.",82,null],[13,"DefCfaOffsetSf","gimli::read","",76,null],[12,"factored_offset","gimli::read::CallFrameInstruction","The factored offset.",83,null],[13,"DefCfaExpression","gimli::read","",76,null],[12,"expression","gimli::read::CallFrameInstruction","The DWARF expression.",84,null],[13,"Undefined","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",85,null],[13,"SameValue","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",86,null],[13,"Offset","gimli::read","The `Offset` instruction represents both `DW_CFA_offset`…",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",87,null],[12,"factored_offset","","The factored offset.",87,null],[13,"OffsetExtendedSf","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",88,null],[12,"factored_offset","","The factored offset.",88,null],[13,"ValOffset","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",89,null],[12,"factored_offset","","The factored offset.",89,null],[13,"ValOffsetSf","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",90,null],[12,"factored_offset","","The factored offset.",90,null],[13,"Register","gimli::read","",76,null],[12,"dest_register","gimli::read::CallFrameInstruction","The number of the register whose rule is being changed.",91,null],[12,"src_register","","The number of the register where the other register's…",91,null],[13,"Expression","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",92,null],[12,"expression","","The DWARF expression.",92,null],[13,"ValExpression","gimli::read","",76,null],[12,"register","gimli::read::CallFrameInstruction","The target register's number.",93,null],[12,"expression","","The DWARF expression.",93,null],[13,"Restore","gimli::read","The `Restore` instruction represents both `DW_CFA_restore`…",76,null],[12,"register","gimli::read::CallFrameInstruction","The register to be reset.",94,null],[13,"RememberState","gimli::read","",76,null],[13,"RestoreState","","",76,null],[13,"ArgsSize","","DW_CFA_GNU_args_size > > GNU Extension > > The…",76,null],[12,"size","gimli::read::CallFrameInstruction","The size of the arguments which have been pushed onto the…",95,null],[13,"Nop","gimli::read","",76,null],[4,"Pointer","","A decoded pointer.",null,null],[13,"Direct","","This value is the decoded pointer value.",96,null],[13,"Indirect","","This value is not the pointer value, but points to the…",96,null],[4,"LineInstruction","","A parsed line number program instruction.",null,null],[13,"Special","","6.2.5.1 Special Opcodes > > Each ubyte special opcode has…",97,null],[13,"Copy","","\"[`LineInstruction::Copy`] appends a row to the matrix…",97,null],[13,"AdvancePc","","\"The DW_LNS_advance_pc opcode takes a single unsigned…",97,null],[13,"AdvanceLine","","\"The DW_LNS_advance_line opcode takes a single signed…",97,null],[13,"SetFile","","\"The DW_LNS_set_file opcode takes a single unsigned LEB128…",97,null],[13,"SetColumn","","\"The DW_LNS_set_column opcode takes a single unsigned…",97,null],[13,"NegateStatement","","\"The DW_LNS_negate_stmt opcode takes no operands. It sets…",97,null],[13,"SetBasicBlock","","\"The DW_LNS_set_basic_block opcode takes no operands. It…",97,null],[13,"ConstAddPc","","The DW_LNS_const_add_pc opcode takes no operands. It…",97,null],[13,"FixedAddPc","","The DW_LNS_fixed_advance_pc opcode takes a single uhalf…",97,null],[13,"SetPrologueEnd","","\"[`LineInstruction::SetPrologueEnd`] sets the prologue_end…",97,null],[13,"SetEpilogueBegin","","\"[`LineInstruction::SetEpilogueBegin`] sets the…",97,null],[13,"SetIsa","","\"The DW_LNS_set_isa opcode takes a single unsigned LEB128…",97,null],[13,"UnknownStandard0","","An unknown standard opcode with zero operands.",97,null],[13,"UnknownStandard1","","An unknown standard opcode with one operand.",97,null],[13,"UnknownStandardN","","An unknown standard opcode with multiple operands.",97,null],[13,"EndSequence","","[`LineInstruction::EndSequence`] sets the end_sequence…",97,null],[13,"SetAddress","","The DW_LNE_set_address opcode takes a single relocatable…",97,null],[13,"DefineFile","","Defines a new source file in the line number program and…",97,null],[13,"SetDiscriminator","","\"The DW_LNE_set_discriminator opcode takes a single…",97,null],[13,"UnknownExtended","","An unknown extended opcode and the slice of its unparsed…",97,null],[4,"ColumnType","","The type of column that a row is referring to.",null,null],[13,"LeftEdge","","The `LeftEdge` means that the statement begins at the…",98,null],[13,"Column","","A column number, whose range begins at 1.",98,null],[4,"RawLocListEntry","","A raw entry in .debug_loclists.",null,null],[13,"AddressOrOffsetPair","","A location from DWARF version <= 4.",99,null],[12,"begin","gimli::read::RawLocListEntry","Start of range. May be an address or an offset.",100,null],[12,"end","","End of range. May be an address or an offset.",100,null],[12,"data","","expression",100,null],[13,"BaseAddress","gimli::read","DW_LLE_base_address",99,null],[12,"addr","gimli::read::RawLocListEntry","base address",101,null],[13,"BaseAddressx","gimli::read","DW_LLE_base_addressx",99,null],[12,"addr","gimli::read::RawLocListEntry","base address",102,null],[13,"StartxEndx","gimli::read","DW_LLE_startx_endx",99,null],[12,"begin","gimli::read::RawLocListEntry","start of range",103,null],[12,"end","","end of range",103,null],[12,"data","","expression",103,null],[13,"StartxLength","gimli::read","DW_LLE_startx_length",99,null],[12,"begin","gimli::read::RawLocListEntry","start of range",104,null],[12,"length","","length of range",104,null],[12,"data","","expression",104,null],[13,"OffsetPair","gimli::read","DW_LLE_offset_pair",99,null],[12,"begin","gimli::read::RawLocListEntry","start of range",105,null],[12,"end","","end of range",105,null],[12,"data","","expression",105,null],[13,"DefaultLocation","gimli::read","DW_LLE_default_location",99,null],[12,"data","gimli::read::RawLocListEntry","expression",106,null],[13,"StartEnd","gimli::read","DW_LLE_start_end",99,null],[12,"begin","gimli::read::RawLocListEntry","start of range",107,null],[12,"end","","end of range",107,null],[12,"data","","expression",107,null],[13,"StartLength","gimli::read","DW_LLE_start_length",99,null],[12,"begin","gimli::read::RawLocListEntry","start of range",108,null],[12,"length","","length of range",108,null],[12,"data","","expression",108,null],[4,"DieReference","gimli::read","A reference to a DIE, either relative to the current CU or…",null,null],[13,"UnitRef","","A CU-relative reference.",109,null],[13,"DebugInfoRef","","A section-relative reference.",109,null],[4,"Operation","","A single decoded DWARF expression operation.",null,null],[13,"Deref","","Dereference the topmost value of the stack.",110,null],[12,"base_type","gimli::read::Operation","The DIE of the base type or 0 to indicate the generic type",111,null],[12,"size","","The size of the data to dereference.",111,null],[12,"space","","True if the dereference operation takes an address space…",111,null],[13,"Drop","gimli::read","Drop an item from the stack.",110,null],[13,"Pick","","Pick an item from the stack and push it on top of the…",110,null],[12,"index","gimli::read::Operation","The index, from the top of the stack, of the item to copy.",112,null],[13,"Swap","gimli::read","Swap the top two stack items.",110,null],[13,"Rot","","Rotate the top three stack items.",110,null],[13,"Abs","","Take the absolute value of the top of the stack.",110,null],[13,"And","","Bitwise `and` of the top two values on the stack.",110,null],[13,"Div","","Divide the top two values on the stack.",110,null],[13,"Minus","","Subtract the top two values on the stack.",110,null],[13,"Mod","","Modulus of the top two values on the stack.",110,null],[13,"Mul","","Multiply the top two values on the stack.",110,null],[13,"Neg","","Negate the top of the stack.",110,null],[13,"Not","","Bitwise `not` of the top of the stack.",110,null],[13,"Or","","Bitwise `or` of the top two values on the stack.",110,null],[13,"Plus","","Add the top two values on the stack.",110,null],[13,"PlusConstant","","Add a constant to the topmost value on the stack.",110,null],[12,"value","gimli::read::Operation","The value to add.",113,null],[13,"Shl","gimli::read","Logical left shift of the 2nd value on the stack by the…",110,null],[13,"Shr","","Right shift of the 2nd value on the stack by the number of…",110,null],[13,"Shra","","Arithmetic left shift of the 2nd value on the stack by the…",110,null],[13,"Xor","","Bitwise `xor` of the top two values on the stack.",110,null],[13,"Bra","","Branch to the target location if the top of stack is…",110,null],[12,"target","gimli::read::Operation","The relative offset to the target bytecode.",114,null],[13,"Eq","gimli::read","Compare the top two stack values for equality.",110,null],[13,"Ge","","Compare the top two stack values using `>=`.",110,null],[13,"Gt","","Compare the top two stack values using `>`.",110,null],[13,"Le","","Compare the top two stack values using `<=`.",110,null],[13,"Lt","","Compare the top two stack values using `<`.",110,null],[13,"Ne","","Compare the top two stack values using `!=`.",110,null],[13,"Skip","","Unconditional branch to the target location.",110,null],[12,"target","gimli::read::Operation","The relative offset to the target bytecode.",115,null],[13,"UnsignedConstant","gimli::read","Push an unsigned constant value on the stack. This handles…",110,null],[12,"value","gimli::read::Operation","The value to push.",116,null],[13,"SignedConstant","gimli::read","Push a signed constant value on the stack. This handles…",110,null],[12,"value","gimli::read::Operation","The value to push.",117,null],[13,"Register","gimli::read","Indicate that this piece's location is in the given…",110,null],[12,"register","gimli::read::Operation","The register number.",118,null],[13,"RegisterOffset","gimli::read","Find the value of the given register, add the offset, and…",110,null],[12,"register","gimli::read::Operation","The register number.",119,null],[12,"offset","","The offset to add.",119,null],[12,"base_type","","The DIE of the base type or 0 to indicate the generic type",119,null],[13,"FrameOffset","gimli::read","Compute the frame base (using `DW_AT_frame_base`), add the…",110,null],[12,"offset","gimli::read::Operation","The offset to add.",120,null],[13,"Nop","gimli::read","No operation.",110,null],[13,"PushObjectAddress","","Push the object address on the stack.",110,null],[13,"Call","","Evaluate a DWARF expression as a subroutine. The…",110,null],[12,"offset","gimli::read::Operation","The DIE to use.",121,null],[13,"TLS","gimli::read","Compute the address of a thread-local variable and push it…",110,null],[13,"CallFrameCFA","","Compute the call frame CFA and push it on the stack.",110,null],[13,"Piece","","Terminate a piece.",110,null],[12,"size_in_bits","gimli::read::Operation","The size of this piece in bits.",122,null],[12,"bit_offset","","The bit offset of this piece. If `None`, then this piece…",122,null],[13,"ImplicitValue","gimli::read","Represents `DW_OP_implicit_value`. The object has no…",110,null],[12,"data","gimli::read::Operation","The implicit value to use.",123,null],[13,"StackValue","gimli::read","Represents `DW_OP_stack_value`. The object has no…",110,null],[13,"ImplicitPointer","","Represents `DW_OP_implicit_pointer`. The object is a…",110,null],[12,"value","gimli::read::Operation","The `.debug_info` offset of the value that this is an…",124,null],[12,"byte_offset","","The byte offset into the value that the implicit pointer…",124,null],[13,"EntryValue","gimli::read","Represents `DW_OP_entry_value`. Evaluate an expression at…",110,null],[12,"expression","gimli::read::Operation","The expression to be evaluated.",125,null],[13,"ParameterRef","gimli::read","Represents `DW_OP_GNU_parameter_ref`. This represents a…",110,null],[12,"offset","gimli::read::Operation","The DIE to use.",126,null],[13,"Address","gimli::read","Represents `DW_OP_addr`. Relocate the address if needed,…",110,null],[12,"address","gimli::read::Operation","The offset to add.",127,null],[13,"AddressIndex","gimli::read","Represents `DW_OP_addrx`. Read the address at the given…",110,null],[12,"index","gimli::read::Operation","The index of the address in `.debug_addr`.",128,null],[13,"ConstantIndex","gimli::read","Represents `DW_OP_constx`. Read the address at the given…",110,null],[12,"index","gimli::read::Operation","The index of the address in `.debug_addr`.",129,null],[13,"TypedLiteral","gimli::read","Represents `DW_OP_const_type`. Interpret the value bytes…",110,null],[12,"base_type","gimli::read::Operation","The DIE of the base type.",130,null],[12,"value","","The value bytes.",130,null],[13,"Convert","gimli::read","Represents `DW_OP_convert`. Pop the top stack entry,…",110,null],[12,"base_type","gimli::read::Operation","The DIE of the base type.",131,null],[13,"Reinterpret","gimli::read","Represents `DW_OP_reinterpret`. Pop the top stack entry,…",110,null],[12,"base_type","gimli::read::Operation","The DIE of the base type.",132,null],[4,"Location","gimli::read","A single location of a piece of the result of a DWARF…",null,null],[13,"Empty","","The piece is empty. Ordinarily this means the piece has…",133,null],[13,"Register","","The piece is found in a register.",133,null],[12,"register","gimli::read::Location","The register number.",134,null],[13,"Address","gimli::read","The piece is found in memory.",133,null],[12,"address","gimli::read::Location","The address.",135,null],[13,"Value","gimli::read","The piece has no location but its value is known.",133,null],[12,"value","gimli::read::Location","The value.",136,null],[13,"Bytes","gimli::read","The piece is represented by some constant bytes.",133,null],[12,"value","gimli::read::Location","The value.",137,null],[13,"ImplicitPointer","gimli::read","The piece is a pointer to a value which has no actual…",133,null],[12,"value","gimli::read::Location","The `.debug_info` offset of the value that this is an…",138,null],[12,"byte_offset","","The byte offset into the value that the implicit pointer…",138,null],[4,"EvaluationResult","gimli::read","The state of an `Evaluation` after evaluating a DWARF…",null,null],[13,"Complete","","The `Evaluation` is complete, and `Evaluation::result()`…",139,null],[13,"RequiresMemory","","The `Evaluation` needs a value from memory to proceed…",139,null],[12,"address","gimli::read::EvaluationResult","The address of the value required.",140,null],[12,"size","","The size of the value required. This is guaranteed to be…",140,null],[12,"space","","If not `None`, a target-specific address space value.",140,null],[12,"base_type","","The DIE of the base type or 0 to indicate the generic type",140,null],[13,"RequiresRegister","gimli::read","The `Evaluation` needs a value from a register to proceed…",139,null],[12,"register","gimli::read::EvaluationResult","The register number.",141,null],[12,"base_type","","The DIE of the base type or 0 to indicate the generic type",141,null],[13,"RequiresFrameBase","gimli::read","The `Evaluation` needs the frame base address to proceed…",139,null],[13,"RequiresTls","","The `Evaluation` needs a value from TLS to proceed…",139,null],[13,"RequiresCallFrameCfa","","The `Evaluation` needs the CFA to proceed further. Once…",139,null],[13,"RequiresAtLocation","","The `Evaluation` needs the DWARF expression at the given…",139,null],[13,"RequiresEntryValue","","The `Evaluation` needs the value produced by evaluating a…",139,null],[13,"RequiresParameterRef","","The `Evaluation` needs the value of the parameter at the…",139,null],[13,"RequiresRelocatedAddress","","The `Evaluation` needs an address to be relocated to…",139,null],[13,"RequiresIndexedAddress","","The `Evaluation` needs an address from the `.debug_addr`…",139,null],[12,"index","gimli::read::EvaluationResult","The index of the address in the `.debug_addr` section,…",142,null],[12,"relocate","","Whether the address also needs to be relocated.",142,null],[13,"RequiresBaseType","gimli::read","The `Evaluation` needs the `ValueType` for the base type…",139,null],[4,"RawRngListEntry","","A raw entry in .debug_rnglists",null,null],[13,"AddressOrOffsetPair","","A range from DWARF version <= 4.",143,null],[12,"begin","gimli::read::RawRngListEntry","Start of range. May be an address or an offset.",144,null],[12,"end","","End of range. May be an address or an offset.",144,null],[13,"BaseAddress","gimli::read","DW_RLE_base_address",143,null],[12,"addr","gimli::read::RawRngListEntry","base address",145,null],[13,"BaseAddressx","gimli::read","DW_RLE_base_addressx",143,null],[12,"addr","gimli::read::RawRngListEntry","base address",146,null],[13,"StartxEndx","gimli::read","DW_RLE_startx_endx",143,null],[12,"begin","gimli::read::RawRngListEntry","start of range",147,null],[12,"end","","end of range",147,null],[13,"StartxLength","gimli::read","DW_RLE_startx_length",143,null],[12,"begin","gimli::read::RawRngListEntry","start of range",148,null],[12,"length","","length of range",148,null],[13,"OffsetPair","gimli::read","DW_RLE_offset_pair",143,null],[12,"begin","gimli::read::RawRngListEntry","start of range",149,null],[12,"end","","end of range",149,null],[13,"StartEnd","gimli::read","DW_RLE_start_end",143,null],[12,"begin","gimli::read::RawRngListEntry","start of range",150,null],[12,"end","","end of range",150,null],[13,"StartLength","gimli::read","DW_RLE_start_length",143,null],[12,"begin","gimli::read::RawRngListEntry","start of range",151,null],[12,"length","","length of range",151,null],[4,"AttributeValue","gimli::read","The value of an attribute in a `DebuggingInformationEntry`.",null,null],[13,"Addr","","\"Refers to some location in the address space of the…",152,null],[13,"Block","","A slice of an arbitrary number of bytes.",152,null],[13,"Data1","","A one byte constant data value. How to interpret the byte…",152,null],[13,"Data2","","A two byte constant data value. How to interpret the bytes…",152,null],[13,"Data4","","A four byte constant data value. How to interpret the…",152,null],[13,"Data8","","An eight byte constant data value. How to interpret the…",152,null],[13,"Sdata","","A signed integer constant.",152,null],[13,"Udata","","An unsigned integer constant.",152,null],[13,"Exprloc","","\"The information bytes contain a DWARF expression (see…",152,null],[13,"Flag","","A boolean that indicates presence or absence of the…",152,null],[13,"SecOffset","","An offset into another section. Which section this is an…",152,null],[13,"DebugAddrBase","","An offset to a set of addresses in the `.debug_addr`…",152,null],[13,"DebugAddrIndex","","An index into a set of addresses in the `.debug_addr`…",152,null],[13,"UnitRef","","An offset into the current compilation unit.",152,null],[13,"DebugInfoRef","","An offset into the current `.debug_info` section, but…",152,null],[13,"DebugInfoRefSup","","An offset into the `.debug_info` section of the…",152,null],[13,"DebugLineRef","","An offset into the `.debug_line` section.",152,null],[13,"LocationListsRef","","An offset into either the `.debug_loc` section or the…",152,null],[13,"DebugLocListsBase","","An offset to a set of offsets in the `.debug_loclists`…",152,null],[13,"DebugLocListsIndex","","An index into a set of offsets in the `.debug_loclists`…",152,null],[13,"DebugMacinfoRef","","An offset into the `.debug_macinfo` section.",152,null],[13,"DebugMacroRef","","An offset into the `.debug_macro` section.",152,null],[13,"RangeListsRef","","An offset into the `.debug_ranges` section.",152,null],[13,"DebugRngListsBase","","An offset to a set of offsets in the `.debug_rnglists`…",152,null],[13,"DebugRngListsIndex","","An index into a set of offsets in the `.debug_rnglists`…",152,null],[13,"DebugTypesRef","","A type signature.",152,null],[13,"DebugStrRef","","An offset into the `.debug_str` section.",152,null],[13,"DebugStrRefSup","","An offset into the `.debug_str` section of the…",152,null],[13,"DebugStrOffsetsBase","","An offset to a set of entries in the `.debug_str_offsets`…",152,null],[13,"DebugStrOffsetsIndex","","An index into a set of entries in the `.debug_str_offsets`…",152,null],[13,"DebugLineStrRef","","An offset into the `.debug_line_str` section.",152,null],[13,"String","","A slice of bytes representing a string. Does not include a…",152,null],[13,"Encoding","","The value of a `DW_AT_encoding` attribute.",152,null],[13,"DecimalSign","","The value of a `DW_AT_decimal_sign` attribute.",152,null],[13,"Endianity","","The value of a `DW_AT_endianity` attribute.",152,null],[13,"Accessibility","","The value of a `DW_AT_accessibility` attribute.",152,null],[13,"Visibility","","The value of a `DW_AT_visibility` attribute.",152,null],[13,"Virtuality","","The value of a `DW_AT_virtuality` attribute.",152,null],[13,"Language","","The value of a `DW_AT_language` attribute.",152,null],[13,"AddressClass","","The value of a `DW_AT_address_class` attribute.",152,null],[13,"IdentifierCase","","The value of a `DW_AT_identifier_case` attribute.",152,null],[13,"CallingConvention","","The value of a `DW_AT_calling_convention` attribute.",152,null],[13,"Inline","","The value of a `DW_AT_inline` attribute.",152,null],[13,"Ordering","","The value of a `DW_AT_ordering` attribute.",152,null],[13,"FileIndex","","An index into the filename entries from the line number…",152,null],[4,"ValueType","","The type of an entry on the DWARF stack.",null,null],[13,"Generic","","The generic type, which is address-sized and of…",153,null],[13,"I8","","Signed 8-bit integer type.",153,null],[13,"U8","","Unsigned 8-bit integer type.",153,null],[13,"I16","","Signed 16-bit integer type.",153,null],[13,"U16","","Unsigned 16-bit integer type.",153,null],[13,"I32","","Signed 32-bit integer type.",153,null],[13,"U32","","Unsigned 32-bit integer type.",153,null],[13,"I64","","Signed 64-bit integer type.",153,null],[13,"U64","","Unsigned 64-bit integer type.",153,null],[13,"F32","","32-bit floating point type.",153,null],[13,"F64","","64-bit floating point type.",153,null],[4,"Value","","The value of an entry on the DWARF stack.",null,null],[13,"Generic","","A generic value, which is address-sized and of unspecified…",154,null],[13,"I8","","A signed 8-bit integer value.",154,null],[13,"U8","","An unsigned 8-bit integer value.",154,null],[13,"I16","","A signed 16-bit integer value.",154,null],[13,"U16","","An unsigned 16-bit integer value.",154,null],[13,"I32","","A signed 32-bit integer value.",154,null],[13,"U32","","An unsigned 32-bit integer value.",154,null],[13,"I64","","A signed 64-bit integer value.",154,null],[13,"U64","","An unsigned 64-bit integer value.",154,null],[13,"F32","","A 32-bit floating point value.",154,null],[13,"F64","","A 64-bit floating point value.",154,null],[4,"Error","","An error that occurred when parsing.",null,null],[13,"Io","","An I/O error occurred while reading.",155,null],[13,"PcRelativePointerButSectionBaseIsUndefined","","Found a PC relative pointer, but the section base is…",155,null],[13,"TextRelativePointerButTextBaseIsUndefined","","Found a `.text` relative pointer, but the `.text` base is…",155,null],[13,"DataRelativePointerButDataBaseIsUndefined","","Found a data relative pointer, but the data base is…",155,null],[13,"FuncRelativePointerInBadContext","","Found a function relative pointer in a context that does…",155,null],[13,"CannotParseOmitPointerEncoding","","Cannot parse a pointer with a `DW_EH_PE_omit` encoding.",155,null],[13,"BadUnsignedLeb128","","An error parsing an unsigned LEB128 value.",155,null],[13,"BadSignedLeb128","","An error parsing a signed LEB128 value.",155,null],[13,"AbbreviationTagZero","","An abbreviation declared that its tag is zero, but zero is…",155,null],[13,"AttributeFormZero","","An attribute specification declared that its form is zero,…",155,null],[13,"BadHasChildren","","The abbreviation's has-children byte was not one of…",155,null],[13,"BadLength","","The specified length is impossible.",155,null],[13,"UnknownForm","","Found an unknown `DW_FORM_*` type.",155,null],[13,"ExpectedZero","","Expected a zero, found something else.",155,null],[13,"DuplicateAbbreviationCode","","Found an abbreviation code that has already been used.",155,null],[13,"DuplicateArange","","Found a duplicate arange.",155,null],[13,"UnknownReservedLength","","Found an unknown reserved length value.",155,null],[13,"UnknownVersion","","Found an unknown DWARF version.",155,null],[13,"UnknownAbbreviation","","Found a record with an unknown abbreviation code.",155,null],[13,"UnexpectedEof","","Hit the end of input before it was expected.",155,null],[13,"UnexpectedNull","","Read a null entry before it was expected.",155,null],[13,"UnknownStandardOpcode","","Found an unknown standard opcode.",155,null],[13,"UnknownExtendedOpcode","","Found an unknown extended opcode.",155,null],[13,"UnsupportedAddressSize","","The specified address size is not supported.",155,null],[13,"UnsupportedOffsetSize","","The specified offset size is not supported.",155,null],[13,"UnsupportedFieldSize","","The specified field size is not supported.",155,null],[13,"MinimumInstructionLengthZero","","The minimum instruction length must not be zero.",155,null],[13,"MaximumOperationsPerInstructionZero","","The maximum operations per instruction must not be zero.",155,null],[13,"LineRangeZero","","The line range must not be zero.",155,null],[13,"OpcodeBaseZero","","The opcode base must not be zero.",155,null],[13,"BadUtf8","","Found an invalid UTF-8 string.",155,null],[13,"NotCieId","","Expected to find the CIE ID, but found something else.",155,null],[13,"NotCiePointer","","Expected to find a pointer to a CIE, but found the CIE ID…",155,null],[13,"NotFdePointer","","Expected to find a pointer to an FDE, but found a CIE…",155,null],[13,"BadBranchTarget","","Invalid branch target for a DW_OP_bra or DW_OP_skip.",155,null],[13,"InvalidPushObjectAddress","","DW_OP_push_object_address used but no address passed in.",155,null],[13,"NotEnoughStackItems","","Not enough items on the stack when evaluating an expression.",155,null],[13,"TooManyIterations","","Too many iterations to compute the expression.",155,null],[13,"InvalidExpression","","An unrecognized operation was found while parsing a DWARF…",155,null],[13,"InvalidPiece","","The expression had a piece followed by an expression…",155,null],[13,"InvalidExpressionTerminator","","An expression-terminating operation was followed by…",155,null],[13,"DivisionByZero","","Division or modulus by zero when evaluating an expression.",155,null],[13,"TypeMismatch","","An expression operation used mismatching types.",155,null],[13,"IntegralTypeRequired","","An expression operation required an integral type but saw…",155,null],[13,"UnsupportedTypeOperation","","An expression operation used types that are not supported.",155,null],[13,"InvalidShiftExpression","","The shift value in an expression must be a non-negative…",155,null],[13,"UnknownCallFrameInstruction","","An unknown DW_CFA_* instruction.",155,null],[13,"InvalidAddressRange","","The end of an address range was before the beginning.",155,null],[13,"InvalidLocationAddressRange","","The end offset of a loc list entry was before the beginning.",155,null],[13,"CfiInstructionInInvalidContext","","Encountered a call frame instruction in a context in which…",155,null],[13,"PopWithEmptyStack","","When evaluating call frame instructions, found a…",155,null],[13,"NoUnwindInfoForAddress","","Do not have unwind info for the given address.",155,null],[13,"UnsupportedOffset","","An offset value was larger than the maximum supported value.",155,null],[13,"UnknownPointerEncoding","","The given pointer encoding is either unknown or invalid.",155,null],[13,"NoEntryAtGivenOffset","","Did not find an entry at the given offset.",155,null],[13,"OffsetOutOfBounds","","The given offset is out of bounds.",155,null],[13,"UnknownAugmentation","","Found an unknown CFI augmentation.",155,null],[13,"UnsupportedPointerEncoding","","We do not support the given pointer encoding yet.",155,null],[13,"UnsupportedRegister","","Registers larger than `u16` are not supported.",155,null],[13,"TooManyRegisterRules","","The CFI program defined more register rules than we have…",155,null],[13,"CfiStackFull","","Attempted to push onto the CFI stack, but it was already…",155,null],[13,"VariableLengthSearchTable","","The `.eh_frame_hdr` binary search table claims to be…",155,null],[13,"UnsupportedUnitType","","The `DW_UT_*` value for this unit is not supported yet.",155,null],[13,"UnsupportedAddressIndex","","Ranges using AddressIndex are not supported yet.",155,null],[13,"UnsupportedSegmentSize","","Nonzero segment selector sizes aren't supported yet.",155,null],[13,"MissingUnitDie","","A compilation unit or type unit is missing its top level…",155,null],[13,"UnsupportedAttributeForm","","A DIE attribute used an unsupported form.",155,null],[13,"MissingFileEntryFormatPath","","Missing DW_LNCT_path in file entry format.",155,null],[13,"ExpectedStringAttributeValue","","Expected an attribute value to be a string form.",155,null],[11,"get_address","","Returns the address at the given `base` and `index`.",156,[[["debugaddrbase"],["debugaddrindex"],["self"],["u8"]],[["result",["u64"]],["u64"]]]],[11,"borrow","","Create a `DebugAddr` section that references the data in…",156,[[["self"],["f"]],["debugaddr"]]],[11,"set_address_size","","Set the size of a target address in bytes.",157,[[["self"],["u8"]]]],[11,"set_segment_size","","Set the size of a segment selector in bytes.",157,[[["self"],["u8"]]]],[11,"new","","Construct a new `DebugFrame` instance from the data in the…",157,[[["endian"]],["self"]]],[11,"new","","Constructs a new `EhFrameHdr` instance from the data in…",158,[[["endian"]],["self"]]],[11,"parse","","Parses this `EhFrameHdr` to a `ParsedEhFrameHdr`.",158,[[["u8"],["self"],["baseaddresses"]],[["parsedehframehdr"],["result",["parsedehframehdr"]]]]],[11,"eh_frame_ptr","","Returns the address of the binary's `.eh_frame` section.",159,[[["self"]],["pointer"]]],[11,"table","","Retrieves the CFI binary search table, if there is one.",159,[[["self"]],[["option",["ehhdrtable"]],["ehhdrtable"]]]],[11,"lookup","","Probably returns a pointer to the FDE for the given address.",160,[[["baseaddresses"],["self"],["u64"]],[["pointer"],["result",["pointer"]]]]],[11,"pointer_to_offset","","Convert a `Pointer` to a section offset.",160,[[["pointer"],["self"]],[["ehframeoffset"],["result",["ehframeoffset"]]]]],[11,"fde_for_address","","Returns a parsed FDE for the given address, or…",160,[[["u64"],["ehframe"],["f"],["self"],["baseaddresses"]],[["framedescriptionentry"],["result",["framedescriptionentry"]]]]],[11,"unwind_info_for_address","","Returns the frame unwind information for the given…",160,[[["uninitializedunwindcontext"],["ehframe"],["u64"],["f"],["self"],["baseaddresses"]],[["unwindtablerow"],["result",["unwindtablerow"]]]]],[11,"set_address_size","","Set the size of a target address in bytes.",161,[[["self"],["u8"]]]],[11,"new","","Construct a new `EhFrame` instance from the data in the…",161,[[["endian"]],["self"]]],[11,"set_eh_frame_hdr","","Set the `.eh_frame_hdr` section base address.",60,[[["u64"]],["self"]]],[11,"set_eh_frame","","Set the `.eh_frame` section base address.",60,[[["u64"]],["self"]]],[11,"set_text","","Set the `.text` section base address.",60,[[["u64"]],["self"]]],[11,"set_got","","Set the `.got` section base address.",60,[[["u64"]],["self"]]],[11,"next","","Advance the iterator to the next entry.",162,[[["self"]],[["option",["cieorfde"]],["result",["option"]]]]],[11,"offset","","Get the offset of this entry from the start of its…",163,[[["self"]]]],[11,"encoding","","Return the encoding parameters for this CIE.",163,[[["self"]],["encoding"]]],[11,"address_size","","The size of addresses (in bytes) in this CIE.",163,[[["self"]],["u8"]]],[11,"instructions","","Iterate over this CIE's initial instructions.",163,[[["baseaddresses"],["self"],["section"]],["callframeinstructioniter"]]],[11,"entry_len","","A constant that gives the number of bytes of the CIE…",163,[[["self"]]]],[11,"version","","A version number (see Section 7.23). This number is…",163,[[["self"]],["u8"]]],[11,"augmentation","","Get the augmentation data, if any exists.",163,[[["self"]],[["augmentation"],["option",["augmentation"]]]]],[11,"has_lsda","","True if this CIE's FDEs have a LSDA.",163,[[["self"]],["bool"]]],[11,"lsda_encoding","","Return the encoding of the LSDA address for this CIE's FDEs.",163,[[["self"]],[["option",["dwehpe"]],["dwehpe"]]]],[11,"personality_with_encoding","","Return the encoding and address of the personality routine…",163,[[["self"]],["option"]]],[11,"personality","","Return the address of the personality routine handler for…",163,[[["self"]],[["pointer"],["option",["pointer"]]]]],[11,"fde_address_encoding","","Return the encoding of the addresses for this CIE's FDEs.",163,[[["self"]],[["option",["dwehpe"]],["dwehpe"]]]],[11,"is_signal_trampoline","","True if this CIE's FDEs are trampolines for signal handlers.",163,[[["self"]],["bool"]]],[11,"code_alignment_factor","","A constant that is factored out of all advance location…",163,[[["self"]],["u64"]]],[11,"data_alignment_factor","","A constant that is factored out of certain offset…",163,[[["self"]],["i64"]]],[11,"return_address_register","","An unsigned ... constant that indicates which column in…",163,[[["self"]],["register"]]],[11,"parse","","Fully parse this FDE.",164,[[["self"],["f"]],[["framedescriptionentry"],["result",["framedescriptionentry"]]]]],[11,"rows","","Return the table of unwind information for this FDE.",165,[[["uninitializedunwindcontext"],["baseaddresses"],["self"],["section"]],[["result",["unwindtable"]],["unwindtable"]]]],[11,"unwind_info_for_address","","Find the frame unwind information for the given address.",165,[[["section"],["uninitializedunwindcontext"],["u64"],["self"],["baseaddresses"]],[["unwindtablerow"],["result",["unwindtablerow"]]]]],[11,"offset","","Get the offset of this entry from the start of its…",165,[[["self"]]]],[11,"cie","","Get a reference to this FDE's CIE.",165,[[["self"]],["commoninformationentry"]]],[11,"entry_len","","A constant that gives the number of bytes of the header…",165,[[["self"]]]],[11,"instructions","","Iterate over this FDE's instructions.",165,[[["baseaddresses"],["self"],["section"]],["callframeinstructioniter"]]],[11,"initial_address","","The first address for which this entry has unwind…",165,[[["self"]],["u64"]]],[11,"len","","The number of bytes of instructions that this entry has…",165,[[["self"]],["u64"]]],[11,"contains","","Return `true` if the given address is within this FDE,…",165,[[["self"],["u64"]],["bool"]]],[11,"lsda","","The address of this FDE's language-specific data area…",165,[[["self"]],[["pointer"],["option",["pointer"]]]]],[11,"is_signal_trampoline","","Return true if this FDE's function is a trampoline for a…",165,[[["self"]],["bool"]]],[11,"personality","","Return the address of the FDE's function's personality…",165,[[["self"]],[["pointer"],["option",["pointer"]]]]],[11,"new","","Construct a new call frame unwinding context.",166,[[],["uninitializedunwindcontext"]]],[11,"initialize","","Run the CIE's initial instructions, creating and return an…",166,[[["section"],["commoninformationentry"],["self"],["baseaddresses"]],[["result",["unwindcontext"]],["unwindcontext"]]]],[11,"new","","Construct a new `UnwindTable` for the given…",167,[[["framedescriptionentry"],["uninitializedunwindcontext"],["baseaddresses"],["section"]],[["result",["unwindtable"]],["unwindtable"]]]],[11,"next_row","","Evaluate call frame instructions until the next row of the…",167,[[["self"]],[["result",["option"]],["option",["unwindtablerow"]]]]],[11,"start_address","","Get the starting PC address that this row applies to.",168,[[["self"]],["u64"]]],[11,"end_address","","Get the end PC address where this row's register rules…",168,[[["self"]],["u64"]]],[11,"contains","","Return `true` if the given `address` is within this row's…",168,[[["self"],["u64"]],["bool"]]],[11,"saved_args_size","","Returns the amount of args currently on the stack.",168,[[["self"]],["u64"]]],[11,"cfa","","Get the canonical frame address (CFA) recovery rule for…",168,[[["self"]],["cfarule"]]],[11,"register","","Get the register recovery rule for the given register…",168,[[["register"],["self"]],["registerrule"]]],[11,"registers","","Iterate over all defined register `(number, rule)` pairs.",168,[[["self"]],["registerruleiter"]]],[11,"next","","Parse the next call frame instruction.",169,[[["self"]],[["result",["option"]],["option",["callframeinstruction"]]]]],[11,"load","","Try to load the DWARF sections using the given loader…",62,[[["f1"],["f2"]],["result"]]],[11,"borrow","","Create a `Dwarf` structure that references the data in…",62,[[["self"],["f"]],["dwarf"]]],[11,"units","","Iterate the compilation- and partial-unit headers in the…",62,[[["self"]],["compilationunitheadersiter"]]],[11,"unit","","Construct a new `Unit` from the given compilation unit…",62,[[["self"],["compilationunitheader"]],[["unit"],["result",["unit"]]]]],[11,"type_units","","Iterate the type-unit headers in the `.debug_types` section.",62,[[["self"]],["typeunitheadersiter"]]],[11,"type_unit","","Construct a new `Unit` from the given type unit header.",62,[[["typeunitheader"],["self"]],[["unit"],["result",["unit"]]]]],[11,"abbreviations","","Parse the abbreviations for a compilation unit.",62,[[["self"],["compilationunitheader"]],[["result",["abbreviations"]],["abbreviations"]]]],[11,"type_abbreviations","","Parse the abbreviations for a type unit.",62,[[["self"],["typeunitheader"]],[["result",["abbreviations"]],["abbreviations"]]]],[11,"string_offset","","Return the string offset at the given index.",62,[[["unit"],["self"],["debugstroffsetsindex"]],[["result",["debugstroffset"]],["debugstroffset"]]]],[11,"string","","Return the string at the given offset in `.debug_str`.",62,[[["debugstroffset"],["self"]],["result"]]],[11,"line_string","","Return the string at the given offset in `.debug_line_str`.",62,[[["debuglinestroffset"],["self"]],["result"]]],[11,"attr_string","","Return an attribute value as a string slice.",62,[[["attributevalue"],["unit"],["self"]],["result"]]],[11,"address","","Return the address at the given index.",62,[[["unit"],["self"],["debugaddrindex"]],[["result",["u64"]],["u64"]]]],[11,"ranges_offset","","Return the range list offset at the given index.",62,[[["unit"],["debugrnglistsindex"],["self"]],[["rangelistsoffset"],["result",["rangelistsoffset"]]]]],[11,"ranges","","Iterate over the `RangeListEntry`s starting at the given…",62,[[["unit"],["rangelistsoffset"],["self"]],[["result",["rnglistiter"]],["rnglistiter"]]]],[11,"attr_ranges_offset","","Try to return an attribute value as a range list offset.",62,[[["attributevalue"],["unit"],["self"]],[["result",["option"]],["option",["rangelistsoffset"]]]]],[11,"attr_ranges","","Try to return an attribute value as a range list entry…",62,[[["attributevalue"],["unit"],["self"]],[["result",["option"]],["option",["rnglistiter"]]]]],[11,"die_ranges","","Return an iterator for the address ranges of a…",62,[[["unit"],["self"],["debugginginformationentry"]],[["rangeiter"],["result",["rangeiter"]]]]],[11,"unit_ranges","","Return an iterator for the address ranges of a `Unit`.",62,[[["unit"],["self"]],[["rangeiter"],["result",["rangeiter"]]]]],[11,"locations_offset","","Return the location list offset at the given index.",62,[[["unit"],["self"],["debugloclistsindex"]],[["locationlistsoffset"],["result",["locationlistsoffset"]]]]],[11,"locations","","Iterate over the `LocationListEntry`s starting at the…",62,[[["unit"],["self"],["locationlistsoffset"]],[["loclistiter"],["result",["loclistiter"]]]]],[11,"attr_locations_offset","","Try to return an attribute value as a location list offset.",62,[[["attributevalue"],["unit"],["self"]],[["result",["option"]],["option",["locationlistsoffset"]]]]],[11,"attr_locations","","Try to return an attribute value as a location list entry…",62,[[["attributevalue"],["unit"],["self"]],[["option",["loclistiter"]],["result",["option"]]]]],[11,"lookup_offset_id","","Call `Reader::lookup_offset_id` for each section, and…",62,[[["readeroffsetid"],["self"]],["option"]]],[11,"format_error","","Returns a string representation of the given error.",62,[[["error"],["self"]],["string"]]],[11,"new","","Construct a new `Unit` from the given compilation unit…",63,[[["compilationunitheader"],["dwarf"]],["result"]]],[11,"new_type_unit","","Construct a new `Unit` from the given type unit header.",63,[[["typeunitheader"],["dwarf"]],["result"]]],[11,"encoding","","Return the encoding parameters for this unit.",63,[[["self"]],["encoding"]]],[11,"entry","","Read the `DebuggingInformationEntry` at the given offset.",63,[[["self"],["unitoffset"]],[["debugginginformationentry"],["result",["debugginginformationentry"]]]]],[11,"entries","","Navigate this unit's `DebuggingInformationEntry`s.",63,[[["self"]],["entriescursor"]]],[11,"entries_at_offset","","Navigate this unit's `DebuggingInformationEntry`s starting…",63,[[["self"],["unitoffset"]],[["result",["entriescursor"]],["entriescursor"]]]],[11,"entries_tree","","Navigate this unit's `DebuggingInformationEntry`s as a…",63,[[["option",["unitoffset"]],["self"],["unitoffset"]],[["result",["entriestree"]],["entriestree"]]]],[11,"entries_raw","","Read the raw data that defines the Debugging Information…",63,[[["option",["unitoffset"]],["self"],["unitoffset"]],[["entriesraw"],["result",["entriesraw"]]]]],[11,"to_unit_offset","gimli","Convert an offset to be relative to the start of the given…",25,[[["unit"],["self"]],[["option",["unitoffset"]],["unitoffset"]]]],[11,"to_unit_section_offset","gimli::read","Convert an offset to be relative to the start of the…",71,[[["unit"],["self"]],["unitsectionoffset"]]],[11,"next","","Advance the iterator to the next range.",170,[[["self"]],[["result",["option"]],["option",["range"]]]]],[11,"new","","Construct a new `EndianSlice` with the given slice and…",171,[[["endian"]],["endianslice"]]],[11,"slice","","Return a reference to the raw slice.",171,[[["self"]]]],[11,"split_at","","Split the slice in two at the given index, resulting in…",171,[[["self"],["usize"]]]],[11,"find","","Find the first occurence of a byte in the slice, and…",171,[[["self"],["u8"]],[["option",["usize"]],["usize"]]]],[11,"offset_from","","Return the offset of the start of the slice relative to…",171,[[["endianslice"],["self"]],["usize"]]],[11,"to_string","","Converts the slice to a string using `str::from_utf8`.",171,[[["self"]],[["str"],["result",["str"]]]]],[11,"to_string_lossy","","Converts the slice to a string, including invalid…",171,[[["self"]],[["str"],["cow",["str"]]]]],[11,"range","","Take the given `start..end` range of the underlying slice…",171,[[["range",["usize"]],["self"],["usize"]],["endianslice"]]],[11,"range_from","","Take the given `start..` range of the underlying slice and…",171,[[["rangefrom",["usize"]],["self"],["usize"]],["endianslice"]]],[11,"range_to","","Take the given `..end` range of the underlying slice and…",171,[[["rangeto",["usize"]],["self"],["usize"]],["endianslice"]]],[11,"new","","Construct a new `DebugAbbrev` instance from the data in…",172,[[["endian"]],["self"]]],[11,"abbreviations","","Parse the abbreviations at the given `offset` within this…",172,[[["self"],["debugabbrevoffset"]],[["result",["abbreviations"]],["abbreviations"]]]],[11,"borrow","","Create a `DebugAbbrev` section that references the data in…",172,[[["self"],["f"]],["debugabbrev"]]],[11,"get","","Get the abbreviation associated with the given code.",173,[[["self"],["u64"]],[["abbreviation"],["option",["abbreviation"]]]]],[11,"code","","Get this abbreviation's code.",174,[[["self"]],["u64"]]],[11,"tag","","Get this abbreviation's tag.",174,[[["self"]],["dwtag"]]],[11,"has_children","","Return true if this abbreviation's type has children,…",174,[[["self"]],["bool"]]],[11,"attributes","","Get this abbreviation's attributes.",174,[[["self"]]]],[11,"new","","Construct a new `AttributeSpecification` from the given…",175,[[["i64"],["dwat"],["option",["i64"]],["dwform"]],["attributespecification"]]],[11,"name","","Get the attribute's name.",175,[[["self"]],["dwat"]]],[11,"form","","Get the attribute's form.",175,[[["self"]],["dwform"]]],[11,"implicit_const_value","","Get the attribute's implicit const value.",175,[[["self"]],["i64"]]],[11,"size","","Return the size of the attribute, in bytes.",175,[[["self"],["unitheader"]],[["option",["usize"]],["usize"]]]],[11,"segment","","Return the segment selector of this arange.",176,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"address","","Return the beginning address of this arange.",176,[[["self"]],["u64"]]],[11,"length","","Return the length of this arange.",176,[[["self"]],["u64"]]],[11,"debug_info_offset","","Return the offset into the .debug_info section for this…",176,[[["self"]],["debuginfooffset"]]],[11,"new","","Construct a new `DebugAranges` instance from the data in…",177,[[["endian"]],["self"]]],[11,"items","","Iterate the aranges in the `.debug_aranges` section.",177,[[["self"]],["arangeentryiter"]]],[11,"next","","Advance the iterator and return the next arange.",178,[[["self"]],[["result",["option"]],["option",["arangeentry"]]]]],[11,"new","","Construct a new `DebugLine` instance from the data in the…",179,[[["endian"]],["self"]]],[11,"program","","Parse the line number program whose header is at the given…",179,[[["u8"],["option"],["self"],["debuglineoffset"]],[["incompletelineprogram"],["result",["incompletelineprogram"]]]]],[11,"borrow","","Create a `DebugLine` section that references the data in…",179,[[["self"],["f"]],["debugline"]]],[11,"header","","Get a reference to the header for this state machine's…",180,[[["self"]],["lineprogramheader"]]],[11,"next_row","","Parse and execute the next instructions in the line number…",180,[[["self"]],[["option"],["result",["option"]]]]],[11,"next_instruction","","Advance the iterator and return the next instruction.",181,[[["self"],["lineprogramheader"]],[["option",["lineinstruction"]],["result",["option"]]]]],[11,"new","","Create a line number row in the initial state for the…",182,[[["lineprogramheader"]],["self"]]],[11,"address","","\"The program-counter value corresponding to a machine…",182,[[["self"]],["u64"]]],[11,"op_index","","An unsigned integer representing the index of an operation…",182,[[["self"]],["u64"]]],[11,"file_index","","\"An unsigned integer indicating the identity of the source…",182,[[["self"]],["u64"]]],[11,"file","","The source file corresponding to the current machine…",182,[[["lineprogramheader"],["self"]],[["fileentry"],["option",["fileentry"]]]]],[11,"line","","\"An unsigned integer indicating a source line number.…",182,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"column","","\"An unsigned integer indicating a column number within a…",182,[[["self"]],["columntype"]]],[11,"is_stmt","","\"A boolean indicating that the current instruction is a…",182,[[["self"]],["bool"]]],[11,"basic_block","","\"A boolean indicating that the current instruction is the…",182,[[["self"]],["bool"]]],[11,"end_sequence","","\"A boolean indicating that the current address is that of…",182,[[["self"]],["bool"]]],[11,"prologue_end","","\"A boolean indicating that the current address is one (of…",182,[[["self"]],["bool"]]],[11,"epilogue_begin","","\"A boolean indicating that the current address is one (of…",182,[[["self"]],["bool"]]],[11,"isa","","Tag for the current instruction set architecture.",182,[[["self"]],["u64"]]],[11,"discriminator","","\"An unsigned integer identifying the block to which the…",182,[[["self"]],["u64"]]],[11,"execute","","Execute the given instruction, and return true if a new…",182,[[["self"],["lineinstruction"],["program"]],["bool"]]],[11,"reset","","Perform any reset that was required after copying the…",182,[[["self"],["lineprogramheader"]]]],[11,"offset","","Return the offset of the line number program header in the…",183,[[["self"]],["debuglineoffset"]]],[11,"unit_length","","Return the length of the line number program and header,…",183,[[["self"]]]],[11,"encoding","","Return the encoding parameters for this header's line…",183,[[["self"]],["encoding"]]],[11,"version","","Get the version of this header's line program.",183,[[["self"]],["u16"]]],[11,"header_length","","Get the length of the encoded line number program header,…",183,[[["self"]]]],[11,"address_size","","Get the size in bytes of a target machine address.",183,[[["self"]],["u8"]]],[11,"format","","Whether this line program is encoded in 64- or 32-bit DWARF.",183,[[["self"]],["format"]]],[11,"line_encoding","","Get the line encoding parameters for this header's line…",183,[[["self"]],["lineencoding"]]],[11,"minimum_instruction_length","","Get the minimum instruction length any instruction in this…",183,[[["self"]],["u8"]]],[11,"maximum_operations_per_instruction","","Get the maximum number of operations each instruction in…",183,[[["self"]],["u8"]]],[11,"default_is_stmt","","Get the default value of the `is_stmt` register for this…",183,[[["self"]],["bool"]]],[11,"line_base","","Get the line base for this header's line program.",183,[[["self"]],["i8"]]],[11,"line_range","","Get the line range for this header's line program.",183,[[["self"]],["u8"]]],[11,"opcode_base","","Get opcode base for this header's line program.",183,[[["self"]],["u8"]]],[11,"standard_opcode_lengths","","An array of `u8` that specifies the number of LEB128…",183,[[["self"]],["r"]]],[11,"directory_entry_format","","Get the format of a directory entry.",183,[[["self"]]]],[11,"include_directories","","Get the set of include directories for this header's line…",183,[[["self"]]]],[11,"directory","","The include directory with the given directory index.",183,[[["self"],["u64"]],[["option",["attributevalue"]],["attributevalue"]]]],[11,"file_name_entry_format","","Get the format of a file name entry.",183,[[["self"]]]],[11,"file_has_timestamp","","Return true if the file entries may have valid timestamps.",183,[[["self"]],["bool"]]],[11,"file_has_size","","Return true if the file entries may have valid sizes.",183,[[["self"]],["bool"]]],[11,"file_has_md5","","Return true if the file name entry format contains an MD5…",183,[[["self"]],["bool"]]],[11,"file_names","","Get the list of source files that appear in this header's…",183,[[["self"]]]],[11,"file","","The source file with the given file index.",183,[[["self"],["u64"]],[["fileentry"],["option",["fileentry"]]]]],[11,"raw_program_buf","","Get the raw, un-parsed `EndianSlice` containing this…",183,[[["self"]],["r"]]],[11,"instructions","","Iterate over the instructions in this header's line number…",183,[[["self"]],["lineinstructions"]]],[11,"header","","Retrieve the `LineProgramHeader` for this program.",184,[[["self"]],["lineprogramheader"]]],[11,"rows","","Construct a new `LineRows` for executing this program to…",184,[[],[["incompletelineprogram"],["linerows",["incompletelineprogram"]]]]],[11,"sequences","","Execute the line number program, completing the…",184,[[],["result"]]],[11,"header","","Retrieve the `LineProgramHeader` for this program.",185,[[["self"]],["lineprogramheader"]]],[11,"resume_from","","Construct a new `LineRows` for executing the subset of the…",185,[[["self"],["linesequence"]],[["completelineprogram"],["linerows",["completelineprogram"]]]]],[11,"path_name","","A slice containing the full or relative path name of > a…",186,[[["self"]],["attributevalue"]]],[11,"directory_index","","An unsigned LEB128 number representing the directory index…",186,[[["self"]],["u64"]]],[11,"directory","","Get this file's directory.",186,[[["lineprogramheader"],["self"]],[["option",["attributevalue"]],["attributevalue"]]]],[11,"timestamp","","The implementation-defined time of last modification of…",186,[[["self"]],["u64"]]],[11,"size","","The size of the file in bytes, or 0 if not available.",186,[[["self"]],["u64"]]],[11,"md5","","A 16-byte MD5 digest of the file contents.",186,[[["self"]]]],[11,"new","","Construct a new `DebugLoc` instance from the data in the…",187,[[["endian"]],["self"]]],[11,"new","","Construct a new `DebugLocLists` instance from the data in…",188,[[["endian"]],["self"]]],[11,"new","","Construct a new `LocationLists` instance from the data in…",189,[[["debugloc"],["debugloclists"]],["locationlists"]]],[11,"borrow","","Create a `LocationLists` that references the data in `self`.",189,[[["self"],["f"]],["locationlists"]]],[11,"locations","","Iterate over the `LocationListEntry`s starting at the…",189,[[["encoding"],["u64"],["debugaddrbase"],["debugaddr"],["self"],["locationlistsoffset"]],[["loclistiter"],["result",["loclistiter"]]]]],[11,"raw_locations","","Iterate over the raw `LocationListEntry`s starting at the…",189,[[["encoding"],["self"],["locationlistsoffset"]],[["result",["rawloclistiter"]],["rawloclistiter"]]]],[11,"get_offset","","Returns the `.debug_loclists` offset at the given `base`…",189,[[["debugloclistsbase"],["debugloclistsindex"],["self"],["encoding"]],[["locationlistsoffset"],["result",["locationlistsoffset"]]]]],[11,"lookup_offset_id","","Call `Reader::lookup_offset_id` for each section, and…",189,[[["readeroffsetid"],["self"]],["option"]]],[11,"new","","Construct a `RawLocListIter`.",190,[[["encoding"],["r"]],["rawloclistiter"]]],[11,"next","","Advance the iterator to the next location.",190,[[["self"]],[["result",["option"]],["option",["rawloclistentry"]]]]],[11,"next","","Advance the iterator to the next location.",191,[[["self"]],[["result",["option"]],["option",["locationlistentry"]]]]],[11,"is_empty","","Return true if the piece is empty.",133,[[["self"]],["bool"]]],[11,"parse","","Parse a single DWARF expression operation.",110,[[["encoding"],["r"]],[["result",["operation"]],["operation"]]]],[11,"evaluation","","Create an evaluation for this expression.",69,[[["encoding"]],["evaluation"]]],[11,"operations","","Return an iterator for the operations in the expression.",69,[[["encoding"]],["operationiter"]]],[11,"next","","Read the next operation in an expression.",192,[[["self"]],[["result",["option"]],["option",["operation"]]]]],[11,"offset_from","","Return the current byte offset of the iterator.",192,[[["expression"],["self"]]]],[11,"new","","Create a new DWARF expression evaluator.",193,[[["encoding"],["r"]],["evaluation"]]],[11,"set_initial_value","","Set an initial value to be pushed on the DWARF expression…",193,[[["self"],["u64"]]]],[11,"set_object_address","","Set the enclosing object's address, as used by…",193,[[["self"],["u64"]]]],[11,"set_max_iterations","","Set the maximum number of iterations to be allowed by the…",193,[[["self"],["u32"]]]],[11,"result","","Get the result of this `Evaluation`.",193,[[],[["vec",["piece"]],["piece"]]]],[11,"evaluate","","Evaluate a DWARF expression. This method should only ever…",193,[[["self"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_memory","","Resume the `Evaluation` with the provided memory `value`.…",193,[[["self"],["value"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_register","","Resume the `Evaluation` with the provided `register`…",193,[[["self"],["value"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_frame_base","","Resume the `Evaluation` with the provided `frame_base`.…",193,[[["self"],["u64"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_tls","","Resume the `Evaluation` with the provided `value`. This…",193,[[["self"],["u64"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_call_frame_cfa","","Resume the `Evaluation` with the provided `cfa`. This will…",193,[[["self"],["u64"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_at_location","","Resume the `Evaluation` with the provided `bytes`. This…",193,[[["self"],["r"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_entry_value","","Resume the `Evaluation` with the provided `entry_value`.…",193,[[["self"],["value"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_parameter_ref","","Resume the `Evaluation` with the provided…",193,[[["self"],["u64"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_relocated_address","","Resume the `Evaluation` with the provided relocated…",193,[[["self"],["u64"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_indexed_address","","Resume the `Evaluation` with the provided indexed…",193,[[["self"],["u64"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"resume_with_base_type","","Resume the `Evaluation` with the provided `base_type`.…",193,[[["valuetype"],["self"]],[["result",["evaluationresult"]],["evaluationresult"]]]],[11,"name","","Returns the name this entry refers to.",194,[[["self"]],["r"]]],[11,"unit_header_offset","","Returns the offset into the .debug_info section for the…",194,[[["self"]],["debuginfooffset"]]],[11,"die_offset","","Returns the offset into the compilation unit for the…",194,[[["self"]],["unitoffset"]]],[11,"new","","Construct a new `DebugPubNames` instance from the data in…",195,[[["endian"]],["self"]]],[11,"items","","Iterate the pubnames in the `.debug_pubnames` section.",195,[[["self"]],["pubnamesentryiter"]]],[11,"next","","Advance the iterator and return the next pubname.",196,[[["self"]],[["option",["pubnamesentry"]],["result",["option"]]]]],[11,"name","","Returns the name of the type this entry refers to.",197,[[["self"]],["r"]]],[11,"unit_header_offset","","Returns the offset into the .debug_info section for the…",197,[[["self"]],["debuginfooffset"]]],[11,"die_offset","","Returns the offset into the compilation unit for the…",197,[[["self"]],["unitoffset"]]],[11,"new","","Construct a new `DebugPubTypes` instance from the data in…",198,[[["endian"]],["self"]]],[11,"items","","Iterate the pubtypes in the `.debug_pubtypes` section.",198,[[["self"]],["pubtypesentryiter"]]],[11,"next","","Advance the iterator and return the next pubtype.",199,[[["self"]],[["result",["option"]],["option",["pubtypesentry"]]]]],[11,"new","","Construct a new `DebugRanges` instance from the data in…",200,[[["endian"]],["self"]]],[11,"new","","Construct a new `DebugRngLists` instance from the data in…",201,[[["endian"]],["self"]]],[11,"new","","Construct a new `RangeLists` instance from the data in the…",202,[[["debugranges"],["debugrnglists"]],["rangelists"]]],[11,"borrow","","Create a `RangeLists` that references the data in `self`.",202,[[["self"],["f"]],["rangelists"]]],[11,"ranges","","Iterate over the `Range` list entries starting at the…",202,[[["u64"],["debugaddrbase"],["rangelistsoffset"],["debugaddr"],["self"],["encoding"]],[["result",["rnglistiter"]],["rnglistiter"]]]],[11,"raw_ranges","","Iterate over the `RawRngListEntry`ies starting at the…",202,[[["rangelistsoffset"],["self"],["encoding"]],[["result",["rawrnglistiter"]],["rawrnglistiter"]]]],[11,"get_offset","","Returns the `.debug_rnglists` offset at the given `base`…",202,[[["debugrnglistsbase"],["debugrnglistsindex"],["self"],["encoding"]],[["rangelistsoffset"],["result",["rangelistsoffset"]]]]],[11,"lookup_offset_id","","Call `Reader::lookup_offset_id` for each section, and…",202,[[["readeroffsetid"],["self"]],["option"]]],[11,"next","","Advance the iterator to the next range.",203,[[["self"]],[["option",["rawrnglistentry"]],["result",["option"]]]]],[11,"next","","Advance the iterator to the next range.",204,[[["self"]],[["result",["option"]],["option",["range"]]]]],[11,"new","","Construct a new `DebugStr` instance from the data in the…",205,[[["endian"]],["self"]]],[11,"get_str","","Lookup a string from the `.debug_str` section by…",205,[[["debugstroffset"],["self"]],["result"]]],[11,"borrow","","Create a `DebugStr` section that references the data in…",205,[[["self"],["f"]],["debugstr"]]],[11,"get_str_offset","","Returns the `.debug_str` offset at the given `base` and…",206,[[["debugstroffsetsindex"],["debugstroffsetsbase"],["self"],["format"]],[["result",["debugstroffset"]],["debugstroffset"]]]],[11,"borrow","","Create a `DebugStrOffsets` section that references the…",206,[[["self"],["f"]],["debugstroffsets"]]],[11,"get_str","","Lookup a string from the `.debug_line_str` section by…",207,[[["debuglinestroffset"],["self"]],["result"]]],[11,"borrow","","Create a `DebugLineStr` section that references the data…",207,[[["self"],["f"]],["debuglinestr"]]],[11,"to_unit_offset","gimli","Convert an offset to be relative to the start of the given…",20,[[["self"],["typeunitheader"]],[["option",["unitoffset"]],["unitoffset"]]]],[11,"to_unit_offset","","Convert an offset to be relative to the start of the given…",6,[[["self"],["compilationunitheader"]],[["option",["unitoffset"]],["unitoffset"]]]],[11,"to_debug_info_offset","gimli::read","Convert an offset to be relative to the start of the…",71,[[["self"],["compilationunitheader"]],["debuginfooffset"]]],[11,"to_debug_types_offset","","Convert an offset to be relative to the start of the…",71,[[["self"],["typeunitheader"]],["debugtypesoffset"]]],[11,"new","","Construct a new `DebugInfo` instance from the data in the…",208,[[["endian"]],["self"]]],[11,"units","","Iterate the compilation- and partial-units in this…",208,[[["self"]],["compilationunitheadersiter"]]],[11,"header_from_offset","","Get the CompilationUnitHeader located at offset from this…",208,[[["debuginfooffset"],["self"]],[["compilationunitheader"],["result",["compilationunitheader"]]]]],[11,"borrow","","Create a `DebugInfo` section that references the data in…",208,[[["self"],["f"]],["debuginfo"]]],[11,"next","","Advance the iterator to the next unit header.",209,[[["self"]],[["result",["option"]],["option",["compilationunitheader"]]]]],[11,"new","","Construct a new `CompilationUnitHeader`.",210,[[["unitheader"],["debuginfooffset"]],["self"]]],[11,"header","","Return the `UnitHeader` containing common unit header…",210,[[],["unitheader"]]],[11,"size_of_header","","Return the serialized size of the compilation unit header…",210,[[["format"]],["usize"]]],[11,"offset","","Get the offset of this compilation unit within the…",210,[[["self"]],["debuginfooffset"]]],[11,"unit_length","","Get the length of the debugging info for this compilation…",210,[[["self"]]]],[11,"length_including_self","","Get the length of the debugging info for this compilation…",210,[[["self"]]]],[11,"encoding","","Return the encoding parameters for this unit.",210,[[["self"]],["encoding"]]],[11,"version","","Get the DWARF version of the debugging info for this…",210,[[["self"]],["u16"]]],[11,"debug_abbrev_offset","","The offset into the `.debug_abbrev` section for this…",210,[[["self"]],["debugabbrevoffset"]]],[11,"address_size","","The size of addresses (in bytes) in this type-unit.",210,[[["self"]],["u8"]]],[11,"format","","Whether this type unit is encoded in 64- or 32-bit DWARF.",210,[[["self"]],["format"]]],[11,"header_size","","The serialized size of the header for this compilation unit.",210,[[["self"]]]],[11,"entry","","Read the `DebuggingInformationEntry` at the given offset.",210,[[["unitoffset"],["self"],["abbreviations"]],[["debugginginformationentry"],["result",["debugginginformationentry"]]]]],[11,"entries","","Navigate this compilation unit's…",210,[[["self"],["abbreviations"]],["entriescursor"]]],[11,"entries_at_offset","","Navigate this compilation unit's…",210,[[["unitoffset"],["self"],["abbreviations"]],[["result",["entriescursor"]],["entriescursor"]]]],[11,"entries_tree","","Navigate this compilation unit's…",210,[[["option",["unitoffset"]],["unitoffset"],["self"],["abbreviations"]],[["result",["entriestree"]],["entriestree"]]]],[11,"entries_raw","","Read the raw data that defines the Debugging Information…",210,[[["option",["unitoffset"]],["unitoffset"],["self"],["abbreviations"]],[["entriesraw"],["result",["entriesraw"]]]]],[11,"abbreviations","","Parse this compilation unit's abbreviations.",210,[[["self"],["debugabbrev"]],[["result",["abbreviations"]],["abbreviations"]]]],[11,"new","","Construct a new `UnitHeader`.",211,[[["r"],["encoding"],["debugabbrevoffset"]],["self"]]],[11,"size_of_header","","Return the serialized size of the common unit header for…",211,[[["format"]],["usize"]]],[11,"unit_length","","Get the length of the debugging info for this compilation…",211,[[["self"]]]],[11,"length_including_self","","Get the length of the debugging info for this compilation…",211,[[["self"]]]],[11,"encoding","","Return the encoding parameters for this unit.",211,[[["self"]],["encoding"]]],[11,"version","","Get the DWARF version of the debugging info for this…",211,[[["self"]],["u16"]]],[11,"debug_abbrev_offset","","The offset into the `.debug_abbrev` section for this…",211,[[["self"]],["debugabbrevoffset"]]],[11,"address_size","","The size of addresses (in bytes) in this compilation unit.",211,[[["self"]],["u8"]]],[11,"format","","Whether this compilation unit is encoded in 64- or 32-bit…",211,[[["self"]],["format"]]],[11,"header_size","","The serialized size of the header for this compilation unit.",211,[[["self"]]]],[11,"range","","Get the underlying bytes for the supplied range.",211,[[["range",["unitoffset"]],["self"],["unitoffset"]],["result"]]],[11,"range_from","","Get the underlying bytes for the supplied range.",211,[[["unitoffset"],["self"],["rangefrom",["unitoffset"]]],["result"]]],[11,"range_to","","Get the underlying bytes for the supplied range.",211,[[["rangeto",["unitoffset"]],["self"],["unitoffset"]],["result"]]],[11,"entry","","Read the `DebuggingInformationEntry` at the given offset.",211,[[["unitoffset"],["self"],["abbreviations"]],[["debugginginformationentry"],["result",["debugginginformationentry"]]]]],[11,"entries","","Navigate this unit's `DebuggingInformationEntry`s.",211,[[["self"],["abbreviations"]],["entriescursor"]]],[11,"entries_at_offset","","Navigate this compilation unit's…",211,[[["unitoffset"],["self"],["abbreviations"]],[["result",["entriescursor"]],["entriescursor"]]]],[11,"entries_tree","","Navigate this unit's `DebuggingInformationEntry`s as a…",211,[[["option",["unitoffset"]],["unitoffset"],["self"],["abbreviations"]],[["result",["entriestree"]],["entriestree"]]]],[11,"entries_raw","","Read the raw data that defines the Debugging Information…",211,[[["option",["unitoffset"]],["unitoffset"],["self"],["abbreviations"]],[["entriesraw"],["result",["entriesraw"]]]]],[11,"abbreviations","","Parse this unit's abbreviations.",211,[[["self"],["debugabbrev"]],[["result",["abbreviations"]],["abbreviations"]]]],[11,"new","","Construct a new `DebuggingInformationEntry`.",212,[[["r"],["unitheader"],["unitoffset"],["abbreviation"]],["self"]]],[11,"code","","Get this entry's code.",212,[[["self"]],["u64"]]],[11,"offset","","Get this entry's offset.",212,[[["self"]],["unitoffset"]]],[11,"tag","","Get this entry's `DW_TAG_whatever` tag.",212,[[["self"]],["dwtag"]]],[11,"has_children","","Return true if this entry's type can have children, false…",212,[[["self"]],["bool"]]],[11,"attrs","","Iterate over this entry's set of attributes.",212,[[["self"]],["attrsiter"]]],[11,"attr","","Find the first attribute in this entry which has the given…",212,[[["self"],["dwat"]],[["result",["option"]],["option",["attribute"]]]]],[11,"attr_value_raw","","Find the first attribute in this entry which has the given…",212,[[["self"],["dwat"]],[["option",["attributevalue"]],["result",["option"]]]]],[11,"attr_value","","Find the first attribute in this entry which has the given…",212,[[["self"],["dwat"]],[["option",["attributevalue"]],["result",["option"]]]]],[11,"name","","Get this attribute's name.",213,[[["self"]],["dwat"]]],[11,"raw_value","","Get this attribute's raw value.",213,[[["self"]],["attributevalue"]]],[11,"value","","Get this attribute's normalized value.",213,[[["self"]],["attributevalue"]]],[11,"u8_value","","Try to convert this attribute's value to a u8.",213,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"u16_value","","Try to convert this attribute's value to a u16.",213,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"udata_value","","Try to convert this attribute's value to an unsigned…",213,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"sdata_value","","Try to convert this attribute's value to a signed integer.",213,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"offset_value","","Try to convert this attribute's value to an offset.",213,[[["self"]],["option"]]],[11,"exprloc_value","","Try to convert this attribute's value to an expression or…",213,[[["self"]],[["expression"],["option",["expression"]]]]],[11,"string_value","","Try to return this attribute's value as a string slice.",213,[[["self"],["debugstr"]],["option"]]],[11,"string_value_sup","","Try to return this attribute's value as a string slice.",213,[[["option",["debugstr"]],["self"],["debugstr"]],["option"]]],[11,"u8_value","","Try to convert this attribute's value to a u8.",152,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"u16_value","","Try to convert this attribute's value to a u16.",152,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"udata_value","","Try to convert this attribute's value to an unsigned…",152,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"sdata_value","","Try to convert this attribute's value to a signed integer.",152,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"offset_value","","Try to convert this attribute's value to an offset.",152,[[["self"]],["option"]]],[11,"exprloc_value","","Try to convert this attribute's value to an expression or…",152,[[["self"]],[["expression"],["option",["expression"]]]]],[11,"string_value","","Try to return this attribute's value as a string slice.",152,[[["self"],["debugstr"]],["option"]]],[11,"string_value_sup","","Try to return this attribute's value as a string slice.",152,[[["option",["debugstr"]],["self"],["debugstr"]],["option"]]],[11,"next","","Advance the iterator and return the next attribute.",214,[[["self"]],[["result",["option"]],["option",["attribute"]]]]],[11,"is_empty","","Return true if there is no more input.",215,[[["self"]],["bool"]]],[11,"next_offset","","Return the unit offset at which the reader will read next.",215,[[["self"]],["unitoffset"]]],[11,"next_depth","","Return the depth of the next entry.",215,[[["self"]],["isize"]]],[11,"read_abbreviation","","Read an abbreviation code and lookup the corresponding…",215,[[["self"]],[["option",["abbreviation"]],["result",["option"]]]]],[11,"read_attribute","","Read an attribute.",215,[[["self"],["attributespecification"]],[["result",["attribute"]],["attribute"]]]],[11,"current","","Get a reference to the entry that the cursor is currently…",216,[[["self"]],[["debugginginformationentry"],["option",["debugginginformationentry"]]]]],[11,"next_entry","","Move the cursor to the next DIE in the tree.",216,[[["self"]],[["result",["option"]],["option"]]]],[11,"next_dfs","","Move the cursor to the next DIE in the tree in DFS order.",216,[[["self"]],[["result",["option"]],["option"]]]],[11,"next_sibling","","Move the cursor to the next sibling DIE of the current one.",216,[[["self"]],[["result",["option"]],["option",["debugginginformationentry"]]]]],[11,"root","","Returns the root node of the tree.",217,[[["self"]],[["entriestreenode"],["result",["entriestreenode"]]]]],[11,"entry","","Returns the current entry in the tree.",218,[[["self"]],["debugginginformationentry"]]],[11,"children","","Create an iterator for the children of the current entry.",218,[[],["entriestreeiter"]]],[11,"next","","Returns an `EntriesTreeNode` for the next child entry.",219,[[["self"]],[["result",["option"]],["option",["entriestreenode"]]]]],[11,"new","","Construct a new `DebugTypes` instance from the data in the…",220,[[["endian"]],["self"]]],[11,"borrow","","Create a `DebugTypes` section that references the data in…",220,[[["self"],["f"]],["debugtypes"]]],[11,"units","","Iterate the type-units in this `.debug_types` section.",220,[[["self"]],["typeunitheadersiter"]]],[11,"next","","Advance the iterator to the next type unit header.",221,[[["self"]],[["result",["option"]],["option",["typeunitheader"]]]]],[11,"header","","Return the `UnitHeader` containing common unit fields.",222,[[],["unitheader"]]],[11,"size_of_header","","Return the serialized size of the type-unit header for the…",222,[[["format"]],["usize"]]],[11,"offset","","Get the offset of this compilation unit within the…",222,[[["self"]],["debugtypesoffset"]]],[11,"unit_length","","Get the length of the debugging info for this type-unit.",222,[[["self"]]]],[11,"length_including_self","","Get the length of the debugging info for this type-unit,…",222,[[["self"]]]],[11,"encoding","","Return the encoding parameters for this unit.",222,[[["self"]],["encoding"]]],[11,"version","","Get the DWARF version of the debugging info for this…",222,[[["self"]],["u16"]]],[11,"debug_abbrev_offset","","The offset into the `.debug_abbrev` section for this…",222,[[["self"]],["debugabbrevoffset"]]],[11,"address_size","","The size of addresses (in bytes) in this type-unit.",222,[[["self"]],["u8"]]],[11,"format","","Whether this type unit is encoded in 64- or 32-bit DWARF.",222,[[["self"]],["format"]]],[11,"header_size","","The serialized size of the header for this type-unit.",222,[[["self"]]]],[11,"type_signature","","Get the unique type signature for this type unit.",222,[[["self"]],["debugtypesignature"]]],[11,"type_offset","","Get the offset within this type unit where the type is…",222,[[["self"]],["unitoffset"]]],[11,"entries","","Navigate this type unit's `DebuggingInformationEntry`s.",222,[[["self"],["abbreviations"]],["entriescursor"]]],[11,"entries_at_offset","","Navigate this type unit's `DebuggingInformationEntry`s…",222,[[["unitoffset"],["self"],["abbreviations"]],[["result",["entriescursor"]],["entriescursor"]]]],[11,"entries_tree","","Navigate this type unit's `DebuggingInformationEntry`s as…",222,[[["option",["unitoffset"]],["unitoffset"],["self"],["abbreviations"]],[["result",["entriestree"]],["entriestree"]]]],[11,"entries_raw","","Read the raw data that defines the Debugging Information…",222,[[["option",["unitoffset"]],["unitoffset"],["self"],["abbreviations"]],[["entriesraw"],["result",["entriesraw"]]]]],[11,"abbreviations","","Parse this type unit's abbreviations.",222,[[["self"],["debugabbrev"]],[["result",["abbreviations"]],["abbreviations"]]]],[11,"bit_size","","The size in bits of a value for this type.",153,[[["u64"]],["u32"]]],[11,"from_encoding","","Construct a `ValueType` from the attributes of a base type…",153,[[["dwate"],["u64"]],[["valuetype"],["option",["valuetype"]]]]],[11,"from_entry","","Construct a `ValueType` from a base type DIE.",153,[[["debugginginformationentry"]],[["result",["option"]],["option",["valuetype"]]]]],[11,"value_type","","Return the `ValueType` corresponding to this `Value`.",154,[[["self"]],["valuetype"]]],[11,"parse","","Read a `Value` with the given `value_type` from a `Reader`.",154,[[["valuetype"],["reader"]],[["value"],["result",["value"]]]]],[11,"to_u64","","Convert a `Value` to a `u64`.",154,[[["u64"]],[["result",["u64"]],["u64"]]]],[11,"from_u64","","Create a `Value` with the given `value_type` from a `u64`…",154,[[["valuetype"],["u64"]],[["value"],["result",["value"]]]]],[11,"convert","","Convert a `Value` to the given `value_type`.",154,[[["valuetype"],["u64"]],[["value"],["result",["value"]]]]],[11,"reinterpret","","Reinterpret the bits in a `Value` as the given `value_type`.",154,[[["valuetype"],["u64"]],[["value"],["result",["value"]]]]],[11,"abs","","Perform an absolute value operation.",154,[[["u64"]],[["value"],["result",["value"]]]]],[11,"neg","","Perform a negation operation.",154,[[["u64"]],[["value"],["result",["value"]]]]],[11,"add","","Perform an addition operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"sub","","Perform a subtraction operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"mul","","Perform a multiplication operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"div","","Perform a division operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"rem","","Perform a remainder operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"not","","Perform a bitwise not operation.",154,[[["u64"]],[["value"],["result",["value"]]]]],[11,"and","","Perform a bitwise and operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"or","","Perform a bitwise or operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"xor","","Perform a bitwise exclusive-or operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"shl","","Perform a shift left operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"shr","","Perform a logical shift right operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"shra","","Perform an arithmetic shift right operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"eq","","Perform the `==` relational operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"ge","","Perform the `>=` relational operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"gt","","Perform the `>` relational operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"le","","Perform the `<= relational operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"lt","","Perform the `< relational operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[11,"ne","","Perform the `!= relational operation.",154,[[["value"],["u64"]],[["value"],["result",["value"]]]]],[6,"LineNumberProgram","","Deprecated. `LineNumberProgram` has been renamed to…",null,null],[6,"StateMachine","","Deprecated. `StateMachine` has been renamed to `LineRows`.",null,null],[6,"Opcode","","Deprecated. `Opcode` has been renamed to `LineInstruction`.",null,null],[6,"OpcodesIter","","Deprecated. `OpcodesIter` has been renamed to…",null,null],[6,"LineNumberRow","","Deprecated. `LineNumberRow` has been renamed to `LineRow`.",null,null],[6,"LineNumberSequence","","Deprecated. `LineNumberSequence` has been renamed to…",null,null],[6,"LineNumberProgramHeader","","Deprecated. `LineNumberProgramHeader` has been renamed to…",null,null],[6,"IncompleteLineNumberProgram","","Deprecated. `IncompleteLineNumberProgram` has been renamed…",null,null],[6,"CompleteLineNumberProgram","","Deprecated. `CompleteLineNumberProgram` has been renamed…",null,null],[6,"EndianBuf","","`EndianBuf` has been renamed to `EndianSlice`. For ease of…",null,null],[6,"Result","","The result of a parse.",null,null],[8,"UnwindOffset","","An offset into an `UnwindSection`.",null,null],[10,"into","","Convert an `UnwindOffset<T>` into a `T`.",223,[[],["t"]]],[8,"UnwindSection","","A section holding unwind information: either…",null,null],[16,"Offset","","The offset type associated with this CFI section. Either…",224,null],[11,"entries","","Iterate over the `CommonInformationEntry`s and…",224,[[["self"],["baseaddresses"]],["cfientriesiter"]]],[11,"cie_from_offset","","Parse the `CommonInformationEntry` at the given offset.",224,[[["self"],["baseaddresses"]],[["result",["commoninformationentry"]],["commoninformationentry"]]]],[11,"partial_fde_from_offset","","Parse the `PartialFrameDescriptionEntry` at the given…",224,[[["self"],["baseaddresses"]],[["result",["partialframedescriptionentry"]],["partialframedescriptionentry"]]]],[11,"fde_from_offset","","Parse the `FrameDescriptionEntry` at the given offset.",224,[[["f"],["self"],["baseaddresses"]],[["framedescriptionentry"],["result",["framedescriptionentry"]]]]],[11,"fde_for_address","","Find the `FrameDescriptionEntry` for the given address.",224,[[["baseaddresses"],["f"],["u64"],["self"]],[["framedescriptionentry"],["result",["framedescriptionentry"]]]]],[11,"unwind_info_for_address","","Find the frame unwind information for the given address.",224,[[["baseaddresses"],["u64"],["f"],["self"],["uninitializedunwindcontext"]],[["unwindtablerow"],["result",["unwindtablerow"]]]]],[8,"ReaderOffset","","A trait for offsets with a DWARF section.",null,null],[10,"from_u8","","Convert a u8 to an offset.",225,[[["u8"]],["self"]]],[10,"from_u16","","Convert a u16 to an offset.",225,[[["u16"]],["self"]]],[10,"from_i16","","Convert an i16 to an offset.",225,[[["i16"]],["self"]]],[10,"from_u32","","Convert a u32 to an offset.",225,[[["u32"]],["self"]]],[10,"from_u64","","Convert a u64 to an offset.",225,[[["u64"]],["result"]]],[10,"into_u64","","Convert an offset to a u64.",225,[[],["u64"]]],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`.",225,[[],["self"]]],[10,"checked_sub","","Checked subtraction. Computes `self - other`.",225,[[],["option"]]],[8,"Reader","","A trait for reading the data from a DWARF section.",null,null],[16,"Endian","","The endianity of bytes that are read.",226,null],[16,"Offset","","The type used for offsets and lengths.",226,null],[10,"endian","","Return the endianity of bytes that are read.",226,[[["self"]]]],[10,"len","","Return the number of bytes remaining.",226,[[["self"]]]],[10,"empty","","Set the number of bytes remaining to zero.",226,[[["self"]]]],[10,"truncate","","Set the number of bytes remaining to the specified length.",226,[[["self"]],["result"]]],[10,"offset_from","","Return the offset of this reader's data relative to the…",226,[[["self"]]]],[10,"offset_id","","Return an identifier for the current reader offset.",226,[[["self"]],["readeroffsetid"]]],[10,"lookup_offset_id","","Return the offset corresponding to the given `id` if it is…",226,[[["readeroffsetid"],["self"]],["option"]]],[10,"find","","Find the index of the first occurence of the given byte.…",226,[[["self"],["u8"]],["result"]]],[10,"skip","","Discard the specified number of bytes.",226,[[["self"]],["result"]]],[10,"split","","Split a reader in two.",226,[[["self"]],["result"]]],[10,"to_slice","","Return all remaining data as a clone-on-write slice.",226,[[["self"]],[["result",["cow"]],["cow"]]]],[10,"to_string","","Convert all remaining data to a clone-on-write string.",226,[[["self"]],[["cow",["str"]],["result",["cow"]]]]],[10,"to_string_lossy","","Convert all remaining data to a clone-on-write string,…",226,[[["self"]],[["cow",["str"]],["result",["cow"]]]]],[10,"read_slice","","Read exactly `buf.len()` bytes into `buf`.",226,[[["self"]],["result"]]],[11,"read_u8_array","","Read a u8 array.",226,[[["self"]],["result"]]],[11,"is_empty","","Return true if the number of bytes remaining is zero.",226,[[["self"]],["bool"]]],[11,"read_u8","","Read a u8.",226,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Read an i8.",226,[[["self"]],[["i8"],["result",["i8"]]]]],[11,"read_u16","","Read a u16.",226,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Read an i16.",226,[[["self"]],[["result",["i16"]],["i16"]]]],[11,"read_u32","","Read a u32.",226,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"read_i32","","Read an i32.",226,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u64","","Read a u64.",226,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_i64","","Read an i64.",226,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_f32","","Read a f32.",226,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Read a f64.",226,[[["self"]],[["result",["f64"]],["f64"]]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",226,[[["self"],["usize"]],[["result",["u64"]],["u64"]]]],[11,"read_null_terminated_slice","","Read a null-terminated slice, and return it (excluding the…",226,[[["self"]],["result"]]],[11,"read_uleb128","","Read an unsigned LEB128 encoded integer.",226,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_uleb128_u16","","Read an unsigned LEB128 encoded u16.",226,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_sleb128","","Read a signed LEB128 encoded integer.",226,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_initial_length","","Read an initial length field.",226,[[["self"]],["result"]]],[11,"read_address","","Read an address-sized integer, and return it as a `u64`.",226,[[["self"],["u8"]],[["result",["u64"]],["u64"]]]],[11,"read_word","","Parse a word-sized integer according to the DWARF format.",226,[[["self"],["format"]],["result"]]],[11,"read_length","","Parse a word-sized section length according to the DWARF…",226,[[["self"],["format"]],["result"]]],[11,"read_offset","","Parse a word-sized section offset according to the DWARF…",226,[[["self"],["format"]],["result"]]],[11,"read_sized_offset","","Parse a section offset of the given size.",226,[[["self"],["u8"]],["result"]]],[8,"LineProgram","","A `LineProgram` provides access to a `LineProgramHeader`…",null,null],[10,"header","","Get a reference to the held `LineProgramHeader`.",227,[[["self"]],["lineprogramheader"]]],[10,"add_file","","Add a file to the file table if necessary.",227,[[["fileentry"],["self"]]]],[8,"Section","","A convenience trait for loading DWARF sections from object…",null,null],[10,"id","","Returns the section id for this type.",228,[[],["sectionid"]]],[11,"section_name","","Returns the ELF section name for this type.",228,[[],["str"]]],[11,"load","","Try to load the section using the given loader function.",228,[[["f"]],["result"]]],[10,"reader","","Returns the `Reader` for this section.",228,[[["self"]],["r"]]],[11,"lookup_offset_id","","Returns the `Reader` for this section.",228,[[["readeroffsetid"],["self"]],["option"]]],[11,"description","","A short description of the error.",155,[[["self"]],["str"]]],[6,"NativeEndian","gimli","The native endianity for the target platform.",null,null],[8,"Endianity","","A trait describing the endianity of some buffer.",null,null],[10,"is_big_endian","","Return true for big endian byte order.",229,[[],["bool"]]],[11,"is_little_endian","","Return true for little endian byte order.",229,[[],["bool"]]],[11,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",229,[[],["u16"]]],[11,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",229,[[],["u32"]]],[11,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",229,[[],["u64"]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",229,[[["self"]],["u64"]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",229,[[],["i16"]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",229,[[],["i32"]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",229,[[],["i64"]]],[11,"read_f32","","Reads a 32 bit floating point number from `buf`.",229,[[],["f32"]]],[11,"read_f64","","Reads a 32 bit floating point number from `buf`.",229,[[],["f64"]]],[11,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",229,[[["u16"]]]],[11,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",229,[[["u32"]]]],[11,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",229,[[["u64"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"from","","",22,[[],["t"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"from","","",23,[[],["t"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"into","","",230,[[],["u"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,[[["self"],["t"]]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"into","","",231,[[],["u"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,[[["self"],["t"]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"from","gimli::constants","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"to_string","","",32,[[["self"]],["string"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"to_string","","",52,[[["self"]],["string"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"to_string","","",58,[[["self"]],["string"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"to_string","","",59,[[["self"]],["string"]]],[11,"from","gimli::read","",156,[[],["t"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"into","","",156,[[],["u"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"from","","",157,[[],["t"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"into","","",157,[[],["u"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"from","","",158,[[],["t"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"into","","",158,[[],["u"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"into","","",159,[[],["u"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"into","","",160,[[],["u"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"from","","",161,[[],["t"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"into","","",161,[[],["u"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"into","","",162,[[],["u"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"into","","",232,[[],["u"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,[[["self"],["t"]]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"into","","",163,[[],["u"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"into","","",164,[[],["u"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"into","","",165,[[],["u"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"into","","",166,[[],["u"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"into","","",233,[[],["u"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,[[["self"],["t"]]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"into","","",167,[[],["u"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into_iter","","",234,[[],["i"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"into","","",234,[[],["u"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,[[["self"],["t"]]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"into","","",168,[[],["u"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"into","","",169,[[],["u"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"into","","",170,[[],["u"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"into","","",171,[[],["u"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"from","","",172,[[],["t"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"into","","",172,[[],["u"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"into","","",173,[[],["u"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"into","","",174,[[],["u"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"into","","",175,[[],["u"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"into","","",176,[[],["u"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"from","","",177,[[],["t"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"into","","",177,[[],["u"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"into","","",178,[[],["u"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"from","","",179,[[],["t"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"into","","",179,[[],["u"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"into","","",180,[[],["u"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"into","","",181,[[],["u"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"into","","",182,[[],["u"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"into","","",183,[[],["u"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"into","","",184,[[],["u"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"into","","",185,[[],["u"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"into","","",186,[[],["u"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"from","","",187,[[],["t"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"into","","",187,[[],["u"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"from","","",188,[[],["t"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"into","","",188,[[],["u"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"into","","",189,[[],["u"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"into","","",190,[[],["u"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"into","","",191,[[],["u"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"into","","",192,[[],["u"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"into","","",193,[[],["u"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"into","","",194,[[],["u"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"from","","",195,[[],["t"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"into","","",195,[[],["u"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"into","","",196,[[],["u"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"into","","",197,[[],["u"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,[[["self"],["t"]]]],[11,"from","","",198,[[],["t"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"into","","",198,[[],["u"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,[[["self"],["t"]]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"into","","",199,[[],["u"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,[[["self"],["t"]]]],[11,"from","","",200,[[],["t"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"into","","",200,[[],["u"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,[[["self"],["t"]]]],[11,"from","","",201,[[],["t"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"into","","",201,[[],["u"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,[[["self"],["t"]]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"into","","",202,[[],["u"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"into","","",203,[[],["u"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"into","","",204,[[],["u"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"from","","",205,[[],["t"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"into","","",205,[[],["u"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"from","","",206,[[],["t"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"into","","",206,[[],["u"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"from","","",207,[[],["t"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"into","","",207,[[],["u"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"from","","",208,[[],["t"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"into","","",208,[[],["u"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"into","","",209,[[],["u"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"into","","",210,[[],["u"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"into","","",211,[[],["u"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"into","","",212,[[],["u"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"into","","",213,[[],["u"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"into","","",214,[[],["u"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"into","","",215,[[],["u"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"into","","",216,[[],["u"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"into","","",217,[[],["u"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"into","","",218,[[],["u"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"into","","",219,[[],["u"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"from","","",220,[[],["t"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"into","","",220,[[],["u"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,[[["self"],["t"]]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"into","","",221,[[],["u"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,[[["self"],["t"]]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"into","","",222,[[],["u"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,[[["self"],["t"]]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"to_string","","",97,[[["self"]],["string"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"into","","",152,[[],["u"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"into","","",153,[[],["u"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"into","","",154,[[],["u"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"into","","",155,[[],["u"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"to_string","","",155,[[["self"]],["string"]]],[11,"is_big_endian","gimli","",27,[[],["bool"]]],[11,"is_big_endian","","",231,[[],["bool"]]],[11,"is_big_endian","","",230,[[],["bool"]]],[11,"into","","",22,[[],["t"]]],[11,"into","","",23,[[],["t"]]],[11,"endian","gimli::read","",171,[[["self"]],["endian"]]],[11,"len","","",171,[[["self"]],["usize"]]],[11,"is_empty","","",171,[[["self"]],["bool"]]],[11,"empty","","",171,[[["self"]]]],[11,"truncate","","",171,[[["self"],["usize"]],["result"]]],[11,"offset_from","","",171,[[["self"]],["usize"]]],[11,"offset_id","","",171,[[["self"]],["readeroffsetid"]]],[11,"lookup_offset_id","","",171,[[["readeroffsetid"],["self"]],["option"]]],[11,"find","","",171,[[["self"],["u8"]],[["result",["usize"]],["usize"]]]],[11,"skip","","",171,[[["self"],["usize"]],["result"]]],[11,"split","","",171,[[["self"],["usize"]],["result"]]],[11,"to_slice","","",171,[[["self"]],[["result",["cow"]],["cow"]]]],[11,"to_string","","",171,[[["self"]],[["cow",["str"]],["result",["cow"]]]]],[11,"to_string_lossy","","",171,[[["self"]],[["cow",["str"]],["result",["cow"]]]]],[11,"read_slice","","",171,[[["self"]],["result"]]],[11,"header","","",184,[[["self"]],["lineprogramheader"]]],[11,"add_file","","",184,[[["fileentry"],["self"]]]],[11,"id","","",156,[[],["sectionid"]]],[11,"reader","","",156,[[["self"]],["r"]]],[11,"id","","",157,[[],["sectionid"]]],[11,"reader","","",157,[[["self"]],["r"]]],[11,"id","","",158,[[],["sectionid"]]],[11,"reader","","",158,[[["self"]],["r"]]],[11,"id","","",161,[[],["sectionid"]]],[11,"reader","","",161,[[["self"]],["r"]]],[11,"id","","",172,[[],["sectionid"]]],[11,"reader","","",172,[[["self"]],["r"]]],[11,"id","","",177,[[],["sectionid"]]],[11,"reader","","",177,[[["self"]],["r"]]],[11,"id","","",179,[[],["sectionid"]]],[11,"reader","","",179,[[["self"]],["r"]]],[11,"id","","",187,[[],["sectionid"]]],[11,"reader","","",187,[[["self"]],["r"]]],[11,"id","","",188,[[],["sectionid"]]],[11,"reader","","",188,[[["self"]],["r"]]],[11,"id","","",195,[[],["sectionid"]]],[11,"reader","","",195,[[["self"]],["r"]]],[11,"id","","",198,[[],["sectionid"]]],[11,"reader","","",198,[[["self"]],["r"]]],[11,"id","","",200,[[],["sectionid"]]],[11,"reader","","",200,[[["self"]],["r"]]],[11,"id","","",201,[[],["sectionid"]]],[11,"reader","","",201,[[["self"]],["r"]]],[11,"id","","",205,[[],["sectionid"]]],[11,"reader","","",205,[[["self"]],["r"]]],[11,"id","","",206,[[],["sectionid"]]],[11,"reader","","",206,[[["self"]],["r"]]],[11,"id","","",207,[[],["sectionid"]]],[11,"reader","","",207,[[["self"]],["r"]]],[11,"id","","",208,[[],["sectionid"]]],[11,"reader","","",208,[[["self"]],["r"]]],[11,"id","","",220,[[],["sectionid"]]],[11,"reader","","",220,[[["self"]],["r"]]],[11,"deref","","",171,[[["self"]]]],[11,"from","gimli","",22,[[["t"]],["self"]]],[11,"from","","",23,[[["t"]],["self"]]],[11,"from","gimli::read","",156,[[["r"]],["self"]]],[11,"from","","",157,[[["r"]],["self"]]],[11,"from","","",158,[[["r"]],["self"]]],[11,"from","","",161,[[["r"]],["self"]]],[11,"from","","",172,[[["r"]],["self"]]],[11,"from","","",177,[[["r"]],["self"]]],[11,"from","","",179,[[["r"]],["self"]]],[11,"from","","",187,[[["r"]],["self"]]],[11,"from","","",188,[[["r"]],["self"]]],[11,"from","","",195,[[["r"]],["self"]]],[11,"from","","",198,[[["r"]],["self"]]],[11,"from","","",200,[[["r"]],["self"]]],[11,"from","","",201,[[["r"]],["self"]]],[11,"from","","",205,[[["r"]],["self"]]],[11,"from","","",206,[[["r"]],["self"]]],[11,"from","","",207,[[["r"]],["self"]]],[11,"from","","",208,[[["r"]],["self"]]],[11,"from","","",220,[[["r"]],["self"]]],[11,"fmt","gimli","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","gimli::constants","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","gimli","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",231,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",230,[[["formatter"],["self"]],["result"]]],[11,"fmt","gimli::read","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",232,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",233,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",234,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",170,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",171,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",172,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",175,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",176,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",177,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",178,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",179,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",187,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",188,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",192,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",193,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",194,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",195,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",197,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",198,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",199,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",200,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",201,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",202,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",204,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",205,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",206,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",207,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",208,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",209,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",210,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",211,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",212,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",213,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",214,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",215,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",216,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",217,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",218,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",219,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",220,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",221,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",222,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","gimli::constants","",31,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",32,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",33,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",34,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",35,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",36,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",37,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",38,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",40,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",41,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",42,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",43,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",44,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",45,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",46,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",47,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",48,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",49,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",50,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",51,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",52,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",53,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",54,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",55,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",56,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",57,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",58,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",59,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","gimli::read","",97,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",155,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"eq","gimli","",24,[[["self"],["format"]],["bool"]]],[11,"eq","","",0,[[["encoding"],["self"]],["bool"]]],[11,"ne","","",0,[[["encoding"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["lineencoding"]],["bool"]]],[11,"ne","","",1,[[["self"],["lineencoding"]],["bool"]]],[11,"eq","","",2,[[["self"],["register"]],["bool"]]],[11,"ne","","",2,[[["self"],["register"]],["bool"]]],[11,"eq","","",3,[[["self"],["debugabbrevoffset"]],["bool"]]],[11,"ne","","",3,[[["self"],["debugabbrevoffset"]],["bool"]]],[11,"eq","","",4,[[["debugaddrbase"],["self"]],["bool"]]],[11,"ne","","",4,[[["debugaddrbase"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["debugaddrindex"]],["bool"]]],[11,"ne","","",5,[[["self"],["debugaddrindex"]],["bool"]]],[11,"eq","","",6,[[["debuginfooffset"],["self"]],["bool"]]],[11,"ne","","",6,[[["debuginfooffset"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["debuglineoffset"]],["bool"]]],[11,"ne","","",7,[[["self"],["debuglineoffset"]],["bool"]]],[11,"eq","","",8,[[["self"],["debuglinestroffset"]],["bool"]]],[11,"ne","","",8,[[["self"],["debuglinestroffset"]],["bool"]]],[11,"eq","","",9,[[["self"],["locationlistsoffset"]],["bool"]]],[11,"ne","","",9,[[["self"],["locationlistsoffset"]],["bool"]]],[11,"eq","","",10,[[["self"],["debugloclistsbase"]],["bool"]]],[11,"ne","","",10,[[["self"],["debugloclistsbase"]],["bool"]]],[11,"eq","","",11,[[["self"],["debugloclistsindex"]],["bool"]]],[11,"ne","","",11,[[["self"],["debugloclistsindex"]],["bool"]]],[11,"eq","","",12,[[["self"],["debugmacinfooffset"]],["bool"]]],[11,"ne","","",12,[[["self"],["debugmacinfooffset"]],["bool"]]],[11,"eq","","",13,[[["self"],["debugmacrooffset"]],["bool"]]],[11,"ne","","",13,[[["self"],["debugmacrooffset"]],["bool"]]],[11,"eq","","",14,[[["self"],["rangelistsoffset"]],["bool"]]],[11,"ne","","",14,[[["self"],["rangelistsoffset"]],["bool"]]],[11,"eq","","",15,[[["self"],["debugrnglistsbase"]],["bool"]]],[11,"ne","","",15,[[["self"],["debugrnglistsbase"]],["bool"]]],[11,"eq","","",16,[[["debugrnglistsindex"],["self"]],["bool"]]],[11,"ne","","",16,[[["debugrnglistsindex"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["debugstroffset"]],["bool"]]],[11,"ne","","",17,[[["self"],["debugstroffset"]],["bool"]]],[11,"eq","","",18,[[["debugstroffsetsbase"],["self"]],["bool"]]],[11,"ne","","",18,[[["debugstroffsetsbase"],["self"]],["bool"]]],[11,"eq","","",19,[[["self"],["debugstroffsetsindex"]],["bool"]]],[11,"ne","","",19,[[["self"],["debugstroffsetsindex"]],["bool"]]],[11,"eq","","",20,[[["self"],["debugtypesoffset"]],["bool"]]],[11,"ne","","",20,[[["self"],["debugtypesoffset"]],["bool"]]],[11,"eq","","",21,[[["self"],["debugtypesignature"]],["bool"]]],[11,"ne","","",21,[[["self"],["debugtypesignature"]],["bool"]]],[11,"eq","","",22,[[["debugframeoffset"],["self"]],["bool"]]],[11,"ne","","",22,[[["debugframeoffset"],["self"]],["bool"]]],[11,"eq","","",23,[[["ehframeoffset"],["self"]],["bool"]]],[11,"ne","","",23,[[["ehframeoffset"],["self"]],["bool"]]],[11,"eq","","",25,[[["self"],["unitsectionoffset"]],["bool"]]],[11,"ne","","",25,[[["self"],["unitsectionoffset"]],["bool"]]],[11,"eq","","",26,[[["self"],["sectionid"]],["bool"]]],[11,"eq","gimli::constants","",31,[[["dwut"],["self"]],["bool"]]],[11,"ne","","",31,[[["dwut"],["self"]],["bool"]]],[11,"eq","","",32,[[["dwcfa"],["self"]],["bool"]]],[11,"ne","","",32,[[["dwcfa"],["self"]],["bool"]]],[11,"eq","","",33,[[["dwchildren"],["self"]],["bool"]]],[11,"ne","","",33,[[["dwchildren"],["self"]],["bool"]]],[11,"eq","","",34,[[["self"],["dwtag"]],["bool"]]],[11,"ne","","",34,[[["self"],["dwtag"]],["bool"]]],[11,"eq","","",35,[[["dwat"],["self"]],["bool"]]],[11,"ne","","",35,[[["dwat"],["self"]],["bool"]]],[11,"eq","","",36,[[["self"],["dwform"]],["bool"]]],[11,"ne","","",36,[[["self"],["dwform"]],["bool"]]],[11,"eq","","",37,[[["dwate"],["self"]],["bool"]]],[11,"ne","","",37,[[["dwate"],["self"]],["bool"]]],[11,"eq","","",38,[[["self"],["dwlle"]],["bool"]]],[11,"ne","","",38,[[["self"],["dwlle"]],["bool"]]],[11,"eq","","",39,[[["dwds"],["self"]],["bool"]]],[11,"ne","","",39,[[["dwds"],["self"]],["bool"]]],[11,"eq","","",40,[[["self"],["dwend"]],["bool"]]],[11,"ne","","",40,[[["self"],["dwend"]],["bool"]]],[11,"eq","","",41,[[["dwaccess"],["self"]],["bool"]]],[11,"ne","","",41,[[["dwaccess"],["self"]],["bool"]]],[11,"eq","","",42,[[["dwvis"],["self"]],["bool"]]],[11,"ne","","",42,[[["dwvis"],["self"]],["bool"]]],[11,"eq","","",43,[[["self"],["dwvirtuality"]],["bool"]]],[11,"ne","","",43,[[["self"],["dwvirtuality"]],["bool"]]],[11,"eq","","",44,[[["dwlang"],["self"]],["bool"]]],[11,"ne","","",44,[[["dwlang"],["self"]],["bool"]]],[11,"eq","","",45,[[["self"],["dwaddr"]],["bool"]]],[11,"ne","","",45,[[["self"],["dwaddr"]],["bool"]]],[11,"eq","","",46,[[["dwid"],["self"]],["bool"]]],[11,"ne","","",46,[[["dwid"],["self"]],["bool"]]],[11,"eq","","",47,[[["self"],["dwcc"]],["bool"]]],[11,"ne","","",47,[[["self"],["dwcc"]],["bool"]]],[11,"eq","","",48,[[["dwinl"],["self"]],["bool"]]],[11,"ne","","",48,[[["dwinl"],["self"]],["bool"]]],[11,"eq","","",49,[[["dword"],["self"]],["bool"]]],[11,"ne","","",49,[[["dword"],["self"]],["bool"]]],[11,"eq","","",50,[[["dwdsc"],["self"]],["bool"]]],[11,"ne","","",50,[[["dwdsc"],["self"]],["bool"]]],[11,"eq","","",51,[[["dwidx"],["self"]],["bool"]]],[11,"ne","","",51,[[["dwidx"],["self"]],["bool"]]],[11,"eq","","",52,[[["self"],["dwdefaulted"]],["bool"]]],[11,"ne","","",52,[[["self"],["dwdefaulted"]],["bool"]]],[11,"eq","","",53,[[["self"],["dwlns"]],["bool"]]],[11,"ne","","",53,[[["self"],["dwlns"]],["bool"]]],[11,"eq","","",54,[[["dwlne"],["self"]],["bool"]]],[11,"ne","","",54,[[["dwlne"],["self"]],["bool"]]],[11,"eq","","",55,[[["self"],["dwlnct"]],["bool"]]],[11,"ne","","",55,[[["self"],["dwlnct"]],["bool"]]],[11,"eq","","",56,[[["self"],["dwmacro"]],["bool"]]],[11,"ne","","",56,[[["self"],["dwmacro"]],["bool"]]],[11,"eq","","",57,[[["dwrle"],["self"]],["bool"]]],[11,"ne","","",57,[[["dwrle"],["self"]],["bool"]]],[11,"eq","","",58,[[["dwop"],["self"]],["bool"]]],[11,"ne","","",58,[[["dwop"],["self"]],["bool"]]],[11,"eq","","",59,[[["self"],["dwehpe"]],["bool"]]],[11,"ne","","",59,[[["self"],["dwehpe"]],["bool"]]],[11,"eq","gimli","",27,[[["runtimeendian"],["self"]],["bool"]]],[11,"eq","","",231,[[["self"],["littleendian"]],["bool"]]],[11,"eq","","",230,[[["self"],["bigendian"]],["bool"]]],[11,"eq","gimli::read","",157,[[["self"],["debugframe"]],["bool"]]],[11,"ne","","",157,[[["self"],["debugframe"]],["bool"]]],[11,"eq","","",158,[[["self"],["ehframehdr"]],["bool"]]],[11,"ne","","",158,[[["self"],["ehframehdr"]],["bool"]]],[11,"eq","","",161,[[["ehframe"],["self"]],["bool"]]],[11,"ne","","",161,[[["ehframe"],["self"]],["bool"]]],[11,"eq","","",60,[[["self"],["baseaddresses"]],["bool"]]],[11,"ne","","",60,[[["self"],["baseaddresses"]],["bool"]]],[11,"eq","","",61,[[["sectionbaseaddresses"],["self"]],["bool"]]],[11,"ne","","",61,[[["sectionbaseaddresses"],["self"]],["bool"]]],[11,"eq","","",72,[[["cieorfde"],["self"]],["bool"]]],[11,"ne","","",72,[[["cieorfde"],["self"]],["bool"]]],[11,"eq","","",232,[[["augmentation"],["self"]],["bool"]]],[11,"ne","","",232,[[["augmentation"],["self"]],["bool"]]],[11,"eq","","",163,[[["commoninformationentry"],["self"]],["bool"]]],[11,"ne","","",163,[[["commoninformationentry"],["self"]],["bool"]]],[11,"eq","","",164,[[["self"],["partialframedescriptionentry"]],["bool"]]],[11,"ne","","",164,[[["self"],["partialframedescriptionentry"]],["bool"]]],[11,"eq","","",165,[[["self"],["framedescriptionentry"]],["bool"]]],[11,"ne","","",165,[[["self"],["framedescriptionentry"]],["bool"]]],[11,"eq","","",233,[[["unwindcontext"],["self"]],["bool"]]],[11,"eq","","",168,[[["unwindtablerow"],["self"]],["bool"]]],[11,"ne","","",168,[[["unwindtablerow"],["self"]],["bool"]]],[11,"eq","","",73,[[["self"],["cfarule"]],["bool"]]],[11,"ne","","",73,[[["self"],["cfarule"]],["bool"]]],[11,"eq","","",75,[[["self"],["registerrule"]],["bool"]]],[11,"ne","","",75,[[["self"],["registerrule"]],["bool"]]],[11,"eq","","",76,[[["self"],["callframeinstruction"]],["bool"]]],[11,"ne","","",76,[[["self"],["callframeinstruction"]],["bool"]]],[11,"eq","","",96,[[["self"],["pointer"]],["bool"]]],[11,"ne","","",96,[[["self"],["pointer"]],["bool"]]],[11,"eq","","",171,[[["self"],["endianslice"]],["bool"]]],[11,"ne","","",171,[[["self"],["endianslice"]],["bool"]]],[11,"eq","","",64,[[["readeroffsetid"],["self"]],["bool"]]],[11,"ne","","",64,[[["readeroffsetid"],["self"]],["bool"]]],[11,"eq","","",174,[[["abbreviation"],["self"]],["bool"]]],[11,"ne","","",174,[[["abbreviation"],["self"]],["bool"]]],[11,"eq","","",175,[[["self"],["attributespecification"]],["bool"]]],[11,"ne","","",175,[[["self"],["attributespecification"]],["bool"]]],[11,"eq","","",176,[[["self"],["arangeentry"]],["bool"]]],[11,"ne","","",176,[[["self"],["arangeentry"]],["bool"]]],[11,"eq","","",97,[[["self"],["lineinstruction"]],["bool"]]],[11,"ne","","",97,[[["self"],["lineinstruction"]],["bool"]]],[11,"eq","","",182,[[["linerow"],["self"]],["bool"]]],[11,"ne","","",182,[[["linerow"],["self"]],["bool"]]],[11,"eq","","",98,[[["self"],["columntype"]],["bool"]]],[11,"ne","","",98,[[["self"],["columntype"]],["bool"]]],[11,"eq","","",183,[[["self"],["lineprogramheader"]],["bool"]]],[11,"ne","","",183,[[["self"],["lineprogramheader"]],["bool"]]],[11,"eq","","",184,[[["self"],["incompletelineprogram"]],["bool"]]],[11,"ne","","",184,[[["self"],["incompletelineprogram"]],["bool"]]],[11,"eq","","",185,[[["completelineprogram"],["self"]],["bool"]]],[11,"ne","","",185,[[["completelineprogram"],["self"]],["bool"]]],[11,"eq","","",186,[[["fileentry"],["self"]],["bool"]]],[11,"ne","","",186,[[["fileentry"],["self"]],["bool"]]],[11,"eq","","",66,[[["self"],["fileentryformat"]],["bool"]]],[11,"ne","","",66,[[["self"],["fileentryformat"]],["bool"]]],[11,"eq","","",67,[[["self"],["locationlistentry"]],["bool"]]],[11,"ne","","",67,[[["self"],["locationlistentry"]],["bool"]]],[11,"eq","","",109,[[["self"],["diereference"]],["bool"]]],[11,"ne","","",109,[[["self"],["diereference"]],["bool"]]],[11,"eq","","",110,[[["self"],["operation"]],["bool"]]],[11,"ne","","",110,[[["self"],["operation"]],["bool"]]],[11,"eq","","",133,[[["self"],["location"]],["bool"]]],[11,"ne","","",133,[[["self"],["location"]],["bool"]]],[11,"eq","","",68,[[["piece"],["self"]],["bool"]]],[11,"ne","","",68,[[["piece"],["self"]],["bool"]]],[11,"eq","","",139,[[["self"],["evaluationresult"]],["bool"]]],[11,"ne","","",139,[[["self"],["evaluationresult"]],["bool"]]],[11,"eq","","",69,[[["expression"],["self"]],["bool"]]],[11,"ne","","",69,[[["expression"],["self"]],["bool"]]],[11,"eq","","",70,[[["self"],["range"]],["bool"]]],[11,"ne","","",70,[[["self"],["range"]],["bool"]]],[11,"eq","","",71,[[["unitoffset"],["self"]],["bool"]]],[11,"ne","","",71,[[["unitoffset"],["self"]],["bool"]]],[11,"eq","","",210,[[["self"],["compilationunitheader"]],["bool"]]],[11,"ne","","",210,[[["self"],["compilationunitheader"]],["bool"]]],[11,"eq","","",211,[[["self"],["unitheader"]],["bool"]]],[11,"ne","","",211,[[["self"],["unitheader"]],["bool"]]],[11,"eq","","",152,[[["self"],["attributevalue"]],["bool"]]],[11,"ne","","",152,[[["self"],["attributevalue"]],["bool"]]],[11,"eq","","",213,[[["self"],["attribute"]],["bool"]]],[11,"ne","","",213,[[["self"],["attribute"]],["bool"]]],[11,"eq","","",222,[[["self"],["typeunitheader"]],["bool"]]],[11,"ne","","",222,[[["self"],["typeunitheader"]],["bool"]]],[11,"eq","","",153,[[["self"],["valuetype"]],["bool"]]],[11,"eq","","",154,[[["value"],["self"]],["bool"]]],[11,"ne","","",154,[[["value"],["self"]],["bool"]]],[11,"eq","","",155,[[["self"],["error"]],["bool"]]],[11,"ne","","",155,[[["self"],["error"]],["bool"]]],[11,"cmp","gimli","",2,[[["self"],["register"]],["ordering"]]],[11,"cmp","","",6,[[["debuginfooffset"],["self"]],["ordering"]]],[11,"cmp","","",20,[[["self"],["debugtypesoffset"]],["ordering"]]],[11,"cmp","","",25,[[["self"],["unitsectionoffset"]],["ordering"]]],[11,"cmp","","",26,[[["self"],["sectionid"]],["ordering"]]],[11,"cmp","gimli::constants","",31,[[["dwut"],["self"]],["ordering"]]],[11,"cmp","","",32,[[["dwcfa"],["self"]],["ordering"]]],[11,"cmp","","",33,[[["dwchildren"],["self"]],["ordering"]]],[11,"cmp","","",34,[[["self"],["dwtag"]],["ordering"]]],[11,"cmp","","",35,[[["dwat"],["self"]],["ordering"]]],[11,"cmp","","",36,[[["self"],["dwform"]],["ordering"]]],[11,"cmp","","",37,[[["dwate"],["self"]],["ordering"]]],[11,"cmp","","",38,[[["self"],["dwlle"]],["ordering"]]],[11,"cmp","","",39,[[["dwds"],["self"]],["ordering"]]],[11,"cmp","","",40,[[["self"],["dwend"]],["ordering"]]],[11,"cmp","","",41,[[["dwaccess"],["self"]],["ordering"]]],[11,"cmp","","",42,[[["dwvis"],["self"]],["ordering"]]],[11,"cmp","","",43,[[["self"],["dwvirtuality"]],["ordering"]]],[11,"cmp","","",44,[[["dwlang"],["self"]],["ordering"]]],[11,"cmp","","",45,[[["self"],["dwaddr"]],["ordering"]]],[11,"cmp","","",46,[[["dwid"],["self"]],["ordering"]]],[11,"cmp","","",47,[[["self"],["dwcc"]],["ordering"]]],[11,"cmp","","",48,[[["dwinl"],["self"]],["ordering"]]],[11,"cmp","","",49,[[["dword"],["self"]],["ordering"]]],[11,"cmp","","",50,[[["dwdsc"],["self"]],["ordering"]]],[11,"cmp","","",51,[[["dwidx"],["self"]],["ordering"]]],[11,"cmp","","",52,[[["self"],["dwdefaulted"]],["ordering"]]],[11,"cmp","","",53,[[["self"],["dwlns"]],["ordering"]]],[11,"cmp","","",54,[[["dwlne"],["self"]],["ordering"]]],[11,"cmp","","",55,[[["self"],["dwlnct"]],["ordering"]]],[11,"cmp","","",56,[[["self"],["dwmacro"]],["ordering"]]],[11,"cmp","","",57,[[["dwrle"],["self"]],["ordering"]]],[11,"cmp","","",58,[[["dwop"],["self"]],["ordering"]]],[11,"cmp","","",59,[[["self"],["dwehpe"]],["ordering"]]],[11,"cmp","gimli::read","",176,[[["self"],["arangeentry"]],["ordering"]]],[11,"cmp","","",98,[[["self"],["columntype"]],["ordering"]]],[11,"cmp","","",71,[[["unitoffset"],["self"]],["ordering"]]],[11,"partial_cmp","gimli","",2,[[["self"],["register"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["self"],["register"]],["bool"]]],[11,"le","","",2,[[["self"],["register"]],["bool"]]],[11,"gt","","",2,[[["self"],["register"]],["bool"]]],[11,"ge","","",2,[[["self"],["register"]],["bool"]]],[11,"partial_cmp","","",6,[[["debuginfooffset"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["debuginfooffset"],["self"]],["bool"]]],[11,"le","","",6,[[["debuginfooffset"],["self"]],["bool"]]],[11,"gt","","",6,[[["debuginfooffset"],["self"]],["bool"]]],[11,"ge","","",6,[[["debuginfooffset"],["self"]],["bool"]]],[11,"partial_cmp","","",20,[[["self"],["debugtypesoffset"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",20,[[["self"],["debugtypesoffset"]],["bool"]]],[11,"le","","",20,[[["self"],["debugtypesoffset"]],["bool"]]],[11,"gt","","",20,[[["self"],["debugtypesoffset"]],["bool"]]],[11,"ge","","",20,[[["self"],["debugtypesoffset"]],["bool"]]],[11,"partial_cmp","","",25,[[["self"],["unitsectionoffset"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",25,[[["self"],["unitsectionoffset"]],["bool"]]],[11,"le","","",25,[[["self"],["unitsectionoffset"]],["bool"]]],[11,"gt","","",25,[[["self"],["unitsectionoffset"]],["bool"]]],[11,"ge","","",25,[[["self"],["unitsectionoffset"]],["bool"]]],[11,"partial_cmp","","",26,[[["self"],["sectionid"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","gimli::constants","",31,[[["dwut"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",31,[[["dwut"],["self"]],["bool"]]],[11,"le","","",31,[[["dwut"],["self"]],["bool"]]],[11,"gt","","",31,[[["dwut"],["self"]],["bool"]]],[11,"ge","","",31,[[["dwut"],["self"]],["bool"]]],[11,"partial_cmp","","",32,[[["dwcfa"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",32,[[["dwcfa"],["self"]],["bool"]]],[11,"le","","",32,[[["dwcfa"],["self"]],["bool"]]],[11,"gt","","",32,[[["dwcfa"],["self"]],["bool"]]],[11,"ge","","",32,[[["dwcfa"],["self"]],["bool"]]],[11,"partial_cmp","","",33,[[["dwchildren"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",33,[[["dwchildren"],["self"]],["bool"]]],[11,"le","","",33,[[["dwchildren"],["self"]],["bool"]]],[11,"gt","","",33,[[["dwchildren"],["self"]],["bool"]]],[11,"ge","","",33,[[["dwchildren"],["self"]],["bool"]]],[11,"partial_cmp","","",34,[[["self"],["dwtag"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",34,[[["self"],["dwtag"]],["bool"]]],[11,"le","","",34,[[["self"],["dwtag"]],["bool"]]],[11,"gt","","",34,[[["self"],["dwtag"]],["bool"]]],[11,"ge","","",34,[[["self"],["dwtag"]],["bool"]]],[11,"partial_cmp","","",35,[[["dwat"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",35,[[["dwat"],["self"]],["bool"]]],[11,"le","","",35,[[["dwat"],["self"]],["bool"]]],[11,"gt","","",35,[[["dwat"],["self"]],["bool"]]],[11,"ge","","",35,[[["dwat"],["self"]],["bool"]]],[11,"partial_cmp","","",36,[[["self"],["dwform"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",36,[[["self"],["dwform"]],["bool"]]],[11,"le","","",36,[[["self"],["dwform"]],["bool"]]],[11,"gt","","",36,[[["self"],["dwform"]],["bool"]]],[11,"ge","","",36,[[["self"],["dwform"]],["bool"]]],[11,"partial_cmp","","",37,[[["dwate"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",37,[[["dwate"],["self"]],["bool"]]],[11,"le","","",37,[[["dwate"],["self"]],["bool"]]],[11,"gt","","",37,[[["dwate"],["self"]],["bool"]]],[11,"ge","","",37,[[["dwate"],["self"]],["bool"]]],[11,"partial_cmp","","",38,[[["self"],["dwlle"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",38,[[["self"],["dwlle"]],["bool"]]],[11,"le","","",38,[[["self"],["dwlle"]],["bool"]]],[11,"gt","","",38,[[["self"],["dwlle"]],["bool"]]],[11,"ge","","",38,[[["self"],["dwlle"]],["bool"]]],[11,"partial_cmp","","",39,[[["dwds"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",39,[[["dwds"],["self"]],["bool"]]],[11,"le","","",39,[[["dwds"],["self"]],["bool"]]],[11,"gt","","",39,[[["dwds"],["self"]],["bool"]]],[11,"ge","","",39,[[["dwds"],["self"]],["bool"]]],[11,"partial_cmp","","",40,[[["self"],["dwend"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",40,[[["self"],["dwend"]],["bool"]]],[11,"le","","",40,[[["self"],["dwend"]],["bool"]]],[11,"gt","","",40,[[["self"],["dwend"]],["bool"]]],[11,"ge","","",40,[[["self"],["dwend"]],["bool"]]],[11,"partial_cmp","","",41,[[["dwaccess"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",41,[[["dwaccess"],["self"]],["bool"]]],[11,"le","","",41,[[["dwaccess"],["self"]],["bool"]]],[11,"gt","","",41,[[["dwaccess"],["self"]],["bool"]]],[11,"ge","","",41,[[["dwaccess"],["self"]],["bool"]]],[11,"partial_cmp","","",42,[[["dwvis"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",42,[[["dwvis"],["self"]],["bool"]]],[11,"le","","",42,[[["dwvis"],["self"]],["bool"]]],[11,"gt","","",42,[[["dwvis"],["self"]],["bool"]]],[11,"ge","","",42,[[["dwvis"],["self"]],["bool"]]],[11,"partial_cmp","","",43,[[["self"],["dwvirtuality"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",43,[[["self"],["dwvirtuality"]],["bool"]]],[11,"le","","",43,[[["self"],["dwvirtuality"]],["bool"]]],[11,"gt","","",43,[[["self"],["dwvirtuality"]],["bool"]]],[11,"ge","","",43,[[["self"],["dwvirtuality"]],["bool"]]],[11,"partial_cmp","","",44,[[["dwlang"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",44,[[["dwlang"],["self"]],["bool"]]],[11,"le","","",44,[[["dwlang"],["self"]],["bool"]]],[11,"gt","","",44,[[["dwlang"],["self"]],["bool"]]],[11,"ge","","",44,[[["dwlang"],["self"]],["bool"]]],[11,"partial_cmp","","",45,[[["self"],["dwaddr"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",45,[[["self"],["dwaddr"]],["bool"]]],[11,"le","","",45,[[["self"],["dwaddr"]],["bool"]]],[11,"gt","","",45,[[["self"],["dwaddr"]],["bool"]]],[11,"ge","","",45,[[["self"],["dwaddr"]],["bool"]]],[11,"partial_cmp","","",46,[[["dwid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",46,[[["dwid"],["self"]],["bool"]]],[11,"le","","",46,[[["dwid"],["self"]],["bool"]]],[11,"gt","","",46,[[["dwid"],["self"]],["bool"]]],[11,"ge","","",46,[[["dwid"],["self"]],["bool"]]],[11,"partial_cmp","","",47,[[["self"],["dwcc"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",47,[[["self"],["dwcc"]],["bool"]]],[11,"le","","",47,[[["self"],["dwcc"]],["bool"]]],[11,"gt","","",47,[[["self"],["dwcc"]],["bool"]]],[11,"ge","","",47,[[["self"],["dwcc"]],["bool"]]],[11,"partial_cmp","","",48,[[["dwinl"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",48,[[["dwinl"],["self"]],["bool"]]],[11,"le","","",48,[[["dwinl"],["self"]],["bool"]]],[11,"gt","","",48,[[["dwinl"],["self"]],["bool"]]],[11,"ge","","",48,[[["dwinl"],["self"]],["bool"]]],[11,"partial_cmp","","",49,[[["dword"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",49,[[["dword"],["self"]],["bool"]]],[11,"le","","",49,[[["dword"],["self"]],["bool"]]],[11,"gt","","",49,[[["dword"],["self"]],["bool"]]],[11,"ge","","",49,[[["dword"],["self"]],["bool"]]],[11,"partial_cmp","","",50,[[["dwdsc"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",50,[[["dwdsc"],["self"]],["bool"]]],[11,"le","","",50,[[["dwdsc"],["self"]],["bool"]]],[11,"gt","","",50,[[["dwdsc"],["self"]],["bool"]]],[11,"ge","","",50,[[["dwdsc"],["self"]],["bool"]]],[11,"partial_cmp","","",51,[[["dwidx"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",51,[[["dwidx"],["self"]],["bool"]]],[11,"le","","",51,[[["dwidx"],["self"]],["bool"]]],[11,"gt","","",51,[[["dwidx"],["self"]],["bool"]]],[11,"ge","","",51,[[["dwidx"],["self"]],["bool"]]],[11,"partial_cmp","","",52,[[["self"],["dwdefaulted"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",52,[[["self"],["dwdefaulted"]],["bool"]]],[11,"le","","",52,[[["self"],["dwdefaulted"]],["bool"]]],[11,"gt","","",52,[[["self"],["dwdefaulted"]],["bool"]]],[11,"ge","","",52,[[["self"],["dwdefaulted"]],["bool"]]],[11,"partial_cmp","","",53,[[["self"],["dwlns"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",53,[[["self"],["dwlns"]],["bool"]]],[11,"le","","",53,[[["self"],["dwlns"]],["bool"]]],[11,"gt","","",53,[[["self"],["dwlns"]],["bool"]]],[11,"ge","","",53,[[["self"],["dwlns"]],["bool"]]],[11,"partial_cmp","","",54,[[["dwlne"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",54,[[["dwlne"],["self"]],["bool"]]],[11,"le","","",54,[[["dwlne"],["self"]],["bool"]]],[11,"gt","","",54,[[["dwlne"],["self"]],["bool"]]],[11,"ge","","",54,[[["dwlne"],["self"]],["bool"]]],[11,"partial_cmp","","",55,[[["self"],["dwlnct"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",55,[[["self"],["dwlnct"]],["bool"]]],[11,"le","","",55,[[["self"],["dwlnct"]],["bool"]]],[11,"gt","","",55,[[["self"],["dwlnct"]],["bool"]]],[11,"ge","","",55,[[["self"],["dwlnct"]],["bool"]]],[11,"partial_cmp","","",56,[[["self"],["dwmacro"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",56,[[["self"],["dwmacro"]],["bool"]]],[11,"le","","",56,[[["self"],["dwmacro"]],["bool"]]],[11,"gt","","",56,[[["self"],["dwmacro"]],["bool"]]],[11,"ge","","",56,[[["self"],["dwmacro"]],["bool"]]],[11,"partial_cmp","","",57,[[["dwrle"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",57,[[["dwrle"],["self"]],["bool"]]],[11,"le","","",57,[[["dwrle"],["self"]],["bool"]]],[11,"gt","","",57,[[["dwrle"],["self"]],["bool"]]],[11,"ge","","",57,[[["dwrle"],["self"]],["bool"]]],[11,"partial_cmp","","",58,[[["dwop"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",58,[[["dwop"],["self"]],["bool"]]],[11,"le","","",58,[[["dwop"],["self"]],["bool"]]],[11,"gt","","",58,[[["dwop"],["self"]],["bool"]]],[11,"ge","","",58,[[["dwop"],["self"]],["bool"]]],[11,"partial_cmp","","",59,[[["self"],["dwehpe"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",59,[[["self"],["dwehpe"]],["bool"]]],[11,"le","","",59,[[["self"],["dwehpe"]],["bool"]]],[11,"gt","","",59,[[["self"],["dwehpe"]],["bool"]]],[11,"ge","","",59,[[["self"],["dwehpe"]],["bool"]]],[11,"partial_cmp","gimli::read","",176,[[["self"],["arangeentry"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",98,[[["self"],["columntype"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",98,[[["self"],["columntype"]],["bool"]]],[11,"le","","",98,[[["self"],["columntype"]],["bool"]]],[11,"gt","","",98,[[["self"],["columntype"]],["bool"]]],[11,"ge","","",98,[[["self"],["columntype"]],["bool"]]],[11,"partial_cmp","","",71,[[["unitoffset"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",71,[[["unitoffset"],["self"]],["bool"]]],[11,"le","","",71,[[["unitoffset"],["self"]],["bool"]]],[11,"gt","","",71,[[["unitoffset"],["self"]],["bool"]]],[11,"ge","","",71,[[["unitoffset"],["self"]],["bool"]]],[11,"index","","",171,[[["self"],["usize"]]]],[11,"index","","",171,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"hash","gimli","",24,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","gimli::constants","",31,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"hash","","",47,[[["self"],["__h"]]]],[11,"hash","","",48,[[["self"],["__h"]]]],[11,"hash","","",49,[[["self"],["__h"]]]],[11,"hash","","",50,[[["self"],["__h"]]]],[11,"hash","","",51,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["__h"]]]],[11,"hash","","",55,[[["self"],["__h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","","",59,[[["self"],["__h"]]]],[11,"hash","gimli","",27,[[["self"],["__h"]]]],[11,"hash","","",231,[[["self"],["__h"]]]],[11,"hash","","",230,[[["self"],["__h"]]]],[11,"hash","gimli::read","",171,[[["self"],["__h"]]]],[11,"hash","","",67,[[["self"],["__h"]]]],[11,"hash","","",69,[[["self"],["__h"]]]],[11,"hash","","",70,[[["self"],["__h"]]]],[11,"hash","","",71,[[["self"],["__h"]]]],[11,"next","","",234,[[["self"]],["option"]]],[11,"into","","",96,[[],["u64"]]],[11,"into","","",171,[[]]],[11,"clone","gimli","",24,[[["self"]],["format"]]],[11,"clone","","",0,[[["self"]],["encoding"]]],[11,"clone","","",1,[[["self"]],["lineencoding"]]],[11,"clone","","",2,[[["self"]],["register"]]],[11,"clone","","",3,[[["self"]],["debugabbrevoffset"]]],[11,"clone","","",4,[[["self"]],["debugaddrbase"]]],[11,"clone","","",5,[[["self"]],["debugaddrindex"]]],[11,"clone","","",6,[[["self"]],["debuginfooffset"]]],[11,"clone","","",7,[[["self"]],["debuglineoffset"]]],[11,"clone","","",8,[[["self"]],["debuglinestroffset"]]],[11,"clone","","",9,[[["self"]],["locationlistsoffset"]]],[11,"clone","","",10,[[["self"]],["debugloclistsbase"]]],[11,"clone","","",11,[[["self"]],["debugloclistsindex"]]],[11,"clone","","",12,[[["self"]],["debugmacinfooffset"]]],[11,"clone","","",13,[[["self"]],["debugmacrooffset"]]],[11,"clone","","",14,[[["self"]],["rangelistsoffset"]]],[11,"clone","","",15,[[["self"]],["debugrnglistsbase"]]],[11,"clone","","",16,[[["self"]],["debugrnglistsindex"]]],[11,"clone","","",17,[[["self"]],["debugstroffset"]]],[11,"clone","","",18,[[["self"]],["debugstroffsetsbase"]]],[11,"clone","","",19,[[["self"]],["debugstroffsetsindex"]]],[11,"clone","","",20,[[["self"]],["debugtypesoffset"]]],[11,"clone","","",21,[[["self"]],["debugtypesignature"]]],[11,"clone","","",22,[[["self"]],["debugframeoffset"]]],[11,"clone","","",23,[[["self"]],["ehframeoffset"]]],[11,"clone","","",25,[[["self"]],["unitsectionoffset"]]],[11,"clone","","",26,[[["self"]],["sectionid"]]],[11,"clone","","",28,[[["self"]],["arm"]]],[11,"clone","","",29,[[["self"]],["x86"]]],[11,"clone","","",30,[[["self"]],["x86_64"]]],[11,"clone","gimli::constants","",31,[[["self"]],["dwut"]]],[11,"clone","","",32,[[["self"]],["dwcfa"]]],[11,"clone","","",33,[[["self"]],["dwchildren"]]],[11,"clone","","",34,[[["self"]],["dwtag"]]],[11,"clone","","",35,[[["self"]],["dwat"]]],[11,"clone","","",36,[[["self"]],["dwform"]]],[11,"clone","","",37,[[["self"]],["dwate"]]],[11,"clone","","",38,[[["self"]],["dwlle"]]],[11,"clone","","",39,[[["self"]],["dwds"]]],[11,"clone","","",40,[[["self"]],["dwend"]]],[11,"clone","","",41,[[["self"]],["dwaccess"]]],[11,"clone","","",42,[[["self"]],["dwvis"]]],[11,"clone","","",43,[[["self"]],["dwvirtuality"]]],[11,"clone","","",44,[[["self"]],["dwlang"]]],[11,"clone","","",45,[[["self"]],["dwaddr"]]],[11,"clone","","",46,[[["self"]],["dwid"]]],[11,"clone","","",47,[[["self"]],["dwcc"]]],[11,"clone","","",48,[[["self"]],["dwinl"]]],[11,"clone","","",49,[[["self"]],["dword"]]],[11,"clone","","",50,[[["self"]],["dwdsc"]]],[11,"clone","","",51,[[["self"]],["dwidx"]]],[11,"clone","","",52,[[["self"]],["dwdefaulted"]]],[11,"clone","","",53,[[["self"]],["dwlns"]]],[11,"clone","","",54,[[["self"]],["dwlne"]]],[11,"clone","","",55,[[["self"]],["dwlnct"]]],[11,"clone","","",56,[[["self"]],["dwmacro"]]],[11,"clone","","",57,[[["self"]],["dwrle"]]],[11,"clone","","",58,[[["self"]],["dwop"]]],[11,"clone","","",59,[[["self"]],["dwehpe"]]],[11,"clone","gimli","",27,[[["self"]],["runtimeendian"]]],[11,"clone","","",231,[[["self"]],["littleendian"]]],[11,"clone","","",230,[[["self"]],["bigendian"]]],[11,"clone","gimli::read","",156,[[["self"]],["debugaddr"]]],[11,"clone","","",157,[[["self"]],["debugframe"]]],[11,"clone","","",158,[[["self"]],["ehframehdr"]]],[11,"clone","","",159,[[["self"]],["parsedehframehdr"]]],[11,"clone","","",160,[[["self"]],["ehhdrtable"]]],[11,"clone","","",161,[[["self"]],["ehframe"]]],[11,"clone","","",60,[[["self"]],["baseaddresses"]]],[11,"clone","","",61,[[["self"]],["sectionbaseaddresses"]]],[11,"clone","","",162,[[["self"]],["cfientriesiter"]]],[11,"clone","","",72,[[["self"]],["cieorfde"]]],[11,"clone","","",232,[[["self"]],["augmentation"]]],[11,"clone","","",163,[[["self"]],["commoninformationentry"]]],[11,"clone","","",164,[[["self"]],["partialframedescriptionentry"]]],[11,"clone","","",165,[[["self"]],["framedescriptionentry"]]],[11,"clone","","",166,[[["self"]],["uninitializedunwindcontext"]]],[11,"clone","","",233,[[["self"]],["unwindcontext"]]],[11,"clone","","",234,[[["self"]],["registerruleiter"]]],[11,"clone","","",168,[[["self"]],["unwindtablerow"]]],[11,"clone","","",73,[[["self"]],["cfarule"]]],[11,"clone","","",75,[[["self"]],["registerrule"]]],[11,"clone","","",76,[[["self"]],["callframeinstruction"]]],[11,"clone","","",169,[[["self"]],["callframeinstructioniter"]]],[11,"clone","","",96,[[["self"]],["pointer"]]],[11,"clone","","",171,[[["self"]],["endianslice"]]],[11,"clone","","",64,[[["self"]],["readeroffsetid"]]],[11,"clone","","",172,[[["self"]],["debugabbrev"]]],[11,"clone","","",173,[[["self"]],["abbreviations"]]],[11,"clone","","",174,[[["self"]],["abbreviation"]]],[11,"clone","","",175,[[["self"]],["attributespecification"]]],[11,"clone","","",176,[[["self"]],["arangeentry"]]],[11,"clone","","",177,[[["self"]],["debugaranges"]]],[11,"clone","","",178,[[["self"]],["arangeentryiter"]]],[11,"clone","","",179,[[["self"]],["debugline"]]],[11,"clone","","",180,[[["self"]],["linerows"]]],[11,"clone","","",97,[[["self"]],["lineinstruction"]]],[11,"clone","","",181,[[["self"]],["lineinstructions"]]],[11,"clone","","",182,[[["self"]],["linerow"]]],[11,"clone","","",98,[[["self"]],["columntype"]]],[11,"clone","","",65,[[["self"]],["linesequence"]]],[11,"clone","","",183,[[["self"]],["lineprogramheader"]]],[11,"clone","","",184,[[["self"]],["incompletelineprogram"]]],[11,"clone","","",185,[[["self"]],["completelineprogram"]]],[11,"clone","","",186,[[["self"]],["fileentry"]]],[11,"clone","","",66,[[["self"]],["fileentryformat"]]],[11,"clone","","",187,[[["self"]],["debugloc"]]],[11,"clone","","",188,[[["self"]],["debugloclists"]]],[11,"clone","","",189,[[["self"]],["locationlists"]]],[11,"clone","","",99,[[["self"]],["rawloclistentry"]]],[11,"clone","","",67,[[["self"]],["locationlistentry"]]],[11,"clone","","",109,[[["self"]],["diereference"]]],[11,"clone","","",110,[[["self"]],["operation"]]],[11,"clone","","",133,[[["self"]],["location"]]],[11,"clone","","",68,[[["self"]],["piece"]]],[11,"clone","","",69,[[["self"]],["expression"]]],[11,"clone","","",192,[[["self"]],["operationiter"]]],[11,"clone","","",194,[[["self"]],["pubnamesentry"]]],[11,"clone","","",195,[[["self"]],["debugpubnames"]]],[11,"clone","","",196,[[["self"]],["pubnamesentryiter"]]],[11,"clone","","",197,[[["self"]],["pubtypesentry"]]],[11,"clone","","",198,[[["self"]],["debugpubtypes"]]],[11,"clone","","",199,[[["self"]],["pubtypesentryiter"]]],[11,"clone","","",200,[[["self"]],["debugranges"]]],[11,"clone","","",201,[[["self"]],["debugrnglists"]]],[11,"clone","","",202,[[["self"]],["rangelists"]]],[11,"clone","","",143,[[["self"]],["rawrnglistentry"]]],[11,"clone","","",70,[[["self"]],["range"]]],[11,"clone","","",205,[[["self"]],["debugstr"]]],[11,"clone","","",206,[[["self"]],["debugstroffsets"]]],[11,"clone","","",207,[[["self"]],["debuglinestr"]]],[11,"clone","","",71,[[["self"]],["unitoffset"]]],[11,"clone","","",208,[[["self"]],["debuginfo"]]],[11,"clone","","",209,[[["self"]],["compilationunitheadersiter"]]],[11,"clone","","",210,[[["self"]],["compilationunitheader"]]],[11,"clone","","",211,[[["self"]],["unitheader"]]],[11,"clone","","",212,[[["self"]],["debugginginformationentry"]]],[11,"clone","","",152,[[["self"]],["attributevalue"]]],[11,"clone","","",213,[[["self"]],["attribute"]]],[11,"clone","","",214,[[["self"]],["attrsiter"]]],[11,"clone","","",215,[[["self"]],["entriesraw"]]],[11,"clone","","",216,[[["self"]],["entriescursor"]]],[11,"clone","","",217,[[["self"]],["entriestree"]]],[11,"clone","","",220,[[["self"]],["debugtypes"]]],[11,"clone","","",221,[[["self"]],["typeunitheadersiter"]]],[11,"clone","","",222,[[["self"]],["typeunitheader"]]],[11,"clone","","",153,[[["self"]],["valuetype"]]],[11,"clone","","",154,[[["self"]],["value"]]],[11,"clone","","",155,[[["self"]],["error"]]],[11,"default","gimli","",1,[[],["self"]]],[11,"default","","",27,[[],["runtimeendian"]]],[11,"default","","",231,[[],["littleendian"]]],[11,"default","","",230,[[],["bigendian"]]],[11,"default","gimli::read","",156,[[],["debugaddr"]]],[11,"default","","",60,[[],["baseaddresses"]]],[11,"default","","",61,[[],["sectionbaseaddresses"]]],[11,"default","","",232,[[],["augmentation"]]],[11,"default","","",166,[[],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"default","","",73,[[],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"default","","",62,[[],["dwarf"]]],[11,"default","","",170,[[],["self"]]],[11,"default","","",171,[[],["endianslice"]]],[11,"default","","",172,[[],["debugabbrev"]]],[11,"default","","",173,[[],["abbreviations"]]],[11,"default","","",179,[[],["debugline"]]],[11,"default","","",187,[[],["debugloc"]]],[11,"default","","",188,[[],["debugloclists"]]],[11,"default","","",189,[[],["locationlists"]]],[11,"default","","",200,[[],["debugranges"]]],[11,"default","","",201,[[],["debugrnglists"]]],[11,"default","","",202,[[],["rangelists"]]],[11,"default","","",205,[[],["debugstr"]]],[11,"default","","",206,[[],["debugstroffsets"]]],[11,"default","","",207,[[],["debuglinestr"]]],[11,"default","","",208,[[],["debuginfo"]]],[11,"default","","",220,[[],["debugtypes"]]],[11,"is_little_endian","gimli","Return true for little endian byte order.",229,[[],["bool"]]],[11,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",229,[[],["u16"]]],[11,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",229,[[],["u32"]]],[11,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",229,[[],["u64"]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",229,[[["self"]],["u64"]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",229,[[],["i16"]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",229,[[],["i32"]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",229,[[],["i64"]]],[11,"read_f32","","Reads a 32 bit floating point number from `buf`.",229,[[],["f32"]]],[11,"read_f64","","Reads a 32 bit floating point number from `buf`.",229,[[],["f64"]]],[11,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",229,[[["u16"]]]],[11,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",229,[[["u32"]]]],[11,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",229,[[["u64"]]]],[11,"entries","gimli::read","Iterate over the `CommonInformationEntry`s and…",224,[[["self"],["baseaddresses"]],["cfientriesiter"]]],[11,"cie_from_offset","","Parse the `CommonInformationEntry` at the given offset.",224,[[["self"],["baseaddresses"]],[["result",["commoninformationentry"]],["commoninformationentry"]]]],[11,"partial_fde_from_offset","","Parse the `PartialFrameDescriptionEntry` at the given…",224,[[["self"],["baseaddresses"]],[["result",["partialframedescriptionentry"]],["partialframedescriptionentry"]]]],[11,"fde_from_offset","","Parse the `FrameDescriptionEntry` at the given offset.",224,[[["f"],["self"],["baseaddresses"]],[["framedescriptionentry"],["result",["framedescriptionentry"]]]]],[11,"fde_for_address","","Find the `FrameDescriptionEntry` for the given address.",224,[[["baseaddresses"],["f"],["u64"],["self"]],[["framedescriptionentry"],["result",["framedescriptionentry"]]]]],[11,"unwind_info_for_address","","Find the frame unwind information for the given address.",224,[[["baseaddresses"],["u64"],["f"],["self"],["uninitializedunwindcontext"]],[["unwindtablerow"],["result",["unwindtablerow"]]]]],[11,"read_u8_array","","Read a u8 array.",226,[[["self"]],["result"]]],[11,"is_empty","","Return true if the number of bytes remaining is zero.",226,[[["self"]],["bool"]]],[11,"read_u8","","Read a u8.",226,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Read an i8.",226,[[["self"]],[["i8"],["result",["i8"]]]]],[11,"read_u16","","Read a u16.",226,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Read an i16.",226,[[["self"]],[["result",["i16"]],["i16"]]]],[11,"read_u32","","Read a u32.",226,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"read_i32","","Read an i32.",226,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u64","","Read a u64.",226,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_i64","","Read an i64.",226,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_f32","","Read a f32.",226,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Read a f64.",226,[[["self"]],[["result",["f64"]],["f64"]]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",226,[[["self"],["usize"]],[["result",["u64"]],["u64"]]]],[11,"read_null_terminated_slice","","Read a null-terminated slice, and return it (excluding the…",226,[[["self"]],["result"]]],[11,"read_uleb128","","Read an unsigned LEB128 encoded integer.",226,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_uleb128_u16","","Read an unsigned LEB128 encoded u16.",226,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_sleb128","","Read a signed LEB128 encoded integer.",226,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_initial_length","","Read an initial length field.",226,[[["self"]],["result"]]],[11,"read_address","","Read an address-sized integer, and return it as a `u64`.",226,[[["self"],["u8"]],[["result",["u64"]],["u64"]]]],[11,"read_word","","Parse a word-sized integer according to the DWARF format.",226,[[["self"],["format"]],["result"]]],[11,"read_length","","Parse a word-sized section length according to the DWARF…",226,[[["self"],["format"]],["result"]]],[11,"read_offset","","Parse a word-sized section offset according to the DWARF…",226,[[["self"],["format"]],["result"]]],[11,"read_sized_offset","","Parse a section offset of the given size.",226,[[["self"],["u8"]],["result"]]]],"p":[[3,"Encoding"],[3,"LineEncoding"],[3,"Register"],[3,"DebugAbbrevOffset"],[3,"DebugAddrBase"],[3,"DebugAddrIndex"],[3,"DebugInfoOffset"],[3,"DebugLineOffset"],[3,"DebugLineStrOffset"],[3,"LocationListsOffset"],[3,"DebugLocListsBase"],[3,"DebugLocListsIndex"],[3,"DebugMacinfoOffset"],[3,"DebugMacroOffset"],[3,"RangeListsOffset"],[3,"DebugRngListsBase"],[3,"DebugRngListsIndex"],[3,"DebugStrOffset"],[3,"DebugStrOffsetsBase"],[3,"DebugStrOffsetsIndex"],[3,"DebugTypesOffset"],[3,"DebugTypeSignature"],[3,"DebugFrameOffset"],[3,"EhFrameOffset"],[4,"Format"],[4,"UnitSectionOffset"],[4,"SectionId"],[4,"RunTimeEndian"],[3,"Arm"],[3,"X86"],[3,"X86_64"],[3,"DwUt"],[3,"DwCfa"],[3,"DwChildren"],[3,"DwTag"],[3,"DwAt"],[3,"DwForm"],[3,"DwAte"],[3,"DwLle"],[3,"DwDs"],[3,"DwEnd"],[3,"DwAccess"],[3,"DwVis"],[3,"DwVirtuality"],[3,"DwLang"],[3,"DwAddr"],[3,"DwId"],[3,"DwCc"],[3,"DwInl"],[3,"DwOrd"],[3,"DwDsc"],[3,"DwIdx"],[3,"DwDefaulted"],[3,"DwLns"],[3,"DwLne"],[3,"DwLnct"],[3,"DwMacro"],[3,"DwRle"],[3,"DwOp"],[3,"DwEhPe"],[3,"BaseAddresses"],[3,"SectionBaseAddresses"],[3,"Dwarf"],[3,"Unit"],[3,"ReaderOffsetId"],[3,"LineSequence"],[3,"FileEntryFormat"],[3,"LocationListEntry"],[3,"Piece"],[3,"Expression"],[3,"Range"],[3,"UnitOffset"],[4,"CieOrFde"],[4,"CfaRule"],[13,"RegisterAndOffset"],[4,"RegisterRule"],[4,"CallFrameInstruction"],[13,"SetLoc"],[13,"AdvanceLoc"],[13,"DefCfa"],[13,"DefCfaSf"],[13,"DefCfaRegister"],[13,"DefCfaOffset"],[13,"DefCfaOffsetSf"],[13,"DefCfaExpression"],[13,"Undefined"],[13,"SameValue"],[13,"Offset"],[13,"OffsetExtendedSf"],[13,"ValOffset"],[13,"ValOffsetSf"],[13,"Register"],[13,"Expression"],[13,"ValExpression"],[13,"Restore"],[13,"ArgsSize"],[4,"Pointer"],[4,"LineInstruction"],[4,"ColumnType"],[4,"RawLocListEntry"],[13,"AddressOrOffsetPair"],[13,"BaseAddress"],[13,"BaseAddressx"],[13,"StartxEndx"],[13,"StartxLength"],[13,"OffsetPair"],[13,"DefaultLocation"],[13,"StartEnd"],[13,"StartLength"],[4,"DieReference"],[4,"Operation"],[13,"Deref"],[13,"Pick"],[13,"PlusConstant"],[13,"Bra"],[13,"Skip"],[13,"UnsignedConstant"],[13,"SignedConstant"],[13,"Register"],[13,"RegisterOffset"],[13,"FrameOffset"],[13,"Call"],[13,"Piece"],[13,"ImplicitValue"],[13,"ImplicitPointer"],[13,"EntryValue"],[13,"ParameterRef"],[13,"Address"],[13,"AddressIndex"],[13,"ConstantIndex"],[13,"TypedLiteral"],[13,"Convert"],[13,"Reinterpret"],[4,"Location"],[13,"Register"],[13,"Address"],[13,"Value"],[13,"Bytes"],[13,"ImplicitPointer"],[4,"EvaluationResult"],[13,"RequiresMemory"],[13,"RequiresRegister"],[13,"RequiresIndexedAddress"],[4,"RawRngListEntry"],[13,"AddressOrOffsetPair"],[13,"BaseAddress"],[13,"BaseAddressx"],[13,"StartxEndx"],[13,"StartxLength"],[13,"OffsetPair"],[13,"StartEnd"],[13,"StartLength"],[4,"AttributeValue"],[4,"ValueType"],[4,"Value"],[4,"Error"],[3,"DebugAddr"],[3,"DebugFrame"],[3,"EhFrameHdr"],[3,"ParsedEhFrameHdr"],[3,"EhHdrTable"],[3,"EhFrame"],[3,"CfiEntriesIter"],[3,"CommonInformationEntry"],[3,"PartialFrameDescriptionEntry"],[3,"FrameDescriptionEntry"],[3,"UninitializedUnwindContext"],[3,"UnwindTable"],[3,"UnwindTableRow"],[3,"CallFrameInstructionIter"],[3,"RangeIter"],[3,"EndianSlice"],[3,"DebugAbbrev"],[3,"Abbreviations"],[3,"Abbreviation"],[3,"AttributeSpecification"],[3,"ArangeEntry"],[3,"DebugAranges"],[3,"ArangeEntryIter"],[3,"DebugLine"],[3,"LineRows"],[3,"LineInstructions"],[3,"LineRow"],[3,"LineProgramHeader"],[3,"IncompleteLineProgram"],[3,"CompleteLineProgram"],[3,"FileEntry"],[3,"DebugLoc"],[3,"DebugLocLists"],[3,"LocationLists"],[3,"RawLocListIter"],[3,"LocListIter"],[3,"OperationIter"],[3,"Evaluation"],[3,"PubNamesEntry"],[3,"DebugPubNames"],[3,"PubNamesEntryIter"],[3,"PubTypesEntry"],[3,"DebugPubTypes"],[3,"PubTypesEntryIter"],[3,"DebugRanges"],[3,"DebugRngLists"],[3,"RangeLists"],[3,"RawRngListIter"],[3,"RngListIter"],[3,"DebugStr"],[3,"DebugStrOffsets"],[3,"DebugLineStr"],[3,"DebugInfo"],[3,"CompilationUnitHeadersIter"],[3,"CompilationUnitHeader"],[3,"UnitHeader"],[3,"DebuggingInformationEntry"],[3,"Attribute"],[3,"AttrsIter"],[3,"EntriesRaw"],[3,"EntriesCursor"],[3,"EntriesTree"],[3,"EntriesTreeNode"],[3,"EntriesTreeIter"],[3,"DebugTypes"],[3,"TypeUnitHeadersIter"],[3,"TypeUnitHeader"],[8,"UnwindOffset"],[8,"UnwindSection"],[8,"ReaderOffset"],[8,"Reader"],[8,"LineProgram"],[8,"Section"],[8,"Endianity"],[3,"BigEndian"],[3,"LittleEndian"],[3,"Augmentation"],[3,"UnwindContext"],[3,"RegisterRuleIter"]]};
searchIndex["hex"] = {"doc":"Encoding and decoding hex strings.","i":[[4,"FromHexError","hex","The error type for decoding a hex string into `Vec<u8>` or…",null,null],[13,"InvalidHexCharacter","","An invalid character was found. Valid ones are: `0...9`,…",0,null],[12,"c","hex::FromHexError","",1,null],[12,"index","","",1,null],[13,"OddLength","hex","A hex string's length needs to be even, as two digits…",0,null],[13,"InvalidStringLength","","If the hex string is decoded into a fixed sized container,…",0,null],[5,"encode","","Encodes `data` as hex string using lowercase characters.",null,[[["asref"]],["string"]]],[5,"encode_upper","","Encodes `data` as hex string using uppercase characters.",null,[[["asref"]],["string"]]],[5,"decode","","Decodes a hex string into raw bytes.",null,[[["asref"]],[["result",["vec","fromhexerror"]],["fromhexerror"],["vec",["u8"]]]]],[5,"decode_to_slice","","Decode a hex string into a mutable bytes slice.",null,[[["asref"]],[["result",["fromhexerror"]],["fromhexerror"]]]],[5,"encode_to_slice","","Encodes some bytes into a mutable slice of bytes.",null,[[["asref"]],[["result",["fromhexerror"]],["fromhexerror"]]]],[8,"ToHex","","Encoding values as hex string.",null,null],[10,"encode_hex","","Encode the hex strict representing `self` into the…",2,[[["self"]],[["fromiterator",["char"]],["char"]]]],[10,"encode_hex_upper","","Encode the hex strict representing `self` into the…",2,[[["self"]],[["fromiterator",["char"]],["char"]]]],[8,"FromHex","","Types that can be decoded from a hex string.",null,null],[16,"Error","","",3,null],[10,"from_hex","","Creates an instance of type `Self` from the given hex…",3,[[["asref"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["fromhexerror"]]],[11,"eq","","",0,[[["self"],["fromhexerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["fromhexerror"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"FromHexError"],[13,"InvalidHexCharacter"],[8,"ToHex"],[8,"FromHex"]]};
searchIndex["indicatif"] = {"doc":"indicatif is a library for Rust that helps you build…","i":[[3,"BinaryBytes","indicatif","Formats bytes for human readability using ISO/IEC prefixes",null,null],[12,"0","","",0,null],[3,"DecimalBytes","","Formats bytes for human readability using SI prefixes",null,null],[12,"0","","",1,null],[3,"FormattedDuration","","Wraps an std duration for human basic formatting.",null,null],[12,"0","","",2,null],[3,"HumanBytes","","Formats bytes for human readability",null,null],[12,"0","","",3,null],[3,"HumanDuration","","Wraps an std duration for human readable formatting.",null,null],[12,"0","","",4,null],[3,"ProgressBarIter","","Wraps an iterator to display its progress.",null,null],[3,"MultiProgress","","Manages multiple progress bars from different threads.",null,null],[3,"ProgressBar","","A progress bar or spinner.",null,null],[3,"ProgressBarWrap","","wraps an io-object, either a Reader or a Writer (or both).",null,null],[3,"ProgressDrawTarget","","Target for draw operations",null,null],[3,"ProgressStyle","","Controls the rendering style of progress bars.",null,null],[11,"stdout","","Draw to a buffered stdout terminal at a max of 15 times a…",5,[[],["progressdrawtarget"]]],[11,"stderr","","Draw to a buffered stderr terminal at a max of 15 times a…",5,[[],["progressdrawtarget"]]],[11,"stdout_with_hz","","Draw to a buffered stdout terminal at a max of…",5,[[["u64"]],["progressdrawtarget"]]],[11,"stderr_with_hz","","Draw to a buffered stderr terminal at a max of…",5,[[["u64"]],["progressdrawtarget"]]],[11,"stdout_nohz","","Draw to a buffered stdout terminal without max framerate.",5,[[],["progressdrawtarget"]]],[11,"stderr_nohz","","Draw to a buffered stderr terminal without max framerate.",5,[[],["progressdrawtarget"]]],[11,"to_term","","Draw to a terminal, optionally with a specific refresh rate.",5,[[["term"]],["progressdrawtarget"]]],[11,"hidden","","A hidden draw target.",5,[[],["progressdrawtarget"]]],[11,"is_hidden","","Returns true if the draw target is hidden.",5,[[["self"]],["bool"]]],[11,"new","","Creates a new progress bar with a given length.",6,[[["u64"]],["progressbar"]]],[11,"hidden","","Creates a completely hidden progress bar.",6,[[],["progressbar"]]],[11,"with_draw_target","","Creates a new progress bar with a given length and draw…",6,[[["u64"],["progressdrawtarget"]],["progressbar"]]],[11,"with_style","","A convenience builder-like function for a progress bar…",6,[[["progressstyle"]],["progressbar"]]],[11,"new_spinner","","Creates a new spinner.",6,[[],["progressbar"]]],[11,"set_style","","Overrides the stored style.",6,[[["progressstyle"],["self"]]]],[11,"enable_steady_tick","","Spawns a background thread to tick the progress bar.",6,[[["self"],["u64"]]]],[11,"disable_steady_tick","","Undoes `enable_steady_tick`.",6,[[["self"]]]],[11,"set_draw_delta","","Limit redrawing of progress bar to every `n` steps.…",6,[[["self"],["u64"]]]],[11,"tick","","Manually ticks the spinner or progress bar.",6,[[["self"]]]],[11,"inc","","Advances the position of a progress bar by delta.",6,[[["self"],["u64"]]]],[11,"is_hidden","","A quick convenience check if the progress bar is hidden.",6,[[["self"]],["bool"]]],[11,"is_finished","","",6,[[["self"]],["bool"]]],[11,"println","","Print a log line above the progress bar.",6,[[["string"],["self"],["into",["string"]]]]],[11,"set_position","","Sets the position of the progress bar.",6,[[["self"],["u64"]]]],[11,"set_length","","Sets the length of the progress bar.",6,[[["self"],["u64"]]]],[11,"inc_length","","Increase the length of the progress bar.",6,[[["self"],["u64"]]]],[11,"set_prefix","","Sets the current prefix of the progress bar.",6,[[["str"],["self"]]]],[11,"set_message","","Sets the current message of the progress bar.",6,[[["str"],["self"]]]],[11,"reset_eta","","Resets the ETA calculation.",6,[[["self"]]]],[11,"reset_elapsed","","Resets elapsed time",6,[[["self"]]]],[11,"reset","","",6,[[["self"]]]],[11,"finish","","Finishes the progress bar and leaves the current message.",6,[[["self"]]]],[11,"finish_at_current_pos","","Finishes the progress bar at current position and leaves…",6,[[["self"]]]],[11,"finish_with_message","","Finishes the progress bar and sets a message.",6,[[["str"],["self"]]]],[11,"finish_and_clear","","Finishes the progress bar and completely clears it.",6,[[["self"]]]],[11,"abandon","","Finishes the progress bar and leaves the current message…",6,[[["self"]]]],[11,"abandon_with_message","","Finishes the progress bar and sets a message, and leaves…",6,[[["str"],["self"]]]],[11,"set_draw_target","","Sets a different draw target for the progress bar.",6,[[["self"],["progressdrawtarget"]]]],[11,"wrap_iter","","Wraps an iterator with the progress bar.",6,[[["self"],["iterator"]],[["progressbariter"],["iterator"]]]],[11,"wrap_read","","Wraps a Reader with the progress bar.",6,[[["self"],["read"]],[["progressbarwrap"],["read"]]]],[11,"wrap_write","","Wraps a Writer with the progress bar.",6,[[["self"],["write"]],[["progressbarwrap"],["write"]]]],[11,"position","","",6,[[["self"]],["u64"]]],[11,"new","","Creates a new multi progress object.",7,[[],["multiprogress"]]],[11,"with_draw_target","","Creates a new multi progress object with the given draw…",7,[[["progressdrawtarget"]],["multiprogress"]]],[11,"set_draw_target","","Sets a different draw target for the multiprogress bar.",7,[[["self"],["progressdrawtarget"]]]],[11,"set_move_cursor","","Set whether we should try to move the cursor when possible…",7,[[["self"],["bool"]]]],[11,"add","","Adds a progress bar.",7,[[["self"],["progressbar"]],["progressbar"]]],[11,"join","","Waits for all progress bars to report that they are…",7,[[["self"]],["result"]]],[11,"join_and_clear","","Works like `join` but clears the progress bar in the end.",7,[[["self"]],["result"]]],[11,"default_bar","","Returns the default progress bar style for bars.",8,[[],["progressstyle"]]],[11,"default_spinner","","Returns the default progress bar style for spinners.",8,[[],["progressstyle"]]],[11,"tick_chars","","Sets the tick character sequence for spinners.",8,[[["str"]],["progressstyle"]]],[11,"tick_strings","","Sets the tick string sequence for spinners.",8,[[],["progressstyle"]]],[11,"progress_chars","","Sets the three progress characters `(filled, current, to…",8,[[["str"]],["progressstyle"]]],[11,"template","","Sets the template string for the progress bar.",8,[[["str"]],["progressstyle"]]],[11,"get_tick_char","","Returns the tick char for a given number.",8,[[["self"],["u64"]],["char"]]],[11,"get_tick_str","","Returns the tick string for a given number.",8,[[["self"],["u64"]],["str"]]],[11,"get_final_tick_char","","Returns the tick char for the finished state.",8,[[["self"]],["char"]]],[11,"get_final_tick_str","","Returns the tick string for the finished state.",8,[[["self"]],["str"]]],[8,"ProgressIterator","","Wraps an iterator to display its progress.",null,null],[11,"progress","","Wrap an iterator with default styling. Attempt to guess…",9,[[],["progressbariter"]]],[11,"progress_count","","Wrap an iterator with an explicit element count.",9,[[["u64"]],["progressbariter"]]],[10,"progress_with","","Wrap an iterator with a custom progress bar.",9,[[["progressbar"]],["progressbariter"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"clone","","",6,[[["self"]],["progressbar"]]],[11,"clone","","",8,[[["self"]],["progressstyle"]]],[11,"default","","",7,[[],["multiprogress"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"read","","",11,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"seek","","",11,[[["self"],["seekfrom"]],[["result",["u64"]],["u64"]]]],[11,"write","","",11,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",11,[[["self"]],["result"]]],[11,"write_vectored","","",11,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write_all","","",11,[[["self"]],["result"]]],[11,"progress","","Wrap an iterator with default styling. Attempt to guess…",9,[[],["progressbariter"]]],[11,"progress_count","","Wrap an iterator with an explicit element count.",9,[[["u64"]],["progressbariter"]]]],"p":[[3,"BinaryBytes"],[3,"DecimalBytes"],[3,"FormattedDuration"],[3,"HumanBytes"],[3,"HumanDuration"],[3,"ProgressDrawTarget"],[3,"ProgressBar"],[3,"MultiProgress"],[3,"ProgressStyle"],[8,"ProgressIterator"],[3,"ProgressBarIter"],[3,"ProgressBarWrap"]]};
searchIndex["inflate"] = {"doc":"A DEFLATE decoder written in rust.","i":[[3,"InflateWriter","inflate","A DEFLATE decoder.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder/decompressor.",null,null],[3,"DeflateDecoderBuf","","A DEFLATE decoder/decompressor.",null,null],[3,"InflateStream","","",null,null],[5,"inflate_bytes","","Decompress the given slice of DEFLATE compressed data.",null,[[],[["result",["vec","string"]],["vec",["u8"]],["string"]]]],[5,"inflate_bytes_zlib","","Decompress the given slice of DEFLATE compressed (with…",null,[[],[["result",["vec","string"]],["vec",["u8"]],["string"]]]],[5,"inflate_bytes_zlib_no_checksum","","Decompress the given slice of DEFLATE compressed (with…",null,[[],[["result",["vec","string"]],["vec",["u8"]],["string"]]]],[11,"new","","",0,[[["w"]],["inflatewriter"]]],[11,"from_zlib","","",0,[[["w"]],["inflatewriter"]]],[11,"finish","","",0,[[],["result"]]],[11,"new","","Create a new `Deflatedecoderbuf` to read from a raw…",1,[[["r"]],["deflatedecoderbuf"]]],[11,"from_zlib","","Create a new `DeflateDecoderbuf` that reads from a zlib…",1,[[["r"]],["deflatedecoderbuf"]]],[11,"from_zlib_no_checksum","","Create a new `DeflateDecoderbuf` that reads from a zlib…",1,[[["r"]],["deflatedecoderbuf"]]],[11,"reset","","Resets the decompressor, and replaces the current inner…",1,[[["self"],["r"]],["r"]]],[11,"reset_data","","Resets the decoder, but continue to read from the same…",1,[[["self"]]]],[11,"get_ref","","Returns a reference to the underlying `BufRead` instance.",1,[[["self"]],["r"]]],[11,"get_mut","","Returns a mutable reference to the underlying `BufRead`…",1,[[["self"]],["r"]]],[11,"into_inner","","Drops the decoder and return the inner `BufRead` instance.",1,[[],["r"]]],[11,"total_in","","Returns the total bytes read from the underlying `BufRead`…",1,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of bytes output from this decoder.",1,[[["self"]],["u64"]]],[11,"current_checksum","","Returns the calculated checksum value of the currently…",1,[[["self"]],["u32"]]],[11,"new","","Create a new `Deflatedecoderbuf` to read from a raw…",2,[[["r"]],["deflatedecoder"]]],[11,"from_zlib","","Create a new `DeflateDecoderbuf` that reads from a zlib…",2,[[["r"]],["deflatedecoder"]]],[11,"from_zlib_no_checksum","","Create a new `DeflateDecoderbuf` that reads from a zlib…",2,[[["r"]],["deflatedecoder"]]],[11,"reset","","Resets the decompressor, and replaces the current inner…",2,[[["self"],["r"]],["r"]]],[11,"get_ref","","Returns a reference to the underlying reader.",2,[[["self"]],["r"]]],[11,"get_mut","","Returns a mutable reference to the underlying reader.",2,[[["self"]],["r"]]],[11,"into_inner","","Returns the total number of bytes output from this decoder.",2,[[],["r"]]],[11,"reset_data","","Resets the decoder, but continue to read from the same…",2,[[["self"]]]],[11,"total_in","","Returns the total bytes read from the underlying reader.",2,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of bytes output from this decoder.",2,[[["self"]],["u64"]]],[11,"current_checksum","","Returns the calculated checksum value of the currently…",2,[[["self"]],["u32"]]],[11,"new","","Create a new stream for decoding raw deflate encoded data.",3,[[],["inflatestream"]]],[11,"from_zlib","","Create a new stream for decoding deflate encoded data with…",3,[[],["inflatestream"]]],[11,"from_zlib_no_checksum","","Create a new stream for decoding deflate encoded data with…",3,[[],["inflatestream"]]],[11,"reset","","",3,[[["self"]]]],[11,"reset_to_zlib","","",3,[[["self"]]]],[11,"update","","Try to uncompress/decode the data in `data`.",3,[[["self"]],[["result",["string"]],["string"]]]],[11,"current_checksum","","Returns the calculated checksum value of the currently…",3,[[["self"]],["u32"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"read","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",2,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",0,[[["self"]],["result"]]]],"p":[[3,"InflateWriter"],[3,"DeflateDecoderBuf"],[3,"DeflateDecoder"],[3,"InflateStream"]]};
searchIndex["itertools"] = {"doc":"Itertools — extra iterator adaptors, functions and macros.","i":[[4,"Either","itertools","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[4,"Diff","","A type returned by the `diff_with` function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with…",1,null],[13,"Shorter","","The total number of elements that were in `J` along with…",1,null],[13,"Longer","","The total number of elements that were in `I` along with…",1,null],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See…",null,null],[13,"NoElements","","Empty iterator",2,null],[13,"OneElement","","Iterator with one element, so the minimum and maximum are…",2,null],[13,"MinMax","","More than one element in the iterator, the first element…",2,null],[4,"Position","","A value yielded by `WithPosition`. Indicates the position…",null,null],[13,"First","","This is the first element.",3,null],[13,"Middle","","This is neither the first nor the last element.",3,null],[13,"Last","","This is the last element.",3,null],[13,"Only","","This is the only element.",3,null],[4,"EitherOrBoth","","Value that either holds a single A or B, or both.",null,null],[13,"Both","","Both values are present.",4,null],[13,"Left","","Only the left value of type `A` is present.",4,null],[13,"Right","","Only the right value of type `B` is present.",4,null],[4,"FoldWhile","","An enum used for controlling the execution of…",null,null],[13,"Continue","","Continue folding with this value",5,null],[13,"Done","","Fold is complete and will return this value",5,null],[5,"flatten","","Flatten an iterable of iterables into a single combined…",null,[[["i"]],["flatten"]]],[5,"concat","","Combine all an iterator's elements into one element by…",null,[[["i"]]]],[5,"cons_tuples","","Create an iterator that maps for example iterators of…",null,[[["i"]],["constuples"]]],[5,"diff_with","","Compares every element yielded by both `i` and `j` with…",null,[[["j"],["i"],["f"]],[["diff"],["option",["diff"]]]]],[5,"process_results","","“Lift” a function of the values of an iterator so that it…",null,[[["i"],["f"]],["result"]]],[5,"repeat_n","","Create an iterator that produces `n` repetitions of…",null,[[["a"],["usize"]],["repeatn"]]],[5,"repeat_call","","An iterator source that produces elements indefinitely by…",null,[[["f"]],["repeatcall"]]],[5,"unfold","","Creates a new unfold source with the specified closure as…",null,[[["f"],["st"]],["unfold"]]],[5,"iterate","","Creates a new iterator that infinitely applies function to…",null,[[["f"],["st"]],["iterate"]]],[5,"multizip","","An iterator that generalizes .zip() and allows running…",null,[[["u"]],["zip"]]],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",null,[[["j"],["i"]],["interleave"]]],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",null,[[["j"],["i"]],["merge"]]],[5,"put_back","","Create an iterator where you can put back a single item",null,[[["i"]],["putback"]]],[5,"zip_eq","","Iterate `i` and `j` in lock step.",null,[[["j"],["i"]],["zipeq"]]],[5,"merge_join_by","","Return an iterator adaptor that merge-joins items from the…",null,[[["j"],["i"],["f"]],["mergejoinby"]]],[5,"enumerate","","Iterate `iterable` with a running index.",null,[[["i"]],["enumerate"]]],[5,"rev","","Iterate `iterable` in reverse.",null,[[["i"]],["rev"]]],[5,"zip","","Iterate `i` and `j` in lock step.",null,[[["j"],["i"]],["zip"]]],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",null,[[["j"],["i"]],["chain"]]],[5,"cloned","","Create an iterator that clones each element from &T to T",null,[[["i"]],["cloned"]]],[5,"fold","","Perform a fold operation over the iterable.",null,[[["i"],["b"],["f"]],["b"]]],[5,"all","","Test whether the predicate holds for all elements in the…",null,[[["i"],["f"]],["bool"]]],[5,"any","","Test whether the predicate holds for any elements in the…",null,[[["i"],["f"]],["bool"]]],[5,"max","","Return the maximum value of the iterable.",null,[[["i"]],["option"]]],[5,"min","","Return the minimum value of the iterable.",null,[[["i"]],["option"]]],[5,"equal","","Return `true` if both iterables produce equal sequences…",null,[[["j"],["i"]],["bool"]]],[5,"assert_equal","","Assert that two iterables produce equal sequences, with…",null,[[["j"],["i"]]]],[5,"partition","","Partition a sequence using predicate `pred` so that…",null,[[["i"],["f"]],["usize"]]],[0,"structs","","The concrete iterator types.",null,null],[3,"Dedup","itertools::structs","An iterator adaptor that removes repeated duplicates.",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two…",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two…",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single item…",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure receives a…",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the…",null,null],[3,"MapResults","","An iterator adapter to apply a transformation within a…",null,null],[3,"Merge","","An iterator adaptor that merges the two base iterators in…",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in…",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able…",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator…",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent…",null,null],[3,"TupleCombinations","","An iterator to iterate through all combinations in a…",null,null],[3,"Flatten","","An iterator adapter to simply flatten a structure.",null,null],[3,"Positions","","An iterator adapter to get the positions of each element…",null,null],[3,"Update","","An iterator adapter to apply a mutating function to each…",null,null],[3,"ConsTuples","","An iterator that maps an iterator of tuples like `((A, B),…",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value between…",null,null],[3,"MergeJoinBy","","An iterator adaptor that merge-joins items from the two…",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum…",null,null],[3,"PeekingTakeWhile","","An iterator adaptor that takes items while a closure…",null,null],[3,"ProcessResults","","An iterator that produces only the `T` values as long as…",null,null],[3,"RepeatN","","An iterator that produces n repetitions of an element.",null,null],[3,"RepeatCall","","See `repeat_call` for more information.",null,null],[3,"Unfold","","See `unfold` for more information.",null,null],[12,"state","","Internal state that will be passed to the closure on the…",6,null],[3,"Iterate","","An iterator that infinitely applies function to value and…",null,null],[3,"TupleBuffer","","An iterator over a incomplete tuple.",null,null],[3,"TupleWindows","","An iterator over all contiguous windows that produces…",null,null],[3,"Tuples","","An iterator that groups the items in tuples of a specific…",null,null],[3,"WithPosition","","An iterator adaptor that wraps each element in an…",null,null],[3,"ZipEq","","An iterator which iterates two other iterators…",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators…",null,null],[3,"Zip","","See `multizip` for more information.",null,null],[11,"with_value","","put back value `value` (builder method)",7,[[],["self"]]],[11,"into_parts","","Split the `PutBack` into its parts.",7,[[]]],[11,"put_back","","Put back a single value to the front of the iterator.",7,[[["self"]]]],[11,"has_left","itertools","If `Left`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"has_right","","If `Right`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"left","","If `Left`, or `Both`, return `Some` with the left value,…",4,[[],["option"]]],[11,"right","","If `Right`, or `Both`, return `Some` with the right value,…",4,[[],["option"]]],[11,"as_ref","","Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A,…",4,[[["self"]],[["b"],["eitherorboth"],["a"]]]],[11,"as_mut","","Converts from `&mut EitherOrBoth<A, B>` to…",4,[[["self"]],[["a"],["eitherorboth"],["b"]]]],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The…",2,[[],["option"]]],[11,"into_buffer","itertools::structs","Return a buffer with the produced items that was not…",8,[[],["tuplebuffer"]]],[11,"into_inner","itertools","Return the inner value.",3,[[],["t"]]],[8,"PeekingNext","","An iterator that allows peeking at an element before…",null,null],[10,"peeking_next","","Pass a reference to the next iterator element to the…",9,[[["self"],["f"]],["option"]]],[8,"Itertools","","The trait `Itertools`: extra iterator adaptors and methods…",null,null],[11,"interleave","","Alternate elements from two iterators until both have run…",10,[[["j"]],["interleave"]]],[11,"interleave_shortest","","Alternate elements from two iterators until at least one…",10,[[["j"]],["interleaveshortest"]]],[11,"intersperse","","An iterator adaptor to insert a particular value between…",10,[[],["intersperse"]]],[11,"zip_longest","","Create an iterator which iterates over both this and the…",10,[[["j"]],["ziplongest"]]],[11,"zip_eq","","Create an iterator which iterates over both this and the…",10,[[["j"]],["zipeq"]]],[11,"batching","","A “meta iterator adaptor”. Its closure receives a…",10,[[["f"]],["batching"]]],[11,"tuple_windows","","Return an iterator over all contiguous windows producing…",10,[[],["tuplewindows"]]],[11,"tuples","","Return an iterator that groups the items in tuples of a…",10,[[],["tuples"]]],[11,"step","","Return an iterator adaptor that steps `n` elements in the…",10,[[["usize"]],["step"]]],[11,"map_results","","Return an iterator adaptor that applies the provided…",10,[[["f"]],["mapresults"]]],[11,"merge","","Return an iterator adaptor that merges the two base…",10,[[["j"]],["merge"]]],[11,"merge_by","","Return an iterator adaptor that merges the two base…",10,[[["j"],["f"]],["mergeby"]]],[11,"merge_join_by","","Create an iterator that merges items from both this and…",10,[[["j"],["f"]],["mergejoinby"]]],[11,"cartesian_product","","Return an iterator adaptor that iterates over the…",10,[[["j"]],["product"]]],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure…",10,[[["f"]],["coalesce"]]],[11,"dedup","","Remove duplicates from sections of consecutive identical…",10,[[],["dedup"]]],[11,"peeking_take_while","","Return an iterator adaptor that borrows from this iterator…",10,[[["self"],["f"]],["peekingtakewhile"]]],[11,"take_while_ref","","Return an iterator adaptor that borrows from a…",10,[[["self"],["f"]],["takewhileref"]]],[11,"while_some","","Return an iterator adaptor that filters `Option<A>`…",10,[[],["whilesome"]]],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the…",10,[[],["tuplecombinations"]]],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a…",10,[[["usize"],["f"]],["padusing"]]],[11,"flatten","","Flatten an iterator of iterables into a single combined…",10,[[],["flatten"]]],[11,"with_position","","Return an iterator adaptor that wraps each element in a…",10,[[],["withposition"]]],[11,"positions","","Return an iterator adaptor that yields the indices of all…",10,[[["p"]],["positions"]]],[11,"update","","Return an iterator adaptor that applies a mutating…",10,[[["f"]],["update"]]],[11,"next_tuple","","Advances the iterator and returns the next items grouped…",10,[[["self"]],["option"]]],[11,"collect_tuple","","Collects all items from the iterator into a tuple of a…",10,[[],["option"]]],[11,"find_position","","Find the position and value of the first element…",10,[[["self"],["p"]],["option"]]],[11,"all_equal","","Check whether all elements compare equal.",10,[[["self"]],["bool"]]],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,…",10,[[["usize"]],["self"]]],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,…",10,[[["usize"]],["self"]]],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",10,[[["f"]]]],[11,"concat","","Combine all an iterator's elements into one element by…",10,[[]]],[11,"set_from","","Assign to each reference in `self` from the `from`…",10,[[["j"],["self"]],["usize"]]],[11,"format","","Format all iterator elements, separated by `sep`.",10,[[["str"]],["format"]]],[11,"format_with","","Format all iterator elements, separated by `sep`.",10,[[["str"],["f"]],["formatwith"]]],[11,"fold_results","","Fold `Result` values from an iterator.",10,[[["self"],["b"],["f"]],["result"]]],[11,"fold_options","","Fold `Option` values from an iterator.",10,[[["self"],["b"],["f"]],["option"]]],[11,"fold1","","Accumulator of the elements in the iterator.",10,[[["f"]],["option"]]],[11,"tree_fold1","","Accumulate the elements in the iterator in a tree-like…",10,[[["f"]],["option"]]],[11,"fold_while","","An iterator method that applies a function, producing a…",10,[[["self"],["b"],["f"]],["foldwhile"]]],[11,"partition_map","","Collect all iterator elements into one of two partitions.…",10,[[["f"]]]],[11,"minmax","","Return the minimum and maximum elements in the iterator.",10,[[],["minmaxresult"]]],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as…",10,[[["f"]],["minmaxresult"]]],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as…",10,[[["f"]],["minmaxresult"]]],[11,"into_inner","","Return the value in the continue or done.",5,[[],["t"]]],[11,"is_done","","Return true if `self` is `Done`, false if it is `Continue`.",5,[[["self"]],["bool"]]],[14,"iproduct","","Create an iterator over the “cartesian product” of…",null,null],[14,"izip","","Create an iterator running multiple iterators in lockstep.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","itertools::structs","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into_iter","","",26,[[],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into_iter","","",34,[[],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into_iter","","",35,[[],["i"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into_iter","","",36,[[],["i"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into_iter","","",39,[[],["i"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into_iter","","",40,[[],["i"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into_iter","","",42,[[],["i"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into_iter","","",43,[[],["i"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"as_mut","itertools","",0,[[["self"]]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"deref","","",0,[[["self"]]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"eq","","",0,[[["either"],["self"]],["bool"]]],[11,"ne","","",0,[[["either"],["self"]],["bool"]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"cmp","","",0,[[["either"],["self"]],["ordering"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"partial_cmp","","",0,[[["either"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["either"],["self"]],["bool"]]],[11,"le","","",0,[[["either"],["self"]],["bool"]]],[11,"gt","","",0,[[["either"],["self"]],["bool"]]],[11,"ge","","",0,[[["either"],["self"]],["bool"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"into","","",0,[[],["result"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"peeking_next","itertools::structs","",7,[[["self"],["f"]],["option"]]],[11,"from","","",43,[[],["self"]]],[11,"from","","",43,[[],["self"]]],[11,"from","","",43,[[],["self"]]],[11,"from","","",43,[[],["self"]]],[11,"from","","",43,[[],["self"]]],[11,"from","","",43,[[],["self"]]],[11,"from","","",43,[[],["self"]]],[11,"from","","",43,[[],["self"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"eq","itertools","",4,[[["self"],["eitherorboth"]],["bool"]]],[11,"ne","","",4,[[["self"],["eitherorboth"]],["bool"]]],[11,"eq","","",2,[[["minmaxresult"],["self"]],["bool"]]],[11,"ne","","",2,[[["minmaxresult"],["self"]],["bool"]]],[11,"eq","","",3,[[["position"],["self"]],["bool"]]],[11,"ne","","",3,[[["position"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["foldwhile"]],["bool"]]],[11,"ne","","",5,[[["self"],["foldwhile"]],["bool"]]],[11,"next","itertools::structs","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,[[["self"]]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,[[["self"]]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"all","","",7,[[["self"],["g"]],["bool"]]],[11,"fold","","",7,[[["acc"],["g"]],["acc"]]],[11,"next","","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,[[["self"]]]],[11,"fold","","",14,[[["acc"],["g"]],["acc"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,[[["self"]]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,[[["self"]]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,[[["self"]]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,[[["self"]]]],[11,"fold","","",11,[[["acc"],["g"]],["acc"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"next","","",24,[[["self"]],["option"]]],[11,"fold","","",24,[[["acc"],["g"]],["acc"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"fold","","",17,[[["acc"],["fold"]],["acc"]]],[11,"collect","","",17,[[],["c"]]],[11,"next","","",25,[[["self"]],["option"]]],[11,"size_hint","","",25,[[["self"]]]],[11,"next","","",26,[[["self"]],["option"]]],[11,"size_hint","","",26,[[["self"]]]],[11,"fold","","",26,[[["acc"],["g"]],["acc"]]],[11,"collect","","",26,[[],["c"]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,[[["self"]]]],[11,"fold","","",27,[[["acc"],["fold"]],["acc"]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,[[["self"]]]],[11,"fold","","",27,[[["acc"],["fold"]],["acc"]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,[[["self"]]]],[11,"fold","","",27,[[["acc"],["fold"]],["acc"]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,[[["self"]]]],[11,"fold","","",27,[[["acc"],["fold"]],["acc"]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,[[["self"]]]],[11,"fold","","",27,[[["acc"],["fold"]],["acc"]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,[[["self"]]]],[11,"fold","","",27,[[["acc"],["fold"]],["acc"]]],[11,"next","","",30,[[["self"]],["option"]]],[11,"size_hint","","",30,[[["self"]]]],[11,"next","","",31,[[["self"]],["option"]]],[11,"size_hint","","",31,[[["self"]]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"size_hint","","",33,[[["self"]]]],[11,"next","","",34,[[["self"]],["option"]]],[11,"size_hint","","",34,[[["self"]]]],[11,"next","","",35,[[["self"]],["option"]]],[11,"size_hint","","",35,[[["self"]]]],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,[[["self"]]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"size_hint","","",37,[[["self"]]]],[11,"next","","",38,[[["self"]],["option"]]],[11,"size_hint","","",38,[[["self"]]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"next","","",39,[[["self"]],["option"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"size_hint","","",40,[[["self"]]]],[11,"next","","",41,[[["self"]],["option"]]],[11,"size_hint","","",41,[[["self"]]]],[11,"next","","",42,[[["self"]],["option"]]],[11,"size_hint","","",42,[[["self"]]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next_back","","",25,[[["self"]],["option"]]],[11,"next_back","","",26,[[["self"]],["option"]]],[11,"next_back","","",27,[[["self"]],["option"]]],[11,"next_back","","",27,[[["self"]],["option"]]],[11,"next_back","","",27,[[["self"]],["option"]]],[11,"next_back","","",27,[[["self"]],["option"]]],[11,"next_back","","",27,[[["self"]],["option"]]],[11,"next_back","","",27,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",35,[[["self"]],["option"]]],[11,"next_back","","",42,[[["self"]],["option"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"clone","","",12,[[["self"]],["interleave"]]],[11,"clone","","",13,[[["self"]],["interleaveshortest"]]],[11,"clone","","",7,[[["self"]],["putback"]]],[11,"clone","","",14,[[["self"]],["product"]]],[11,"clone","","",15,[[["self"]],["batching"]]],[11,"clone","","",16,[[["self"]],["step"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"clone","","",19,[[["self"]],["self"]]],[11,"clone","","",22,[[["self"]],["self"]]],[11,"clone","","",11,[[["self"]],["self"]]],[11,"clone","","",21,[[["self"]],["whilesome"]]],[11,"clone","","",24,[[["self"]],["flatten"]]],[11,"clone","itertools","",4,[[["self"]],["eitherorboth"]]],[11,"clone","itertools::structs","",27,[[["self"]],["self"]]],[11,"clone","","",28,[[["self"]],["format"]]],[11,"clone","","",30,[[["self"]],["intersperse"]]],[11,"clone","itertools","",2,[[["self"]],["minmaxresult"]]],[11,"clone","itertools::structs","",32,[[["self"]],["padusing"]]],[11,"clone","","",6,[[["self"]],["unfold"]]],[11,"clone","","",37,[[["self"]],["iterate"]]],[11,"clone","itertools","",3,[[["self"]],["position"]]],[11,"clone","itertools::structs","",41,[[["self"]],["zipeq"]]],[11,"clone","","",42,[[["self"]],["ziplongest"]]],[11,"clone","","",43,[[["self"]],["zip"]]],[11,"clone","itertools","",5,[[["self"]],["foldwhile"]]],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]]],"p":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"Position"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"Unfold"],[3,"PutBack"],[3,"Tuples"],[8,"PeekingNext"],[8,"Itertools"],[3,"Dedup"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Product"],[3,"Batching"],[3,"Step"],[3,"MapResults"],[3,"Merge"],[3,"MergeBy"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Coalesce"],[3,"TupleCombinations"],[3,"Flatten"],[3,"Positions"],[3,"Update"],[3,"ConsTuples"],[3,"Format"],[3,"FormatWith"],[3,"Intersperse"],[3,"MergeJoinBy"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"ProcessResults"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"TupleBuffer"],[3,"TupleWindows"],[3,"WithPosition"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"]]};
searchIndex["itoa"] = {"doc":"This crate provides fast functions for printing integer…","i":[[3,"Buffer","itoa","A safe API for formatting integers to text.",null,null],[5,"fmt","","Write integer to an `fmt::Write`.",null,[[["integer"],["write"]],["result"]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and…",null,null],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["buffer"]]],[11,"format","","Print an integer into this buffer and return a reference…",0,[[["integer"],["self"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"default","","",0,[[],["buffer"]]]],"p":[[3,"Buffer"]]};
searchIndex["json5"] = {"doc":"JSON5 is a superset of [JSON][] with an expanded syntax…","i":[[4,"Error","json5","A bare bones error type which currently just collapses all…",null,null],[13,"Message","","Just shove everything in a single variant for now.",0,null],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON5…",null,[[["str"]],["result"]]],[5,"to_string","","Attempts to serialize the input as a JSON5 string…",null,[[["t"]],[["result",["string"]],["string"]]]],[6,"Result","","Alias for a `Result` with error type `json5::Error`",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",0,[[["error",["rule"]],["rule"]],["self"]]],[11,"clone","","",0,[[["self"]],["error"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"custom","","",0,[[["display"]],["self"]]],[11,"custom","","",0,[[["display"]],["self"]]]],"p":[[4,"Error"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]};
searchIndex["libc"] = {"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",17,null],[12,"sa_family","","",17,null],[12,"sa_data","","",17,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",18,null],[12,"sin6_family","","",18,null],[12,"sin6_port","","",18,null],[12,"sin6_flowinfo","","",18,null],[12,"sin6_addr","","",18,null],[12,"sin6_scope_id","","",18,null],[3,"passwd","","",null,null],[12,"pw_name","","",19,null],[12,"pw_passwd","","",19,null],[12,"pw_uid","","",19,null],[12,"pw_gid","","",19,null],[12,"pw_change","","",19,null],[12,"pw_class","","",19,null],[12,"pw_gecos","","",19,null],[12,"pw_dir","","",19,null],[12,"pw_shell","","",19,null],[12,"pw_expire","","",19,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",20,null],[12,"ifa_name","","",20,null],[12,"ifa_flags","","",20,null],[12,"ifa_addr","","",20,null],[12,"ifa_netmask","","",20,null],[12,"ifa_dstaddr","","",20,null],[12,"ifa_data","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"msghdr","","",null,null],[12,"msg_name","","",22,null],[12,"msg_namelen","","",22,null],[12,"msg_iov","","",22,null],[12,"msg_iovlen","","",22,null],[12,"msg_control","","",22,null],[12,"msg_controllen","","",22,null],[12,"msg_flags","","",22,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",23,null],[12,"cmsg_level","","",23,null],[12,"cmsg_type","","",23,null],[3,"fsid_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",24,null],[12,"if_name","","",24,null],[3,"regex_t","","",null,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",25,null],[12,"rm_eo","","",25,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",26,null],[12,"sun_family","","",26,null],[12,"sun_path","","",26,null],[3,"utsname","","",null,null],[12,"sysname","","",27,null],[12,"nodename","","",27,null],[12,"release","","",27,null],[12,"version","","",27,null],[12,"machine","","",27,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",28,null],[12,"imr_interface","","",28,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",29,null],[12,"aio_offset","","",29,null],[12,"aio_buf","","",29,null],[12,"aio_nbytes","","",29,null],[12,"aio_reqprio","","",29,null],[12,"aio_sigevent","","",29,null],[12,"aio_lio_opcode","","",29,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",30,null],[12,"gl_offs","","",30,null],[12,"gl_pathv","","",30,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",31,null],[12,"ai_family","","",31,null],[12,"ai_socktype","","",31,null],[12,"ai_protocol","","",31,null],[12,"ai_addrlen","","",31,null],[12,"ai_canonname","","",31,null],[12,"ai_addr","","",31,null],[12,"ai_next","","",31,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",32,null],[12,"denom","","",32,null],[3,"stat","","",null,null],[12,"st_dev","","",33,null],[12,"st_mode","","",33,null],[12,"st_nlink","","",33,null],[12,"st_ino","","",33,null],[12,"st_uid","","",33,null],[12,"st_gid","","",33,null],[12,"st_rdev","","",33,null],[12,"st_atime","","",33,null],[12,"st_atime_nsec","","",33,null],[12,"st_mtime","","",33,null],[12,"st_mtime_nsec","","",33,null],[12,"st_ctime","","",33,null],[12,"st_ctime_nsec","","",33,null],[12,"st_birthtime","","",33,null],[12,"st_birthtime_nsec","","",33,null],[12,"st_size","","",33,null],[12,"st_blocks","","",33,null],[12,"st_blksize","","",33,null],[12,"st_flags","","",33,null],[12,"st_gen","","",33,null],[12,"st_lspare","","",33,null],[12,"st_qspare","","",33,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",34,null],[12,"si_errno","","",34,null],[12,"si_code","","",34,null],[12,"si_pid","","",34,null],[12,"si_uid","","",34,null],[12,"si_status","","",34,null],[12,"si_addr","","",34,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",35,null],[12,"sa_mask","","",35,null],[12,"sa_flags","","",35,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",36,null],[12,"ss_size","","",36,null],[12,"ss_flags","","",36,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",37,null],[12,"fst_posmode","","",37,null],[12,"fst_offset","","",37,null],[12,"fst_length","","",37,null],[12,"fst_bytesalloc","","",37,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",38,null],[12,"ra_count","","",38,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",39,null],[12,"f_frsize","","",39,null],[12,"f_blocks","","",39,null],[12,"f_bfree","","",39,null],[12,"f_bavail","","",39,null],[12,"f_files","","",39,null],[12,"f_ffree","","",39,null],[12,"f_favail","","",39,null],[12,"f_fsid","","",39,null],[12,"f_flag","","",39,null],[12,"f_namemax","","",39,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",40,null],[12,"dli_fbase","","",40,null],[12,"dli_sname","","",40,null],[12,"dli_saddr","","",40,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",41,null],[12,"sin_family","","",41,null],[12,"sin_port","","",41,null],[12,"sin_addr","","",41,null],[12,"sin_zero","","",41,null],[3,"kevent64_s","","",null,null],[12,"ident","","",42,null],[12,"filter","","",42,null],[12,"flags","","",42,null],[12,"fflags","","",42,null],[12,"data","","",42,null],[12,"udata","","",42,null],[12,"ext","","",42,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",43,null],[12,"dqb_bsoftlimit","","",43,null],[12,"dqb_curbytes","","",43,null],[12,"dqb_ihardlimit","","",43,null],[12,"dqb_isoftlimit","","",43,null],[12,"dqb_curinodes","","",43,null],[12,"dqb_btime","","",43,null],[12,"dqb_itime","","",43,null],[12,"dqb_id","","",43,null],[12,"dqb_spare","","",43,null],[3,"if_msghdr","","",null,null],[12,"ifm_msglen","","",44,null],[12,"ifm_version","","",44,null],[12,"ifm_type","","",44,null],[12,"ifm_addrs","","",44,null],[12,"ifm_flags","","",44,null],[12,"ifm_index","","",44,null],[12,"ifm_data","","",44,null],[3,"termios","","",null,null],[12,"c_iflag","","",45,null],[12,"c_oflag","","",45,null],[12,"c_cflag","","",45,null],[12,"c_lflag","","",45,null],[12,"c_cc","","",45,null],[12,"c_ispeed","","",45,null],[12,"c_ospeed","","",45,null],[3,"flock","","",null,null],[12,"l_start","","",46,null],[12,"l_len","","",46,null],[12,"l_pid","","",46,null],[12,"l_type","","",46,null],[12,"l_whence","","",46,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",47,null],[12,"hdr_cnt","","",47,null],[12,"trailers","","",47,null],[12,"trl_cnt","","",47,null],[3,"lconv","","",null,null],[12,"decimal_point","","",48,null],[12,"thousands_sep","","",48,null],[12,"grouping","","",48,null],[12,"int_curr_symbol","","",48,null],[12,"currency_symbol","","",48,null],[12,"mon_decimal_point","","",48,null],[12,"mon_thousands_sep","","",48,null],[12,"mon_grouping","","",48,null],[12,"positive_sign","","",48,null],[12,"negative_sign","","",48,null],[12,"int_frac_digits","","",48,null],[12,"frac_digits","","",48,null],[12,"p_cs_precedes","","",48,null],[12,"p_sep_by_space","","",48,null],[12,"n_cs_precedes","","",48,null],[12,"n_sep_by_space","","",48,null],[12,"p_sign_posn","","",48,null],[12,"n_sign_posn","","",48,null],[12,"int_p_cs_precedes","","",48,null],[12,"int_n_cs_precedes","","",48,null],[12,"int_p_sep_by_space","","",48,null],[12,"int_n_sep_by_space","","",48,null],[12,"int_p_sign_posn","","",48,null],[12,"int_n_sign_posn","","",48,null],[3,"proc_taskinfo","","",null,null],[12,"pti_virtual_size","","",49,null],[12,"pti_resident_size","","",49,null],[12,"pti_total_user","","",49,null],[12,"pti_total_system","","",49,null],[12,"pti_threads_user","","",49,null],[12,"pti_threads_system","","",49,null],[12,"pti_policy","","",49,null],[12,"pti_faults","","",49,null],[12,"pti_pageins","","",49,null],[12,"pti_cow_faults","","",49,null],[12,"pti_messages_sent","","",49,null],[12,"pti_messages_received","","",49,null],[12,"pti_syscalls_mach","","",49,null],[12,"pti_syscalls_unix","","",49,null],[12,"pti_csw","","",49,null],[12,"pti_threadnum","","",49,null],[12,"pti_numrunning","","",49,null],[12,"pti_priority","","",49,null],[3,"proc_bsdinfo","","",null,null],[12,"pbi_flags","","",50,null],[12,"pbi_status","","",50,null],[12,"pbi_xstatus","","",50,null],[12,"pbi_pid","","",50,null],[12,"pbi_ppid","","",50,null],[12,"pbi_uid","","",50,null],[12,"pbi_gid","","",50,null],[12,"pbi_ruid","","",50,null],[12,"pbi_rgid","","",50,null],[12,"pbi_svuid","","",50,null],[12,"pbi_svgid","","",50,null],[12,"rfu_1","","",50,null],[12,"pbi_comm","","",50,null],[12,"pbi_name","","",50,null],[12,"pbi_nfiles","","",50,null],[12,"pbi_pgid","","",50,null],[12,"pbi_pjobc","","",50,null],[12,"e_tdev","","",50,null],[12,"e_tpgid","","",50,null],[12,"pbi_nice","","",50,null],[12,"pbi_start_tvsec","","",50,null],[12,"pbi_start_tvusec","","",50,null],[3,"proc_taskallinfo","","",null,null],[12,"pbsd","","",51,null],[12,"ptinfo","","",51,null],[3,"xsw_usage","","",null,null],[12,"xsu_total","","",52,null],[12,"xsu_avail","","",52,null],[12,"xsu_used","","",52,null],[12,"xsu_pagesize","","",52,null],[12,"xsu_encrypted","","",52,null],[3,"xucred","","",null,null],[12,"cr_version","","",53,null],[12,"cr_uid","","",53,null],[12,"cr_ngroups","","",53,null],[12,"cr_groups","","",53,null],[3,"mach_header","","",null,null],[12,"magic","","",54,null],[12,"cputype","","",54,null],[12,"cpusubtype","","",54,null],[12,"filetype","","",54,null],[12,"ncmds","","",54,null],[12,"sizeofcmds","","",54,null],[12,"flags","","",54,null],[3,"mach_header_64","","",null,null],[12,"magic","","",55,null],[12,"cputype","","",55,null],[12,"cpusubtype","","",55,null],[12,"filetype","","",55,null],[12,"ncmds","","",55,null],[12,"sizeofcmds","","",55,null],[12,"flags","","",55,null],[12,"reserved","","",55,null],[3,"segment_command","","",null,null],[12,"cmd","","",56,null],[12,"cmdsize","","",56,null],[12,"segname","","",56,null],[12,"vmaddr","","",56,null],[12,"vmsize","","",56,null],[12,"fileoff","","",56,null],[12,"filesize","","",56,null],[12,"maxprot","","",56,null],[12,"initprot","","",56,null],[12,"nsects","","",56,null],[12,"flags","","",56,null],[3,"segment_command_64","","",null,null],[12,"cmd","","",57,null],[12,"cmdsize","","",57,null],[12,"segname","","",57,null],[12,"vmaddr","","",57,null],[12,"vmsize","","",57,null],[12,"fileoff","","",57,null],[12,"filesize","","",57,null],[12,"maxprot","","",57,null],[12,"initprot","","",57,null],[12,"nsects","","",57,null],[12,"flags","","",57,null],[3,"load_command","","",null,null],[12,"cmd","","",58,null],[12,"cmdsize","","",58,null],[3,"sockaddr_dl","","",null,null],[12,"sdl_len","","",59,null],[12,"sdl_family","","",59,null],[12,"sdl_index","","",59,null],[12,"sdl_type","","",59,null],[12,"sdl_nlen","","",59,null],[12,"sdl_alen","","",59,null],[12,"sdl_slen","","",59,null],[12,"sdl_data","","",59,null],[3,"sockaddr_inarp","","",null,null],[12,"sin_len","","",60,null],[12,"sin_family","","",60,null],[12,"sin_port","","",60,null],[12,"sin_addr","","",60,null],[12,"sin_srcaddr","","",60,null],[12,"sin_tos","","",60,null],[12,"sin_other","","",60,null],[3,"sockaddr_ctl","","",null,null],[12,"sc_len","","",61,null],[12,"sc_family","","",61,null],[12,"ss_sysaddr","","",61,null],[12,"sc_id","","",61,null],[12,"sc_unit","","",61,null],[12,"sc_reserved","","",61,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",62,null],[12,"ipi_spec_dst","","",62,null],[12,"ipi_addr","","",62,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",63,null],[12,"ipi6_ifindex","","",63,null],[3,"ipc_perm","","",null,null],[12,"uid","","",64,null],[12,"gid","","",64,null],[12,"cuid","","",64,null],[12,"cgid","","",64,null],[12,"mode","","",64,null],[12,"_seq","","",64,null],[12,"_key","","",64,null],[3,"sembuf","","",null,null],[12,"sem_num","","",65,null],[12,"sem_op","","",65,null],[12,"sem_flg","","",65,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",66,null],[12,"ar_pro","","",66,null],[12,"ar_hln","","",66,null],[12,"ar_pln","","",66,null],[12,"ar_op","","",66,null],[3,"in_addr","","",null,null],[12,"s_addr","","",67,null],[3,"sa_endpoints_t","","",null,null],[12,"sae_srcif","","",68,null],[12,"sae_srcaddr","","",68,null],[12,"sae_srcaddrlen","","",68,null],[12,"sae_dstaddr","","",68,null],[12,"sae_dstaddrlen","","",68,null],[3,"timex","","",null,null],[12,"modes","","",69,null],[12,"offset","","",69,null],[12,"freq","","",69,null],[12,"maxerror","","",69,null],[12,"esterror","","",69,null],[12,"status","","",69,null],[12,"constant","","",69,null],[12,"precision","","",69,null],[12,"tolerance","","",69,null],[12,"ppsfreq","","",69,null],[12,"jitter","","",69,null],[12,"shift","","",69,null],[12,"stabil","","",69,null],[12,"jitcnt","","",69,null],[12,"calcnt","","",69,null],[12,"errcnt","","",69,null],[12,"stbcnt","","",69,null],[3,"ntptimeval","","",null,null],[12,"time","","",70,null],[12,"maxerror","","",70,null],[12,"esterror","","",70,null],[12,"tai","","",70,null],[12,"time_state","","",70,null],[3,"kevent","","",null,null],[12,"ident","","",71,null],[12,"filter","","",71,null],[12,"flags","","",71,null],[12,"fflags","","",71,null],[12,"data","","",71,null],[12,"udata","","",71,null],[3,"semid_ds","","",null,null],[12,"sem_perm","","",72,null],[12,"sem_base","","",72,null],[12,"sem_nsems","","",72,null],[12,"sem_otime","","",72,null],[12,"sem_pad1","","",72,null],[12,"sem_ctime","","",72,null],[12,"sem_pad2","","",72,null],[12,"sem_pad3","","",72,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",73,null],[12,"shm_segsz","","",73,null],[12,"shm_lpid","","",73,null],[12,"shm_cpid","","",73,null],[12,"shm_nattch","","",73,null],[12,"shm_atime","","",73,null],[12,"shm_dtime","","",73,null],[12,"shm_ctime","","",73,null],[12,"shm_internal","","",73,null],[3,"proc_threadinfo","","",null,null],[12,"pth_user_time","","",74,null],[12,"pth_system_time","","",74,null],[12,"pth_cpu_usage","","",74,null],[12,"pth_policy","","",74,null],[12,"pth_run_state","","",74,null],[12,"pth_flags","","",74,null],[12,"pth_sleep_time","","",74,null],[12,"pth_curpri","","",74,null],[12,"pth_priority","","",74,null],[12,"pth_maxpriority","","",74,null],[12,"pth_name","","",74,null],[3,"statfs","","",null,null],[12,"f_bsize","","",75,null],[12,"f_iosize","","",75,null],[12,"f_blocks","","",75,null],[12,"f_bfree","","",75,null],[12,"f_bavail","","",75,null],[12,"f_files","","",75,null],[12,"f_ffree","","",75,null],[12,"f_fsid","","",75,null],[12,"f_owner","","",75,null],[12,"f_type","","",75,null],[12,"f_flags","","",75,null],[12,"f_fssubtype","","",75,null],[12,"f_fstypename","","",75,null],[12,"f_mntonname","","",75,null],[12,"f_mntfromname","","",75,null],[12,"f_reserved","","",75,null],[3,"dirent","","",null,null],[12,"d_ino","","",76,null],[12,"d_seekoff","","",76,null],[12,"d_reclen","","",76,null],[12,"d_namlen","","",76,null],[12,"d_type","","",76,null],[12,"d_name","","",76,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",77,null],[12,"ss_family","","",77,null],[3,"utmpx","","",null,null],[12,"ut_user","","",78,null],[12,"ut_id","","",78,null],[12,"ut_line","","",78,null],[12,"ut_pid","","",78,null],[12,"ut_type","","",78,null],[12,"ut_tv","","",78,null],[12,"ut_host","","",78,null],[3,"sigevent","","",null,null],[12,"sigev_notify","","",79,null],[12,"sigev_signo","","",79,null],[12,"sigev_value","","",79,null],[12,"sigev_notify_attributes","","",79,null],[3,"timeval32","","",null,null],[12,"tv_sec","","",80,null],[12,"tv_usec","","",80,null],[3,"if_data","","",null,null],[12,"ifi_type","","",81,null],[12,"ifi_typelen","","",81,null],[12,"ifi_physical","","",81,null],[12,"ifi_addrlen","","",81,null],[12,"ifi_hdrlen","","",81,null],[12,"ifi_recvquota","","",81,null],[12,"ifi_xmitquota","","",81,null],[12,"ifi_unused1","","",81,null],[12,"ifi_mtu","","",81,null],[12,"ifi_metric","","",81,null],[12,"ifi_baudrate","","",81,null],[12,"ifi_ipackets","","",81,null],[12,"ifi_ierrors","","",81,null],[12,"ifi_opackets","","",81,null],[12,"ifi_oerrors","","",81,null],[12,"ifi_collisions","","",81,null],[12,"ifi_ibytes","","",81,null],[12,"ifi_obytes","","",81,null],[12,"ifi_imcasts","","",81,null],[12,"ifi_omcasts","","",81,null],[12,"ifi_iqdrops","","",81,null],[12,"ifi_noproto","","",81,null],[12,"ifi_recvtiming","","",81,null],[12,"ifi_xmittiming","","",81,null],[12,"ifi_lastchange","","",81,null],[12,"ifi_unused2","","",81,null],[12,"ifi_hwassist","","",81,null],[12,"ifi_reserved1","","",81,null],[12,"ifi_reserved2","","",81,null],[3,"bpf_hdr","","",null,null],[12,"bh_tstamp","","",82,null],[12,"bh_caplen","","",82,null],[12,"bh_datalen","","",82,null],[12,"bh_hdrlen","","",82,null],[3,"ucontext_t","","",null,null],[12,"uc_onstack","","",83,null],[12,"uc_sigmask","","",83,null],[12,"uc_stack","","",83,null],[12,"uc_link","","",83,null],[12,"uc_mcsize","","",83,null],[12,"uc_mcontext","","",83,null],[3,"__darwin_mcontext64","","",null,null],[12,"__es","","",84,null],[12,"__ss","","",84,null],[12,"__fs","","",84,null],[3,"__darwin_x86_exception_state64","","",null,null],[12,"__trapno","","",85,null],[12,"__cpu","","",85,null],[12,"__err","","",85,null],[12,"__faultvaddr","","",85,null],[3,"__darwin_x86_thread_state64","","",null,null],[12,"__rax","","",86,null],[12,"__rbx","","",86,null],[12,"__rcx","","",86,null],[12,"__rdx","","",86,null],[12,"__rdi","","",86,null],[12,"__rsi","","",86,null],[12,"__rbp","","",86,null],[12,"__rsp","","",86,null],[12,"__r8","","",86,null],[12,"__r9","","",86,null],[12,"__r10","","",86,null],[12,"__r11","","",86,null],[12,"__r12","","",86,null],[12,"__r13","","",86,null],[12,"__r14","","",86,null],[12,"__r15","","",86,null],[12,"__rip","","",86,null],[12,"__rflags","","",86,null],[12,"__cs","","",86,null],[12,"__fs","","",86,null],[12,"__gs","","",86,null],[3,"__darwin_x86_float_state64","","",null,null],[12,"__fpu_reserved","","",87,null],[12,"__fpu_ftw","","",87,null],[12,"__fpu_rsrv1","","",87,null],[12,"__fpu_fop","","",87,null],[12,"__fpu_ip","","",87,null],[12,"__fpu_cs","","",87,null],[12,"__fpu_rsrv2","","",87,null],[12,"__fpu_dp","","",87,null],[12,"__fpu_ds","","",87,null],[12,"__fpu_rsrv3","","",87,null],[12,"__fpu_mxcsr","","",87,null],[12,"__fpu_mxcsrmask","","",87,null],[12,"__fpu_stmm0","","",87,null],[12,"__fpu_stmm1","","",87,null],[12,"__fpu_stmm2","","",87,null],[12,"__fpu_stmm3","","",87,null],[12,"__fpu_stmm4","","",87,null],[12,"__fpu_stmm5","","",87,null],[12,"__fpu_stmm6","","",87,null],[12,"__fpu_stmm7","","",87,null],[12,"__fpu_xmm0","","",87,null],[12,"__fpu_xmm1","","",87,null],[12,"__fpu_xmm2","","",87,null],[12,"__fpu_xmm3","","",87,null],[12,"__fpu_xmm4","","",87,null],[12,"__fpu_xmm5","","",87,null],[12,"__fpu_xmm6","","",87,null],[12,"__fpu_xmm7","","",87,null],[12,"__fpu_xmm8","","",87,null],[12,"__fpu_xmm9","","",87,null],[12,"__fpu_xmm10","","",87,null],[12,"__fpu_xmm11","","",87,null],[12,"__fpu_xmm12","","",87,null],[12,"__fpu_xmm13","","",87,null],[12,"__fpu_xmm14","","",87,null],[12,"__fpu_xmm15","","",87,null],[12,"__fpu_reserved1","","",87,null],[3,"__darwin_mmst_reg","","",null,null],[12,"__mmst_reg","","",88,null],[12,"__mmst_rsrv","","",88,null],[3,"__darwin_xmm_reg","","",null,null],[12,"__xmm_reg","","",89,null],[3,"pthread_attr_t","","",null,null],[3,"max_align_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",90,null],[19,"semun","","",null,null],[12,"val","","",91,null],[12,"buf","","",91,null],[12,"array","","",91,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"FD_CLR","","",null,[[["c_int"]]]],[5,"FD_ISSET","","",null,[[["c_int"]],["bool"]]],[5,"FD_SET","","",null,[[["c_int"]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WTERMSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",null,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",null,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",null,[[["c_int"]],["bool"]]],[5,"QCMD","","",null,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",null,[[["c_uint"]],["c_uint"]]],[5,"WSTOPSIG","","",null,[[["c_int"]],["c_int"]]],[5,"_WSTATUS","","",null,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",null,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",null,[[["c_int"]],["bool"]]],[5,"WIFSTOPPED","","",null,[[["c_int"]],["bool"]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"getpwent","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"getprogname","","",null,null],[5,"setprogname","","",null,null],[5,"getloadavg","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"getpeereid","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"sync","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"acct","","",null,null],[5,"wait4","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"setgrent","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"chflags","","",null,null],[5,"fchflags","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"lio_listio","","",null,null],[5,"dirfd","","",null,null],[5,"lutimes","","",null,null],[5,"gettimeofday","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"utmpxname","","",null,null],[5,"getnameinfo","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"semget","","",null,null],[5,"semctl","","",null,null],[5,"semop","","",null,null],[5,"shm_open","","",null,null],[5,"ftok","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"shmget","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[5,"sendfile","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"localeconv_l","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"querylocale","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"getxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"renamex_np","","",null,null],[5,"renameatx_np","","",null,null],[5,"fremovexattr","","",null,null],[5,"getgrouplist","","",null,null],[5,"initgroups","","",null,null],[5,"waitid","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"settimeofday","","",null,null],[5,"_dyld_image_count","","",null,null],[5,"_dyld_get_image_header","","",null,null],[5,"_dyld_get_image_vmaddr_slide","","",null,null],[5,"_dyld_get_image_name","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"uname","","",null,null],[5,"connectx","","",null,null],[5,"disconnectx","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"exchangedata","","",null,null],[11,"si_addr","","",34,[[["self"]]]],[11,"si_value","","",34,[[["self"]],["sigval"]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"wchar_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"nfds_t","","",null,null],[6,"regoff_t","","",null,null],[6,"c_char","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"clockid_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"nl_item","","",null,null],[6,"id_t","","",null,null],[6,"sem_t","","",null,null],[6,"idtype_t","","",null,null],[6,"integer_t","","",null,null],[6,"cpu_type_t","","",null,null],[6,"cpu_subtype_t","","",null,null],[6,"posix_spawnattr_t","","",null,null],[6,"posix_spawn_file_actions_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"sae_associd_t","","",null,null],[6,"sae_connid_t","","",null,null],[6,"vm_prot_t","","",null,null],[6,"vm_size_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"boolean_t","","",null,null],[6,"mcontext_t","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONREAD","","",null,null],[17,"FIONBIO","","",null,null],[17,"FIOASYNC","","",null,null],[17,"FIOSETOWN","","",null,null],[17,"FIOGETOWN","","",null,null],[17,"PATH_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGINFO","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPTOS_ECN_NOTECT","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"NCCS","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"O_SHLOCK","","",null,null],[17,"O_EXLOCK","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VDSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"VSTATUS","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"OXTABS","","",null,null],[17,"ONOEOT","","",null,null],[17,"CIGNORE","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"ALTWERASE","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"NOKERNINFO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"MDMBUF","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_SELF","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"BIOCGBLEN","","",null,null],[17,"BIOCSBLEN","","",null,null],[17,"BIOCFLUSH","","",null,null],[17,"BIOCPROMISC","","",null,null],[17,"BIOCGDLT","","",null,null],[17,"BIOCGETIF","","",null,null],[17,"BIOCSETIF","","",null,null],[17,"BIOCGSTATS","","",null,null],[17,"BIOCIMMEDIATE","","",null,null],[17,"BIOCVERSION","","",null,null],[17,"BIOCGHDRCMPLT","","",null,null],[17,"BIOCSHDRCMPLT","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"REG_BASIC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSPEC","","",null,null],[17,"REG_PEND","","",null,null],[17,"REG_DUMP","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"REG_EMPTY","","",null,null],[17,"REG_ASSERT","","",null,null],[17,"REG_INVARG","","",null,null],[17,"REG_ATOI","","",null,null],[17,"REG_ITOA","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_TRACE","","",null,null],[17,"REG_LARGE","","",null,null],[17,"REG_BACKR","","",null,null],[17,"_UTX_USERSIZE","","",null,null],[17,"_UTX_LINESIZE","","",null,null],[17,"_UTX_IDSIZE","","",null,null],[17,"_UTX_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SIGNATURE","","",null,null],[17,"SHUTDOWN_TIME","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"CODESET","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"D_MD_ORDER","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGEMT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"PT_TRACE_ME","","",null,null],[17,"PT_READ_I","","",null,null],[17,"PT_READ_D","","",null,null],[17,"PT_READ_U","","",null,null],[17,"PT_WRITE_I","","",null,null],[17,"PT_WRITE_D","","",null,null],[17,"PT_WRITE_U","","",null,null],[17,"PT_CONTINUE","","",null,null],[17,"PT_KILL","","",null,null],[17,"PT_STEP","","",null,null],[17,"PT_ATTACH","","",null,null],[17,"PT_DETACH","","",null,null],[17,"PT_SIGEXC","","",null,null],[17,"PT_THUPDATE","","",null,null],[17,"PT_ATTACHEXC","","",null,null],[17,"PT_FORCEQUOTA","","",null,null],[17,"PT_DENY_ATTACH","","",null,null],[17,"PT_FIRSTMACH","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"VM_FLAGS_FIXED","","",null,null],[17,"VM_FLAGS_ANYWHERE","","",null,null],[17,"VM_FLAGS_PURGABLE","","",null,null],[17,"VM_FLAGS_RANDOM_ADDR","","",null,null],[17,"VM_FLAGS_NO_CACHE","","",null,null],[17,"VM_FLAGS_RESILIENT_CODESIGN","","",null,null],[17,"VM_FLAGS_RESILIENT_MEDIA","","",null,null],[17,"VM_FLAGS_OVERWRITE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_MASK","","",null,null],[17,"VM_FLAGS_RETURN_DATA_ADDR","","",null,null],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR","","",null,null],[17,"VM_FLAGS_ALIAS_MASK","","",null,null],[17,"VM_FLAGS_USER_ALLOCATE","","",null,null],[17,"VM_FLAGS_USER_MAP","","",null,null],[17,"VM_FLAGS_USER_REMAP","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SHIFT","","",null,null],[17,"SUPERPAGE_NONE","","",null,null],[17,"SUPERPAGE_SIZE_ANY","","",null,null],[17,"VM_FLAGS_SUPERPAGE_NONE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY","","",null,null],[17,"SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_MEMORY_MALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_SMALL","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE","","",null,null],[17,"VM_MEMORY_MALLOC_HUGE","","",null,null],[17,"VM_MEMORY_SBRK","","",null,null],[17,"VM_MEMORY_REALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_TINY","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSED","","",null,null],[17,"VM_MEMORY_ANALYSIS_TOOL","","",null,null],[17,"VM_MEMORY_MALLOC_NANO","","",null,null],[17,"VM_MEMORY_MACH_MSG","","",null,null],[17,"VM_MEMORY_IOKIT","","",null,null],[17,"VM_MEMORY_STACK","","",null,null],[17,"VM_MEMORY_GUARD","","",null,null],[17,"VM_MEMORY_SHARED_PMAP","","",null,null],[17,"VM_MEMORY_DYLIB","","",null,null],[17,"VM_MEMORY_OBJC_DISPATCHERS","","",null,null],[17,"VM_MEMORY_UNSHARED_PMAP","","",null,null],[17,"VM_MEMORY_APPKIT","","",null,null],[17,"VM_MEMORY_FOUNDATION","","",null,null],[17,"VM_MEMORY_COREGRAPHICS","","",null,null],[17,"VM_MEMORY_CORESERVICES","","",null,null],[17,"VM_MEMORY_CARBON","","",null,null],[17,"VM_MEMORY_JAVA","","",null,null],[17,"VM_MEMORY_COREDATA","","",null,null],[17,"VM_MEMORY_COREDATA_OBJECTIDS","","",null,null],[17,"VM_MEMORY_ATS","","",null,null],[17,"VM_MEMORY_LAYERKIT","","",null,null],[17,"VM_MEMORY_CGIMAGE","","",null,null],[17,"VM_MEMORY_TCMALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_DATA","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_SHARED","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_XALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_MISC","","",null,null],[17,"VM_MEMORY_DYLD","","",null,null],[17,"VM_MEMORY_DYLD_MALLOC","","",null,null],[17,"VM_MEMORY_SQLITE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_CORE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","","",null,null],[17,"VM_MEMORY_GLSL","","",null,null],[17,"VM_MEMORY_OPENCL","","",null,null],[17,"VM_MEMORY_COREIMAGE","","",null,null],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","","",null,null],[17,"VM_MEMORY_IMAGEIO","","",null,null],[17,"VM_MEMORY_COREPROFILE","","",null,null],[17,"VM_MEMORY_ASSETSD","","",null,null],[17,"VM_MEMORY_OS_ALLOC_ONCE","","",null,null],[17,"VM_MEMORY_LIBDISPATCH","","",null,null],[17,"VM_MEMORY_ACCELERATE","","",null,null],[17,"VM_MEMORY_COREUI","","",null,null],[17,"VM_MEMORY_COREUIFILE","","",null,null],[17,"VM_MEMORY_GENEALOGY","","",null,null],[17,"VM_MEMORY_RAWCAMERA","","",null,null],[17,"VM_MEMORY_CORPSEINFO","","",null,null],[17,"VM_MEMORY_ASL","","",null,null],[17,"VM_MEMORY_SWIFT_RUNTIME","","",null,null],[17,"VM_MEMORY_SWIFT_METADATA","","",null,null],[17,"VM_MEMORY_DHMM","","",null,null],[17,"VM_MEMORY_SCENEKIT","","",null,null],[17,"VM_MEMORY_SKYWALK","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"TIOCMODG","","",null,null],[17,"TIOCMODS","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCFLUSH","","",null,null],[17,"TIOCGETD","","",null,null],[17,"TIOCSETD","","",null,null],[17,"TIOCIXON","","",null,null],[17,"TIOCIXOFF","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"TIOCSDTR","","",null,null],[17,"TIOCCDTR","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCNOTTY","","",null,null],[17,"TIOCPKT","","",null,null],[17,"TIOCPKT_DATA","","",null,null],[17,"TIOCPKT_FLUSHREAD","","",null,null],[17,"TIOCPKT_FLUSHWRITE","","",null,null],[17,"TIOCPKT_STOP","","",null,null],[17,"TIOCPKT_START","","",null,null],[17,"TIOCPKT_NOSTOP","","",null,null],[17,"TIOCPKT_DOSTOP","","",null,null],[17,"TIOCPKT_IOCTL","","",null,null],[17,"TIOCSTOP","","",null,null],[17,"TIOCSTART","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCREMOTE","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCUCNTL","","",null,null],[17,"TIOCSTAT","","",null,null],[17,"TIOCSCONS","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCEXT","","",null,null],[17,"TIOCSIG","","",null,null],[17,"TIOCDRAIN","","",null,null],[17,"TIOCMSDTRWAIT","","",null,null],[17,"TIOCMGDTRWAIT","","",null,null],[17,"TIOCSDRAINWAIT","","",null,null],[17,"TIOCGDRAINWAIT","","",null,null],[17,"TIOCDSIMICROCODE","","",null,null],[17,"TIOCPTYGRANT","","",null,null],[17,"TIOCPTYGNAME","","",null,null],[17,"TIOCPTYUNLK","","",null,null],[17,"BIOCGRSIG","","",null,null],[17,"BIOCSRSIG","","",null,null],[17,"BIOCSDLT","","",null,null],[17,"BIOCGSEESENT","","",null,null],[17,"BIOCSSEESENT","","",null,null],[17,"BIOCGDLTLIST","","",null,null],[17,"FIODTYPE","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"B7200","","",null,null],[17,"B14400","","",null,null],[17,"B28800","","",null,null],[17,"B57600","","",null,null],[17,"B76800","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"IPPROTO_HOPOPTS","","IP6 hop-by-hop options",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_GGP","","gateway2 (deprecated)",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_ST","","Stream protocol II.",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PIGP","","private interior gateway",null,null],[17,"IPPROTO_RCCMON","","BBN RCC Monitoring",null,null],[17,"IPPROTO_NVPII","","network voice protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_ARGUS","","Argus",null,null],[17,"IPPROTO_EMCON","","EMCON",null,null],[17,"IPPROTO_XNET","","Cross Net Debugger",null,null],[17,"IPPROTO_CHAOS","","Chaos",null,null],[17,"IPPROTO_MUX","","Multiplexing",null,null],[17,"IPPROTO_MEAS","","DCN Measurement Subsystems",null,null],[17,"IPPROTO_HMP","","Host Monitoring",null,null],[17,"IPPROTO_PRM","","Packet Radio Measurement",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TRUNK1","","Trunk-1",null,null],[17,"IPPROTO_TRUNK2","","Trunk-2",null,null],[17,"IPPROTO_LEAF1","","Leaf-1",null,null],[17,"IPPROTO_LEAF2","","Leaf-2",null,null],[17,"IPPROTO_RDP","","Reliable Data",null,null],[17,"IPPROTO_IRTP","","Reliable Transaction",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_BLT","","Bulk Data Transfer",null,null],[17,"IPPROTO_NSP","","Network Services",null,null],[17,"IPPROTO_INP","","Merit Internodal",null,null],[17,"IPPROTO_SEP","","Sequential Exchange",null,null],[17,"IPPROTO_3PC","","Third Party Connect",null,null],[17,"IPPROTO_IDPR","","InterDomain Policy Routing",null,null],[17,"IPPROTO_XTP","","XTP",null,null],[17,"IPPROTO_DDP","","Datagram Delivery",null,null],[17,"IPPROTO_CMTP","","Control Message Transport",null,null],[17,"IPPROTO_TPXX","","TP++ Transport",null,null],[17,"IPPROTO_IL","","IL transport protocol",null,null],[17,"IPPROTO_SDRP","","Source Demand Routing",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_IDRP","","InterDomain Routing",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_MHRP","","Mobile Host Routing",null,null],[17,"IPPROTO_BHA","","BHA",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_INLSP","","Integ. Net Layer Security",null,null],[17,"IPPROTO_SWIPE","","IP with encryption",null,null],[17,"IPPROTO_NHRP","","Next Hop Resolution",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_AHIP","","any host internal protocol",null,null],[17,"IPPROTO_CFTP","","CFTP",null,null],[17,"IPPROTO_HELLO","","\"hello\" routing protocol",null,null],[17,"IPPROTO_SATEXPAK","","SATNET/Backroom EXPAK",null,null],[17,"IPPROTO_KRYPTOLAN","","Kryptolan",null,null],[17,"IPPROTO_RVD","","Remote Virtual Disk",null,null],[17,"IPPROTO_IPPC","","Pluribus Packet Core",null,null],[17,"IPPROTO_ADFS","","Any distributed FS",null,null],[17,"IPPROTO_SATMON","","Satnet Monitoring",null,null],[17,"IPPROTO_VISA","","VISA Protocol",null,null],[17,"IPPROTO_IPCV","","Packet Core Utility",null,null],[17,"IPPROTO_CPNX","","Comp. Prot. Net. Executive",null,null],[17,"IPPROTO_CPHB","","Comp. Prot. HeartBeat",null,null],[17,"IPPROTO_WSN","","Wang Span Network",null,null],[17,"IPPROTO_PVP","","Packet Video Protocol",null,null],[17,"IPPROTO_BRSATMON","","BackRoom SATNET Monitoring",null,null],[17,"IPPROTO_ND","","Sun net disk proto (temp.)",null,null],[17,"IPPROTO_WBMON","","WIDEBAND Monitoring",null,null],[17,"IPPROTO_WBEXPAK","","WIDEBAND EXPAK",null,null],[17,"IPPROTO_EON","","ISO cnlp",null,null],[17,"IPPROTO_VMTP","","VMTP",null,null],[17,"IPPROTO_SVMTP","","Secure VMTP",null,null],[17,"IPPROTO_VINES","","Banyon VINES",null,null],[17,"IPPROTO_TTP","","TTP",null,null],[17,"IPPROTO_IGP","","NSFNET-IGP",null,null],[17,"IPPROTO_DGP","","dissimilar gateway prot.",null,null],[17,"IPPROTO_TCF","","TCF",null,null],[17,"IPPROTO_IGRP","","Cisco/GXS IGRP",null,null],[17,"IPPROTO_OSPFIGP","","OSPFIGP",null,null],[17,"IPPROTO_SRPC","","Strite RPC protocol",null,null],[17,"IPPROTO_LARP","","Locus Address Resoloution",null,null],[17,"IPPROTO_MTP","","Multicast Transport",null,null],[17,"IPPROTO_AX25","","AX.25 Frames",null,null],[17,"IPPROTO_IPEIP","","IP encapsulated in IP",null,null],[17,"IPPROTO_MICP","","Mobile Int.ing control",null,null],[17,"IPPROTO_SCCSP","","Semaphore Comm. security",null,null],[17,"IPPROTO_ETHERIP","","Ethernet IP encapsulation",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_APES","","any private encr. scheme",null,null],[17,"IPPROTO_GMTP","","GMTP",null,null],[17,"IPPROTO_PIM","","Protocol Independent Mcast",null,null],[17,"IPPROTO_IPCOMP","","payload compression (IPComp)",null,null],[17,"IPPROTO_PGM","","PGM",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_DIVERT","","divert pseudo-protocol",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IPPROTO_DONE","","last return value of *_input(), meaning \"all job for this…",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_IMPLINK","","",null,null],[17,"AF_PUP","","",null,null],[17,"AF_CHAOS","","",null,null],[17,"AF_NS","","",null,null],[17,"AF_ISO","","",null,null],[17,"AF_OSI","","",null,null],[17,"AF_ECMA","","",null,null],[17,"AF_DATAKIT","","",null,null],[17,"AF_CCITT","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_DLI","","",null,null],[17,"AF_LAT","","",null,null],[17,"AF_HYLINK","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_LINK","","",null,null],[17,"pseudo_AF_XTP","","",null,null],[17,"AF_COIP","","",null,null],[17,"AF_CNT","","",null,null],[17,"pseudo_AF_RTIP","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_SIP","","",null,null],[17,"pseudo_AF_PIP","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_E164","","",null,null],[17,"pseudo_AF_KEY","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NATM","","",null,null],[17,"AF_SYSTEM","","",null,null],[17,"AF_NETBIOS","","",null,null],[17,"AF_PPP","","",null,null],[17,"pseudo_AF_HDRCMPLT","","",null,null],[17,"AF_SYS_CONTROL","","",null,null],[17,"SYSPROTO_EVENT","","",null,null],[17,"SYSPROTO_CONTROL","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_IMPLINK","","",null,null],[17,"PF_PUP","","",null,null],[17,"PF_CHAOS","","",null,null],[17,"PF_NS","","",null,null],[17,"PF_ISO","","",null,null],[17,"PF_OSI","","",null,null],[17,"PF_ECMA","","",null,null],[17,"PF_DATAKIT","","",null,null],[17,"PF_CCITT","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_DLI","","",null,null],[17,"PF_LAT","","",null,null],[17,"PF_HYLINK","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_LINK","","",null,null],[17,"PF_XTP","","",null,null],[17,"PF_COIP","","",null,null],[17,"PF_CNT","","",null,null],[17,"PF_SIP","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_RTIP","","",null,null],[17,"PF_PIP","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_NATM","","",null,null],[17,"PF_SYSTEM","","",null,null],[17,"PF_NETBIOS","","",null,null],[17,"PF_PPP","","",null,null],[17,"NET_RT_DUMP","","",null,null],[17,"NET_RT_FLAGS","","",null,null],[17,"NET_RT_IFLIST","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"SOCK_MAXADDRLEN","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_RECVDSTADDR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_RECVIF","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"TCP_NOPUSH","","",null,null],[17,"TCP_NOOPT","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"TCP_FASTOPEN","","Enable/Disable TCP Fastopen on this socket",null,null],[17,"SOL_LOCAL","","",null,null],[17,"LOCAL_PEERCRED","","",null,null],[17,"LOCAL_PEERPID","","",null,null],[17,"LOCAL_PEEREPID","","",null,null],[17,"LOCAL_PEERUUID","","",null,null],[17,"LOCAL_PEEREUUID","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_TIMESTAMP_MONOTONIC","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_LABEL","","",null,null],[17,"SO_PEERLABEL","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_REUSESHAREUID","","",null,null],[17,"SO_NOTIFYCONFLICT","","",null,null],[17,"SO_RANDOMPORT","","",null,null],[17,"SO_NP_EXTENSIONS","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOF","","",null,null],[17,"MSG_FLUSH","","",null,null],[17,"MSG_HOLD","","",null,null],[17,"MSG_SEND","","",null,null],[17,"MSG_HAVEMORE","","",null,null],[17,"MSG_RCVMORE","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SCM_CREDS","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_OACTIVE","","",null,null],[17,"IFF_SIMPLEX","","",null,null],[17,"IFF_LINK0","","",null,null],[17,"IFF_LINK1","","",null,null],[17,"IFF_LINK2","","",null,null],[17,"IFF_ALTPHYS","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"SAE_ASSOCID_ANY","","",null,null],[17,"SAE_ASSOCID_ALL","","((sae_associd_t)(-1ULL))",null,null],[17,"SAE_CONNID_ANY","","",null,null],[17,"SAE_CONNID_ALL","","((sae_connid_t)(-1ULL))",null,null],[17,"CONNECT_RESUME_ON_READ_WRITE","","resume connect() on read/write",null,null],[17,"CONNECT_DATA_IDEMPOTENT","","data is idempotent",null,null],[17,"CONNECT_DATA_AUTHENTICATED","","data includes security that replaces the TFO-cookie",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_DETAIL","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"NOTE_EXIT_DETAIL_MASK","","",null,null],[17,"NOTE_EXIT_DECRYPTFAIL","","",null,null],[17,"NOTE_EXIT_MEMORY","","",null,null],[17,"NOTE_EXIT_CSERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_LEEWAY","","",null,null],[17,"NOTE_CRITICAL","","",null,null],[17,"NOTE_BACKGROUND","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"NLDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"OFDEL","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"NI_MAXSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NUMERICSCOPE","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"RENAME_SWAP","","",null,null],[17,"RENAME_EXCL","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_FIRST","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"_WSTOPPED","","",null,null],[17,"LOG_NETINFO","","",null,null],[17,"LOG_REMOTEAUTH","","",null,null],[17,"LOG_INSTALL","","",null,null],[17,"LOG_RAS","","",null,null],[17,"LOG_LAUNCHD","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"CTLTYPE","","",null,null],[17,"CTLTYPE_NODE","","",null,null],[17,"CTLTYPE_INT","","",null,null],[17,"CTLTYPE_STRING","","",null,null],[17,"CTLTYPE_QUAD","","",null,null],[17,"CTLTYPE_OPAQUE","","",null,null],[17,"CTLTYPE_STRUCT","","",null,null],[17,"CTLFLAG_RD","","",null,null],[17,"CTLFLAG_WR","","",null,null],[17,"CTLFLAG_RW","","",null,null],[17,"CTLFLAG_NOLOCK","","",null,null],[17,"CTLFLAG_ANYBODY","","",null,null],[17,"CTLFLAG_SECURE","","",null,null],[17,"CTLFLAG_MASKED","","",null,null],[17,"CTLFLAG_NOAUTO","","",null,null],[17,"CTLFLAG_KERN","","",null,null],[17,"CTLFLAG_LOCKED","","",null,null],[17,"CTLFLAG_OID2","","",null,null],[17,"CTL_UNSPEC","","",null,null],[17,"CTL_KERN","","",null,null],[17,"CTL_VM","","",null,null],[17,"CTL_VFS","","",null,null],[17,"CTL_NET","","",null,null],[17,"CTL_DEBUG","","",null,null],[17,"CTL_HW","","",null,null],[17,"CTL_MACHDEP","","",null,null],[17,"CTL_USER","","",null,null],[17,"CTL_MAXID","","",null,null],[17,"KERN_OSTYPE","","",null,null],[17,"KERN_OSRELEASE","","",null,null],[17,"KERN_OSREV","","",null,null],[17,"KERN_VERSION","","",null,null],[17,"KERN_MAXVNODES","","",null,null],[17,"KERN_MAXPROC","","",null,null],[17,"KERN_MAXFILES","","",null,null],[17,"KERN_ARGMAX","","",null,null],[17,"KERN_SECURELVL","","",null,null],[17,"KERN_HOSTNAME","","",null,null],[17,"KERN_HOSTID","","",null,null],[17,"KERN_CLOCKRATE","","",null,null],[17,"KERN_VNODE","","",null,null],[17,"KERN_PROC","","",null,null],[17,"KERN_FILE","","",null,null],[17,"KERN_PROF","","",null,null],[17,"KERN_POSIX1","","",null,null],[17,"KERN_NGROUPS","","",null,null],[17,"KERN_JOB_CONTROL","","",null,null],[17,"KERN_SAVED_IDS","","",null,null],[17,"KERN_BOOTTIME","","",null,null],[17,"KERN_NISDOMAINNAME","","",null,null],[17,"KERN_DOMAINNAME","","",null,null],[17,"KERN_MAXPARTITIONS","","",null,null],[17,"KERN_KDEBUG","","",null,null],[17,"KERN_UPDATEINTERVAL","","",null,null],[17,"KERN_OSRELDATE","","",null,null],[17,"KERN_NTP_PLL","","",null,null],[17,"KERN_BOOTFILE","","",null,null],[17,"KERN_MAXFILESPERPROC","","",null,null],[17,"KERN_MAXPROCPERUID","","",null,null],[17,"KERN_DUMPDEV","","",null,null],[17,"KERN_IPC","","",null,null],[17,"KERN_DUMMY","","",null,null],[17,"KERN_PS_STRINGS","","",null,null],[17,"KERN_USRSTACK32","","",null,null],[17,"KERN_LOGSIGEXIT","","",null,null],[17,"KERN_SYMFILE","","",null,null],[17,"KERN_PROCARGS","","",null,null],[17,"KERN_NETBOOT","","",null,null],[17,"KERN_SYSV","","",null,null],[17,"KERN_AFFINITY","","",null,null],[17,"KERN_TRANSLATE","","",null,null],[17,"KERN_CLASSIC","","",null,null],[17,"KERN_EXEC","","",null,null],[17,"KERN_CLASSICHANDLER","","",null,null],[17,"KERN_AIOMAX","","",null,null],[17,"KERN_AIOPROCMAX","","",null,null],[17,"KERN_AIOTHREADS","","",null,null],[17,"KERN_COREFILE","","",null,null],[17,"KERN_COREDUMP","","",null,null],[17,"KERN_SUGID_COREDUMP","","",null,null],[17,"KERN_PROCDELAYTERM","","",null,null],[17,"KERN_SHREG_PRIVATIZABLE","","",null,null],[17,"KERN_LOW_PRI_WINDOW","","",null,null],[17,"KERN_LOW_PRI_DELAY","","",null,null],[17,"KERN_POSIX","","",null,null],[17,"KERN_USRSTACK64","","",null,null],[17,"KERN_NX_PROTECTION","","",null,null],[17,"KERN_TFP","","",null,null],[17,"KERN_PROCNAME","","",null,null],[17,"KERN_THALTSTACK","","",null,null],[17,"KERN_SPECULATIVE_READS","","",null,null],[17,"KERN_OSVERSION","","",null,null],[17,"KERN_SAFEBOOT","","",null,null],[17,"KERN_RAGEVNODE","","",null,null],[17,"KERN_TTY","","",null,null],[17,"KERN_CHECKOPENEVT","","",null,null],[17,"KERN_THREADNAME","","",null,null],[17,"KERN_MAXID","","",null,null],[17,"KERN_RAGE_PROC","","",null,null],[17,"KERN_RAGE_THREAD","","",null,null],[17,"KERN_UNRAGE_PROC","","",null,null],[17,"KERN_UNRAGE_THREAD","","",null,null],[17,"KERN_OPENEVT_PROC","","",null,null],[17,"KERN_UNOPENEVT_PROC","","",null,null],[17,"KERN_TFP_POLICY","","",null,null],[17,"KERN_TFP_POLICY_DENY","","",null,null],[17,"KERN_TFP_POLICY_DEFAULT","","",null,null],[17,"KERN_KDEFLAGS","","",null,null],[17,"KERN_KDDFLAGS","","",null,null],[17,"KERN_KDENABLE","","",null,null],[17,"KERN_KDSETBUF","","",null,null],[17,"KERN_KDGETBUF","","",null,null],[17,"KERN_KDSETUP","","",null,null],[17,"KERN_KDREMOVE","","",null,null],[17,"KERN_KDSETREG","","",null,null],[17,"KERN_KDGETREG","","",null,null],[17,"KERN_KDREADTR","","",null,null],[17,"KERN_KDPIDTR","","",null,null],[17,"KERN_KDTHRMAP","","",null,null],[17,"KERN_KDPIDEX","","",null,null],[17,"KERN_KDSETRTCDEC","","",null,null],[17,"KERN_KDGETENTROPY","","",null,null],[17,"KERN_KDWRITETR","","",null,null],[17,"KERN_KDWRITEMAP","","",null,null],[17,"KERN_KDREADCURTHRMAP","","",null,null],[17,"KERN_KDSET_TYPEFILTER","","",null,null],[17,"KERN_KDBUFWAIT","","",null,null],[17,"KERN_KDCPUMAP","","",null,null],[17,"KERN_PROC_ALL","","",null,null],[17,"KERN_PROC_PID","","",null,null],[17,"KERN_PROC_PGRP","","",null,null],[17,"KERN_PROC_SESSION","","",null,null],[17,"KERN_PROC_TTY","","",null,null],[17,"KERN_PROC_UID","","",null,null],[17,"KERN_PROC_RUID","","",null,null],[17,"KERN_PROC_LCID","","",null,null],[17,"KIPC_MAXSOCKBUF","","",null,null],[17,"KIPC_SOCKBUF_WASTE","","",null,null],[17,"KIPC_SOMAXCONN","","",null,null],[17,"KIPC_MAX_LINKHDR","","",null,null],[17,"KIPC_MAX_PROTOHDR","","",null,null],[17,"KIPC_MAX_HDR","","",null,null],[17,"KIPC_MAX_DATALEN","","",null,null],[17,"KIPC_MBSTAT","","",null,null],[17,"KIPC_NMBCLUSTERS","","",null,null],[17,"KIPC_SOQLIMITCOMPAT","","",null,null],[17,"VM_METER","","",null,null],[17,"VM_LOADAVG","","",null,null],[17,"VM_MACHFACTOR","","",null,null],[17,"VM_SWAPUSAGE","","",null,null],[17,"VM_MAXID","","",null,null],[17,"HW_MACHINE","","",null,null],[17,"HW_MODEL","","",null,null],[17,"HW_NCPU","","",null,null],[17,"HW_BYTEORDER","","",null,null],[17,"HW_PHYSMEM","","",null,null],[17,"HW_USERMEM","","",null,null],[17,"HW_PAGESIZE","","",null,null],[17,"HW_DISKNAMES","","",null,null],[17,"HW_DISKSTATS","","",null,null],[17,"HW_EPOCH","","",null,null],[17,"HW_FLOATINGPT","","",null,null],[17,"HW_MACHINE_ARCH","","",null,null],[17,"HW_VECTORUNIT","","",null,null],[17,"HW_BUS_FREQ","","",null,null],[17,"HW_CPU_FREQ","","",null,null],[17,"HW_CACHELINE","","",null,null],[17,"HW_L1ICACHESIZE","","",null,null],[17,"HW_L1DCACHESIZE","","",null,null],[17,"HW_L2SETTINGS","","",null,null],[17,"HW_L2CACHESIZE","","",null,null],[17,"HW_L3SETTINGS","","",null,null],[17,"HW_L3CACHESIZE","","",null,null],[17,"HW_TB_FREQ","","",null,null],[17,"HW_MEMSIZE","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"HW_MAXID","","",null,null],[17,"USER_CS_PATH","","",null,null],[17,"USER_BC_BASE_MAX","","",null,null],[17,"USER_BC_DIM_MAX","","",null,null],[17,"USER_BC_SCALE_MAX","","",null,null],[17,"USER_BC_STRING_MAX","","",null,null],[17,"USER_COLL_WEIGHTS_MAX","","",null,null],[17,"USER_EXPR_NEST_MAX","","",null,null],[17,"USER_LINE_MAX","","",null,null],[17,"USER_RE_DUP_MAX","","",null,null],[17,"USER_POSIX2_VERSION","","",null,null],[17,"USER_POSIX2_C_BIND","","",null,null],[17,"USER_POSIX2_C_DEV","","",null,null],[17,"USER_POSIX2_CHAR_TERM","","",null,null],[17,"USER_POSIX2_FORT_DEV","","",null,null],[17,"USER_POSIX2_FORT_RUN","","",null,null],[17,"USER_POSIX2_LOCALEDEF","","",null,null],[17,"USER_POSIX2_SW_DEV","","",null,null],[17,"USER_POSIX2_UPE","","",null,null],[17,"USER_STREAM_MAX","","",null,null],[17,"USER_TZNAME_MAX","","",null,null],[17,"USER_MAXID","","",null,null],[17,"CTL_DEBUG_NAME","","",null,null],[17,"CTL_DEBUG_VALUE","","",null,null],[17,"CTL_DEBUG_MAXID","","",null,null],[17,"PRIO_DARWIN_THREAD","","",null,null],[17,"PRIO_DARWIN_PROCESS","","",null,null],[17,"PRIO_DARWIN_BG","","",null,null],[17,"PRIO_DARWIN_NONUI","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"AI_MASK","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_V4MAPPED_CFG","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_DEFAULT","","",null,null],[17,"AI_UNUSABLE","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"AIO_LISTIO_MAX","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"WEXITED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"XATTR_NOFOLLOW","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"XATTR_NOSECURITY","","",null,null],[17,"XATTR_NODEFAULT","","",null,null],[17,"XATTR_SHOWCOMPRESSION","","",null,null],[17,"NET_RT_IFLIST2","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_DONE","","",null,null],[17,"RTF_DELCLONE","","",null,null],[17,"RTF_CLONING","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_LLINFO","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_BLACKHOLE","","",null,null],[17,"RTF_NOIFREF","","",null,null],[17,"RTF_PROTO2","","",null,null],[17,"RTF_PROTO1","","",null,null],[17,"RTF_PRCLONING","","",null,null],[17,"RTF_WASCLONED","","",null,null],[17,"RTF_PROTO3","","",null,null],[17,"RTF_PINNED","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_IFSCOPE","","",null,null],[17,"RTF_CONDEMNED","","",null,null],[17,"RTF_IFREF","","",null,null],[17,"RTF_PROXY","","",null,null],[17,"RTF_ROUTER","","",null,null],[17,"RTM_VERSION","","",null,null],[17,"RTM_ADD","","",null,null],[17,"RTM_DELETE","","",null,null],[17,"RTM_CHANGE","","",null,null],[17,"RTM_GET","","",null,null],[17,"RTM_LOSING","","",null,null],[17,"RTM_REDIRECT","","",null,null],[17,"RTM_MISS","","",null,null],[17,"RTM_LOCK","","",null,null],[17,"RTM_OLDADD","","",null,null],[17,"RTM_OLDDEL","","",null,null],[17,"RTM_RESOLVE","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_IFINFO","","",null,null],[17,"RTM_NEWMADDR","","",null,null],[17,"RTM_DELMADDR","","",null,null],[17,"RTM_IFINFO2","","",null,null],[17,"RTM_NEWMADDR2","","",null,null],[17,"RTM_GET2","","",null,null],[17,"RTV_MTU","","",null,null],[17,"RTV_HOPCOUNT","","",null,null],[17,"RTV_EXPIRE","","",null,null],[17,"RTV_RPIPE","","",null,null],[17,"RTV_SPIPE","","",null,null],[17,"RTV_SSTHRESH","","",null,null],[17,"RTV_RTT","","",null,null],[17,"RTV_RTTVAR","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_NETMASK","","",null,null],[17,"RTA_GENMASK","","",null,null],[17,"RTA_IFP","","",null,null],[17,"RTA_IFA","","",null,null],[17,"RTA_AUTHOR","","",null,null],[17,"RTA_BRD","","",null,null],[17,"RTAX_DST","","",null,null],[17,"RTAX_GATEWAY","","",null,null],[17,"RTAX_NETMASK","","",null,null],[17,"RTAX_GENMASK","","",null,null],[17,"RTAX_IFP","","",null,null],[17,"RTAX_IFA","","",null,null],[17,"RTAX_AUTHOR","","",null,null],[17,"RTAX_BRD","","",null,null],[17,"RTAX_MAX","","",null,null],[17,"KERN_PROCARGS2","","",null,null],[17,"PROC_PIDTASKALLINFO","","",null,null],[17,"PROC_PIDTASKINFO","","",null,null],[17,"PROC_PIDTHREADINFO","","",null,null],[17,"MAXCOMLEN","","",null,null],[17,"MAXTHREADNAMESIZE","","",null,null],[17,"XUCRED_VERSION","","",null,null],[17,"LC_SEGMENT","","",null,null],[17,"LC_SEGMENT_64","","",null,null],[17,"MH_MAGIC","","",null,null],[17,"MH_MAGIC_64","","",null,null],[17,"UTUN_OPT_FLAGS","","",null,null],[17,"UTUN_OPT_IFNAME","","",null,null],[17,"DLT_NULL","","",null,null],[17,"DLT_EN10MB","","",null,null],[17,"DLT_EN3MB","","",null,null],[17,"DLT_AX25","","",null,null],[17,"DLT_PRONET","","",null,null],[17,"DLT_CHAOS","","",null,null],[17,"DLT_IEEE802","","",null,null],[17,"DLT_ARCNET","","",null,null],[17,"DLT_SLIP","","",null,null],[17,"DLT_PPP","","",null,null],[17,"DLT_FDDI","","",null,null],[17,"DLT_ATM_RFC1483","","",null,null],[17,"DLT_RAW","","",null,null],[17,"DLT_LOOP","","",null,null],[17,"BPF_ALIGNMENT","","",null,null],[17,"MNT_RDONLY","","",null,null],[17,"MNT_SYNCHRONOUS","","",null,null],[17,"MNT_NOEXEC","","",null,null],[17,"MNT_NOSUID","","",null,null],[17,"MNT_NODEV","","",null,null],[17,"MNT_UNION","","",null,null],[17,"MNT_ASYNC","","",null,null],[17,"MNT_CPROTECT","","",null,null],[17,"MNT_EXPORTED","","",null,null],[17,"MNT_QUARANTINE","","",null,null],[17,"MNT_LOCAL","","",null,null],[17,"MNT_QUOTA","","",null,null],[17,"MNT_ROOTFS","","",null,null],[17,"MNT_DOVOLFS","","",null,null],[17,"MNT_DONTBROWSE","","",null,null],[17,"MNT_IGNORE_OWNERSHIP","","",null,null],[17,"MNT_AUTOMOUNTED","","",null,null],[17,"MNT_JOURNALED","","",null,null],[17,"MNT_NOUSERXATTR","","",null,null],[17,"MNT_DEFWRITE","","",null,null],[17,"MNT_MULTILABEL","","",null,null],[17,"MNT_NOATIME","","",null,null],[17,"MNT_SNAPSHOT","","",null,null],[17,"MNT_UPDATE","","",null,null],[17,"MNT_NOBLOCK","","",null,null],[17,"MNT_RELOAD","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETEXEC","","",null,null],[17,"POSIX_SPAWN_START_SUSPENDED","","",null,null],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_R","","",null,null],[17,"IPC_W","","",null,null],[17,"IPC_M","","",null,null],[17,"SEM_UNDO","","",null,null],[17,"GETNCNT","","",null,null],[17,"GETPID","","",null,null],[17,"GETVAL","","",null,null],[17,"GETALL","","",null,null],[17,"GETZCNT","","",null,null],[17,"SETVAL","","",null,null],[17,"SETALL","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHMLBA","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"UF_SETTABLE","","",null,null],[17,"UF_NODUMP","","",null,null],[17,"UF_IMMUTABLE","","",null,null],[17,"UF_APPEND","","",null,null],[17,"UF_OPAQUE","","",null,null],[17,"UF_COMPRESSED","","",null,null],[17,"UF_TRACKED","","",null,null],[17,"SF_SETTABLE","","",null,null],[17,"SF_ARCHIVED","","",null,null],[17,"SF_IMMUTABLE","","",null,null],[17,"SF_APPEND","","",null,null],[17,"UF_HIDDEN","","",null,null],[17,"NTP_API","","",null,null],[17,"MAXPHASE","","",null,null],[17,"MAXFREQ","","",null,null],[17,"MINSEC","","",null,null],[17,"MAXSEC","","",null,null],[17,"NANOSECOND","","",null,null],[17,"SCALE_PPM","","",null,null],[17,"MAXTC","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_PPSMAX","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_CONDATTR_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCKATTR_SIZE__","","",null,null],[17,"TIOCTIMESTAMP","","",null,null],[17,"TIOCDCDTIMESTAMP","","",null,null],[17,"BIOCSETF","","",null,null],[17,"BIOCSRTIMEOUT","","",null,null],[17,"BIOCGRTIMEOUT","","",null,null],[17,"BIOCSETFNR","","",null,null],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"fmt","","",92,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"clone","","",104,[[["self"]],["dir"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",105,[[["self"]],["file"]]],[11,"clone","","",106,[[["self"]],["fpos_t"]]],[11,"clone","","",17,[[["self"]],["sockaddr"]]],[11,"clone","","",18,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",19,[[["self"]],["passwd"]]],[11,"clone","","",20,[[["self"]],["ifaddrs"]]],[11,"clone","","",93,[[["self"]],["fd_set"]]],[11,"clone","","",21,[[["self"]],["tm"]]],[11,"clone","","",22,[[["self"]],["msghdr"]]],[11,"clone","","",23,[[["self"]],["cmsghdr"]]],[11,"clone","","",94,[[["self"]],["fsid_t"]]],[11,"clone","","",24,[[["self"]],["if_nameindex"]]],[11,"clone","","",95,[[["self"]],["regex_t"]]],[11,"clone","","",25,[[["self"]],["regmatch_t"]]],[11,"clone","","",26,[[["self"]],["sockaddr_un"]]],[11,"clone","","",27,[[["self"]],["utsname"]]],[11,"clone","","",107,[[["self"]],["timezone"]]],[11,"clone","","",28,[[["self"]],["ip_mreq"]]],[11,"clone","","",29,[[["self"]],["aiocb"]]],[11,"clone","","",30,[[["self"]],["glob_t"]]],[11,"clone","","",31,[[["self"]],["addrinfo"]]],[11,"clone","","",32,[[["self"]],["mach_timebase_info"]]],[11,"clone","","",33,[[["self"]],["stat"]]],[11,"clone","","",96,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",97,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",98,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",34,[[["self"]],["siginfo_t"]]],[11,"clone","","",35,[[["self"]],["sigaction"]]],[11,"clone","","",36,[[["self"]],["stack_t"]]],[11,"clone","","",37,[[["self"]],["fstore_t"]]],[11,"clone","","",38,[[["self"]],["radvisory"]]],[11,"clone","","",39,[[["self"]],["statvfs"]]],[11,"clone","","",40,[[["self"]],["dl_info"]]],[11,"clone","","",41,[[["self"]],["sockaddr_in"]]],[11,"clone","","",42,[[["self"]],["kevent64_s"]]],[11,"clone","","",43,[[["self"]],["dqblk"]]],[11,"clone","","",44,[[["self"]],["if_msghdr"]]],[11,"clone","","",45,[[["self"]],["termios"]]],[11,"clone","","",46,[[["self"]],["flock"]]],[11,"clone","","",47,[[["self"]],["sf_hdtr"]]],[11,"clone","","",48,[[["self"]],["lconv"]]],[11,"clone","","",49,[[["self"]],["proc_taskinfo"]]],[11,"clone","","",50,[[["self"]],["proc_bsdinfo"]]],[11,"clone","","",51,[[["self"]],["proc_taskallinfo"]]],[11,"clone","","",52,[[["self"]],["xsw_usage"]]],[11,"clone","","",53,[[["self"]],["xucred"]]],[11,"clone","","",54,[[["self"]],["mach_header"]]],[11,"clone","","",55,[[["self"]],["mach_header_64"]]],[11,"clone","","",56,[[["self"]],["segment_command"]]],[11,"clone","","",57,[[["self"]],["segment_command_64"]]],[11,"clone","","",58,[[["self"]],["load_command"]]],[11,"clone","","",59,[[["self"]],["sockaddr_dl"]]],[11,"clone","","",60,[[["self"]],["sockaddr_inarp"]]],[11,"clone","","",61,[[["self"]],["sockaddr_ctl"]]],[11,"clone","","",62,[[["self"]],["in_pktinfo"]]],[11,"clone","","",63,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",64,[[["self"]],["ipc_perm"]]],[11,"clone","","",65,[[["self"]],["sembuf"]]],[11,"clone","","",66,[[["self"]],["arphdr"]]],[11,"clone","","",67,[[["self"]],["in_addr"]]],[11,"clone","","",68,[[["self"]],["sa_endpoints_t"]]],[11,"clone","","",69,[[["self"]],["timex"]]],[11,"clone","","",70,[[["self"]],["ntptimeval"]]],[11,"clone","","",71,[[["self"]],["kevent"]]],[11,"clone","","",72,[[["self"]],["semid_ds"]]],[11,"clone","","",73,[[["self"]],["shmid_ds"]]],[11,"clone","","",74,[[["self"]],["proc_threadinfo"]]],[11,"clone","","",75,[[["self"]],["statfs"]]],[11,"clone","","",76,[[["self"]],["dirent"]]],[11,"clone","","",99,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",100,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",101,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",77,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",78,[[["self"]],["utmpx"]]],[11,"clone","","",79,[[["self"]],["sigevent"]]],[11,"clone","","",91,[[["self"]],["semun"]]],[11,"clone","","",80,[[["self"]],["timeval32"]]],[11,"clone","","",81,[[["self"]],["if_data"]]],[11,"clone","","",82,[[["self"]],["bpf_hdr"]]],[11,"clone","","",83,[[["self"]],["ucontext_t"]]],[11,"clone","","",84,[[["self"]],["__darwin_mcontext64"]]],[11,"clone","","",85,[[["self"]],["__darwin_x86_exception_state64"]]],[11,"clone","","",86,[[["self"]],["__darwin_x86_thread_state64"]]],[11,"clone","","",87,[[["self"]],["__darwin_x86_float_state64"]]],[11,"clone","","",88,[[["self"]],["__darwin_mmst_reg"]]],[11,"clone","","",89,[[["self"]],["__darwin_xmm_reg"]]],[11,"clone","","",102,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",103,[[["self"]],["max_align_t"]]],[11,"clone","","",90,[[["self"]],["in6_addr"]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"regmatch_t"],[3,"sockaddr_un"],[3,"utsname"],[3,"ip_mreq"],[3,"aiocb"],[3,"glob_t"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"sa_endpoints_t"],[3,"timex"],[3,"ntptimeval"],[3,"kevent"],[3,"semid_ds"],[3,"shmid_ds"],[3,"proc_threadinfo"],[3,"statfs"],[3,"dirent"],[3,"sockaddr_storage"],[3,"utmpx"],[3,"sigevent"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[3,"ucontext_t"],[3,"__darwin_mcontext64"],[3,"__darwin_x86_exception_state64"],[3,"__darwin_x86_thread_state64"],[3,"__darwin_x86_float_state64"],[3,"__darwin_mmst_reg"],[3,"__darwin_xmm_reg"],[3,"in6_addr"],[19,"semun"],[4,"c_void"],[3,"fd_set"],[3,"fsid_t"],[3,"regex_t"],[3,"pthread_mutexattr_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutex_t"],[3,"pthread_cond_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"]]};
searchIndex["libm"] = {"doc":"libm in pure Rust","i":[[5,"acos","libm","Arccosine (f64)",null,[[["f64"]],["f64"]]],[5,"acosf","","Arccosine (f32)",null,[[["f32"]],["f32"]]],[5,"acosh","","Inverse hyperbolic cosine (f64)",null,[[["f64"]],["f64"]]],[5,"acoshf","","Inverse hyperbolic cosine (f32)",null,[[["f32"]],["f32"]]],[5,"asin","","Arcsine (f64)",null,[[["f64"]],["f64"]]],[5,"asinf","","Arcsine (f32)",null,[[["f32"]],["f32"]]],[5,"asinh","","Inverse hyperbolic sine (f64)",null,[[["f64"]],["f64"]]],[5,"asinhf","","Inverse hyperbolic sine (f32)",null,[[["f32"]],["f32"]]],[5,"atan","","Arctangent (f64)",null,[[["f64"]],["f64"]]],[5,"atan2","","Arctangent of y/x (f64)",null,[[["f64"]],["f64"]]],[5,"atan2f","","Arctangent of y/x (f32)",null,[[["f32"]],["f32"]]],[5,"atanf","","Arctangent (f32)",null,[[["f32"]],["f32"]]],[5,"atanh","","Inverse hyperbolic tangent (f64)",null,[[["f64"]],["f64"]]],[5,"atanhf","","Inverse hyperbolic tangent (f32)",null,[[["f32"]],["f32"]]],[5,"cbrt","","Computes the cube root of the argument.",null,[[["f64"]],["f64"]]],[5,"cbrtf","","Cube root (f32)",null,[[["f32"]],["f32"]]],[5,"ceil","","Ceil (f64)",null,[[["f64"]],["f64"]]],[5,"ceilf","","Ceil (f32)",null,[[["f32"]],["f32"]]],[5,"copysign","","Sign of Y, magnitude of X (f64)",null,[[["f64"]],["f64"]]],[5,"copysignf","","Sign of Y, magnitude of X (f32)",null,[[["f32"]],["f32"]]],[5,"cos","","",null,[[["f64"]],["f64"]]],[5,"cosf","","",null,[[["f32"]],["f32"]]],[5,"cosh","","Hyperbolic cosine (f64)",null,[[["f64"]],["f64"]]],[5,"coshf","","Hyperbolic cosine (f64)",null,[[["f32"]],["f32"]]],[5,"erf","","Error function (f64)",null,[[["f64"]],["f64"]]],[5,"erfc","","Error function (f64)",null,[[["f64"]],["f64"]]],[5,"erfcf","","Error function (f32)",null,[[["f32"]],["f32"]]],[5,"erff","","Error function (f32)",null,[[["f32"]],["f32"]]],[5,"exp","","Exponential, base e (f64)",null,[[["f64"]],["f64"]]],[5,"exp10","","",null,[[["f64"]],["f64"]]],[5,"exp10f","","",null,[[["f32"]],["f32"]]],[5,"exp2","","Exponential, base 2 (f64)",null,[[["f64"]],["f64"]]],[5,"exp2f","","Exponential, base 2 (f32)",null,[[["f32"]],["f32"]]],[5,"expf","","Exponential, base e (f32)",null,[[["f32"]],["f32"]]],[5,"expm1","","Exponential, base e, of x-1 (f64)",null,[[["f64"]],["f64"]]],[5,"expm1f","","Exponential, base e, of x-1 (f32)",null,[[["f32"]],["f32"]]],[5,"fabs","","Absolute value (magnitude) (f64) Calculates the absolute…",null,[[["f64"]],["f64"]]],[5,"fabsf","","Absolute value (magnitude) (f32) Calculates the absolute…",null,[[["f32"]],["f32"]]],[5,"fdim","","Positive difference (f64)",null,[[["f64"]],["f64"]]],[5,"fdimf","","Positive difference (f32)",null,[[["f32"]],["f32"]]],[5,"floor","","Floor (f64)",null,[[["f64"]],["f64"]]],[5,"floorf","","Floor (f32)",null,[[["f32"]],["f32"]]],[5,"fma","","Floating multiply add (f64)",null,[[["f64"]],["f64"]]],[5,"fmaf","","Floating multiply add (f32)",null,[[["f32"]],["f32"]]],[5,"fmax","","",null,[[["f64"]],["f64"]]],[5,"fmaxf","","",null,[[["f32"]],["f32"]]],[5,"fmin","","",null,[[["f64"]],["f64"]]],[5,"fminf","","",null,[[["f32"]],["f32"]]],[5,"fmod","","",null,[[["f64"]],["f64"]]],[5,"fmodf","","",null,[[["f32"]],["f32"]]],[5,"frexp","","",null,[[["f64"]]]],[5,"frexpf","","",null,[[["f32"]]]],[5,"hypot","","",null,[[["f64"]],["f64"]]],[5,"hypotf","","",null,[[["f32"]],["f32"]]],[5,"ilogb","","",null,[[["f64"]],["i32"]]],[5,"ilogbf","","",null,[[["f32"]],["i32"]]],[5,"j0","","",null,[[["f64"]],["f64"]]],[5,"y0","","",null,[[["f64"]],["f64"]]],[5,"j0f","","",null,[[["f32"]],["f32"]]],[5,"y0f","","",null,[[["f32"]],["f32"]]],[5,"j1","","",null,[[["f64"]],["f64"]]],[5,"y1","","",null,[[["f64"]],["f64"]]],[5,"j1f","","",null,[[["f32"]],["f32"]]],[5,"y1f","","",null,[[["f32"]],["f32"]]],[5,"jn","","",null,[[["f64"],["i32"]],["f64"]]],[5,"yn","","",null,[[["f64"],["i32"]],["f64"]]],[5,"jnf","","",null,[[["f32"],["i32"]],["f32"]]],[5,"ynf","","",null,[[["f32"],["i32"]],["f32"]]],[5,"ldexp","","",null,[[["f64"],["i32"]],["f64"]]],[5,"ldexpf","","",null,[[["f32"],["i32"]],["f32"]]],[5,"lgamma","","",null,[[["f64"]],["f64"]]],[5,"lgamma_r","","",null,[[["f64"]]]],[5,"lgammaf","","",null,[[["f32"]],["f32"]]],[5,"lgammaf_r","","",null,[[["f32"]]]],[5,"log","","",null,[[["f64"]],["f64"]]],[5,"log10","","",null,[[["f64"]],["f64"]]],[5,"log10f","","",null,[[["f32"]],["f32"]]],[5,"log1p","","",null,[[["f64"]],["f64"]]],[5,"log1pf","","",null,[[["f32"]],["f32"]]],[5,"log2","","",null,[[["f64"]],["f64"]]],[5,"log2f","","",null,[[["f32"]],["f32"]]],[5,"logf","","",null,[[["f32"]],["f32"]]],[5,"modf","","",null,[[["f64"]]]],[5,"modff","","",null,[[["f32"]]]],[5,"nextafter","","",null,[[["f64"]],["f64"]]],[5,"nextafterf","","",null,[[["f32"]],["f32"]]],[5,"pow","","",null,[[["f64"]],["f64"]]],[5,"powf","","",null,[[["f32"]],["f32"]]],[5,"remainder","","",null,[[["f64"]],["f64"]]],[5,"remainderf","","",null,[[["f32"]],["f32"]]],[5,"remquo","","",null,[[["f64"]]]],[5,"remquof","","",null,[[["f32"]]]],[5,"round","","",null,[[["f64"]],["f64"]]],[5,"roundf","","",null,[[["f32"]],["f32"]]],[5,"scalbn","","",null,[[["f64"],["i32"]],["f64"]]],[5,"scalbnf","","",null,[[["f32"],["i32"]],["f32"]]],[5,"sin","","",null,[[["f64"]],["f64"]]],[5,"sincos","","",null,[[["f64"]]]],[5,"sincosf","","",null,[[["f32"]]]],[5,"sinf","","",null,[[["f32"]],["f32"]]],[5,"sinh","","",null,[[["f64"]],["f64"]]],[5,"sinhf","","",null,[[["f32"]],["f32"]]],[5,"sqrt","","",null,[[["f64"]],["f64"]]],[5,"sqrtf","","",null,[[["f32"]],["f32"]]],[5,"tan","","",null,[[["f64"]],["f64"]]],[5,"tanf","","",null,[[["f32"]],["f32"]]],[5,"tanh","","",null,[[["f64"]],["f64"]]],[5,"tanhf","","",null,[[["f32"]],["f32"]]],[5,"tgamma","","",null,[[["f64"]],["f64"]]],[5,"tgammaf","","",null,[[["f32"]],["f32"]]],[5,"trunc","","",null,[[["f64"]],["f64"]]],[5,"truncf","","",null,[[["f32"]],["f32"]]]],"p":[]};
searchIndex["maplit"] = {"doc":"Macros for container literals with specific type.","i":[[14,"hashmap","maplit","Create a HashMap from a list of key-value pairs",null,null],[14,"hashset","","Create a HashSet from a list of elements.",null,null],[14,"btreemap","","Create a BTreeMap from a list of key-value pairs",null,null],[14,"btreeset","","Create a BTreeSet from a list of elements.",null,null],[14,"convert_args","","Macro that converts the keys or key-value pairs passed to…",null,null]],"p":[]};
searchIndex["matrixmultiply"] = {"doc":"General matrix multiplication for f32, f64 matrices.","i":[[5,"sgemm","matrixmultiply","General matrix multiplication (f32)",null,[[["f32"],["usize"],["isize"]]]],[5,"dgemm","","General matrix multiplication (f64)",null,[[["usize"],["f64"],["isize"]]]]],"p":[]};
searchIndex["maybe_uninit"] = {"doc":"","i":[[19,"MaybeUninit","maybe_uninit","A wrapper type to construct uninitialized instances of `T`.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["maybeuninit"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"new","","Creates a new `MaybeUninit<T>` initialized with the given…",0,[[["t"]],["maybeuninit"]]],[11,"uninit","","Creates a new `MaybeUninit<T>` in an uninitialized state.",0,[[],["maybeuninit"]]],[11,"uninit_array","","Create a new array of `MaybeUninit<T>` items, in an…",0,[[]]],[18,"UNINIT","","A promotable constant, equivalent to `uninit()`.",0,null],[11,"zeroed","","Creates a new `MaybeUninit<T>` in an uninitialized state,…",0,[[],["maybeuninit"]]],[11,"write","","Sets the value of the `MaybeUninit<T>`. This overwrites…",0,[[["self"],["t"]],["t"]]],[11,"as_ptr","","Gets a pointer to the contained value. Reading from this…",0,[[["self"]]]],[11,"as_mut_ptr","","Gets a mutable pointer to the contained value. Reading…",0,[[["self"]]]],[11,"assume_init","","Extracts the value from the `MaybeUninit<T>` container.…",0,[[],["t"]]],[11,"read","","Reads the value from the `MaybeUninit<T>` container. The…",0,[[["self"]],["t"]]],[11,"get_ref","","Gets a shared reference to the contained value.",0,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable (unique) reference to the contained value.",0,[[["self"]],["t"]]],[11,"slice_get_ref","","Assuming all the elements are initialized, get a slice to…",0,[[]]],[11,"slice_get_mut","","Assuming all the elements are initialized, get a mutable…",0,[[]]],[11,"first_ptr","","Gets a pointer to the first element of the array.",0,[[]]],[11,"first_ptr_mut","","Gets a mutable pointer to the first element of the array.",0,[[]]]],"p":[[19,"MaybeUninit"]]};
searchIndex["mcrt"] = {"doc":"MCRT binary.","i":[[3,"Parameters","mcrt","Input parameters.",null,null],[12,"tree","","Adaptive mesh settings.",0,null],[12,"grid","","Regular grid settings.",0,null],[12,"mcrt","","MCRT runtime settings.",0,null],[12,"light","","Light settings.",0,null],[12,"surfs","","Surfaces map.",0,null],[12,"props","","Properties map.",0,null],[5,"main","","Main function.",null,[[]]],[5,"init","","Initialise the command line arguments and directories.",null,[[]]],[5,"input","","Load the input files.",null,[[["path"]],["parameters"]]],[5,"build","","Build instances.",null,[[["parameters"],["path"]]]],[5,"grow","","Grow domain tree.",null,[[["settings"],["settings"],["set"]]]],[5,"simulate","","Run the simulation.",null,[[["cell"],["grid"],["light"],["settings"],["set"]],["data"]]],[5,"save","","Save the output data.",null,[[["path"],["data"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",0,[[["m"]],["d"]]],[11,"convert_into","","",0,[[],["u"]]],[11,"convert_unclamped_into","","",0,[[],["u"]]],[11,"try_convert_into","","",0,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"vzip","","",0,[[],["v"]]],[11,"bg","","",0,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",0,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"load","","",0,[[["path"]],[["error"],["result",["error"]]]]],[11,"deserialize","","",0,[[["__d"]],["result"]]]],"p":[[3,"Parameters"]]};
searchIndex["memoffset"] = {"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"raw_field","memoffset","Computes a const raw pointer to the given field of the…",null,null],[14,"offset_of","","Calculates the offset of the specified field from the…",null,null],[14,"span_of","","Produces a range instance representing the sub-slice…",null,null]],"p":[]};
searchIndex["midly"] = {"doc":"Overview","i":[[3,"Error","midly","Represents an error parsing an SMF file or MIDI stream.",null,null],[3,"Event","","Represents a fully parsed track event, with delta time.",null,null],[12,"delta","","",0,null],[12,"kind","","",0,null],[3,"SmpteTime","","Encodes an SMPTE time of the day.",null,null],[3,"Header","","A MIDI file header.",null,null],[12,"format","","",1,null],[12,"timing","","",1,null],[3,"Smf","","Represents a Standard Midi File (.mid and .midi files).…",null,null],[12,"header","","",2,null],[12,"tracks","","",2,null],[3,"TrackIter","","Allows deferring track parsing for later, on a per-event…",null,null],[4,"ErrorKind","","The type of error that occurred while parsing.",null,null],[13,"Invalid","","Fatal errors while reading the file. It is likely that the…",3,null],[13,"Malformed","","Non-fatal error, but the file is clearly corrupted.",3,null],[4,"EventKind","","Represents the different kinds of events.",null,null],[13,"Midi","","A standard MIDI message bound to a channel.",4,null],[12,"channel","midly::EventKind","",5,null],[12,"message","","",5,null],[13,"SysEx","midly","A System Exclusive message, carrying arbitrary data.",4,null],[13,"Escape","","An escape sequence, intended to send arbitrary data to the…",4,null],[13,"Meta","","A meta-message, giving extra information for correct…",4,null],[4,"MetaMessage","","",null,null],[13,"TrackNumber","","For `Format::Sequential` MIDI file types, `TrackNumber`…",6,null],[13,"Text","","",6,null],[13,"Copyright","","",6,null],[13,"TrackName","","",6,null],[13,"InstrumentName","","",6,null],[13,"Lyric","","",6,null],[13,"Marker","","",6,null],[13,"CuePoint","","",6,null],[13,"ProgramName","","",6,null],[13,"DeviceName","","",6,null],[13,"MidiChannel","","",6,null],[13,"MidiPort","","",6,null],[13,"EndOfTrack","","Obligatory at track end.",6,null],[13,"Tempo","","Amount of microseconds per beat (quarter note).",6,null],[13,"SmpteOffset","","",6,null],[13,"TimeSignature","","In order of the MIDI specification, numerator,…",6,null],[13,"KeySignature","","As in the MIDI specification, negative numbers indicate…",6,null],[13,"SequencerSpecific","","",6,null],[13,"Unknown","","An unknown meta-message, unconforming to the spec.",6,null],[4,"MidiMessage","","Represents a MIDI message, not an event.",null,null],[13,"NoteOff","","Stop playing a note.",7,null],[12,"key","midly::MidiMessage","The MIDI key to stop playing.",8,null],[12,"vel","","The velocity with which to stop playing it.",8,null],[13,"NoteOn","midly","Start playing a note.",7,null],[12,"key","midly::MidiMessage","The key to start playing.",9,null],[12,"vel","","The velocity (strength) with which to press it.",9,null],[13,"Aftertouch","midly","Modify the velocity of a note after it has been played.",7,null],[12,"key","midly::MidiMessage","The key for which to modify its velocity.",10,null],[12,"vel","","The new velocity for the key.",10,null],[13,"Controller","midly","Modify the value of a MIDI controller.",7,null],[12,"controller","midly::MidiMessage","The controller to modify.",11,null],[12,"value","","The value to set it to.",11,null],[13,"ProgramChange","midly","Change the program (also known as instrument) for a channel.",7,null],[12,"program","midly::MidiMessage","The new program (instrument) to use for the channel.",12,null],[13,"ChannelAftertouch","midly","Change the note velocity of a whole channel at once,…",7,null],[12,"vel","midly::MidiMessage","The new velocity for the notes currently playing in the…",13,null],[13,"PitchBend","midly","Set the pitch bend value.",7,null],[12,"bend","midly::MidiMessage","The new pitch-bend value.",14,null],[4,"Format","midly","The different formats an SMF file can be.",null,null],[13,"SingleTrack","","",15,null],[13,"Parallel","","",15,null],[13,"Sequential","","",15,null],[4,"Fps","","",null,null],[13,"Fps24","","",16,null],[13,"Fps25","","",16,null],[13,"Fps29","","",16,null],[13,"Fps30","","",16,null],[4,"Timing","","The timing for an SMF file. This can be in ticks/beat or…",null,null],[13,"Metrical","","Specifies ticks/beat as a 15-bit integer.",17,null],[13,"Timecode","","Specifies ticks/second by dividing a second into frames…",17,null],[11,"kind","","More information about the error itself.",18,[[["self"]],["errorkind"]]],[11,"message","","Get the informative message on what exact part of the SMF…",3,[[["self"]],["str"]]],[11,"read","","Read an `Smf` track event from raw track data.",0,[[["option"]],[["error"],["stdresult",["event","error"]],["event"]]]],[11,"parse","","Reads a single event from the given stream. Use this…",4,[[["option"]],[["stdresult",["eventkind","error"]],["eventkind"],["error"]]]],[11,"write","","Writes a single event to the given output writer.",4,[[["w"],["option"],["self"]],["ioresult"]]],[11,"read","","",15,[[],[["format"],["error"],["stdresult",["format","error"]]]]],[11,"encode","","",15,[[["self"]]]],[11,"read","","",17,[[],[["stdresult",["timing","error"]],["timing"],["error"]]]],[11,"encode","","",17,[[["self"]]]],[11,"new","","",19,[[["fps"],["u8"]],[["smptetime"],["option",["smptetime"]]]]],[11,"hour","","",19,[[["self"]],["u8"]]],[11,"minute","","",19,[[["self"]],["u8"]]],[11,"second","","",19,[[["self"]],["u8"]]],[11,"frame","","",19,[[["self"]],["u8"]]],[11,"subframe","","",19,[[["self"]],["u8"]]],[11,"fps","","",19,[[["self"]],["fps"]]],[11,"second_f32","","",19,[[["self"]],["f32"]]],[11,"read","","",19,[[],[["smptetime"],["error"],["stdresult",["smptetime","error"]]]]],[11,"encode","","",19,[[["self"]]]],[11,"from_code","","Does the conversion from a 2-bit fps code to an `Fps` value.",16,[[["u2"]],["fps"]]],[11,"as_code","","Does the conversion to a 2-bit fps code.",16,[[],["u2"]]],[11,"from_int","","Converts an integer representing the semantic fps to an…",16,[[["u8"]],[["fps"],["option",["fps"]]]]],[11,"as_int","","Get the integral approximate fps out.",16,[[],["u8"]]],[11,"as_f32","","Get the actual f32 fps out.",16,[[],["f32"]]],[11,"parse","","Preferred method to parse raw bytes into an `Smf` struct.",2,[[],[["error"],["smf"],["stdresult",["smf","error"]]]]],[11,"parse_with_bytemap","","Parses tracks into events and additionally provides the…",2,[[],[["error"],["smf",["vec"]],["stdresult",["smf","error"]]]]],[11,"parse_lazy","","Does not parse events, only recognizes the file and splits…",2,[[],[["error"],["stdresult",["smf","error"]],["smf",["trackiter"]]]]],[11,"new","","Create a new SMF from its raw parts.",2,[[["vec"],["header"]],[["smf"],["error"],["stdresult",["smf","error"]]]]],[11,"read","","Generic `read` method.",2,[[],[["smf"],["error"],["stdresult",["smf","error"]]]]],[11,"write","","Encode and write the MIDI file into the given generic…",2,[[["w"],["self"]],["ioresult"]]],[11,"save","","Encode and save the MIDI file to the given path.",2,[[["path"],["self"],["asref",["path"]]],["ioresult"]]],[11,"new","","",1,[[["format"],["timing"]],["header"]]],[11,"unread","","Get the remaining unread bytes.",20,[[["self"]]]],[11,"running_status","","Get the current running status of the track.",20,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"set_running_status","","Set the current running status of the track.",20,[[["self"],["option",["u8"]],["u8"]]]],[0,"number","","Special-length integers used by the MIDI standard.",null,null],[3,"u14","midly::number","",null,null],[3,"u15","","",null,null],[3,"u24","","",null,null],[3,"u28","","Referred to in the MIDI spec as \"variable length int\".",null,null],[3,"u4","","",null,null],[3,"u7","","",null,null],[8,"TrackRepr","midly","Allows for customization on how tracks are stored in memory.",null,null],[18,"USE_MULTITHREADING","","",21,null],[10,"read","","",21,[[],[["error"],["stdresult",["error"]]]]],[10,"write","","",21,[[["w"],["self"]],["ioresult"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"as_fail","","",18,[[["self"]],["fail"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"par_bridge","","",20,[[],["iterbridge"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"as_fail","","",3,[[["self"]],["fail"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","midly::number","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"read","midly","",20,[[],[["error"],["trackiter"],["stdresult",["trackiter","error"]]]]],[11,"write","","",20,[[["w"],["self"]],["ioresult"]]],[11,"from","","",18,[[["errorkind"]],["error"]]],[11,"from","midly::number","Lossy convertion, loses top bit.",22,[[["u16"]],["self"]]],[11,"from","","Lossy convertion, loses top bit.",23,[[["u16"]],["self"]]],[11,"from","","Lossy convertion, loses top bit.",24,[[["u8"]],["self"]]],[11,"from","","Lossy convertion, loses top bit.",25,[[["u8"]],["self"]]],[11,"from","","Lossy convertion, loses top bit.",26,[[["u32"]],["self"]]],[11,"from","","Lossy convertion, loses top bit.",27,[[["u32"]],["self"]]],[11,"into","","",22,[[],["u16"]]],[11,"into","","",23,[[],["u16"]]],[11,"into","","",24,[[],["u8"]]],[11,"into","","",25,[[],["u8"]]],[11,"into","","",26,[[],["u32"]]],[11,"into","","",27,[[],["u32"]]],[11,"next","midly","",20,[[["self"]],["option"]]],[11,"clone","","",3,[[["self"]],["errorkind"]]],[11,"clone","","",0,[[["self"]],["event"]]],[11,"clone","","",4,[[["self"]],["eventkind"]]],[11,"clone","","",7,[[["self"]],["midimessage"]]],[11,"clone","","",6,[[["self"]],["metamessage"]]],[11,"clone","midly::number","",22,[[["self"]],["u15"]]],[11,"clone","","",23,[[["self"]],["u14"]]],[11,"clone","","",24,[[["self"]],["u7"]]],[11,"clone","","",25,[[["self"]],["u4"]]],[11,"clone","","",26,[[["self"]],["u24"]]],[11,"clone","","",27,[[["self"]],["u28"]]],[11,"clone","midly","",15,[[["self"]],["format"]]],[11,"clone","","",17,[[["self"]],["timing"]]],[11,"clone","","",19,[[["self"]],["smptetime"]]],[11,"clone","","",16,[[["self"]],["fps"]]],[11,"clone","","",2,[[["self"]],["smf"]]],[11,"clone","","",1,[[["self"]],["header"]]],[11,"clone","","",20,[[["self"]],["trackiter"]]],[11,"eq","","",0,[[["self"],["event"]],["bool"]]],[11,"ne","","",0,[[["self"],["event"]],["bool"]]],[11,"eq","","",4,[[["eventkind"],["self"]],["bool"]]],[11,"ne","","",4,[[["eventkind"],["self"]],["bool"]]],[11,"eq","","",7,[[["midimessage"],["self"]],["bool"]]],[11,"ne","","",7,[[["midimessage"],["self"]],["bool"]]],[11,"eq","","",6,[[["metamessage"],["self"]],["bool"]]],[11,"ne","","",6,[[["metamessage"],["self"]],["bool"]]],[11,"eq","midly::number","",22,[[["self"],["u15"]],["bool"]]],[11,"ne","","",22,[[["self"],["u15"]],["bool"]]],[11,"eq","","",23,[[["u14"],["self"]],["bool"]]],[11,"ne","","",23,[[["u14"],["self"]],["bool"]]],[11,"eq","","",24,[[["self"],["u7"]],["bool"]]],[11,"ne","","",24,[[["self"],["u7"]],["bool"]]],[11,"eq","","",25,[[["self"],["u4"]],["bool"]]],[11,"ne","","",25,[[["self"],["u4"]],["bool"]]],[11,"eq","","",26,[[["u24"],["self"]],["bool"]]],[11,"ne","","",26,[[["u24"],["self"]],["bool"]]],[11,"eq","","",27,[[["self"],["u28"]],["bool"]]],[11,"ne","","",27,[[["self"],["u28"]],["bool"]]],[11,"eq","midly","",15,[[["format"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["timing"]],["bool"]]],[11,"ne","","",17,[[["self"],["timing"]],["bool"]]],[11,"eq","","",19,[[["self"],["smptetime"]],["bool"]]],[11,"ne","","",19,[[["self"],["smptetime"]],["bool"]]],[11,"eq","","",16,[[["fps"],["self"]],["bool"]]],[11,"eq","","",2,[[["smf"],["self"]],["bool"]]],[11,"ne","","",2,[[["smf"],["self"]],["bool"]]],[11,"eq","","",1,[[["header"],["self"]],["bool"]]],[11,"ne","","",1,[[["header"],["self"]],["bool"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","midly::number","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","midly","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"cause","","",18,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",18,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"name","","",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",3,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",3,[[["self"]],[["option",["backtrace"]],["backtrace"]]]],[11,"try_from","midly::number","",22,[[["u16"]],["option"]]],[11,"as_int","","",22,[[],["u16"]]],[11,"try_from","","",23,[[["u16"]],["option"]]],[11,"as_int","","",23,[[],["u16"]]],[11,"try_from","","",24,[[["u8"]],["option"]]],[11,"as_int","","",24,[[],["u8"]]],[11,"try_from","","",25,[[["u8"]],["option"]]],[11,"as_int","","",25,[[],["u8"]]],[11,"try_from","","",26,[[["u32"]],["option"]]],[11,"as_int","","",26,[[],["u32"]]],[11,"try_from","","",27,[[["u32"]],["option"]]],[11,"as_int","","",27,[[],["u32"]]],[18,"USE_MULTITHREADING","midly","",21,null]],"p":[[3,"Event"],[3,"Header"],[3,"Smf"],[4,"ErrorKind"],[4,"EventKind"],[13,"Midi"],[4,"MetaMessage"],[4,"MidiMessage"],[13,"NoteOff"],[13,"NoteOn"],[13,"Aftertouch"],[13,"Controller"],[13,"ProgramChange"],[13,"ChannelAftertouch"],[13,"PitchBend"],[4,"Format"],[4,"Fps"],[4,"Timing"],[3,"Error"],[3,"SmpteTime"],[3,"TrackIter"],[8,"TrackRepr"],[3,"u15"],[3,"u14"],[3,"u7"],[3,"u4"],[3,"u24"],[3,"u28"]]};
searchIndex["nalgebra"] = {"doc":"nalgebra","i":[[3,"Complex","nalgebra","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[8,"ClosedAdd","","Trait alias for `Add` and `AddAssign` with result of type…",null,null],[8,"ClosedDiv","","Trait alias for `Div` and `DivAssign` with result of type…",null,null],[8,"ClosedMul","","Trait alias for `Mul` and `MulAssign` with result of type…",null,null],[8,"ClosedSub","","Trait alias for `Sub` and `SubAssign` with result of type…",null,null],[8,"ComplexField","","Trait shared by all complex fields and its subfields (like…",null,null],[16,"RealField","","",1,null],[10,"from_real","","Builds a pure-real complex number from the given value.",1,[[],["self"]]],[10,"real","","The real part of this complex number.",1,[[]]],[10,"imaginary","","The imaginary part of this complex number.",1,[[]]],[10,"modulus","","The modulus of this complex number.",1,[[]]],[10,"modulus_squared","","The squared modulus of this complex number.",1,[[]]],[10,"argument","","The argument of this complex number.",1,[[]]],[10,"norm1","","The sum of the absolute value of this complex number's…",1,[[]]],[10,"scale","","Multiplies this complex number by `factor`.",1,[[],["self"]]],[10,"unscale","","Divides this complex number by `factor`.",1,[[],["self"]]],[11,"to_polar","","The polar form of this complex number: (modulus, arg)",1,[[]]],[11,"to_exp","","The exponential form of this complex number: (modulus,…",1,[[]]],[11,"signum","","The exponential part of this complex number: `self /…",1,[[],["self"]]],[10,"floor","","",1,[[],["self"]]],[10,"ceil","","",1,[[],["self"]]],[10,"round","","",1,[[],["self"]]],[10,"trunc","","",1,[[],["self"]]],[10,"fract","","",1,[[],["self"]]],[10,"mul_add","","",1,[[],["self"]]],[10,"abs","","The absolute value of this complex number: `self /…",1,[[]]],[10,"hypot","","Computes (self.conjugate() * self + other.conjugate() *…",1,[[]]],[10,"recip","","",1,[[],["self"]]],[10,"conjugate","","",1,[[],["self"]]],[10,"sin","","",1,[[],["self"]]],[10,"cos","","",1,[[],["self"]]],[10,"sin_cos","","",1,[[]]],[11,"sinh_cosh","","",1,[[]]],[10,"tan","","",1,[[],["self"]]],[10,"asin","","",1,[[],["self"]]],[10,"acos","","",1,[[],["self"]]],[10,"atan","","",1,[[],["self"]]],[10,"sinh","","",1,[[],["self"]]],[10,"cosh","","",1,[[],["self"]]],[10,"tanh","","",1,[[],["self"]]],[10,"asinh","","",1,[[],["self"]]],[10,"acosh","","",1,[[],["self"]]],[10,"atanh","","",1,[[],["self"]]],[11,"sinc","","Cardinal sine",1,[[],["self"]]],[11,"sinhc","","",1,[[],["self"]]],[11,"cosc","","Cardinal cos",1,[[],["self"]]],[11,"coshc","","",1,[[],["self"]]],[10,"log","","",1,[[],["self"]]],[10,"log2","","",1,[[],["self"]]],[10,"log10","","",1,[[],["self"]]],[10,"ln","","",1,[[],["self"]]],[10,"ln_1p","","",1,[[],["self"]]],[10,"sqrt","","",1,[[],["self"]]],[10,"exp","","",1,[[],["self"]]],[10,"exp2","","",1,[[],["self"]]],[10,"exp_m1","","",1,[[],["self"]]],[10,"powi","","",1,[[["i32"]],["self"]]],[10,"powf","","",1,[[],["self"]]],[10,"powc","","",1,[[],["self"]]],[10,"cbrt","","",1,[[],["self"]]],[10,"is_finite","","",1,[[["self"]],["bool"]]],[10,"try_sqrt","","",1,[[],["option"]]],[8,"Field","","Trait implemented by fields, i.e., complex numbers and…",null,null],[8,"RealField","","Trait shared by all reals.",null,null],[10,"is_sign_positive","","Is the sign of this real number positive?",2,[[],["bool"]]],[10,"is_sign_negative","","Is the sign of this real number negative?",2,[[],["bool"]]],[10,"max","","",2,[[],["self"]]],[10,"min","","",2,[[],["self"]]],[10,"clamp","","",2,[[],["self"]]],[10,"atan2","","",2,[[],["self"]]],[10,"pi","","",2,[[],["self"]]],[10,"two_pi","","",2,[[],["self"]]],[10,"frac_pi_2","","",2,[[],["self"]]],[10,"frac_pi_3","","",2,[[],["self"]]],[10,"frac_pi_4","","",2,[[],["self"]]],[10,"frac_pi_6","","",2,[[],["self"]]],[10,"frac_pi_8","","",2,[[],["self"]]],[10,"frac_1_pi","","",2,[[],["self"]]],[10,"frac_2_pi","","",2,[[],["self"]]],[10,"frac_2_sqrt_pi","","",2,[[],["self"]]],[10,"e","","",2,[[],["self"]]],[10,"log2_e","","",2,[[],["self"]]],[10,"log10_e","","",2,[[],["self"]]],[10,"ln_2","","",2,[[],["self"]]],[10,"ln_10","","",2,[[],["self"]]],[8,"SimdBool","","Lane-wise generalization of `bool` for SIMD booleans.",null,null],[10,"and","","Lane-wise bitwise and of the vector elements.",3,[[],["bool"]]],[10,"or","","Lane-wise bitwise or of the vector elements.",3,[[],["bool"]]],[10,"xor","","Lane-wise bitwise xor of the vector elements.",3,[[],["bool"]]],[10,"all","","Are all vector lanes true?",3,[[],["bool"]]],[10,"any","","Is any vector lane true?",3,[[],["bool"]]],[10,"none","","Are all vector lanes false?",3,[[],["bool"]]],[10,"if_else","","Merges the value of `if_value()` and `else_value()`…",3,[[],["res"]]],[10,"if_else2","","Merges the value of `if_value()` and `else_if.1()` and…",3,[[],["res"]]],[10,"if_else3","","Merges the value of `if_value()` and `else_if.1()` and…",3,[[],["res"]]],[8,"SimdComplexField","","Lane-wise generalisation of `ComplexField` for SIMD…",null,null],[16,"SimdRealField","","Type of the coefficients of a complex number.",4,null],[10,"from_simd_real","","Builds a pure-real complex number from the given value.",4,[[],["self"]]],[10,"simd_real","","The real part of this complex number.",4,[[]]],[10,"simd_imaginary","","The imaginary part of this complex number.",4,[[]]],[10,"simd_modulus","","The modulus of this complex number.",4,[[]]],[10,"simd_modulus_squared","","The squared modulus of this complex number.",4,[[]]],[10,"simd_argument","","The argument of this complex number.",4,[[]]],[10,"simd_norm1","","The sum of the absolute value of this complex number's…",4,[[]]],[10,"simd_scale","","Multiplies this complex number by `factor`.",4,[[],["self"]]],[10,"simd_unscale","","Divides this complex number by `factor`.",4,[[],["self"]]],[11,"simd_to_polar","","The polar form of this complex number: (modulus, arg)",4,[[]]],[11,"simd_to_exp","","The exponential form of this complex number: (modulus,…",4,[[]]],[11,"simd_signum","","The exponential part of this complex number: `self /…",4,[[],["self"]]],[10,"simd_floor","","",4,[[],["self"]]],[10,"simd_ceil","","",4,[[],["self"]]],[10,"simd_round","","",4,[[],["self"]]],[10,"simd_trunc","","",4,[[],["self"]]],[10,"simd_fract","","",4,[[],["self"]]],[10,"simd_mul_add","","",4,[[],["self"]]],[10,"simd_abs","","The absolute value of this complex number: `self /…",4,[[]]],[10,"simd_hypot","","Computes (self.conjugate() * self + other.conjugate() *…",4,[[]]],[10,"simd_recip","","",4,[[],["self"]]],[10,"simd_conjugate","","",4,[[],["self"]]],[10,"simd_sin","","",4,[[],["self"]]],[10,"simd_cos","","",4,[[],["self"]]],[10,"simd_sin_cos","","",4,[[]]],[11,"simd_sinh_cosh","","",4,[[]]],[10,"simd_tan","","",4,[[],["self"]]],[10,"simd_asin","","",4,[[],["self"]]],[10,"simd_acos","","",4,[[],["self"]]],[10,"simd_atan","","",4,[[],["self"]]],[10,"simd_sinh","","",4,[[],["self"]]],[10,"simd_cosh","","",4,[[],["self"]]],[10,"simd_tanh","","",4,[[],["self"]]],[10,"simd_asinh","","",4,[[],["self"]]],[10,"simd_acosh","","",4,[[],["self"]]],[10,"simd_atanh","","",4,[[],["self"]]],[11,"simd_sinc","","Cardinal sine",4,[[],["self"]]],[11,"simd_sinhc","","",4,[[],["self"]]],[11,"simd_cosc","","Cardinal cos",4,[[],["self"]]],[11,"simd_coshc","","",4,[[],["self"]]],[10,"simd_log","","",4,[[],["self"]]],[10,"simd_log2","","",4,[[],["self"]]],[10,"simd_log10","","",4,[[],["self"]]],[10,"simd_ln","","",4,[[],["self"]]],[10,"simd_ln_1p","","",4,[[],["self"]]],[10,"simd_sqrt","","",4,[[],["self"]]],[10,"simd_exp","","",4,[[],["self"]]],[10,"simd_exp2","","",4,[[],["self"]]],[10,"simd_exp_m1","","",4,[[],["self"]]],[10,"simd_powi","","",4,[[["i32"]],["self"]]],[10,"simd_powf","","",4,[[],["self"]]],[10,"simd_powc","","",4,[[],["self"]]],[10,"simd_cbrt","","",4,[[],["self"]]],[8,"SimdPartialOrd","","Lane-wise generalization of the standard `PartialOrd` for…",null,null],[10,"simd_gt","","Lanewise greater than `>` comparison.",5,[[]]],[10,"simd_lt","","Lanewise less than `<` comparison.",5,[[]]],[10,"simd_ge","","Lanewise greater or equal `>=` comparison.",5,[[]]],[10,"simd_le","","Lanewise less or equal `<=` comparison.",5,[[]]],[10,"simd_eq","","Lanewise equal `==` comparison.",5,[[]]],[10,"simd_ne","","Lanewise not equal `!=` comparison.",5,[[]]],[10,"simd_max","","Lanewise max value.",5,[[],["self"]]],[10,"simd_min","","Lanewise min value.",5,[[],["self"]]],[10,"simd_clamp","","Clamps each lane of `self` between the correspondin lane…",5,[[],["self"]]],[8,"SimdRealField","","Lanewise generalization of `RealField` for SIMD reals.",null,null],[10,"simd_atan2","","",6,[[],["self"]]],[10,"simd_default_epsilon","","",6,[[],["self"]]],[10,"simd_pi","","",6,[[],["self"]]],[10,"simd_two_pi","","",6,[[],["self"]]],[10,"simd_frac_pi_2","","",6,[[],["self"]]],[10,"simd_frac_pi_3","","",6,[[],["self"]]],[10,"simd_frac_pi_4","","",6,[[],["self"]]],[10,"simd_frac_pi_6","","",6,[[],["self"]]],[10,"simd_frac_pi_8","","",6,[[],["self"]]],[10,"simd_frac_1_pi","","",6,[[],["self"]]],[10,"simd_frac_2_pi","","",6,[[],["self"]]],[10,"simd_frac_2_sqrt_pi","","",6,[[],["self"]]],[10,"simd_e","","",6,[[],["self"]]],[10,"simd_log2_e","","",6,[[],["self"]]],[10,"simd_log10_e","","",6,[[],["self"]]],[10,"simd_ln_2","","",6,[[],["self"]]],[10,"simd_ln_10","","",6,[[],["self"]]],[5,"one","","Gets the multiplicative identity element.",null,[[],["one"]]],[5,"zero","","Gets the additive identity element.",null,[[],["zero"]]],[5,"wrap","","Wraps `val` into the range `[min, max]` using modular…",null,[[["t"]],["t"]]],[5,"clamp","","Returns a reference to the input value clamped to the…",null,[[["partialord"]],["partialord"]]],[5,"max","","Same as `cmp::max`.",null,[[["ord"]],["ord"]]],[5,"min","","Same as `cmp::min`.",null,[[["ord"]],["ord"]]],[5,"abs","","The absolute value of `a`.",null,[[["t"]],["signed"]]],[5,"inf","","Returns the infimum of `a` and `b`.",null,[[["matrixmn"]],[["matrixmn"],["dim"]]]],[5,"sup","","Returns the supremum of `a` and `b`.",null,[[["matrixmn"]],[["matrixmn"],["dim"]]]],[5,"inf_sup","","Returns simultaneously the infimum and supremum of `a` and…",null,[[["matrixmn"]]]],[5,"partial_cmp","","Compare `a` and `b` using a partial ordering relation.",null,[[["t"]],[["ordering"],["option",["ordering"]]]]],[5,"partial_lt","","Returns `true` iff `a` and `b` are comparable and `a < b`.",null,[[["t"]],["bool"]]],[5,"partial_le","","Returns `true` iff `a` and `b` are comparable and `a <= b`.",null,[[["t"]],["bool"]]],[5,"partial_gt","","Returns `true` iff `a` and `b` are comparable and `a > b`.",null,[[["t"]],["bool"]]],[5,"partial_ge","","Returns `true` iff `a` and `b` are comparable and `a >= b`.",null,[[["t"]],["bool"]]],[5,"partial_min","","Return the minimum of `a` and `b` if they are comparable.",null,[[["t"]],[["option"],["t"]]]],[5,"partial_max","","Return the maximum of `a` and `b` if they are comparable.",null,[[["t"]],[["option"],["t"]]]],[5,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if…",null,[[["t"]],[["option"],["t"]]]],[5,"partial_sort2","","Sorts two values in increasing order using a partial…",null,[[["t"]],["option"]]],[5,"center","","The center of two points.",null,[[["point"]],[["point"],["simdcomplexfield"],["dimname"]]]],[5,"distance","","The distance between two points.",null,[[["point"]]]],[5,"distance_squared","","The squared distance between two points.",null,[[["point"]]]],[5,"convert","","Converts an object from one type to an equivalent or more…",null,[[["from"]],["supersetof"]]],[5,"try_convert","","Attempts to convert an object to a more specific one.",null,[[["supersetof"]],["option"]]],[5,"is_convertible","","Indicates if `try_convert` will succeed without actually…",null,[[["from"]],["bool"]]],[5,"convert_unchecked","","Use with care! Same as `try_convert` but without any…",null,[[["supersetof"]],["to"]]],[5,"convert_ref","","Converts an object from one type to an equivalent or more…",null,[[["from"]],["supersetof"]]],[5,"try_convert_ref","","Attempts to convert an object to a more specific one.",null,[[["from"]],["option"]]],[5,"convert_ref_unchecked","","Use with care! Same as `try_convert` but without any…",null,[[["from"]],["to"]]],[0,"base","","[Reexported at the root of this crate.] Data structures…",null,null],[3,"Matrix","nalgebra::base","The most generic column-major matrix (and vector) type.",null,null],[12,"data","","The data storage that contains all the matrix components…",7,null],[3,"EuclideanNorm","","Euclidean norm.",null,null],[3,"LpNorm","","Lp norm.",null,null],[12,"0","","",8,null],[3,"UniformNorm","","L-infinite norm aka. Chebytchev norm aka. uniform norm…",null,null],[3,"Unit","","A wrapper that ensures the underlying algebraic entity has…",null,null],[3,"ArrayStorage","","A array-based statically sized matrix data storage.",null,null],[3,"SliceStorage","","A matrix data storage for a matrix slice. Only contains an…",null,null],[3,"SliceStorageMut","","A mutable matrix data storage for mutable matrix slice.…",null,null],[3,"VecStorage","","A Vec-based matrix data storage. It may be…",null,null],[0,"allocator","","Abstract definition of a matrix data storage allocator.",null,null],[6,"SameShapeR","nalgebra::base::allocator","The number of rows of the result of a componentwise…",null,null],[6,"SameShapeC","","The number of columns of the result of a componentwise…",null,null],[8,"Allocator","","A matrix allocator of a memory buffer that may contain…",null,null],[16,"Buffer","","The type of buffer this allocator can instanciate.",9,null],[10,"allocate_uninitialized","","Allocates a buffer with the given number of rows and…",9,[[["c"],["r"]]]],[10,"allocate_from_iterator","","Allocates a buffer initialized with the content of the…",9,[[["c"],["intoiterator"],["r"]]]],[8,"Reallocator","","A matrix reallocator. Changes the size of the memory…",null,null],[10,"reallocate_copy","","Reallocates a buffer of shape `(RTo, CTo)`, possibly…",10,[[["cto"],["rto"]]]],[8,"SameShapeAllocator","","Restricts the given number of rows and columns to be…",null,null],[8,"SameShapeVectorAllocator","","Restricts the given number of rows to be equal.",null,null],[11,"icamax","nalgebra::base","Computes the index of the vector component with the…",7,[[["self"]],["usize"]]],[11,"argmax","","Computes the index and value of the vector component with…",7,[[["self"]]]],[11,"imax","","Computes the index of the vector component with the…",7,[[["self"]],["usize"]]],[11,"iamax","","Computes the index of the vector component with the…",7,[[["self"]],["usize"]]],[11,"argmin","","Computes the index and value of the vector component with…",7,[[["self"]]]],[11,"imin","","Computes the index of the vector component with the…",7,[[["self"]],["usize"]]],[11,"iamin","","Computes the index of the vector component with the…",7,[[["self"]],["usize"]]],[11,"icamax_full","","Computes the index of the matrix component with the…",7,[[["self"]]]],[11,"iamax_full","","Computes the index of the matrix component with the…",7,[[["self"]]]],[11,"dot","","The dot product between two vectors or matrices (seen as…",7,[[["self"],["matrix"]],["n"]]],[11,"dotc","","The conjugate-linear dot product between two vectors or…",7,[[["self"],["matrix"]],["n"]]],[11,"tr_dot","","The dot product between the transpose of `self` and `rhs`.",7,[[["self"],["matrix"]],["n"]]],[11,"axcpy","","Computes `self = a * x * c + b * self`.",7,[[["vector"],["self"],["n"]]]],[11,"axpy","","Computes `self = a * x + b * self`.",7,[[["vector"],["self"],["n"]]]],[11,"gemv","","Computes `self = alpha * a * x + beta * self`, where `a`…",7,[[["n"],["self"],["vector"],["matrix"]]]],[11,"gemv_symm","","Computes `self = alpha * a * x + beta * self`, where `a`…",7,[[["n"],["self"],["squarematrix"],["vector"]]]],[11,"sygemv","","Computes `self = alpha * a * x + beta * self`, where `a`…",7,[[["n"],["self"],["squarematrix"],["vector"]]]],[11,"hegemv","","Computes `self = alpha * a * x + beta * self`, where `a`…",7,[[["n"],["self"],["squarematrix"],["vector"]]]],[11,"gemv_tr","","Computes `self = alpha * a.transpose() * x + beta * self`,…",7,[[["n"],["self"],["vector"],["matrix"]]]],[11,"gemv_ad","","Computes `self = alpha * a.adjoint() * x + beta * self`,…",7,[[["n"],["self"],["vector"],["matrix"]]]],[11,"ger","","Computes `self = alpha * x * y.transpose() + beta * self`.",7,[[["vector"],["n"],["self"],["vector"]]]],[11,"gerc","","Computes `self = alpha * x * y.adjoint() + beta * self`.",7,[[["vector"],["n"],["self"],["vector"]]]],[11,"gemm","","Computes `self = alpha * a * b + beta * self`, where `a,…",7,[[["matrix"],["n"],["self"],["matrix"]]]],[11,"gemm_tr","","Computes `self = alpha * a.transpose() * b + beta * self`,…",7,[[["matrix"],["n"],["self"],["matrix"]]]],[11,"gemm_ad","","Computes `self = alpha * a.adjoint() * b + beta * self`,…",7,[[["matrix"],["n"],["self"],["matrix"]]]],[11,"ger_symm","","Computes `self = alpha * x * y.transpose() + beta * self`,…",7,[[["vector"],["n"],["self"],["vector"]]]],[11,"syger","","Computes `self = alpha * x * y.transpose() + beta * self`,…",7,[[["vector"],["n"],["self"],["vector"]]]],[11,"hegerc","","Computes `self = alpha * x * y.adjoint() + beta * self`,…",7,[[["vector"],["n"],["self"],["vector"]]]],[11,"quadform_tr_with_workspace","","Computes the quadratic form `self = alpha * lhs * mid *…",7,[[["matrix"],["n"],["squarematrix"],["self"],["vector"]]]],[11,"quadform_tr","","Computes the quadratic form `self = alpha * lhs * mid *…",7,[[["matrix"],["n"],["squarematrix"],["self"]]]],[11,"quadform_with_workspace","","Computes the quadratic form `self = alpha *…",7,[[["n"],["squarematrix"],["self"],["vector"],["matrix"]]]],[11,"quadform","","Computes the quadratic form `self = alpha *…",7,[[["matrix"],["n"],["self"],["squarematrix"]]]],[0,"constraint","","Compatibility constraints between matrix shapes, e.g., for…",null,null],[3,"ShapeConstraint","nalgebra::base::constraint","A type used in `where` clauses for enforcing constraints.",null,null],[8,"AreMultipliable","","Constraints `C1` and `R2` to be equivalent.",null,null],[8,"DimEq","","Constraints `D1` and `D2` to be equivalent.",null,null],[16,"Representative","","This is either equal to `D1` or `D2`, always choosing the…",11,null],[8,"SameNumberOfRows","","Constraints `D1` and `D2` to be equivalent. They are both…",null,null],[16,"Representative","","This is either equal to `D1` or `D2`, always choosing the…",12,null],[8,"SameNumberOfColumns","","Constraints `D1` and `D2` to be equivalent. They are both…",null,null],[16,"Representative","","This is either equal to `D1` or `D2`, always choosing the…",13,null],[8,"SameDimension","","Constraints D1 and D2 to be equivalent, where they both…",null,null],[16,"Representative","","This is either equal to `D1` or `D2`, always choosing the…",14,null],[0,"coordinates","nalgebra::base","Structures to which matrices and vector can be…",null,null],[3,"X","nalgebra::base::coordinates","Data structure used to provide access to matrix and vector…",null,null],[12,"x","","",15,null],[3,"XY","","Data structure used to provide access to matrix and vector…",null,null],[12,"x","","",16,null],[12,"y","","",16,null],[3,"XYZ","","Data structure used to provide access to matrix and vector…",null,null],[12,"x","","",17,null],[12,"y","","",17,null],[12,"z","","",17,null],[3,"XYZW","","Data structure used to provide access to matrix and vector…",null,null],[12,"x","","",18,null],[12,"y","","",18,null],[12,"z","","",18,null],[12,"w","","",18,null],[3,"XYZWA","","Data structure used to provide access to matrix and vector…",null,null],[12,"x","","",19,null],[12,"y","","",19,null],[12,"z","","",19,null],[12,"w","","",19,null],[12,"a","","",19,null],[3,"XYZWAB","","Data structure used to provide access to matrix and vector…",null,null],[12,"x","","",20,null],[12,"y","","",20,null],[12,"z","","",20,null],[12,"w","","",20,null],[12,"a","","",20,null],[12,"b","","",20,null],[3,"IJKW","","Data structure used to provide access to matrix and vector…",null,null],[12,"i","","",21,null],[12,"j","","",21,null],[12,"k","","",21,null],[12,"w","","",21,null],[3,"M2x2","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",22,null],[12,"m21","","",22,null],[12,"m12","","",22,null],[12,"m22","","",22,null],[3,"M2x3","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",23,null],[12,"m21","","",23,null],[12,"m12","","",23,null],[12,"m22","","",23,null],[12,"m13","","",23,null],[12,"m23","","",23,null],[3,"M2x4","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",24,null],[12,"m21","","",24,null],[12,"m12","","",24,null],[12,"m22","","",24,null],[12,"m13","","",24,null],[12,"m23","","",24,null],[12,"m14","","",24,null],[12,"m24","","",24,null],[3,"M2x5","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",25,null],[12,"m21","","",25,null],[12,"m12","","",25,null],[12,"m22","","",25,null],[12,"m13","","",25,null],[12,"m23","","",25,null],[12,"m14","","",25,null],[12,"m24","","",25,null],[12,"m15","","",25,null],[12,"m25","","",25,null],[3,"M2x6","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",26,null],[12,"m21","","",26,null],[12,"m12","","",26,null],[12,"m22","","",26,null],[12,"m13","","",26,null],[12,"m23","","",26,null],[12,"m14","","",26,null],[12,"m24","","",26,null],[12,"m15","","",26,null],[12,"m25","","",26,null],[12,"m16","","",26,null],[12,"m26","","",26,null],[3,"M3x2","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",27,null],[12,"m21","","",27,null],[12,"m31","","",27,null],[12,"m12","","",27,null],[12,"m22","","",27,null],[12,"m32","","",27,null],[3,"M3x3","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",28,null],[12,"m21","","",28,null],[12,"m31","","",28,null],[12,"m12","","",28,null],[12,"m22","","",28,null],[12,"m32","","",28,null],[12,"m13","","",28,null],[12,"m23","","",28,null],[12,"m33","","",28,null],[3,"M3x4","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",29,null],[12,"m21","","",29,null],[12,"m31","","",29,null],[12,"m12","","",29,null],[12,"m22","","",29,null],[12,"m32","","",29,null],[12,"m13","","",29,null],[12,"m23","","",29,null],[12,"m33","","",29,null],[12,"m14","","",29,null],[12,"m24","","",29,null],[12,"m34","","",29,null],[3,"M3x5","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",30,null],[12,"m21","","",30,null],[12,"m31","","",30,null],[12,"m12","","",30,null],[12,"m22","","",30,null],[12,"m32","","",30,null],[12,"m13","","",30,null],[12,"m23","","",30,null],[12,"m33","","",30,null],[12,"m14","","",30,null],[12,"m24","","",30,null],[12,"m34","","",30,null],[12,"m15","","",30,null],[12,"m25","","",30,null],[12,"m35","","",30,null],[3,"M3x6","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",31,null],[12,"m21","","",31,null],[12,"m31","","",31,null],[12,"m12","","",31,null],[12,"m22","","",31,null],[12,"m32","","",31,null],[12,"m13","","",31,null],[12,"m23","","",31,null],[12,"m33","","",31,null],[12,"m14","","",31,null],[12,"m24","","",31,null],[12,"m34","","",31,null],[12,"m15","","",31,null],[12,"m25","","",31,null],[12,"m35","","",31,null],[12,"m16","","",31,null],[12,"m26","","",31,null],[12,"m36","","",31,null],[3,"M4x2","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",32,null],[12,"m21","","",32,null],[12,"m31","","",32,null],[12,"m41","","",32,null],[12,"m12","","",32,null],[12,"m22","","",32,null],[12,"m32","","",32,null],[12,"m42","","",32,null],[3,"M4x3","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",33,null],[12,"m21","","",33,null],[12,"m31","","",33,null],[12,"m41","","",33,null],[12,"m12","","",33,null],[12,"m22","","",33,null],[12,"m32","","",33,null],[12,"m42","","",33,null],[12,"m13","","",33,null],[12,"m23","","",33,null],[12,"m33","","",33,null],[12,"m43","","",33,null],[3,"M4x4","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",34,null],[12,"m21","","",34,null],[12,"m31","","",34,null],[12,"m41","","",34,null],[12,"m12","","",34,null],[12,"m22","","",34,null],[12,"m32","","",34,null],[12,"m42","","",34,null],[12,"m13","","",34,null],[12,"m23","","",34,null],[12,"m33","","",34,null],[12,"m43","","",34,null],[12,"m14","","",34,null],[12,"m24","","",34,null],[12,"m34","","",34,null],[12,"m44","","",34,null],[3,"M4x5","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",35,null],[12,"m21","","",35,null],[12,"m31","","",35,null],[12,"m41","","",35,null],[12,"m12","","",35,null],[12,"m22","","",35,null],[12,"m32","","",35,null],[12,"m42","","",35,null],[12,"m13","","",35,null],[12,"m23","","",35,null],[12,"m33","","",35,null],[12,"m43","","",35,null],[12,"m14","","",35,null],[12,"m24","","",35,null],[12,"m34","","",35,null],[12,"m44","","",35,null],[12,"m15","","",35,null],[12,"m25","","",35,null],[12,"m35","","",35,null],[12,"m45","","",35,null],[3,"M4x6","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",36,null],[12,"m21","","",36,null],[12,"m31","","",36,null],[12,"m41","","",36,null],[12,"m12","","",36,null],[12,"m22","","",36,null],[12,"m32","","",36,null],[12,"m42","","",36,null],[12,"m13","","",36,null],[12,"m23","","",36,null],[12,"m33","","",36,null],[12,"m43","","",36,null],[12,"m14","","",36,null],[12,"m24","","",36,null],[12,"m34","","",36,null],[12,"m44","","",36,null],[12,"m15","","",36,null],[12,"m25","","",36,null],[12,"m35","","",36,null],[12,"m45","","",36,null],[12,"m16","","",36,null],[12,"m26","","",36,null],[12,"m36","","",36,null],[12,"m46","","",36,null],[3,"M5x2","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",37,null],[12,"m21","","",37,null],[12,"m31","","",37,null],[12,"m41","","",37,null],[12,"m51","","",37,null],[12,"m12","","",37,null],[12,"m22","","",37,null],[12,"m32","","",37,null],[12,"m42","","",37,null],[12,"m52","","",37,null],[3,"M5x3","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",38,null],[12,"m21","","",38,null],[12,"m31","","",38,null],[12,"m41","","",38,null],[12,"m51","","",38,null],[12,"m12","","",38,null],[12,"m22","","",38,null],[12,"m32","","",38,null],[12,"m42","","",38,null],[12,"m52","","",38,null],[12,"m13","","",38,null],[12,"m23","","",38,null],[12,"m33","","",38,null],[12,"m43","","",38,null],[12,"m53","","",38,null],[3,"M5x4","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",39,null],[12,"m21","","",39,null],[12,"m31","","",39,null],[12,"m41","","",39,null],[12,"m51","","",39,null],[12,"m12","","",39,null],[12,"m22","","",39,null],[12,"m32","","",39,null],[12,"m42","","",39,null],[12,"m52","","",39,null],[12,"m13","","",39,null],[12,"m23","","",39,null],[12,"m33","","",39,null],[12,"m43","","",39,null],[12,"m53","","",39,null],[12,"m14","","",39,null],[12,"m24","","",39,null],[12,"m34","","",39,null],[12,"m44","","",39,null],[12,"m54","","",39,null],[3,"M5x5","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",40,null],[12,"m21","","",40,null],[12,"m31","","",40,null],[12,"m41","","",40,null],[12,"m51","","",40,null],[12,"m12","","",40,null],[12,"m22","","",40,null],[12,"m32","","",40,null],[12,"m42","","",40,null],[12,"m52","","",40,null],[12,"m13","","",40,null],[12,"m23","","",40,null],[12,"m33","","",40,null],[12,"m43","","",40,null],[12,"m53","","",40,null],[12,"m14","","",40,null],[12,"m24","","",40,null],[12,"m34","","",40,null],[12,"m44","","",40,null],[12,"m54","","",40,null],[12,"m15","","",40,null],[12,"m25","","",40,null],[12,"m35","","",40,null],[12,"m45","","",40,null],[12,"m55","","",40,null],[3,"M5x6","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",41,null],[12,"m21","","",41,null],[12,"m31","","",41,null],[12,"m41","","",41,null],[12,"m51","","",41,null],[12,"m12","","",41,null],[12,"m22","","",41,null],[12,"m32","","",41,null],[12,"m42","","",41,null],[12,"m52","","",41,null],[12,"m13","","",41,null],[12,"m23","","",41,null],[12,"m33","","",41,null],[12,"m43","","",41,null],[12,"m53","","",41,null],[12,"m14","","",41,null],[12,"m24","","",41,null],[12,"m34","","",41,null],[12,"m44","","",41,null],[12,"m54","","",41,null],[12,"m15","","",41,null],[12,"m25","","",41,null],[12,"m35","","",41,null],[12,"m45","","",41,null],[12,"m55","","",41,null],[12,"m16","","",41,null],[12,"m26","","",41,null],[12,"m36","","",41,null],[12,"m46","","",41,null],[12,"m56","","",41,null],[3,"M6x2","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",42,null],[12,"m21","","",42,null],[12,"m31","","",42,null],[12,"m41","","",42,null],[12,"m51","","",42,null],[12,"m61","","",42,null],[12,"m12","","",42,null],[12,"m22","","",42,null],[12,"m32","","",42,null],[12,"m42","","",42,null],[12,"m52","","",42,null],[12,"m62","","",42,null],[3,"M6x3","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",43,null],[12,"m21","","",43,null],[12,"m31","","",43,null],[12,"m41","","",43,null],[12,"m51","","",43,null],[12,"m61","","",43,null],[12,"m12","","",43,null],[12,"m22","","",43,null],[12,"m32","","",43,null],[12,"m42","","",43,null],[12,"m52","","",43,null],[12,"m62","","",43,null],[12,"m13","","",43,null],[12,"m23","","",43,null],[12,"m33","","",43,null],[12,"m43","","",43,null],[12,"m53","","",43,null],[12,"m63","","",43,null],[3,"M6x4","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",44,null],[12,"m21","","",44,null],[12,"m31","","",44,null],[12,"m41","","",44,null],[12,"m51","","",44,null],[12,"m61","","",44,null],[12,"m12","","",44,null],[12,"m22","","",44,null],[12,"m32","","",44,null],[12,"m42","","",44,null],[12,"m52","","",44,null],[12,"m62","","",44,null],[12,"m13","","",44,null],[12,"m23","","",44,null],[12,"m33","","",44,null],[12,"m43","","",44,null],[12,"m53","","",44,null],[12,"m63","","",44,null],[12,"m14","","",44,null],[12,"m24","","",44,null],[12,"m34","","",44,null],[12,"m44","","",44,null],[12,"m54","","",44,null],[12,"m64","","",44,null],[3,"M6x5","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",45,null],[12,"m21","","",45,null],[12,"m31","","",45,null],[12,"m41","","",45,null],[12,"m51","","",45,null],[12,"m61","","",45,null],[12,"m12","","",45,null],[12,"m22","","",45,null],[12,"m32","","",45,null],[12,"m42","","",45,null],[12,"m52","","",45,null],[12,"m62","","",45,null],[12,"m13","","",45,null],[12,"m23","","",45,null],[12,"m33","","",45,null],[12,"m43","","",45,null],[12,"m53","","",45,null],[12,"m63","","",45,null],[12,"m14","","",45,null],[12,"m24","","",45,null],[12,"m34","","",45,null],[12,"m44","","",45,null],[12,"m54","","",45,null],[12,"m64","","",45,null],[12,"m15","","",45,null],[12,"m25","","",45,null],[12,"m35","","",45,null],[12,"m45","","",45,null],[12,"m55","","",45,null],[12,"m65","","",45,null],[3,"M6x6","","Data structure used to provide access to matrix and vector…",null,null],[12,"m11","","",46,null],[12,"m21","","",46,null],[12,"m31","","",46,null],[12,"m41","","",46,null],[12,"m51","","",46,null],[12,"m61","","",46,null],[12,"m12","","",46,null],[12,"m22","","",46,null],[12,"m32","","",46,null],[12,"m42","","",46,null],[12,"m52","","",46,null],[12,"m62","","",46,null],[12,"m13","","",46,null],[12,"m23","","",46,null],[12,"m33","","",46,null],[12,"m43","","",46,null],[12,"m53","","",46,null],[12,"m63","","",46,null],[12,"m14","","",46,null],[12,"m24","","",46,null],[12,"m34","","",46,null],[12,"m44","","",46,null],[12,"m54","","",46,null],[12,"m64","","",46,null],[12,"m15","","",46,null],[12,"m25","","",46,null],[12,"m35","","",46,null],[12,"m45","","",46,null],[12,"m55","","",46,null],[12,"m65","","",46,null],[12,"m16","","",46,null],[12,"m26","","",46,null],[12,"m36","","",46,null],[12,"m46","","",46,null],[12,"m56","","",46,null],[12,"m66","","",46,null],[0,"default_allocator","nalgebra::base","The default matrix data storage allocator.",null,null],[3,"DefaultAllocator","nalgebra::base::default_allocator","An allocator based on `GenericArray` and `VecStorage` for…",null,null],[0,"dimension","nalgebra::base","Traits and tags for identifying the dimension of all…",null,null],[3,"Dynamic","nalgebra::base::dimension","Dim of dynamically-sized algebraic entities.",null,null],[3,"U1","","A type level dimension with a value of `1`.",null,null],[3,"U0","","A type level dimension.",null,null],[3,"U2","","A type level dimension.",null,null],[3,"U3","","A type level dimension.",null,null],[3,"U4","","A type level dimension.",null,null],[3,"U5","","A type level dimension.",null,null],[3,"U6","","A type level dimension.",null,null],[3,"U7","","A type level dimension.",null,null],[3,"U8","","A type level dimension.",null,null],[3,"U9","","A type level dimension.",null,null],[3,"U10","","A type level dimension.",null,null],[3,"U11","","A type level dimension.",null,null],[3,"U12","","A type level dimension.",null,null],[3,"U13","","A type level dimension.",null,null],[3,"U14","","A type level dimension.",null,null],[3,"U15","","A type level dimension.",null,null],[3,"U16","","A type level dimension.",null,null],[3,"U17","","A type level dimension.",null,null],[3,"U18","","A type level dimension.",null,null],[3,"U19","","A type level dimension.",null,null],[3,"U20","","A type level dimension.",null,null],[3,"U21","","A type level dimension.",null,null],[3,"U22","","A type level dimension.",null,null],[3,"U23","","A type level dimension.",null,null],[3,"U24","","A type level dimension.",null,null],[3,"U25","","A type level dimension.",null,null],[3,"U26","","A type level dimension.",null,null],[3,"U27","","A type level dimension.",null,null],[3,"U28","","A type level dimension.",null,null],[3,"U29","","A type level dimension.",null,null],[3,"U30","","A type level dimension.",null,null],[3,"U31","","A type level dimension.",null,null],[3,"U32","","A type level dimension.",null,null],[3,"U33","","A type level dimension.",null,null],[3,"U34","","A type level dimension.",null,null],[3,"U35","","A type level dimension.",null,null],[3,"U36","","A type level dimension.",null,null],[3,"U37","","A type level dimension.",null,null],[3,"U38","","A type level dimension.",null,null],[3,"U39","","A type level dimension.",null,null],[3,"U40","","A type level dimension.",null,null],[3,"U41","","A type level dimension.",null,null],[3,"U42","","A type level dimension.",null,null],[3,"U43","","A type level dimension.",null,null],[3,"U44","","A type level dimension.",null,null],[3,"U45","","A type level dimension.",null,null],[3,"U46","","A type level dimension.",null,null],[3,"U47","","A type level dimension.",null,null],[3,"U48","","A type level dimension.",null,null],[3,"U49","","A type level dimension.",null,null],[3,"U50","","A type level dimension.",null,null],[3,"U51","","A type level dimension.",null,null],[3,"U52","","A type level dimension.",null,null],[3,"U53","","A type level dimension.",null,null],[3,"U54","","A type level dimension.",null,null],[3,"U55","","A type level dimension.",null,null],[3,"U56","","A type level dimension.",null,null],[3,"U57","","A type level dimension.",null,null],[3,"U58","","A type level dimension.",null,null],[3,"U59","","A type level dimension.",null,null],[3,"U60","","A type level dimension.",null,null],[3,"U61","","A type level dimension.",null,null],[3,"U62","","A type level dimension.",null,null],[3,"U63","","A type level dimension.",null,null],[3,"U64","","A type level dimension.",null,null],[3,"U65","","A type level dimension.",null,null],[3,"U66","","A type level dimension.",null,null],[3,"U67","","A type level dimension.",null,null],[3,"U68","","A type level dimension.",null,null],[3,"U69","","A type level dimension.",null,null],[3,"U70","","A type level dimension.",null,null],[3,"U71","","A type level dimension.",null,null],[3,"U72","","A type level dimension.",null,null],[3,"U73","","A type level dimension.",null,null],[3,"U74","","A type level dimension.",null,null],[3,"U75","","A type level dimension.",null,null],[3,"U76","","A type level dimension.",null,null],[3,"U77","","A type level dimension.",null,null],[3,"U78","","A type level dimension.",null,null],[3,"U79","","A type level dimension.",null,null],[3,"U80","","A type level dimension.",null,null],[3,"U81","","A type level dimension.",null,null],[3,"U82","","A type level dimension.",null,null],[3,"U83","","A type level dimension.",null,null],[3,"U84","","A type level dimension.",null,null],[3,"U85","","A type level dimension.",null,null],[3,"U86","","A type level dimension.",null,null],[3,"U87","","A type level dimension.",null,null],[3,"U88","","A type level dimension.",null,null],[3,"U89","","A type level dimension.",null,null],[3,"U90","","A type level dimension.",null,null],[3,"U91","","A type level dimension.",null,null],[3,"U92","","A type level dimension.",null,null],[3,"U93","","A type level dimension.",null,null],[3,"U94","","A type level dimension.",null,null],[3,"U95","","A type level dimension.",null,null],[3,"U96","","A type level dimension.",null,null],[3,"U97","","A type level dimension.",null,null],[3,"U98","","A type level dimension.",null,null],[3,"U99","","A type level dimension.",null,null],[3,"U100","","A type level dimension.",null,null],[3,"U101","","A type level dimension.",null,null],[3,"U102","","A type level dimension.",null,null],[3,"U103","","A type level dimension.",null,null],[3,"U104","","A type level dimension.",null,null],[3,"U105","","A type level dimension.",null,null],[3,"U106","","A type level dimension.",null,null],[3,"U107","","A type level dimension.",null,null],[3,"U108","","A type level dimension.",null,null],[3,"U109","","A type level dimension.",null,null],[3,"U110","","A type level dimension.",null,null],[3,"U111","","A type level dimension.",null,null],[3,"U112","","A type level dimension.",null,null],[3,"U113","","A type level dimension.",null,null],[3,"U114","","A type level dimension.",null,null],[3,"U115","","A type level dimension.",null,null],[3,"U116","","A type level dimension.",null,null],[3,"U117","","A type level dimension.",null,null],[3,"U118","","A type level dimension.",null,null],[3,"U119","","A type level dimension.",null,null],[3,"U120","","A type level dimension.",null,null],[3,"U121","","A type level dimension.",null,null],[3,"U122","","A type level dimension.",null,null],[3,"U123","","A type level dimension.",null,null],[3,"U124","","A type level dimension.",null,null],[3,"U125","","A type level dimension.",null,null],[3,"U126","","A type level dimension.",null,null],[3,"U127","","A type level dimension.",null,null],[6,"DimSum","","",null,null],[6,"DimNameSum","","",null,null],[6,"DimProd","","",null,null],[6,"DimNameProd","","",null,null],[6,"DimDiff","","",null,null],[6,"DimNameDiff","","",null,null],[6,"DimQuot","","",null,null],[6,"DimNameQuot","","",null,null],[6,"DimMinimum","","",null,null],[6,"DimNameMinimum","","",null,null],[6,"DimMaximum","","",null,null],[6,"DimNameMaximum","","",null,null],[8,"IsDynamic","","Trait implemented by `Dynamic`.",null,null],[8,"IsNotStaticOne","","Trait implemented by `Dynamic` and type-level integers…",null,null],[8,"Dim","","Trait implemented by any type that can be used as a…",null,null],[11,"is","","",47,[[],["bool"]]],[10,"try_to_usize","","Gets the compile-time value of `Self`. Returns `None` if…",47,[[],[["usize"],["option",["usize"]]]]],[10,"value","","Gets the run-time value of `self`. For type-level…",47,[[["self"]],["usize"]]],[10,"from_usize","","Builds an instance of `Self` from a run-time value. Panics…",47,[[["usize"]],["self"]]],[8,"DimAdd","","",null,null],[16,"Output","","",48,null],[10,"add","","",48,[[["d"]]]],[8,"DimNameAdd","","",null,null],[16,"Output","","",49,null],[10,"add","","",49,[[["d"]]]],[8,"DimMul","","",null,null],[16,"Output","","",50,null],[10,"mul","","",50,[[["d"]]]],[8,"DimNameMul","","",null,null],[16,"Output","","",51,null],[10,"mul","","",51,[[["d"]]]],[8,"DimSub","","",null,null],[16,"Output","","",52,null],[10,"sub","","",52,[[["d"]]]],[8,"DimNameSub","","",null,null],[16,"Output","","",53,null],[10,"sub","","",53,[[["d"]]]],[8,"DimDiv","","",null,null],[16,"Output","","",54,null],[10,"div","","",54,[[["d"]]]],[8,"DimNameDiv","","",null,null],[16,"Output","","",55,null],[10,"div","","",55,[[["d"]]]],[8,"DimMin","","",null,null],[16,"Output","","",56,null],[10,"min","","",56,[[["d"]]]],[8,"DimNameMin","","",null,null],[16,"Output","","",57,null],[10,"min","","",57,[[["d"]]]],[8,"DimMax","","",null,null],[16,"Output","","",58,null],[10,"max","","",58,[[["d"]]]],[8,"DimNameMax","","",null,null],[16,"Output","","",59,null],[10,"max","","",59,[[["d"]]]],[8,"DimName","","Trait implemented exclusively by type-level integers.",null,null],[16,"Value","","",60,null],[10,"name","","The name of this dimension, i.e., the singleton `Self`.",60,[[],["self"]]],[11,"dim","","The value of this dimension.",60,[[],["usize"]]],[8,"NamedDim","","",null,null],[16,"Name","","",61,null],[11,"new","","A dynamic size equal to `value`.",62,[[["usize"]],["self"]]],[0,"iter","nalgebra::base","Matrix iterators.",null,null],[3,"MatrixIter","nalgebra::base::iter","An iterator through a dense matrix with arbitrary strides…",null,null],[3,"MatrixIterMut","","An iterator through a dense matrix with arbitrary strides…",null,null],[3,"RowIter","","An iterator through the rows of a matrix.",null,null],[3,"RowIterMut","","An iterator through the mutable rows of a matrix.",null,null],[3,"ColumnIter","","An iterator through the columns of a matrix.",null,null],[3,"ColumnIterMut","","An iterator through the mutable columns of a matrix.",null,null],[11,"new","","Creates a new iterator for the given matrix storage.",63,[[["s"]],["matrixiter"]]],[11,"new","","Creates a new iterator for the given matrix storage.",64,[[["s"]],["matrixitermut"]]],[11,"neg_mut","nalgebra::base","Negates `self` in-place.",7,[[["self"]]]],[11,"add_to","","Equivalent to `self + rhs` but stores the result into…",7,[[["matrix"],["self"],["matrix"]]]],[11,"sub_to","","Equivalent to `self + rhs` but stores the result into…",7,[[["matrix"],["self"],["matrix"]]]],[11,"tr_mul","","Equivalent to `self.transpose() * rhs`.",7,[[["self"],["matrix"]],[["matrixmn"],["dim"]]]],[11,"ad_mul","","Equivalent to `self.adjoint() * rhs`.",7,[[["self"],["matrix"]],[["matrixmn"],["dim"]]]],[11,"tr_mul_to","","Equivalent to `self.transpose() * rhs` but stores the…",7,[[["matrix"],["self"],["matrix"]]]],[11,"ad_mul_to","","Equivalent to `self.adjoint() * rhs` but stores the result…",7,[[["matrix"],["self"],["matrix"]]]],[11,"mul_to","","Equivalent to `self * rhs` but stores the result into…",7,[[["matrix"],["self"],["matrix"]]]],[11,"kronecker","","The kronecker product of two matrices (aka. tensor product…",7,[[["self"],["matrix"]],[["matrixmn",["dimprod","dimprod"]],["dimprod"],["dimprod"]]]],[11,"add_scalar","","Adds a scalar to `self`.",7,[[["self"],["n"]],["matrixmn"]]],[11,"add_scalar_mut","","Adds a scalar to `self` in-place.",7,[[["self"],["n"]]]],[11,"amax","","Returns the absolute value of the component with the…",7,[[["self"]],["n"]]],[11,"camax","","Returns the the 1-norm of the complex component with the…",7,[[["self"]]]],[11,"max","","Returns the component with the largest value. # Example `#…",7,[[["self"]],["n"]]],[11,"amin","","Returns the absolute value of the component with the…",7,[[["self"]],["n"]]],[11,"camin","","Returns the the 1-norm of the complex component with the…",7,[[["self"]]]],[11,"min","","Returns the component with the smallest value. # Example…",7,[[["self"]],["n"]]],[0,"storage","","Abstract definition of a matrix data storage.",null,null],[6,"SameShapeStorage","nalgebra::base::storage","The data storage for the sum of two matrices with…",null,null],[6,"Owned","","The owned data storage that can be allocated from `S`.",null,null],[6,"RStride","","The row-stride of the owned data storage for a buffer of…",null,null],[6,"CStride","","The column-stride of the owned data storage for a buffer…",null,null],[8,"Storage","","The trait shared by all matrix data storage.",null,null],[16,"RStride","","The static stride of this storage's rows.",65,null],[16,"CStride","","The static stride of this storage's columns.",65,null],[10,"ptr","","The matrix data pointer.",65,[[["self"]]]],[10,"shape","","The dimension of the matrix at run-time. Arr length of…",65,[[["self"]]]],[10,"strides","","The spacing between consecutive row elements and…",65,[[["self"]]]],[11,"linear_index","","Compute the index corresponding to the irow-th row and…",65,[[["self"],["usize"]],["usize"]]],[11,"get_address_unchecked_linear","","Gets the address of the i-th matrix component without…",65,[[["self"],["usize"]]]],[11,"get_address_unchecked","","Gets the address of the i-th matrix component without…",65,[[["self"],["usize"]]]],[11,"get_unchecked_linear","","Retrieves a reference to the i-th element without…",65,[[["self"],["usize"]],["n"]]],[11,"get_unchecked","","Retrieves a reference to the i-th element without…",65,[[["self"],["usize"]],["n"]]],[10,"is_contiguous","","Indicates whether this data buffer stores its elements…",65,[[["self"]],["bool"]]],[10,"as_slice","","Retrieves the data buffer as a contiguous slice.",65,[[["self"]]]],[10,"into_owned","","Builds a matrix data storage that does not contain any…",65,[[],["owned"]]],[10,"clone_owned","","Clones this data storage to one that does not contain any…",65,[[["self"]],["owned"]]],[8,"StorageMut","","Trait implemented by matrix data storage that can provide…",null,null],[10,"ptr_mut","","The matrix mutable data pointer.",66,[[["self"]]]],[11,"get_address_unchecked_linear_mut","","Gets the mutable address of the i-th matrix component…",66,[[["self"],["usize"]]]],[11,"get_address_unchecked_mut","","Gets the mutable address of the i-th matrix component…",66,[[["self"],["usize"]]]],[11,"get_unchecked_linear_mut","","Retrieves a mutable reference to the i-th element without…",66,[[["self"],["usize"]],["n"]]],[11,"get_unchecked_mut","","Retrieves a mutable reference to the element at `(irow,…",66,[[["self"],["usize"]],["n"]]],[11,"swap_unchecked_linear","","Swaps two elements using their linear index without…",66,[[["self"],["usize"]]]],[11,"swap_unchecked","","Swaps two elements without bound-checking.",66,[[["self"]]]],[10,"as_mut_slice","","Retrieves the mutable data buffer as a contiguous slice.",66,[[["self"]]]],[8,"ContiguousStorage","","A matrix storage that is stored contiguously in memory.",null,null],[8,"ContiguousStorageMut","","A mutable matrix storage that is stored contiguously in…",null,null],[11,"new_scaling","nalgebra::base","Creates a new homogeneous matrix that applies the same…",7,[[["n"]],["self"]]],[11,"new_nonuniform_scaling","","Creates a new homogeneous matrix that applies a distinct…",7,[[["vector"]],["self"]]],[11,"new_translation","","Creates a new homogeneous matrix that applies a pure…",7,[[["vector"]],["self"]]],[11,"new_rotation","","Builds a 2 dimensional homogeneous rotation matrix from an…",7,[[["n"]],["self"]]],[11,"new_rotation","","Builds a 3D homogeneous rotation matrix from an axis and…",7,[[["vector3"]],["self"]]],[11,"new_rotation_wrt_point","","Builds a 3D homogeneous rotation matrix from an axis and…",7,[[["vector3"],["point3"]],["self"]]],[11,"from_scaled_axis","","Builds a 3D homogeneous rotation matrix from an axis and…",7,[[["vector3"]],["self"]]],[11,"from_euler_angles","","Creates a new rotation from Euler angles.",7,[[["n"]],["self"]]],[11,"from_axis_angle","","Builds a 3D homogeneous rotation matrix from an axis and a…",7,[[["unit"],["n"]],["self"]]],[11,"new_orthographic","","Creates a new homogeneous matrix for an orthographic…",7,[[["n"]],["self"]]],[11,"new_perspective","","Creates a new homogeneous matrix for a perspective…",7,[[["n"]],["self"]]],[11,"face_towards","","Creates an isometry that corresponds to the local frame of…",7,[[["vector3"],["point3"]],["self"]]],[11,"new_observer_frame","","Deprecated: Use [Matrix4::face_towards] instead.",7,[[["vector3"],["point3"]],["self"]]],[11,"look_at_rh","","Builds a right-handed look-at view matrix.",7,[[["vector3"],["point3"]],["self"]]],[11,"look_at_lh","","Builds a left-handed look-at view matrix.",7,[[["vector3"],["point3"]],["self"]]],[11,"append_scaling","","Computes the transformation equal to `self` followed by an…",7,[[["self"],["n"]],["matrixn"]]],[11,"prepend_scaling","","Computes the transformation equal to an uniform scaling…",7,[[["self"],["n"]],["matrixn"]]],[11,"append_nonuniform_scaling","","Computes the transformation equal to `self` followed by a…",7,[[["vector"],["self"]],["matrixn"]]],[11,"prepend_nonuniform_scaling","","Computes the transformation equal to a non-uniform scaling…",7,[[["vector"],["self"]],["matrixn"]]],[11,"append_translation","","Computes the transformation equal to `self` followed by a…",7,[[["vector"],["self"]],["matrixn"]]],[11,"prepend_translation","","Computes the transformation equal to a translation…",7,[[["vector"],["self"]],["matrixn"]]],[11,"append_scaling_mut","","Computes in-place the transformation equal to `self`…",7,[[["self"],["n"]]]],[11,"prepend_scaling_mut","","Computes in-place the transformation equal to an uniform…",7,[[["self"],["n"]]]],[11,"append_nonuniform_scaling_mut","","Computes in-place the transformation equal to `self`…",7,[[["self"],["vector"]]]],[11,"prepend_nonuniform_scaling_mut","","Computes in-place the transformation equal to a…",7,[[["self"],["vector"]]]],[11,"append_translation_mut","","Computes the transformation equal to `self` followed by a…",7,[[["self"],["vector"]]]],[11,"prepend_translation_mut","","Computes the transformation equal to a translation…",7,[[["self"],["vector"]]]],[11,"transform_vector","","Transforms the given vector, assuming the matrix `self`…",7,[[["vectorn"],["self"]],[["vectorn",["dimnamediff"]],["dimnamediff",["u1"]]]]],[11,"transform_point","","Transforms the given point, assuming the matrix `self`…",7,[[["point"],["self"]],[["point",["dimnamediff"]],["dimnamediff",["u1"]]]]],[11,"abs","","Computes the component-wise absolute value.",7,[[["self"]],["matrixmn"]]],[11,"component_mul","","Componentwise matrix or vector multiplication.",7,[[["self"],["matrix"]],["matrixsum"]]],[11,"cmpy","","Computes componentwise `self[i] = alpha * a[i] * b[i] +…",7,[[["matrix"],["n"],["self"],["matrix"]]]],[11,"component_mul_assign","","Inplace componentwise matrix or vector multiplication.",7,[[["self"],["matrix"]]]],[11,"component_mul_mut","","Inplace componentwise matrix or vector multiplication.",7,[[["self"],["matrix"]]]],[11,"component_div","","Componentwise matrix or vector division.",7,[[["self"],["matrix"]],["matrixsum"]]],[11,"cdpy","","Computes componentwise `self[i] = alpha * a[i] / b[i] +…",7,[[["matrix"],["n"],["self"],["matrix"]]]],[11,"component_div_assign","","Inplace componentwise matrix or vector division.",7,[[["self"],["matrix"]]]],[11,"component_div_mut","","Inplace componentwise matrix or vector division.",7,[[["self"],["matrix"]]]],[11,"inf","","Computes the infimum (aka. componentwise min) of two…",7,[[["self"]],["matrixmn"]]],[11,"sup","","Computes the supremum (aka. componentwise max) of two…",7,[[["self"]],["matrixmn"]]],[11,"inf_sup","","Computes the (infimum, supremum) of two matrices/vectors.",7,[[["self"]]]],[11,"new_uninitialized_generic","","Creates a new uninitialized matrix. If the matrix has a…",7,[[["c"],["r"]],["self"]]],[11,"from_element_generic","","Creates a matrix with all its elements set to `elem`.",7,[[["c"],["n"],["r"]],["self"]]],[11,"repeat_generic","","Creates a matrix with all its elements set to `elem`.",7,[[["c"],["n"],["r"]],["self"]]],[11,"zeros_generic","","Creates a matrix with all its elements set to 0.",7,[[["c"],["r"]],["self"]]],[11,"from_iterator_generic","","Creates a matrix with all its elements filled by an…",7,[[["c"],["i"],["r"]],["self"]]],[11,"from_row_slice_generic","","Creates a matrix with its elements filled with the…",7,[[["c"],["r"]],["self"]]],[11,"from_column_slice_generic","","Creates a matrix with its elements filled with the…",7,[[["c"],["r"]],["self"]]],[11,"from_fn_generic","","Creates a matrix filled with the results of a function…",7,[[["c"],["f"],["r"]],["self"]]],[11,"identity_generic","","Creates a new identity matrix.",7,[[["c"],["r"]],["self"]]],[11,"from_diagonal_element_generic","","Creates a new matrix with its diagonal filled with copies…",7,[[["c"],["n"],["r"]],["self"]]],[11,"from_partial_diagonal_generic","","Creates a new matrix that may be rectangular. The first…",7,[[["c"],["r"]],["self"]]],[11,"from_rows","","Builds a new matrix from its rows.",7,[[],["self"]]],[11,"from_columns","","Builds a new matrix from its columns.",7,[[],["self"]]],[11,"new_random_generic","","Creates a matrix filled with random values.",7,[[["c"],["r"]],["self"]]],[11,"from_distribution_generic","","Creates a matrix filled with random values from the given…",7,[[["g"],["c"],["distr"],["r"]],["self"]]],[11,"from_vec_generic","","Creates a matrix backed by a given `Vec`.",7,[[["c"],["vec"],["r"]],["self"]]],[11,"from_diagonal","","Creates a square matrix with its diagonal set to `diag`…",7,[[["vector"]],["self"]]],[11,"new_uninitialized","","Creates a new uninitialized matrix or vector.",7,[[],["self"]]],[11,"from_element","","Creates a matrix or vector with all its elements set to…",7,[[["n"]],["self"]]],[11,"repeat","","Creates a matrix or vector with all its elements set to…",7,[[["n"]],["self"]]],[11,"zeros","","Creates a matrix or vector with all its elements set to `0`.",7,[[],["self"]]],[11,"from_iterator","","Creates a matrix or vector with all its elements filled by…",7,[[["i"]],["self"]]],[11,"from_fn","","Creates a matrix or vector filled with the results of a…",7,[[["f"]],["self"]]],[11,"identity","","Creates an identity matrix. If the matrix is not square,…",7,[[],["self"]]],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with…",7,[[["n"]],["self"]]],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first…",7,[[],["self"]]],[11,"from_distribution","","Creates a matrix or vector filled with random values from…",7,[[["distr"],["g"]],["self"]]],[11,"new_random","","Creates a matrix filled with random values.",7,[[],["self"]]],[11,"new_uninitialized","","Creates a new uninitialized matrix or vector.",7,[[["usize"]],["self"]]],[11,"from_element","","Creates a matrix or vector with all its elements set to…",7,[[["usize"],["n"]],["self"]]],[11,"repeat","","Creates a matrix or vector with all its elements set to…",7,[[["usize"],["n"]],["self"]]],[11,"zeros","","Creates a matrix or vector with all its elements set to `0`.",7,[[["usize"]],["self"]]],[11,"from_iterator","","Creates a matrix or vector with all its elements filled by…",7,[[["i"],["usize"]],["self"]]],[11,"from_fn","","Creates a matrix or vector filled with the results of a…",7,[[["usize"],["f"]],["self"]]],[11,"identity","","Creates an identity matrix. If the matrix is not square,…",7,[[["usize"]],["self"]]],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with…",7,[[["usize"],["n"]],["self"]]],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first…",7,[[["usize"]],["self"]]],[11,"from_distribution","","Creates a matrix or vector filled with random values from…",7,[[["distr"],["usize"],["g"]],["self"]]],[11,"new_random","","Creates a matrix filled with random values.",7,[[["usize"]],["self"]]],[11,"new_uninitialized","","Creates a new uninitialized matrix or vector.",7,[[["usize"]],["self"]]],[11,"from_element","","Creates a matrix or vector with all its elements set to…",7,[[["usize"],["n"]],["self"]]],[11,"repeat","","Creates a matrix or vector with all its elements set to…",7,[[["usize"],["n"]],["self"]]],[11,"zeros","","Creates a matrix or vector with all its elements set to `0`.",7,[[["usize"]],["self"]]],[11,"from_iterator","","Creates a matrix or vector with all its elements filled by…",7,[[["i"],["usize"]],["self"]]],[11,"from_fn","","Creates a matrix or vector filled with the results of a…",7,[[["usize"],["f"]],["self"]]],[11,"identity","","Creates an identity matrix. If the matrix is not square,…",7,[[["usize"]],["self"]]],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with…",7,[[["usize"],["n"]],["self"]]],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first…",7,[[["usize"]],["self"]]],[11,"from_distribution","","Creates a matrix or vector filled with random values from…",7,[[["distr"],["usize"],["g"]],["self"]]],[11,"new_random","","Creates a matrix filled with random values.",7,[[["usize"]],["self"]]],[11,"new_uninitialized","","Creates a new uninitialized matrix or vector.",7,[[["usize"]],["self"]]],[11,"from_element","","Creates a matrix or vector with all its elements set to…",7,[[["usize"],["n"]],["self"]]],[11,"repeat","","Creates a matrix or vector with all its elements set to…",7,[[["usize"],["n"]],["self"]]],[11,"zeros","","Creates a matrix or vector with all its elements set to `0`.",7,[[["usize"]],["self"]]],[11,"from_iterator","","Creates a matrix or vector with all its elements filled by…",7,[[["i"],["usize"]],["self"]]],[11,"from_fn","","Creates a matrix or vector filled with the results of a…",7,[[["usize"],["f"]],["self"]]],[11,"identity","","Creates an identity matrix. If the matrix is not square,…",7,[[["usize"]],["self"]]],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with…",7,[[["usize"],["n"]],["self"]]],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first…",7,[[["usize"]],["self"]]],[11,"from_distribution","","Creates a matrix or vector filled with random values from…",7,[[["distr"],["usize"],["g"]],["self"]]],[11,"new_random","","Creates a matrix filled with random values.",7,[[["usize"]],["self"]]],[11,"from_row_slice","","Creates a matrix with its elements filled with the…",7,[[],["self"]]],[11,"from_column_slice","","Creates a matrix with its elements filled with the…",7,[[],["self"]]],[11,"from_vec","","Creates a matrix backed by a given `Vec`.",7,[[["vec"]],["self"]]],[11,"from_row_slice","","Creates a matrix with its elements filled with the…",7,[[],["self"]]],[11,"from_column_slice","","Creates a matrix with its elements filled with the…",7,[[],["self"]]],[11,"from_vec","","Creates a matrix backed by a given `Vec`.",7,[[["vec"]],["self"]]],[11,"from_row_slice","","Creates a matrix with its elements filled with the…",7,[[],["self"]]],[11,"from_column_slice","","Creates a matrix with its elements filled with the…",7,[[],["self"]]],[11,"from_vec","","Creates a matrix backed by a given `Vec`.",7,[[["vec"]],["self"]]],[11,"from_row_slice","","Creates a matrix with its elements filled with the…",7,[[["usize"]],["self"]]],[11,"from_column_slice","","Creates a matrix with its elements filled with the…",7,[[["usize"]],["self"]]],[11,"from_vec","","Creates a matrix backed by a given `Vec`.",7,[[["vec"],["usize"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",7,[[["n"]],["self"]]],[11,"x","","The column vector with a 1 as its first component, and…",7,[[],["self"]]],[11,"y","","The column vector with a 1 as its second component, and…",7,[[],["self"]]],[11,"z","","The column vector with a 1 as its third component, and…",7,[[],["self"]]],[11,"w","","The column vector with a 1 as its fourth component, and…",7,[[],["self"]]],[11,"a","","The column vector with a 1 as its fifth component, and…",7,[[],["self"]]],[11,"b","","The column vector with a 1 as its sixth component, and…",7,[[],["self"]]],[11,"x_axis","","The unit column vector with a 1 as its first component,…",7,[[],["unit"]]],[11,"y_axis","","The unit column vector with a 1 as its second component,…",7,[[],["unit"]]],[11,"z_axis","","The unit column vector with a 1 as its third component,…",7,[[],["unit"]]],[11,"w_axis","","The unit column vector with a 1 as its fourth component,…",7,[[],["unit"]]],[11,"a_axis","","The unit column vector with a 1 as its fifth component,…",7,[[],["unit"]]],[11,"b_axis","","The unit column vector with a 1 as its sixth component,…",7,[[],["unit"]]],[11,"from_slice_with_strides_generic_unchecked","","Creates, without bound-checking, a matrix slice from an…",7,[[["cstride"],["usize"],["c"],["rstride"],["r"]],["self"]]],[11,"from_slice_with_strides_generic","","Creates a matrix slice from an array and with dimensions…",7,[[["cstride"],["c"],["rstride"],["r"]],["self"]]],[11,"from_slice_with_strides_generic_unchecked","","Creates, without bound-checking, a mutable matrix slice…",7,[[["cstride"],["usize"],["c"],["rstride"],["r"]],["self"]]],[11,"from_slice_with_strides_generic","","Creates a mutable matrix slice from an array and with…",7,[[["cstride"],["c"],["rstride"],["r"]],["self"]]],[11,"from_slice_generic_unchecked","","Creates, without bound-checking, a matrix slice from an…",7,[[["usize"],["c"],["r"]],["self"]]],[11,"from_slice_generic","","Creates a matrix slice from an array and with dimensions…",7,[[["c"],["r"]],["self"]]],[11,"from_slice_generic_unchecked","","Creates, without bound-checking, a mutable matrix slice…",7,[[["usize"],["c"],["r"]],["self"]]],[11,"from_slice_generic","","Creates a mutable matrix slice from an array and with…",7,[[["c"],["r"]],["self"]]],[11,"from_slice","","Creates a new matrix slice from the given data array.",7,[[],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new matrix slice from…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides","","Creates a new matrix slice with the specified strides from…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with…",7,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new matrix slice from the given data array.",7,[[["usize"]],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new matrix slice from…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides","","Creates a new matrix slice with the specified strides from…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with…",7,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new matrix slice from the given data array.",7,[[["usize"]],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new matrix slice from…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides","","Creates a new matrix slice with the specified strides from…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with…",7,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new matrix slice from the given data array.",7,[[["usize"]],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new matrix slice from…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides","","Creates a new matrix slice with the specified strides from…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with…",7,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new mutable matrix slice from the given data…",7,[[],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new mutable matrix…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides_mut","","Creates a new mutable matrix slice with the specified…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix…",7,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new mutable matrix slice from the given data…",7,[[["usize"]],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new mutable matrix…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides_mut","","Creates a new mutable matrix slice with the specified…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix…",7,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new mutable matrix slice from the given data…",7,[[["usize"]],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new mutable matrix…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides_mut","","Creates a new mutable matrix slice with the specified…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix…",7,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new mutable matrix slice from the given data…",7,[[["usize"]],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new mutable matrix…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides_mut","","Creates a new mutable matrix slice with the specified…",7,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix…",7,[[["usize"]],["self"]]],[11,"upper_triangle","","Extracts the upper triangular part of this matrix…",7,[[["self"]],["matrixmn"]]],[11,"lower_triangle","","Extracts the lower triangular part of this matrix…",7,[[["self"]],["matrixmn"]]],[11,"select_rows","","Creates a new matrix by extracting the given set of rows…",7,[[["i"],["self"]],[["matrixmn",["dynamic"]],["dynamic"]]]],[11,"select_columns","","Creates a new matrix by extracting the given set of…",7,[[["i"],["self"]],[["matrixmn",["dynamic"]],["dynamic"]]]],[11,"fill","","Sets all the elements of this matrix to `val`.",7,[[["self"],["n"]]]],[11,"fill_with_identity","","Fills `self` with the identity matrix.",7,[[["self"]]]],[11,"fill_diagonal","","Sets all the diagonal elements of this matrix to `val`.",7,[[["self"],["n"]]]],[11,"fill_row","","Sets all the elements of the selected row to `val`.",7,[[["self"],["usize"],["n"]]]],[11,"fill_column","","Sets all the elements of the selected column to `val`.",7,[[["self"],["usize"],["n"]]]],[11,"set_diagonal","","Fills the diagonal of this matrix with the content of the…",7,[[["self"],["vector"]]]],[11,"set_partial_diagonal","","Fills the diagonal of this matrix with the content of the…",7,[[["self"]]]],[11,"set_row","","Fills the selected row of this matrix with the content of…",7,[[["self"],["usize"],["rowvector"]]]],[11,"set_column","","Fills the selected column of this matrix with the content…",7,[[["self"],["usize"],["vector"]]]],[11,"fill_lower_triangle","","Sets all the elements of the lower-triangular part of this…",7,[[["self"],["usize"],["n"]]]],[11,"fill_upper_triangle","","Sets all the elements of the lower-triangular part of this…",7,[[["self"],["usize"],["n"]]]],[11,"swap_rows","","Swaps two rows in-place.",7,[[["self"],["usize"]]]],[11,"swap_columns","","Swaps two columns in-place.",7,[[["self"],["usize"]]]],[11,"fill_lower_triangle_with_upper_triangle","","Copies the upper-triangle of this matrix to its…",7,[[["self"]]]],[11,"fill_upper_triangle_with_lower_triangle","","Copies the upper-triangle of this matrix to its…",7,[[["self"]]]],[11,"remove_column","","Removes the `i`-th column from this matrix.",7,[[["usize"]],[["dimdiff",["u1"]],["matrixmn",["dimdiff"]]]]],[11,"remove_columns_at","","Removes all columns in `indices`   ",7,[[],[["matrixmn",["dynamic"]],["dynamic"]]]],[11,"remove_rows_at","","Removes all rows in `indices`   ",7,[[],[["matrixmn",["dynamic"]],["dynamic"]]]],[11,"remove_fixed_columns","","Removes `D::dim()` consecutive columns from this matrix,…",7,[[["usize"]],[["matrixmn",["dimdiff"]],["dimdiff"]]]],[11,"remove_columns","","Removes `n` consecutive columns from this matrix, starting…",7,[[["usize"]],[["matrixmn",["dynamic"]],["dynamic"]]]],[11,"remove_columns_generic","","Removes `nremove.value()` columns from this matrix,…",7,[[["d"],["usize"]],[["matrixmn",["dimdiff"]],["dimdiff"]]]],[11,"remove_row","","Removes the `i`-th row from this matrix.",7,[[["usize"]],[["dimdiff",["u1"]],["matrixmn",["dimdiff"]]]]],[11,"remove_fixed_rows","","Removes `D::dim()` consecutive rows from this matrix,…",7,[[["usize"]],[["dimdiff"],["matrixmn",["dimdiff"]]]]],[11,"remove_rows","","Removes `n` consecutive rows from this matrix, starting…",7,[[["usize"]],[["matrixmn",["dynamic"]],["dynamic"]]]],[11,"remove_rows_generic","","Removes `nremove.value()` rows from this matrix, starting…",7,[[["d"],["usize"]],[["dimdiff"],["matrixmn",["dimdiff"]]]]],[11,"insert_column","","Inserts a column filled with `val` at the `i-th` position.",7,[[["usize"],["n"]],[["dimsum",["u1"]],["matrixmn",["dimsum"]]]]],[11,"insert_fixed_columns","","Inserts `D::dim()` columns filled with `val` starting at…",7,[[["usize"],["n"]],[["matrixmn",["dimsum"]],["dimsum"]]]],[11,"insert_columns","","Inserts `n` columns filled with `val` starting at the…",7,[[["usize"],["n"]],[["matrixmn",["dynamic"]],["dynamic"]]]],[11,"insert_columns_generic_uninitialized","","Inserts `ninsert.value()` columns starting at the `i-th`…",7,[[["d"],["usize"]],[["matrixmn",["dimsum"]],["dimsum"]]]],[11,"insert_row","","Inserts a row filled with `val` at the `i-th` position.",7,[[["usize"],["n"]],[["dimsum",["u1"]],["matrixmn",["dimsum"]]]]],[11,"insert_fixed_rows","","Inserts `D::dim()` rows filled with `val` starting at the…",7,[[["usize"],["n"]],[["matrixmn",["dimsum"]],["dimsum"]]]],[11,"insert_rows","","Inserts `n` rows filled with `val` starting at the `i-th`…",7,[[["usize"],["n"]],[["matrixmn",["dynamic"]],["dynamic"]]]],[11,"insert_rows_generic_uninitialized","","Inserts `ninsert.value()` rows at the `i-th` place of this…",7,[[["d"],["usize"]],[["matrixmn",["dimsum"]],["dimsum"]]]],[11,"resize","","Resizes this matrix so that it contains `new_nrows` rows…",7,[[["usize"],["n"]],["dmatrix"]]],[11,"resize_vertically","","Resizes this matrix vertically, i.e., so that it contains…",7,[[["usize"],["n"]],[["matrixmn",["dynamic"]],["dynamic"]]]],[11,"resize_horizontally","","Resizes this matrix horizontally, i.e., so that it…",7,[[["usize"],["n"]],[["matrixmn",["dynamic"]],["dynamic"]]]],[11,"fixed_resize","","Resizes this matrix so that it contains `R2::value()` rows…",7,[[["n"]],[["matrixmn"],["dimname"]]]],[11,"resize_generic","","Resizes `self` such that it has dimensions `new_nrows ×…",7,[[["n"],["dim"]],[["matrixmn"],["dim"]]]],[11,"resize_mut","","Resizes this matrix in-place.",7,[[["self"],["usize"],["n"]]]],[11,"resize_vertically_mut","","Changes the number of rows of this matrix in-place.",7,[[["self"],["usize"],["n"]]]],[11,"resize_horizontally_mut","","Changes the number of column of this matrix in-place.",7,[[["self"],["usize"],["n"]]]],[0,"indexing","","Indexing",null,null],[8,"MatrixIndex","nalgebra::base::indexing","A helper trait used for indexing operations.",null,null],[16,"Output","","The output type returned by methods.",67,null],[8,"MatrixIndexMut","","A helper trait used for indexing operations.",null,null],[16,"OutputMut","","The output type returned by methods.",68,null],[11,"get","nalgebra::base","Produces a view of the data at the given index, or `None`…",7,[[["i"],["self"]],["option"]]],[11,"get_mut","","Produces a mutable view of the data at the given index, or…",7,[[["self"],["i"]],["option"]]],[11,"index","","Produces a view of the data at the given index, or panics…",7,[[["i"],["self"]]]],[11,"index_mut","","Produces a mutable view of the data at the given index, or…",7,[[["self"],["i"]]]],[11,"get_unchecked","","Produces a view of the data at the given index, without…",7,[[["i"],["self"]]]],[11,"get_unchecked_mut","","Returns a mutable view of the data at the given index,…",7,[[["self"],["i"]]]],[11,"from_data_statically_unchecked","","Creates a new matrix with the given data without…",7,[[["s"]],["matrix"]]],[11,"from_data","","Creates a new matrix with the given data.",7,[[["s"]],["self"]]],[11,"len","","The total number of elements of this matrix.",7,[[["self"]],["usize"]]],[11,"shape","","The shape of this matrix returned as the tuple (number of…",7,[[["self"]]]],[11,"nrows","","The number of rows of this matrix.",7,[[["self"]],["usize"]]],[11,"ncols","","The number of columns of this matrix.",7,[[["self"]],["usize"]]],[11,"strides","","The strides (row stride, column stride) of this matrix.",7,[[["self"]]]],[11,"iter","","Iterates through this matrix coordinates in column-major…",7,[[["self"]],["matrixiter"]]],[11,"row_iter","","Iterate through the rows of this matrix.",7,[[["self"]],["rowiter"]]],[11,"column_iter","","Iterate through the columns of this matrix. # Example `#…",7,[[["self"]],["columniter"]]],[11,"vector_to_matrix_index","","Computes the row and column coordinates of the i-th…",7,[[["self"],["usize"]]]],[11,"as_ptr","","Returns a pointer to the start of the matrix.",7,[[["self"]]]],[11,"relative_eq","","Tests whether `self` and `rhs` are equal up to a given…",7,[[["self"],["matrix"]],["bool"]]],[11,"eq","","Tests whether `self` and `rhs` are exactly equal.",7,[[["self"],["matrix"]],["bool"]]],[11,"into_owned","","Moves this matrix into one that owns its data.",7,[[],["matrixmn"]]],[11,"into_owned_sum","","Moves this matrix into one that owns its data. The actual…",7,[[],["matrixsum"]]],[11,"clone_owned","","Clones this matrix to one that owns its data.",7,[[["self"]],["matrixmn"]]],[11,"clone_owned_sum","","Clones this matrix into one that owns its data. The actual…",7,[[["self"]],["matrixsum"]]],[11,"map","","Returns a matrix containing the result of `f` applied to…",7,[[["self"],["fnmut"]],[["scalar"],["matrixmn"]]]],[11,"fold_with","","Similar to `self.iter().fold(init, f)` except that `init`…",7,[[["self"]],["n2"]]],[11,"map_with_location","","Returns a matrix containing the result of `f` applied to…",7,[[["self"],["fnmut"]],[["scalar"],["matrixmn"]]]],[11,"zip_map","","Returns a matrix containing the result of `f` applied to…",7,[[["matrix"],["self"],["f"]],["matrixmn"]]],[11,"zip_zip_map","","Returns a matrix containing the result of `f` applied to…",7,[[["matrix"],["matrix"],["self"],["f"]],["matrixmn"]]],[11,"fold","","Folds a function `f` on each entry of `self`.",7,[[["self"],["acc"]],["acc"]]],[11,"zip_fold","","Folds a function `f` on each pairs of entries from `self`…",7,[[["matrix"],["acc"],["self"]],["acc"]]],[11,"transpose_to","","Transposes `self` and store the result into `out`.",7,[[["matrix"],["self"]]]],[11,"transpose","","Transposes `self`.",7,[[["self"]],["matrixmn"]]],[11,"iter_mut","","Mutably iterates through this matrix coordinates.",7,[[["self"]],["matrixitermut"]]],[11,"as_mut_ptr","","Returns a mutable pointer to the start of the matrix.",7,[[["self"]]]],[11,"row_iter_mut","","Mutably iterates through this matrix rows.",7,[[["self"]],["rowitermut"]]],[11,"column_iter_mut","","Mutably iterates through this matrix columns.",7,[[["self"]],["columnitermut"]]],[11,"swap_unchecked","","Swaps two entries without bound-checking.",7,[[["self"]]]],[11,"swap","","Swaps two entries.",7,[[["self"]]]],[11,"copy_from_slice","","Fills this matrix with the content of a slice. Both must…",7,[[["self"]]]],[11,"copy_from","","Fills this matrix with the content of another one. Both…",7,[[["self"],["matrix"]]]],[11,"tr_copy_from","","Fills this matrix with the content of the transpose…",7,[[["self"],["matrix"]]]],[11,"apply_into","","Returns `self` with each of its components replaced by the…",7,[[["fnmut"]],["self"]]],[11,"apply","","Replaces each component of `self` by the result of a…",7,[[["self"],["fnmut"]]]],[11,"zip_apply","","Replaces each component of `self` by the result of a…",7,[[["self"],["matrix"]]]],[11,"zip_zip_apply","","Replaces each component of `self` by the result of a…",7,[[["matrix"],["self"],["matrix"]]]],[11,"vget_unchecked","","Gets a reference to the i-th element of this column vector…",7,[[["self"],["usize"]],["n"]]],[11,"vget_unchecked_mut","","Gets a mutable reference to the i-th element of this…",7,[[["self"],["usize"]],["n"]]],[11,"as_slice","","Extracts a slice containing the entire matrix entries…",7,[[["self"]]]],[11,"as_mut_slice","","Extracts a mutable slice containing the entire matrix…",7,[[["self"]]]],[11,"transpose_mut","","Transposes the square matrix `self` in-place.",7,[[["self"]]]],[11,"adjoint_to","","Takes the adjoint (aka. conjugate-transpose) of `self` and…",7,[[["matrix"],["self"]]]],[11,"adjoint","","The adjoint (aka. conjugate-transpose) of `self`.",7,[[["self"]],["matrixmn"]]],[11,"conjugate_transpose_to","","Takes the conjugate and transposes `self` and store the…",7,[[["matrix"],["self"]]]],[11,"conjugate_transpose","","The conjugate transposition of `self`.",7,[[["self"]],["matrixmn"]]],[11,"conjugate","","The conjugate of `self`.",7,[[["self"]],["matrixmn"]]],[11,"unscale","","Divides each component of the complex matrix `self` by the…",7,[[["self"]],["matrixmn"]]],[11,"scale","","Multiplies each component of the complex matrix `self` by…",7,[[["self"]],["matrixmn"]]],[11,"conjugate_mut","","The conjugate of the complex matrix `self` computed…",7,[[["self"]]]],[11,"unscale_mut","","Divides each component of the complex matrix `self` by the…",7,[[["self"]]]],[11,"scale_mut","","Multiplies each component of the complex matrix `self` by…",7,[[["self"]]]],[11,"conjugate_transform_mut","","Sets `self` to its adjoint.",7,[[["self"]]]],[11,"adjoint_mut","","Sets `self` to its adjoint (aka. conjugate-transpose).",7,[[["self"]]]],[11,"diagonal","","The diagonal of this matrix.",7,[[["self"]],["vectorn"]]],[11,"map_diagonal","","Apply the given function to this matrix's diagonal and…",7,[[["self"]],[["vectorn"],["scalar"]]]],[11,"trace","","Computes a trace of a square matrix, i.e., the sum of its…",7,[[["self"]],["n"]]],[11,"symmetric_part","","The symmetric part of `self`, i.e., `0.5 * (self +…",7,[[["self"]],["matrixmn"]]],[11,"hermitian_part","","The hermitian part of `self`, i.e., `0.5 * (self +…",7,[[["self"]],["matrixmn"]]],[11,"to_homogeneous","","Yields the homogeneous matrix for this matrix, i.e.,…",7,[[["self"]],[["dimsum",["u1"]],["matrixn",["dimsum"]]]]],[11,"to_homogeneous","","Computes the coordinates in projective space of this…",7,[[["self"]],[["vectorn",["dimsum"]],["dimsum",["u1"]]]]],[11,"from_homogeneous","","Constructs a vector from coordinates in projective space,…",7,[[["vector",["dimsum"]],["dimsum",["u1"]]],[["vectorn"],["option",["vectorn"]]]]],[11,"push","","Constructs a new vector of higher dimension by appending…",7,[[["self"],["n"]],[["vectorn",["dimsum"]],["dimsum",["u1"]]]]],[11,"perp","","The perpendicular product between two 2D column vectors,…",7,[[["self"],["matrix"]],["n"]]],[11,"cross","","The 3D cross product between two vectors.",7,[[["self"],["matrix"]],["matrixcross"]]],[11,"cross_matrix","","Computes the matrix `M` such that for all vector `v` we…",7,[[["self"]],[["u3"],["matrixn",["u3"]]]]],[11,"angle","","The smallest angle between two vectors.",7,[[["self"],["matrix"]]]],[11,"lerp","","Returns `self * (1.0 - t) + rhs * t`, i.e., the linear…",7,[[["n"],["self"],["vector"]],["vectorn"]]],[11,"slerp","","Computes the spherical linear interpolation between two…",69,[[["unit"],["self"],["n"]],[["unit",["vectorn"]],["vectorn"]]]],[11,"try_slerp","","Computes the spherical linear interpolation between two…",69,[[["unit"],["self"],["n"]],[["unit",["vectorn"]],["option",["unit"]]]]],[11,"from_raw_parts","","Create a new matrix slice without bound checking and from…",70,[[],["self"]]],[11,"new_unchecked","","Create a new matrix slice without bound checking.",70,[[["s"]],["slicestorage"]]],[11,"new_with_strides_unchecked","","Create a new matrix slice without bound checking.",70,[[["s"]],["slicestorage"]]],[11,"from_raw_parts","","Create a new matrix slice without bound checking and from…",71,[[],["self"]]],[11,"new_unchecked","","Create a new matrix slice without bound checking.",71,[[["s"]],["slicestoragemut"]]],[11,"new_with_strides_unchecked","","Create a new matrix slice without bound checking.",71,[[["s"]],["slicestoragemut"]]],[11,"row","","Returns a slice containing the i-th row of this matrix.",7,[[["self"],["usize"]],[["u1"],["matrixslice",["u1"]]]]],[11,"row_part","","Returns a slice containing the `n` first elements of the…",7,[[["self"],["usize"]],[["u1"],["matrixslice",["u1","dynamic"]],["dynamic"]]]],[11,"rows","","Extracts from this matrix a set of consecutive rows.",7,[[["self"],["usize"]],[["matrixslice",["dynamic"]],["dynamic"]]]],[11,"rows_with_step","","Extracts from this matrix a set of consecutive rows…",7,[[["self"],["usize"]],[["matrixslice",["dynamic","dynamic"]],["dynamic"]]]],[11,"fixed_rows","","Extracts a compile-time number of consecutive rows from…",7,[[["self"],["usize"]],[["matrixslice"],["dimname"]]]],[11,"fixed_rows_with_step","","Extracts from this matrix a compile-time number of rows…",7,[[["self"],["usize"]],[["dynamic"],["matrixslice",["dynamic"]],["dimname"]]]],[11,"rows_generic","","Extracts from this matrix `nrows` rows regularly skipping…",7,[[["dim"],["self"],["usize"]],[["matrixslice"],["dim"]]]],[11,"rows_generic_with_step","","Extracts from this matrix `nrows` rows regularly skipping…",7,[[["usize"],["self"],["rslice"]],[["dynamic"],["matrixslice",["dynamic"]]]]],[11,"column","","Returns a slice containing the i-th column of this matrix.",7,[[["self"],["usize"]],[["u1"],["matrixslice",["u1"]]]]],[11,"column_part","","Returns a slice containing the `n` first elements of the…",7,[[["self"],["usize"]],[["u1"],["matrixslice",["dynamic","u1"]],["dynamic"]]]],[11,"columns","","Extracts from this matrix a set of consecutive columns.",7,[[["self"],["usize"]],[["matrixslice",["dynamic"]],["dynamic"]]]],[11,"columns_with_step","","Extracts from this matrix a set of consecutive columns…",7,[[["self"],["usize"]],[["matrixslice",["dynamic","dynamic"]],["dynamic"]]]],[11,"fixed_columns","","Extracts a compile-time number of consecutive columns from…",7,[[["self"],["usize"]],[["matrixslice"],["dimname"]]]],[11,"fixed_columns_with_step","","Extracts from this matrix a compile-time number of columns…",7,[[["self"],["usize"]],[["dynamic"],["matrixslice",["dynamic"]],["dimname"]]]],[11,"columns_generic","","Extracts from this matrix `ncols` columns. The number of…",7,[[["dim"],["self"],["usize"]],[["matrixslice"],["dim"]]]],[11,"columns_generic_with_step","","Extracts from this matrix `ncols` columns skipping `step`…",7,[[["usize"],["self"],["dim"]],[["dynamic"],["matrixslice",["dynamic"]],["dim"]]]],[11,"slice","","Slices this matrix starting at its component `(irow,…",7,[[["self"]],[["matrixslice",["dynamic","dynamic"]],["dynamic"]]]],[11,"slice_with_steps","","Slices this matrix starting at its component `(start.0,…",7,[[["self"]],[["matrixslice",["dynamic","dynamic","dynamic","dynamic"]],["dynamic"]]]],[11,"fixed_slice","","Slices this matrix starting at its component `(irow,…",7,[[["self"],["usize"]],["matrixslice"]]],[11,"fixed_slice_with_steps","","Slices this matrix starting at its component `(start.0,…",7,[[["self"]],[["matrixslice",["dynamic","dynamic"]],["dynamic"]]]],[11,"generic_slice","","Creates a slice that may or may not have a fixed size and…",7,[[["self"]],["matrixslice"]]],[11,"generic_slice_with_steps","","Creates a slice that may or may not have a fixed size and…",7,[[["self"]],[["matrixslice",["dynamic","dynamic"]],["dynamic"]]]],[11,"rows_range_pair","","Splits this NxM matrix into two parts delimited by two…",7,[[["self"],["slicerange"]]]],[11,"columns_range_pair","","Splits this NxM matrix into two parts delimited by two…",7,[[["self"],["slicerange"]]]],[11,"row_mut","","Returns a slice containing the i-th row of this matrix.",7,[[["self"],["usize"]],[["u1"],["matrixslicemut",["u1"]]]]],[11,"row_part_mut","","Returns a slice containing the `n` first elements of the…",7,[[["self"],["usize"]],[["matrixslicemut",["u1","dynamic"]],["u1"],["dynamic"]]]],[11,"rows_mut","","Extracts from this matrix a set of consecutive rows.",7,[[["self"],["usize"]],[["matrixslicemut",["dynamic"]],["dynamic"]]]],[11,"rows_with_step_mut","","Extracts from this matrix a set of consecutive rows…",7,[[["self"],["usize"]],[["matrixslicemut",["dynamic","dynamic"]],["dynamic"]]]],[11,"fixed_rows_mut","","Extracts a compile-time number of consecutive rows from…",7,[[["self"],["usize"]],[["matrixslicemut"],["dimname"]]]],[11,"fixed_rows_with_step_mut","","Extracts from this matrix a compile-time number of rows…",7,[[["self"],["usize"]],[["dimname"],["matrixslicemut",["dynamic"]],["dynamic"]]]],[11,"rows_generic_mut","","Extracts from this matrix `nrows` rows regularly skipping…",7,[[["self"],["usize"],["dim"]],[["matrixslicemut"],["dim"]]]],[11,"rows_generic_with_step_mut","","Extracts from this matrix `nrows` rows regularly skipping…",7,[[["usize"],["self"],["rslice"]],[["matrixslicemut",["dynamic"]],["dynamic"]]]],[11,"column_mut","","Returns a slice containing the i-th column of this matrix.",7,[[["self"],["usize"]],[["matrixslicemut",["u1"]],["u1"]]]],[11,"column_part_mut","","Returns a slice containing the `n` first elements of the…",7,[[["self"],["usize"]],[["u1"],["matrixslicemut",["dynamic","u1"]],["dynamic"]]]],[11,"columns_mut","","Extracts from this matrix a set of consecutive columns.",7,[[["self"],["usize"]],[["matrixslicemut",["dynamic"]],["dynamic"]]]],[11,"columns_with_step_mut","","Extracts from this matrix a set of consecutive columns…",7,[[["self"],["usize"]],[["dynamic"],["matrixslicemut",["dynamic","dynamic"]]]]],[11,"fixed_columns_mut","","Extracts a compile-time number of consecutive columns from…",7,[[["self"],["usize"]],[["matrixslicemut"],["dimname"]]]],[11,"fixed_columns_with_step_mut","","Extracts from this matrix a compile-time number of columns…",7,[[["self"],["usize"]],[["dynamic"],["matrixslicemut",["dynamic"]],["dimname"]]]],[11,"columns_generic_mut","","Extracts from this matrix `ncols` columns. The number of…",7,[[["self"],["usize"],["dim"]],[["matrixslicemut"],["dim"]]]],[11,"columns_generic_with_step_mut","","Extracts from this matrix `ncols` columns skipping `step`…",7,[[["usize"],["self"],["dim"]],[["dynamic"],["matrixslicemut",["dynamic"]],["dim"]]]],[11,"slice_mut","","Slices this matrix starting at its component `(irow,…",7,[[["self"]],[["matrixslicemut",["dynamic","dynamic"]],["dynamic"]]]],[11,"slice_with_steps_mut","","Slices this matrix starting at its component `(start.0,…",7,[[["self"]],[["dynamic"],["matrixslicemut",["dynamic","dynamic","dynamic","dynamic"]]]]],[11,"fixed_slice_mut","","Slices this matrix starting at its component `(irow,…",7,[[["self"],["usize"]],["matrixslicemut"]]],[11,"fixed_slice_with_steps_mut","","Slices this matrix starting at its component `(start.0,…",7,[[["self"]],[["matrixslicemut",["dynamic","dynamic"]],["dynamic"]]]],[11,"generic_slice_mut","","Creates a slice that may or may not have a fixed size and…",7,[[["self"]],["matrixslicemut"]]],[11,"generic_slice_with_steps_mut","","Creates a slice that may or may not have a fixed size and…",7,[[["self"]],[["matrixslicemut",["dynamic","dynamic"]],["dynamic"]]]],[11,"rows_range_pair_mut","","Splits this NxM matrix into two parts delimited by two…",7,[[["self"],["slicerange"]]]],[11,"columns_range_pair_mut","","Splits this NxM matrix into two parts delimited by two…",7,[[["self"],["slicerange"]]]],[11,"slice_range","","Slices a sub-matrix containing the rows indexed by the…",7,[[["colrange"],["self"],["rowrange"]],["matrixslice"]]],[11,"rows_range","","Slice containing all the rows indexed by the range `rows`.",7,[[["self"],["slicerange"]],["matrixslice"]]],[11,"columns_range","","Slice containing all the columns indexed by the range…",7,[[["self"],["slicerange"]],["matrixslice"]]],[11,"slice_range_mut","","Slices a mutable sub-matrix containing the rows indexed by…",7,[[["self"],["colrange"],["rowrange"]],["matrixslicemut"]]],[11,"rows_range_mut","","Slice containing all the rows indexed by the range `rows`.",7,[[["self"],["slicerange"]],["matrixslicemut"]]],[11,"columns_range_mut","","Slice containing all the columns indexed by the range…",7,[[["self"],["slicerange"]],["matrixslicemut"]]],[11,"norm_squared","","The squared L2 norm of this vector.",7,[[["self"]]]],[11,"norm","","The L2 norm of this matrix.",7,[[["self"]]]],[11,"metric_distance","","Compute the distance between `self` and `rhs` using the…",7,[[["self"],["matrix"]]]],[11,"apply_norm","","Uses the given `norm` to compute the norm of `self`.",7,[[["self"]]]],[11,"apply_metric_distance","","Uses the metric induced by the given `norm` to compute the…",7,[[["self"],["matrix"]]]],[11,"magnitude","","A synonym for the norm of this matrix.",7,[[["self"]]]],[11,"magnitude_squared","","A synonym for the squared norm of this matrix.",7,[[["self"]]]],[11,"set_magnitude","","Sets the magnitude of this vector.",7,[[["self"]]]],[11,"normalize","","Returns a normalized version of this matrix.",7,[[["self"]],["matrixmn"]]],[11,"lp_norm","","The Lp norm of this matrix.",7,[[["self"],["i32"]]]],[11,"simd_try_normalize","","Attempts to normalize `self`.",7,[[["self"]],[["matrixmn"],["simdoption",["matrixmn"]]]]],[11,"try_set_magnitude","","Sets the magnitude of this vector unless it is smaller…",7,[[["self"]]]],[11,"try_normalize","","Returns a normalized version of this matrix unless its…",7,[[["self"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"normalize_mut","","Normalizes this matrix in-place and returns its norm.",7,[[["self"]]]],[11,"simd_try_normalize_mut","","Normalizes this matrix in-place and return its norm.",7,[[["self"]],["simdoption"]]],[11,"try_normalize_mut","","Normalizes this matrix in-place or does nothing if its…",7,[[["self"]],["option"]]],[11,"orthonormalize","","Orthonormalizes the given family of vectors. The largest…",7,[[],["usize"]]],[11,"orthonormal_subspace_basis","","Applies the given closure to each element of the…",7,[[["f"]]]],[11,"is_empty","","Indicates if this is an empty matrix.",7,[[["self"]],["bool"]]],[11,"is_square","","Indicates if this is a square matrix.",7,[[["self"]],["bool"]]],[11,"is_identity","","Indicated if this is the identity matrix within a relative…",7,[[["self"]],["bool"]]],[11,"is_orthogonal","","Checks that `Mᵀ × M = Id`.",7,[[["self"]],["bool"]]],[11,"is_special_orthogonal","","Checks that this matrix is orthogonal and has a…",7,[[["self"],["n"]],["bool"]]],[11,"is_invertible","","Returns `true` if this matrix is invertible.",7,[[["self"]],["bool"]]],[11,"compress_rows","","Returns a row vector where each element is the result of…",7,[[["self"]],["rowvectorn"]]],[11,"compress_rows_tr","","Returns a column vector where each element is the result…",7,[[["self"]],["vectorn"]]],[11,"compress_columns","","Returns a column vector resulting from the folding of `f`…",7,[[["self"],["vectorn"]],["vectorn"]]],[11,"sum","","The sum of all the elements of this matrix.",7,[[["self"]],["n"]]],[11,"row_sum","","The sum of all the rows of this matrix.",7,[[["self"]],["rowvectorn"]]],[11,"row_sum_tr","","The sum of all the rows of this matrix. The result is…",7,[[["self"]],["vectorn"]]],[11,"column_sum","","The sum of all the columns of this matrix.",7,[[["self"]],["vectorn"]]],[11,"variance","","The variance of all the elements of this matrix.",7,[[["self"]],["n"]]],[11,"row_variance","","The variance of all the rows of this matrix.",7,[[["self"]],["rowvectorn"]]],[11,"row_variance_tr","","The variance of all the rows of this matrix. The result is…",7,[[["self"]],["vectorn"]]],[11,"column_variance","","The variance of all the columns of this matrix.",7,[[["self"]],["vectorn"]]],[11,"mean","","The mean of all the elements of this matrix.",7,[[["self"]],["n"]]],[11,"row_mean","","The mean of all the rows of this matrix.",7,[[["self"]],["rowvectorn"]]],[11,"row_mean_tr","","The mean of all the rows of this matrix. The result is…",7,[[["self"]],["vectorn"]]],[11,"column_mean","","The mean of all the columns of this matrix.",7,[[["self"]],["vectorn"]]],[11,"xx","","Builds a new vector from components of `self`.",7,[[["self"]],["vector2"]]],[11,"xxx","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"xy","","Builds a new vector from components of `self`.",7,[[["self"]],["vector2"]]],[11,"yx","","Builds a new vector from components of `self`.",7,[[["self"]],["vector2"]]],[11,"yy","","Builds a new vector from components of `self`.",7,[[["self"]],["vector2"]]],[11,"xxy","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"xyx","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"xyy","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"yxx","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"yxy","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"yyx","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"yyy","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"xz","","Builds a new vector from components of `self`.",7,[[["self"]],["vector2"]]],[11,"yz","","Builds a new vector from components of `self`.",7,[[["self"]],["vector2"]]],[11,"zx","","Builds a new vector from components of `self`.",7,[[["self"]],["vector2"]]],[11,"zy","","Builds a new vector from components of `self`.",7,[[["self"]],["vector2"]]],[11,"zz","","Builds a new vector from components of `self`.",7,[[["self"]],["vector2"]]],[11,"xxz","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"xyz","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"xzx","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"xzy","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"xzz","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"yxz","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"yyz","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"yzx","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"yzy","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"yzz","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"zxx","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"zxy","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"zxz","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"zyx","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"zyy","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"zyz","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"zzx","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"zzy","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"zzz","","Builds a new vector from components of `self`.",7,[[["self"]],["vector3"]]],[11,"new_normalize","","Normalize the given vector and return it wrapped on a…",69,[[["t"]],["self"]]],[11,"try_new","","Attempts to normalize the given vector and return it…",69,[[["t"]],["option"]]],[11,"new_and_get","","Normalize the given vector and return it wrapped on a…",69,[[["t"]]]],[11,"try_new_and_get","","Normalize the given vector and return it wrapped on a…",69,[[["t"]],["option"]]],[11,"renormalize","","Normalizes this vector again. This is useful when repeated…",69,[[["self"]]]],[11,"renormalize_fast","","Normalizes this vector again using a first-order Taylor…",69,[[["self"]]]],[11,"new_unchecked","","Wraps the given value, assuming it is already normalized.",69,[[["t"]],["self"]]],[11,"from_ref_unchecked","","Wraps the given reference, assuming it is already…",69,[[["t"]],["self"]]],[11,"into_inner","","Retrieves the underlying value.",69,[[],["t"]]],[11,"unwrap","","Retrieves the underlying value. Deprecated: use…",69,[[],["t"]]],[11,"as_mut_unchecked","","Returns a mutable reference to the underlying value. This…",69,[[["self"]],["t"]]],[11,"new","","Creates a new dynamic matrix data storage from the given…",72,[[["c"],["vec"],["r"]],["self"]]],[11,"as_vec","","The underlying data storage.",72,[[["self"]],["vec"]]],[11,"as_vec_mut","","The underlying mutable data storage.",72,[[["self"]],["vec"]]],[11,"resize","","Resizes the underlying mutable data storage and unwraps it.",72,[[["usize"]],["vec"]]],[11,"len","","The number of elements on the underlying vector.",72,[[["self"]],["usize"]]],[6,"SquareMatrix","","A square matrix.",null,null],[6,"Vector","","A matrix with one column and `D` rows.",null,null],[6,"RowVector","","A matrix with one row and `D` columns .",null,null],[6,"MatrixSum","","The type of the result of a matrix sum.",null,null],[6,"VectorSum","","The type of the result of a matrix sum.",null,null],[6,"MatrixCross","","The type of the result of a matrix cross product.",null,null],[6,"MatrixNM","","A statically sized column-major matrix with `R` rows and…",null,null],[6,"MatrixMN","","A statically sized column-major matrix with `R` rows and…",null,null],[6,"MatrixN","","A statically sized column-major square matrix with `D`…",null,null],[6,"DMatrix","","A dynamically sized column-major matrix.",null,null],[6,"Matrix1","","A stack-allocated, column-major, 1x1 square matrix.",null,null],[6,"Matrix2","","A stack-allocated, column-major, 2x2 square matrix.",null,null],[6,"Matrix3","","A stack-allocated, column-major, 3x3 square matrix.",null,null],[6,"Matrix4","","A stack-allocated, column-major, 4x4 square matrix.",null,null],[6,"Matrix5","","A stack-allocated, column-major, 5x5 square matrix.",null,null],[6,"Matrix6","","A stack-allocated, column-major, 6x6 square matrix.",null,null],[6,"Matrix1x2","","A stack-allocated, column-major, 1x2 matrix.",null,null],[6,"Matrix1x3","","A stack-allocated, column-major, 1x3 matrix.",null,null],[6,"Matrix1x4","","A stack-allocated, column-major, 1x4 matrix.",null,null],[6,"Matrix1x5","","A stack-allocated, column-major, 1x5 matrix.",null,null],[6,"Matrix1x6","","A stack-allocated, column-major, 1x6 matrix.",null,null],[6,"Matrix2x3","","A stack-allocated, column-major, 2x3 matrix.",null,null],[6,"Matrix2x4","","A stack-allocated, column-major, 2x4 matrix.",null,null],[6,"Matrix2x5","","A stack-allocated, column-major, 2x5 matrix.",null,null],[6,"Matrix2x6","","A stack-allocated, column-major, 2x6 matrix.",null,null],[6,"Matrix3x4","","A stack-allocated, column-major, 3x4 matrix.",null,null],[6,"Matrix3x5","","A stack-allocated, column-major, 3x5 matrix.",null,null],[6,"Matrix3x6","","A stack-allocated, column-major, 3x6 matrix.",null,null],[6,"Matrix4x5","","A stack-allocated, column-major, 4x5 matrix.",null,null],[6,"Matrix4x6","","A stack-allocated, column-major, 4x6 matrix.",null,null],[6,"Matrix5x6","","A stack-allocated, column-major, 5x6 matrix.",null,null],[6,"Matrix2x1","","A stack-allocated, column-major, 2x1 matrix.",null,null],[6,"Matrix3x1","","A stack-allocated, column-major, 3x1 matrix.",null,null],[6,"Matrix4x1","","A stack-allocated, column-major, 4x1 matrix.",null,null],[6,"Matrix5x1","","A stack-allocated, column-major, 5x1 matrix.",null,null],[6,"Matrix6x1","","A stack-allocated, column-major, 6x1 matrix.",null,null],[6,"Matrix3x2","","A stack-allocated, column-major, 3x2 matrix.",null,null],[6,"Matrix4x2","","A stack-allocated, column-major, 4x2 matrix.",null,null],[6,"Matrix5x2","","A stack-allocated, column-major, 5x2 matrix.",null,null],[6,"Matrix6x2","","A stack-allocated, column-major, 6x2 matrix.",null,null],[6,"Matrix4x3","","A stack-allocated, column-major, 4x3 matrix.",null,null],[6,"Matrix5x3","","A stack-allocated, column-major, 5x3 matrix.",null,null],[6,"Matrix6x3","","A stack-allocated, column-major, 6x3 matrix.",null,null],[6,"Matrix5x4","","A stack-allocated, column-major, 5x4 matrix.",null,null],[6,"Matrix6x4","","A stack-allocated, column-major, 6x4 matrix.",null,null],[6,"Matrix6x5","","A stack-allocated, column-major, 6x5 matrix.",null,null],[6,"DVector","","A dynamically sized column vector.",null,null],[6,"VectorN","","A statically sized D-dimensional column vector.",null,null],[6,"Vector1","","A stack-allocated, 1-dimensional column vector.",null,null],[6,"Vector2","","A stack-allocated, 2-dimensional column vector.",null,null],[6,"Vector3","","A stack-allocated, 3-dimensional column vector.",null,null],[6,"Vector4","","A stack-allocated, 4-dimensional column vector.",null,null],[6,"Vector5","","A stack-allocated, 5-dimensional column vector.",null,null],[6,"Vector6","","A stack-allocated, 6-dimensional column vector.",null,null],[6,"RowDVector","","A dynamically sized row vector.",null,null],[6,"RowVectorN","","A statically sized D-dimensional row vector.",null,null],[6,"RowVector1","","A stack-allocated, 1-dimensional row vector.",null,null],[6,"RowVector2","","A stack-allocated, 2-dimensional row vector.",null,null],[6,"RowVector3","","A stack-allocated, 3-dimensional row vector.",null,null],[6,"RowVector4","","A stack-allocated, 4-dimensional row vector.",null,null],[6,"RowVector5","","A stack-allocated, 5-dimensional row vector.",null,null],[6,"RowVector6","","A stack-allocated, 6-dimensional row vector.",null,null],[6,"MatrixSliceMN","","A column-major matrix slice with `R` rows and `C` columns.",null,null],[6,"MatrixSliceN","","A column-major matrix slice with `D` rows and columns.",null,null],[6,"DMatrixSlice","","A column-major matrix slice dynamic numbers of rows and…",null,null],[6,"MatrixSlice1","","A column-major 1x1 matrix slice.",null,null],[6,"MatrixSlice2","","A column-major 2x2 matrix slice.",null,null],[6,"MatrixSlice3","","A column-major 3x3 matrix slice.",null,null],[6,"MatrixSlice4","","A column-major 4x4 matrix slice.",null,null],[6,"MatrixSlice5","","A column-major 5x5 matrix slice.",null,null],[6,"MatrixSlice6","","A column-major 6x6 matrix slice.",null,null],[6,"MatrixSlice1x2","","A column-major 1x2 matrix slice.",null,null],[6,"MatrixSlice1x3","","A column-major 1x3 matrix slice.",null,null],[6,"MatrixSlice1x4","","A column-major 1x4 matrix slice.",null,null],[6,"MatrixSlice1x5","","A column-major 1x5 matrix slice.",null,null],[6,"MatrixSlice1x6","","A column-major 1x6 matrix slice.",null,null],[6,"MatrixSlice2x1","","A column-major 2x1 matrix slice.",null,null],[6,"MatrixSlice2x3","","A column-major 2x3 matrix slice.",null,null],[6,"MatrixSlice2x4","","A column-major 2x4 matrix slice.",null,null],[6,"MatrixSlice2x5","","A column-major 2x5 matrix slice.",null,null],[6,"MatrixSlice2x6","","A column-major 2x6 matrix slice.",null,null],[6,"MatrixSlice3x1","","A column-major 3x1 matrix slice.",null,null],[6,"MatrixSlice3x2","","A column-major 3x2 matrix slice.",null,null],[6,"MatrixSlice3x4","","A column-major 3x4 matrix slice.",null,null],[6,"MatrixSlice3x5","","A column-major 3x5 matrix slice.",null,null],[6,"MatrixSlice3x6","","A column-major 3x6 matrix slice.",null,null],[6,"MatrixSlice4x1","","A column-major 4x1 matrix slice.",null,null],[6,"MatrixSlice4x2","","A column-major 4x2 matrix slice.",null,null],[6,"MatrixSlice4x3","","A column-major 4x3 matrix slice.",null,null],[6,"MatrixSlice4x5","","A column-major 4x5 matrix slice.",null,null],[6,"MatrixSlice4x6","","A column-major 4x6 matrix slice.",null,null],[6,"MatrixSlice5x1","","A column-major 5x1 matrix slice.",null,null],[6,"MatrixSlice5x2","","A column-major 5x2 matrix slice.",null,null],[6,"MatrixSlice5x3","","A column-major 5x3 matrix slice.",null,null],[6,"MatrixSlice5x4","","A column-major 5x4 matrix slice.",null,null],[6,"MatrixSlice5x6","","A column-major 5x6 matrix slice.",null,null],[6,"MatrixSlice6x1","","A column-major 6x1 matrix slice.",null,null],[6,"MatrixSlice6x2","","A column-major 6x2 matrix slice.",null,null],[6,"MatrixSlice6x3","","A column-major 6x3 matrix slice.",null,null],[6,"MatrixSlice6x4","","A column-major 6x4 matrix slice.",null,null],[6,"MatrixSlice6x5","","A column-major 6x5 matrix slice.",null,null],[6,"MatrixSlice1xX","","A column-major matrix slice with 1 row and a number of…",null,null],[6,"MatrixSlice2xX","","A column-major matrix slice with 2 rows and a number of…",null,null],[6,"MatrixSlice3xX","","A column-major matrix slice with 3 rows and a number of…",null,null],[6,"MatrixSlice4xX","","A column-major matrix slice with 4 rows and a number of…",null,null],[6,"MatrixSlice5xX","","A column-major matrix slice with 5 rows and a number of…",null,null],[6,"MatrixSlice6xX","","A column-major matrix slice with 6 rows and a number of…",null,null],[6,"MatrixSliceXx1","","A column-major matrix slice with a number of rows chosen…",null,null],[6,"MatrixSliceXx2","","A column-major matrix slice with a number of rows chosen…",null,null],[6,"MatrixSliceXx3","","A column-major matrix slice with a number of rows chosen…",null,null],[6,"MatrixSliceXx4","","A column-major matrix slice with a number of rows chosen…",null,null],[6,"MatrixSliceXx5","","A column-major matrix slice with a number of rows chosen…",null,null],[6,"MatrixSliceXx6","","A column-major matrix slice with a number of rows chosen…",null,null],[6,"VectorSliceN","","A column vector slice with `D` rows.",null,null],[6,"DVectorSlice","","A column vector slice dynamic numbers of rows and columns.",null,null],[6,"VectorSlice1","","A 1D column vector slice.",null,null],[6,"VectorSlice2","","A 2D column vector slice.",null,null],[6,"VectorSlice3","","A 3D column vector slice.",null,null],[6,"VectorSlice4","","A 4D column vector slice.",null,null],[6,"VectorSlice5","","A 5D column vector slice.",null,null],[6,"VectorSlice6","","A 6D column vector slice.",null,null],[6,"MatrixSliceMutMN","","A column-major mutable matrix slice with `R` rows and `C`…",null,null],[6,"MatrixSliceMutN","","A column-major mutable matrix slice with `D` rows and…",null,null],[6,"DMatrixSliceMut","","A column-major mutable matrix slice dynamic numbers of…",null,null],[6,"MatrixSliceMut1","","A column-major 1x1 mutable matrix slice.",null,null],[6,"MatrixSliceMut2","","A column-major 2x2 mutable matrix slice.",null,null],[6,"MatrixSliceMut3","","A column-major 3x3 mutable matrix slice.",null,null],[6,"MatrixSliceMut4","","A column-major 4x4 mutable matrix slice.",null,null],[6,"MatrixSliceMut5","","A column-major 5x5 mutable matrix slice.",null,null],[6,"MatrixSliceMut6","","A column-major 6x6 mutable matrix slice.",null,null],[6,"MatrixSliceMut1x2","","A column-major 1x2 mutable matrix slice.",null,null],[6,"MatrixSliceMut1x3","","A column-major 1x3 mutable matrix slice.",null,null],[6,"MatrixSliceMut1x4","","A column-major 1x4 mutable matrix slice.",null,null],[6,"MatrixSliceMut1x5","","A column-major 1x5 mutable matrix slice.",null,null],[6,"MatrixSliceMut1x6","","A column-major 1x6 mutable matrix slice.",null,null],[6,"MatrixSliceMut2x1","","A column-major 2x1 mutable matrix slice.",null,null],[6,"MatrixSliceMut2x3","","A column-major 2x3 mutable matrix slice.",null,null],[6,"MatrixSliceMut2x4","","A column-major 2x4 mutable matrix slice.",null,null],[6,"MatrixSliceMut2x5","","A column-major 2x5 mutable matrix slice.",null,null],[6,"MatrixSliceMut2x6","","A column-major 2x6 mutable matrix slice.",null,null],[6,"MatrixSliceMut3x1","","A column-major 3x1 mutable matrix slice.",null,null],[6,"MatrixSliceMut3x2","","A column-major 3x2 mutable matrix slice.",null,null],[6,"MatrixSliceMut3x4","","A column-major 3x4 mutable matrix slice.",null,null],[6,"MatrixSliceMut3x5","","A column-major 3x5 mutable matrix slice.",null,null],[6,"MatrixSliceMut3x6","","A column-major 3x6 mutable matrix slice.",null,null],[6,"MatrixSliceMut4x1","","A column-major 4x1 mutable matrix slice.",null,null],[6,"MatrixSliceMut4x2","","A column-major 4x2 mutable matrix slice.",null,null],[6,"MatrixSliceMut4x3","","A column-major 4x3 mutable matrix slice.",null,null],[6,"MatrixSliceMut4x5","","A column-major 4x5 mutable matrix slice.",null,null],[6,"MatrixSliceMut4x6","","A column-major 4x6 mutable matrix slice.",null,null],[6,"MatrixSliceMut5x1","","A column-major 5x1 mutable matrix slice.",null,null],[6,"MatrixSliceMut5x2","","A column-major 5x2 mutable matrix slice.",null,null],[6,"MatrixSliceMut5x3","","A column-major 5x3 mutable matrix slice.",null,null],[6,"MatrixSliceMut5x4","","A column-major 5x4 mutable matrix slice.",null,null],[6,"MatrixSliceMut5x6","","A column-major 5x6 mutable matrix slice.",null,null],[6,"MatrixSliceMut6x1","","A column-major 6x1 mutable matrix slice.",null,null],[6,"MatrixSliceMut6x2","","A column-major 6x2 mutable matrix slice.",null,null],[6,"MatrixSliceMut6x3","","A column-major 6x3 mutable matrix slice.",null,null],[6,"MatrixSliceMut6x4","","A column-major 6x4 mutable matrix slice.",null,null],[6,"MatrixSliceMut6x5","","A column-major 6x5 mutable matrix slice.",null,null],[6,"MatrixSliceMut1xX","","A column-major mutable matrix slice with 1 row and a…",null,null],[6,"MatrixSliceMut2xX","","A column-major mutable matrix slice with 2 rows and a…",null,null],[6,"MatrixSliceMut3xX","","A column-major mutable matrix slice with 3 rows and a…",null,null],[6,"MatrixSliceMut4xX","","A column-major mutable matrix slice with 4 rows and a…",null,null],[6,"MatrixSliceMut5xX","","A column-major mutable matrix slice with 5 rows and a…",null,null],[6,"MatrixSliceMut6xX","","A column-major mutable matrix slice with 6 rows and a…",null,null],[6,"MatrixSliceMutXx1","","A column-major mutable matrix slice with a number of rows…",null,null],[6,"MatrixSliceMutXx2","","A column-major mutable matrix slice with a number of rows…",null,null],[6,"MatrixSliceMutXx3","","A column-major mutable matrix slice with a number of rows…",null,null],[6,"MatrixSliceMutXx4","","A column-major mutable matrix slice with a number of rows…",null,null],[6,"MatrixSliceMutXx5","","A column-major mutable matrix slice with a number of rows…",null,null],[6,"MatrixSliceMutXx6","","A column-major mutable matrix slice with a number of rows…",null,null],[6,"VectorSliceMutN","","A mutable column vector slice with `D` rows.",null,null],[6,"DVectorSliceMut","","A mutable column vector slice dynamic numbers of rows and…",null,null],[6,"VectorSliceMut1","","A 1D mutable column vector slice.",null,null],[6,"VectorSliceMut2","","A 2D mutable column vector slice.",null,null],[6,"VectorSliceMut3","","A 3D mutable column vector slice.",null,null],[6,"VectorSliceMut4","","A 4D mutable column vector slice.",null,null],[6,"VectorSliceMut5","","A 5D mutable column vector slice.",null,null],[6,"VectorSliceMut6","","A 6D mutable column vector slice.",null,null],[6,"MatrixArray","","Renamed to [ArrayStorage].",null,null],[6,"MatrixSlice","","A matrix slice.",null,null],[6,"MatrixSliceMut","","A matrix slice.",null,null],[6,"MatrixVec","","Renamed to [VecStorage].",null,null],[8,"Norm","","A trait for abstract matrix norms.",null,null],[10,"norm","","Apply this norm to the given matrix.",73,[[["self"],["matrix"]]]],[10,"metric_distance","","Use the metric induced by this norm to compute the metric…",73,[[["matrix"],["self"],["matrix"]]]],[8,"Scalar","","The basic scalar type for all structures of `nalgebra`.",null,null],[11,"is","","Tests if `Self` the same as the type `T`",74,[[],["bool"]]],[11,"inlined_clone","","Performance hack: Clone doesn't get inlined for Copy types…",74,[[["self"]],["self"]]],[8,"Normed","","Trait implemented by entities scan be be normalized and…",null,null],[16,"Norm","","The type of the norm.",75,null],[10,"norm","","Computes the norm.",75,[[["self"]]]],[10,"norm_squared","","Computes the squared norm.",75,[[["self"]]]],[10,"scale_mut","","Multiply `self` by n.",75,[[["self"]]]],[10,"unscale_mut","","Divides `self` by n.",75,[[["self"]]]],[8,"SliceRange","","A range with a size that may be known at compile-time.",null,null],[16,"Size","","Type of the range size. May be a type-level integer.",76,null],[10,"begin","","The start index of the range.",76,[[["d"],["self"]],["usize"]]],[10,"end","","The index immediately after the last index inside of the…",76,[[["d"],["self"]],["usize"]]],[10,"size","","The number of elements of the range, i.e., `self.end -…",76,[[["d"],["self"]]]],[0,"geometry","nalgebra","[Reexported at the root of this crate.] Data structures…",null,null],[3,"Point","nalgebra::geometry","A point in a n-dimensional euclidean space.",null,null],[12,"coords","","The coordinates of this point, i.e., the shift from the…",77,null],[3,"Rotation","","A rotation matrix.",null,null],[3,"Quaternion","","A quaternion. See the type alias `UnitQuaternion =…",null,null],[12,"coords","","This quaternion as a 4D vector of coordinates in the `[ x,…",78,null],[3,"Translation","","A translation.",null,null],[12,"vector","","The translation coordinates, i.e., how much is added to a…",79,null],[3,"Isometry","","A direct isometry, i.e., a rotation followed by a…",null,null],[12,"rotation","","The pure rotational part of this isometry.",80,null],[12,"translation","","The pure translational part of this isometry.",80,null],[3,"Similarity","","A similarity, i.e., an uniform scaling, followed by a…",null,null],[12,"isometry","","The part of this similarity that does not include the…",81,null],[3,"Transform","","A transformation matrix in homogeneous coordinates.",null,null],[3,"Reflection","","A reflection wrt. a plane.",null,null],[3,"Orthographic3","","A 3D orthographic projection stored as a homogeneous 4x4…",null,null],[3,"Perspective3","","A 3D perspective projection stored as a homogeneous 4x4…",null,null],[4,"TGeneral","","Tag representing the most general (not necessarily…",null,null],[4,"TProjective","","Tag representing the most general inversible `Transform`…",null,null],[4,"TAffine","","Tag representing an affine `Transform`. Its bottom-row is…",null,null],[11,"to_homogeneous","","Converts this point into a vector in homogeneous…",77,[[["self"]],[["dimnamesum",["u1"]],["vectorn",["dimnamesum"]]]]],[11,"from_coordinates","","Creates a new point with the given coordinates.",77,[[["vectorn"]],["self"]]],[11,"len","","The dimension of this point.",77,[[["self"]],["usize"]]],[11,"stride","","The stride of this point. This is the number of buffer…",77,[[["self"]],["usize"]]],[11,"iter","","Iterates through this point coordinates.",77,[[["self"]],[["u1"],["matrixiter",["u1"]]]]],[11,"get_unchecked","","Gets a reference to i-th element of this point without…",77,[[["self"],["usize"]],["n"]]],[11,"iter_mut","","Mutably iterates through this point coordinates.",77,[[["self"]],[["u1"],["matrixitermut",["u1"]]]]],[11,"get_unchecked_mut","","Gets a mutable reference to i-th element of this point…",77,[[["self"],["usize"]],["n"]]],[11,"swap_unchecked","","Swaps two entries without bound-checking.",77,[[["self"],["usize"]]]],[11,"inf","","Computes the infimum (aka. componentwise min) of two points.",77,[[["self"]],["point"]]],[11,"sup","","Computes the supremum (aka. componentwise max) of two…",77,[[["self"]],["point"]]],[11,"inf_sup","","Computes the (infimum, supremum) of two points.",77,[[["self"]]]],[11,"new_uninitialized","","Creates a new point with uninitialized coordinates.",77,[[],["self"]]],[11,"origin","","Creates a new point with all coordinates equal to zero.",77,[[],["self"]]],[11,"from_slice","","Creates a new point from a slice.",77,[[],["self"]]],[11,"from_homogeneous","","Creates a new point from its homogeneous vector…",77,[[["dimnamesum",["u1"]],["vectorn",["dimnamesum"]]],["option"]]],[11,"new","","Initializes this point from its components. # Example `#…",77,[[["n"]],["self"]]],[11,"new","","Initializes this point from its components. # Example `#…",77,[[["n"]],["self"]]],[11,"new","","Initializes this point from its components. # Example `#…",77,[[["n"]],["self"]]],[11,"new","","Initializes this point from its components. # Example `#…",77,[[["n"]],["self"]]],[11,"new","","Initializes this point from its components. # Example `#…",77,[[["n"]],["self"]]],[11,"new","","Initializes this point from its components. # Example `#…",77,[[["n"]],["self"]]],[11,"matrix","","A reference to the underlying matrix representation of…",82,[[["self"]],["matrixn"]]],[11,"matrix_mut","","A mutable reference to the underlying matrix…",82,[[["self"]],["matrixn"]]],[11,"matrix_mut_unchecked","","A mutable reference to the underlying matrix…",82,[[["self"]],["matrixn"]]],[11,"into_inner","","Unwraps the underlying matrix.",82,[[],["matrixn"]]],[11,"unwrap","","Unwraps the underlying matrix. Deprecated: Use…",82,[[],["matrixn"]]],[11,"to_homogeneous","","Converts this rotation into its equivalent homogeneous…",82,[[["self"]],[["dimnamesum",["u1"]],["matrixn",["dimnamesum"]]]]],[11,"from_matrix_unchecked","","Creates a new rotation from the given square matrix.",82,[[["matrixn"]],["self"]]],[11,"transpose","","Transposes `self`.",82,[[["self"]],["self"]]],[11,"inverse","","Inverts `self`.",82,[[["self"]],["self"]]],[11,"transpose_mut","","Transposes `self` in-place.",82,[[["self"]]]],[11,"inverse_mut","","Inverts `self` in-place.",82,[[["self"]]]],[11,"transform_point","","Rotate the given point.",82,[[["self"],["point"]],["point"]]],[11,"transform_vector","","Rotate the given vector.",82,[[["self"],["vectorn"]],["vectorn"]]],[11,"inverse_transform_point","","Rotate the given point by the inverse of this rotation.…",82,[[["self"],["point"]],["point"]]],[11,"inverse_transform_vector","","Rotate the given vector by the inverse of this rotation.…",82,[[["self"],["vectorn"]],["vectorn"]]],[11,"identity","","Creates a new square identity rotation of the given…",82,[[],["rotation"]]],[11,"new","","Builds a 2 dimensional rotation matrix from an angle in…",82,[[["n"]],["self"]]],[11,"from_scaled_axis","","Builds a 2 dimensional rotation matrix from an angle in…",82,[[["u1"],["vector",["u1"]],["storage",["u1"]]],["self"]]],[11,"from_matrix","","Builds a rotation matrix by extracting the rotation part…",82,[[["matrix2"]],["self"]]],[11,"from_matrix_eps","","Builds a rotation matrix by extracting the rotation part…",82,[[["matrix2"],["usize"],["n"]],["self"]]],[11,"rotation_between","","The rotation matrix required to align `a` and `b` but with…",82,[[["vector"],["vector"]],["self"]]],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear…",82,[[["n"],["vector"],["vector"]],["self"]]],[11,"angle","","The rotation angle.",82,[[["self"]],["n"]]],[11,"angle_to","","The rotation angle needed to make `self` and `other`…",82,[[["self"]],["n"]]],[11,"rotation_to","","The rotation matrix needed to make `self` and `other`…",82,[[["self"]],["self"]]],[11,"renormalize","","Ensure this rotation is an orthonormal rotation matrix.…",82,[[["self"]]]],[11,"powf","","Raise the quaternion to a given floating power, i.e.,…",82,[[["self"],["n"]],["self"]]],[11,"scaled_axis","","The rotation angle returned as a 1-dimensional vector.",82,[[["self"]],[["u1"],["vectorn",["u1"]]]]],[11,"new","","Builds a 3 dimensional rotation matrix from an axis and an…",82,[[["u3"],["vector",["u3"]],["storage",["u3"]]],["self"]]],[11,"from_matrix","","Builds a rotation matrix by extracting the rotation part…",82,[[["matrix3"]],["self"]]],[11,"from_matrix_eps","","Builds a rotation matrix by extracting the rotation part…",82,[[["matrix3"],["usize"],["n"]],["self"]]],[11,"from_scaled_axis","","Builds a 3D rotation matrix from an axis scaled by the…",82,[[["u3"],["vector",["u3"]],["storage",["u3"]]],["self"]]],[11,"from_axis_angle","","Builds a 3D rotation matrix from an axis and a rotation…",82,[[["unit"],["n"]],["self"]]],[11,"from_euler_angles","","Creates a new rotation from Euler angles.",82,[[["n"]],["self"]]],[11,"to_euler_angles","","Creates Euler angles from a rotation.",82,[[["self"]]]],[11,"euler_angles","","Euler angles corresponding to this rotation from a rotation.",82,[[["self"]]]],[11,"renormalize","","Ensure this rotation is an orthonormal rotation matrix.…",82,[[["self"]]]],[11,"face_towards","","Creates a rotation that corresponds to the local frame of…",82,[[["vector"],["vector"]],["self"]]],[11,"new_observer_frames","","Deprecated: Use [Rotation3::face_towards] instead.",82,[[["vector"],["vector"]],["self"]]],[11,"look_at_rh","","Builds a right-handed look-at view matrix without…",82,[[["vector"],["vector"]],["self"]]],[11,"look_at_lh","","Builds a left-handed look-at view matrix without…",82,[[["vector"],["vector"]],["self"]]],[11,"rotation_between","","The rotation matrix required to align `a` and `b` but with…",82,[[["vector"],["vector"]],["option"]]],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear…",82,[[["vector"],["vector"],["n"]],["option"]]],[11,"angle","","The rotation angle in [0; pi].",82,[[["self"]],["n"]]],[11,"axis","","The rotation axis. Returns `None` if the rotation angle is…",82,[[["self"]],[["unit",["vector3"]],["option",["unit"]]]]],[11,"scaled_axis","","The rotation axis multiplied by the rotation angle.",82,[[["self"]],["vector3"]]],[11,"axis_angle","","The rotation axis and angle in ]0, pi] of this unit…",82,[[["self"]],["option"]]],[11,"angle_to","","The rotation angle needed to make `self` and `other`…",82,[[["self"]],["n"]]],[11,"rotation_to","","The rotation matrix needed to make `self` and `other`…",82,[[["self"]],["self"]]],[11,"powf","","Raise the quaternion to a given floating power, i.e.,…",82,[[["self"],["n"]],["self"]]],[11,"into_owned","","Moves this unit quaternion into one that owns its data.",78,[[],["self"]]],[11,"clone_owned","","Clones this unit quaternion into one that owns its data.",78,[[["self"]],["self"]]],[11,"normalize","","Normalizes this quaternion.",78,[[["self"]],["self"]]],[11,"imag","","The imaginary part of this quaternion.",78,[[["self"]],["vector3"]]],[11,"conjugate","","The conjugate of this quaternion.",78,[[["self"]],["self"]]],[11,"lerp","","Linear interpolation between two quaternion.",78,[[["self"],["n"]],["self"]]],[11,"vector","","The vector part `(i, j, k)` of this quaternion.",78,[[["self"]],[["u3"],["u1"],["cstride",["u4","u1"]],["rstride",["u4","u1"]],["matrixslice",["u3","u1","rstride","cstride"]]]]],[11,"scalar","","The scalar part `w` of this quaternion.",78,[[["self"]],["n"]]],[11,"as_vector","","Reinterprets this quaternion as a 4D vector.",78,[[["self"]],["vector4"]]],[11,"norm","","The norm of this quaternion.",78,[[["self"]],["n"]]],[11,"magnitude","","A synonym for the norm of this quaternion.",78,[[["self"]],["n"]]],[11,"norm_squared","","The squared norm of this quaternion.",78,[[["self"]],["n"]]],[11,"magnitude_squared","","A synonym for the squared norm of this quaternion.",78,[[["self"]],["n"]]],[11,"dot","","The dot product of two quaternions.",78,[[["self"]],["n"]]],[11,"try_inverse","","Inverts this quaternion if it is not zero.",78,[[["self"]],["option"]]],[11,"simd_try_inverse","","Attempt to inverse this quaternion.",78,[[["self"]],["simdoption"]]],[11,"inner","","Calculates the inner product (also known as the dot…",78,[[["self"]],["self"]]],[11,"outer","","Calculates the outer product (also known as the wedge…",78,[[["self"]],["self"]]],[11,"project","","Calculates the projection of `self` onto `other` (also…",78,[[["self"]],["option"]]],[11,"reject","","Calculates the rejection of `self` from `other` (also…",78,[[["self"]],["option"]]],[11,"polar_decomposition","","The polar decomposition of this quaternion.",78,[[["self"]]]],[11,"ln","","Compute the natural logarithm of a quaternion.",78,[[["self"]],["self"]]],[11,"exp","","Compute the exponential of a quaternion.",78,[[["self"]],["self"]]],[11,"exp_eps","","Compute the exponential of a quaternion. Returns the…",78,[[["self"],["n"]],["self"]]],[11,"powf","","Raise the quaternion to a given floating power.",78,[[["self"],["n"]],["self"]]],[11,"as_vector_mut","","Transforms this quaternion into its 4D vector form (Vector…",78,[[["self"]],["vector4"]]],[11,"vector_mut","","The mutable vector part `(i, j, k)` of this quaternion.",78,[[["self"]],[["u3"],["u1"],["cstride",["u4","u1"]],["matrixslicemut",["u3","u1","rstride","cstride"]],["rstride",["u4","u1"]]]]],[11,"conjugate_mut","","Replaces this quaternion by its conjugate.",78,[[["self"]]]],[11,"try_inverse_mut","","Inverts this quaternion in-place if it is not zero.",78,[[["self"]]]],[11,"normalize_mut","","Normalizes this quaternion.",78,[[["self"]],["n"]]],[11,"squared","","Calculates square of a quaternion.",78,[[["self"]],["self"]]],[11,"half","","Divides quaternion into two.",78,[[["self"]],["self"]]],[11,"sqrt","","Calculates square root.",78,[[["self"]],["self"]]],[11,"is_pure","","Check if the quaternion is pure.",78,[[["self"]],["bool"]]],[11,"pure","","Convert quaternion to pure quaternion.",78,[[["self"]],["self"]]],[11,"left_div","","Left quaternionic division.",78,[[["self"]],["option"]]],[11,"right_div","","Right quaternionic division.",78,[[["self"]],["option"]]],[11,"cos","","Calculates the quaternionic cosinus.",78,[[["self"]],["self"]]],[11,"acos","","Calculates the quaternionic arccosinus.",78,[[["self"]],["self"]]],[11,"sin","","Calculates the quaternionic sinus.",78,[[["self"]],["self"]]],[11,"asin","","Calculates the quaternionic arcsinus.",78,[[["self"]],["self"]]],[11,"tan","","Calculates the quaternionic tangent.",78,[[["self"]],["self"]]],[11,"atan","","Calculates the quaternionic arctangent.",78,[[["self"]],["self"]]],[11,"sinh","","Calculates the hyperbolic quaternionic sinus.",78,[[["self"]],["self"]]],[11,"asinh","","Calculates the hyperbolic quaternionic arcsinus.",78,[[["self"]],["self"]]],[11,"cosh","","Calculates the hyperbolic quaternionic cosinus.",78,[[["self"]],["self"]]],[11,"acosh","","Calculates the hyperbolic quaternionic arccosinus.",78,[[["self"]],["self"]]],[11,"tanh","","Calculates the hyperbolic quaternionic tangent.",78,[[["self"]],["self"]]],[11,"atanh","","Calculates the hyperbolic quaternionic arctangent.",78,[[["self"]],["self"]]],[11,"angle","nalgebra::base","The rotation angle in [0; pi] of this unit quaternion.",69,[[["self"]],["n"]]],[11,"quaternion","","The underlying quaternion.",69,[[["self"]],["quaternion"]]],[11,"conjugate","","Compute the conjugate of this unit quaternion.",69,[[["self"]],["self"]]],[11,"inverse","","Inverts this quaternion if it is not zero.",69,[[["self"]],["self"]]],[11,"angle_to","","The rotation angle needed to make `self` and `other`…",69,[[["self"]],["n"]]],[11,"rotation_to","","The unit quaternion needed to make `self` and `other`…",69,[[["self"]],["self"]]],[11,"lerp","","Linear interpolation between two unit quaternions.",69,[[["self"],["n"]],["quaternion"]]],[11,"nlerp","","Normalized linear interpolation between two unit…",69,[[["self"],["n"]],["self"]]],[11,"slerp","","Spherical linear interpolation between two unit quaternions.",69,[[["self"],["n"]],["self"]]],[11,"try_slerp","","Computes the spherical linear interpolation between two…",69,[[["self"],["n"]],["option"]]],[11,"conjugate_mut","","Compute the conjugate of this unit quaternion in-place.",69,[[["self"]]]],[11,"inverse_mut","","Inverts this quaternion if it is not zero.",69,[[["self"]]]],[11,"axis","","The rotation axis of this unit quaternion or `None` if the…",69,[[["self"]],[["unit",["vector3"]],["option",["unit"]]]]],[11,"scaled_axis","","The rotation axis of this unit quaternion multiplied by…",69,[[["self"]],["vector3"]]],[11,"axis_angle","","The rotation axis and angle in ]0, pi] of this unit…",69,[[["self"]],["option"]]],[11,"exp","","Compute the exponential of a quaternion.",69,[[["self"]],["quaternion"]]],[11,"ln","","Compute the natural logarithm of a quaternion.",69,[[["self"]],["quaternion"]]],[11,"powf","","Raise the quaternion to a given floating power.",69,[[["self"],["n"]],["self"]]],[11,"to_rotation_matrix","","Builds a rotation matrix from this unit quaternion.",69,[[["self"]],[["rotation",["u3"]],["u3"]]]],[11,"to_euler_angles","","Converts this unit quaternion into its equivalent Euler…",69,[[["self"]]]],[11,"euler_angles","","Retrieves the euler angles corresponding to this unit…",69,[[["self"]]]],[11,"to_homogeneous","","Converts this unit quaternion into its equivalent…",69,[[["self"]],["matrix4"]]],[11,"transform_point","","Rotate a point by this unit quaternion.",69,[[["self"],["point3"]],["point3"]]],[11,"transform_vector","","Rotate a vector by this unit quaternion.",69,[[["self"],["vector3"]],["vector3"]]],[11,"inverse_transform_point","","Rotate a point by the inverse of this unit quaternion.…",69,[[["self"],["point3"]],["point3"]]],[11,"inverse_transform_vector","","Rotate a vector by the inverse of this unit quaternion.…",69,[[["self"],["vector3"]],["vector3"]]],[11,"from_vector","nalgebra::geometry","Creates a quaternion from a 4D vector. The quaternion…",78,[[["vector4"]],["self"]]],[11,"new","","Creates a new quaternion from its individual components.…",78,[[["n"]],["self"]]],[11,"from_imag","","Constructs a pure quaternion.",78,[[["vector3"]],["self"]]],[11,"from_parts","","Creates a new quaternion from its scalar and vector parts.…",78,[[["u3"],["vector",["u3"]],["n"]],["self"]]],[11,"from_real","","Constructs a real quaternion.",78,[[["n"]],["self"]]],[11,"identity","","The quaternion multiplicative identity.",78,[[],["self"]]],[11,"from_polar_decomposition","","Creates a new quaternion from its polar decomposition.",78,[[["vector",["u3"]],["unit",["vector"]],["n"]],["self"]]],[11,"identity","nalgebra::base","The rotation identity.",69,[[],["self"]]],[11,"from_axis_angle","","Creates a new quaternion from a unit vector (the rotation…",69,[[["unit"],["n"]],["self"]]],[11,"from_quaternion","","Creates a new unit quaternion from a quaternion.",69,[[["quaternion"]],["self"]]],[11,"from_euler_angles","","Creates a new unit quaternion from Euler angles.",69,[[["n"]],["self"]]],[11,"from_rotation_matrix","","Builds an unit quaternion from a rotation matrix.",69,[[["rotation3"]],["self"]]],[11,"from_matrix","","Builds an unit quaternion by extracting the rotation part…",69,[[["matrix3"]],["self"]]],[11,"from_matrix_eps","","Builds an unit quaternion by extracting the rotation part…",69,[[["matrix3"],["usize"],["n"]],["self"]]],[11,"rotation_between","","The unit quaternion needed to make `a` and `b` be…",69,[[["vector"],["vector"]],["option"]]],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear…",69,[[["vector"],["vector"],["n"]],["option"]]],[11,"rotation_between_axis","","The unit quaternion needed to make `a` and `b` be…",69,[[["unit"],["unit"]],["option"]]],[11,"scaled_rotation_between_axis","","The smallest rotation needed to make `a` and `b` collinear…",69,[[["unit"],["unit"],["n"]],["option"]]],[11,"face_towards","","Creates an unit quaternion that corresponds to the local…",69,[[["vector"],["vector"]],["self"]]],[11,"new_observer_frames","","Deprecated: Use [UnitQuaternion::face_towards] instead.",69,[[["vector"],["vector"]],["self"]]],[11,"look_at_rh","","Builds a right-handed look-at view matrix without…",69,[[["vector"],["vector"]],["self"]]],[11,"look_at_lh","","Builds a left-handed look-at view matrix without…",69,[[["vector"],["vector"]],["self"]]],[11,"new","","Creates a new unit quaternion rotation from a rotation…",69,[[["u3"],["vector",["u3"]]],["self"]]],[11,"new_eps","","Creates a new unit quaternion rotation from a rotation…",69,[[["u3"],["n"],["vector",["u3"]]],["self"]]],[11,"from_scaled_axis","","Creates a new unit quaternion rotation from a rotation…",69,[[["u3"],["vector",["u3"]]],["self"]]],[11,"from_scaled_axis_eps","","Creates a new unit quaternion rotation from a rotation…",69,[[["u3"],["n"],["vector",["u3"]]],["self"]]],[11,"mean_of","","Create the mean unit quaternion from a data structure…",69,[[],["self"]]],[11,"angle","","The rotation angle in `]-pi; pi]` of this unit complex…",69,[[["self"]],["n"]]],[11,"sin_angle","","The sine of the rotation angle.",69,[[["self"]],["n"]]],[11,"cos_angle","","The cosine of the rotation angle.",69,[[["self"]],["n"]]],[11,"scaled_axis","","The rotation angle returned as a 1-dimensional vector.",69,[[["self"]],["vector1"]]],[11,"axis_angle","","The rotation axis and angle in ]0, pi] of this complex…",69,[[["self"]],["option"]]],[11,"complex","","The underlying complex number.",69,[[["self"]],["complex"]]],[11,"conjugate","","Compute the conjugate of this unit complex number.",69,[[["self"]],["self"]]],[11,"inverse","","Inverts this complex number if it is not zero.",69,[[["self"]],["self"]]],[11,"angle_to","","The rotation angle needed to make `self` and `other`…",69,[[["self"]],["n"]]],[11,"rotation_to","","The unit complex number needed to make `self` and `other`…",69,[[["self"]],["self"]]],[11,"conjugate_mut","","Compute in-place the conjugate of this unit complex number.",69,[[["self"]]]],[11,"inverse_mut","","Inverts in-place this unit complex number.",69,[[["self"]]]],[11,"powf","","Raise this unit complex number to a given floating power.",69,[[["self"],["n"]],["self"]]],[11,"to_rotation_matrix","","Builds the rotation matrix corresponding to this unit…",69,[[["self"]],["rotation2"]]],[11,"to_homogeneous","","Converts this unit complex number into its equivalent…",69,[[["self"]],["matrix3"]]],[11,"transform_point","","Rotate the given point by this unit complex number.",69,[[["self"],["point2"]],["point2"]]],[11,"transform_vector","","Rotate the given vector by this unit complex number.",69,[[["self"],["vector2"]],["vector2"]]],[11,"inverse_transform_point","","Rotate the given point by the inverse of this unit complex…",69,[[["self"],["point2"]],["point2"]]],[11,"inverse_transform_vector","","Rotate the given vector by the inverse of this unit…",69,[[["self"],["vector2"]],["vector2"]]],[11,"identity","","The unit complex number multiplicative identity.",69,[[],["self"]]],[11,"new","","Builds the unit complex number corresponding to the…",69,[[["n"]],["self"]]],[11,"from_angle","","Builds the unit complex number corresponding to the…",69,[[["n"]],["self"]]],[11,"from_cos_sin_unchecked","","Builds the unit complex number from the sinus and cosinus…",69,[[["n"]],["self"]]],[11,"from_scaled_axis","","Builds a unit complex rotation from an angle in radian…",69,[[["u1"],["vector",["u1"]],["storage",["u1"]]],["self"]]],[11,"from_complex","","Creates a new unit complex number from a complex number.",69,[[["complex"]],["self"]]],[11,"from_complex_and_get","","Creates a new unit complex number from a complex number.",69,[[["complex"]]]],[11,"from_rotation_matrix","","Builds the unit complex number from the corresponding 2D…",69,[[["rotation2"]],["self"]]],[11,"from_matrix","","Builds an unit complex by extracting the rotation part of…",69,[[["matrix2"]],["self"]]],[11,"from_matrix_eps","","Builds an unit complex by extracting the rotation part of…",69,[[["matrix2"],["usize"],["n"]],["self"]]],[11,"rotation_between","","The unit complex needed to make `a` and `b` be collinear…",69,[[["vector"],["vector"]],["self"]]],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear…",69,[[["n"],["vector"],["vector"]],["self"]]],[11,"rotation_between_axis","","The unit complex needed to make `a` and `b` be collinear…",69,[[["unit"],["unit"]],["self"]]],[11,"scaled_rotation_between_axis","","The smallest rotation needed to make `a` and `b` collinear…",69,[[["n"],["unit"],["unit"]],["self"]]],[11,"from_vector","nalgebra::geometry","Creates a new translation from the given vector.",79,[[["vectorn"]],["translation"]]],[11,"inverse","","Inverts `self`.",79,[[["self"]],["translation"]]],[11,"to_homogeneous","","Converts this translation into its equivalent homogeneous…",79,[[["self"]],[["dimnamesum",["u1"]],["matrixn",["dimnamesum"]]]]],[11,"inverse_mut","","Inverts `self` in-place.",79,[[["self"]]]],[11,"transform_point","","Translate the given point.",79,[[["self"],["point"]],["point"]]],[11,"inverse_transform_point","","Translate the given point by the inverse of this…",79,[[["self"],["point"]],["point"]]],[11,"identity","","Creates a new identity translation.",79,[[],["translation"]]],[11,"new","","Initializes this translation from its components. #…",79,[[["n"]],["self"]]],[11,"new","","Initializes this translation from its components. #…",79,[[["n"]],["self"]]],[11,"new","","Initializes this translation from its components. #…",79,[[["n"]],["self"]]],[11,"new","","Initializes this translation from its components. #…",79,[[["n"]],["self"]]],[11,"new","","Initializes this translation from its components. #…",79,[[["n"]],["self"]]],[11,"new","","Initializes this translation from its components. #…",79,[[["n"]],["self"]]],[11,"from_parts","","Creates a new isometry from its rotational and…",80,[[["translation"],["r"]],["self"]]],[11,"inverse","","Inverts `self`.",80,[[["self"]],["self"]]],[11,"inverse_mut","","Inverts `self` in-place.",80,[[["self"]]]],[11,"append_translation_mut","","Appends to `self` the given translation in-place.",80,[[["self"],["translation"]]]],[11,"append_rotation_mut","","Appends to `self` the given rotation in-place.",80,[[["self"],["r"]]]],[11,"append_rotation_wrt_point_mut","","Appends in-place to `self` a rotation centered at the…",80,[[["self"],["r"],["point"]]]],[11,"append_rotation_wrt_center_mut","","Appends in-place to `self` a rotation centered at the…",80,[[["self"],["r"]]]],[11,"transform_point","","Transform the given point by this isometry.",80,[[["self"],["point"]],["point"]]],[11,"transform_vector","","Transform the given vector by this isometry, ignoring the…",80,[[["self"],["vectorn"]],["vectorn"]]],[11,"inverse_transform_point","","Transform the given point by the inverse of this isometry.…",80,[[["self"],["point"]],["point"]]],[11,"inverse_transform_vector","","Transform the given vector by the inverse of this…",80,[[["self"],["vectorn"]],["vectorn"]]],[11,"to_homogeneous","","Converts this isometry into its equivalent homogeneous…",80,[[["self"]],[["dimnamesum",["u1"]],["matrixn",["dimnamesum"]]]]],[11,"identity","","Creates a new identity isometry.",80,[[],["self"]]],[11,"rotation_wrt_point","","The isometry that applies the rotation `r` with its axis…",80,[[["point"],["r"]],["self"]]],[11,"new","","Creates a new 2D isometry from a translation and a…",80,[[["n"],["vector2"]],["self"]]],[11,"translation","","Creates a new isometry from the given translation…",80,[[["n"]],["self"]]],[11,"rotation","","Creates a new isometry from the given rotation angle.",80,[[["n"]],["self"]]],[11,"new","","Creates a new 2D isometry from a translation and a…",80,[[["n"],["vector2"]],["self"]]],[11,"translation","","Creates a new isometry from the given translation…",80,[[["n"]],["self"]]],[11,"rotation","","Creates a new isometry from the given rotation angle.",80,[[["n"]],["self"]]],[11,"new","","Creates a new isometry from a translation and a rotation…",80,[[["vector3"]],["self"]]],[11,"translation","","Creates a new isometry from the given translation…",80,[[["n"]],["self"]]],[11,"rotation","","Creates a new isometry from the given rotation angle.",80,[[["vector3"]],["self"]]],[11,"face_towards","","Creates an isometry that corresponds to the local frame of…",80,[[["vector3"],["point3"]],["self"]]],[11,"new_observer_frame","","Deprecated: Use [Isometry::face_towards] instead.",80,[[["vector3"],["point3"]],["self"]]],[11,"look_at_rh","","Builds a right-handed look-at view matrix.",80,[[["vector3"],["point3"]],["self"]]],[11,"look_at_lh","","Builds a left-handed look-at view matrix.",80,[[["vector3"],["point3"]],["self"]]],[11,"new","","Creates a new isometry from a translation and a rotation…",80,[[["vector3"]],["self"]]],[11,"translation","","Creates a new isometry from the given translation…",80,[[["n"]],["self"]]],[11,"rotation","","Creates a new isometry from the given rotation angle.",80,[[["vector3"]],["self"]]],[11,"face_towards","","Creates an isometry that corresponds to the local frame of…",80,[[["vector3"],["point3"]],["self"]]],[11,"new_observer_frame","","Deprecated: Use [Isometry::face_towards] instead.",80,[[["vector3"],["point3"]],["self"]]],[11,"look_at_rh","","Builds a right-handed look-at view matrix.",80,[[["vector3"],["point3"]],["self"]]],[11,"look_at_lh","","Builds a left-handed look-at view matrix.",80,[[["vector3"],["point3"]],["self"]]],[11,"from_parts","","Creates a new similarity from its rotational and…",81,[[["translation"],["n"],["r"]],["self"]]],[11,"from_isometry","","Creates a new similarity from its rotational and…",81,[[["isometry"],["n"]],["self"]]],[11,"set_scaling","","The scaling factor of this similarity transformation.",81,[[["self"],["n"]]]],[11,"scaling","","The scaling factor of this similarity transformation.",81,[[["self"]],["n"]]],[11,"from_scaling","","Creates a new similarity that applies only a scaling factor.",81,[[["n"]],["self"]]],[11,"inverse","","Inverts `self`.",81,[[["self"]],["self"]]],[11,"inverse_mut","","Inverts `self` in-place.",81,[[["self"]]]],[11,"prepend_scaling","","The similarity transformation that applies a scaling…",81,[[["self"],["n"]],["self"]]],[11,"append_scaling","","The similarity transformation that applies a scaling…",81,[[["self"],["n"]],["self"]]],[11,"prepend_scaling_mut","","Sets `self` to the similarity transformation that applies…",81,[[["self"],["n"]]]],[11,"append_scaling_mut","","Sets `self` to the similarity transformation that applies…",81,[[["self"],["n"]]]],[11,"append_translation_mut","","Appends to `self` the given translation in-place.",81,[[["self"],["translation"]]]],[11,"append_rotation_mut","","Appends to `self` the given rotation in-place.",81,[[["self"],["r"]]]],[11,"append_rotation_wrt_point_mut","","Appends in-place to `self` a rotation centered at the…",81,[[["self"],["r"],["point"]]]],[11,"append_rotation_wrt_center_mut","","Appends in-place to `self` a rotation centered at the…",81,[[["self"],["r"]]]],[11,"transform_point","","Transform the given point by this similarity.",81,[[["self"],["point"]],["point"]]],[11,"transform_vector","","Transform the given vector by this similarity, ignoring…",81,[[["self"],["vectorn"]],["vectorn"]]],[11,"inverse_transform_point","","Transform the given point by the inverse of this…",81,[[["self"],["point"]],["point"]]],[11,"inverse_transform_vector","","Transform the given vector by the inverse of this…",81,[[["self"],["vectorn"]],["vectorn"]]],[11,"to_homogeneous","","Converts this similarity into its equivalent homogeneous…",81,[[["self"]],[["dimnamesum",["u1"]],["matrixn",["dimnamesum"]]]]],[11,"identity","","Creates a new identity similarity.",81,[[],["self"]]],[11,"rotation_wrt_point","","The similarity that applies the scaling factor `scaling`,…",81,[[["n"],["point"],["r"]],["self"]]],[11,"new","","Creates a new similarity from a translation, a rotation,…",81,[[["n"],["vector2"]],["self"]]],[11,"new","","Creates a new similarity from a translation and a rotation…",81,[[["n"],["vector2"]],["self"]]],[11,"new","","Creates a new similarity from a translation, rotation…",81,[[["vector3"],["n"]],["self"]]],[11,"face_towards","","Creates an similarity that corresponds to a scaling factor…",81,[[["vector3"],["n"],["point3"]],["self"]]],[11,"new_observer_frames","","Deprecated: Use [SimilarityMatrix3::face_towards] instead.",81,[[["vector3"],["n"],["point3"]],["self"]]],[11,"look_at_rh","","Builds a right-handed look-at view matrix including…",81,[[["vector3"],["n"],["point3"]],["self"]]],[11,"look_at_lh","","Builds a left-handed look-at view matrix including a…",81,[[["vector3"],["n"],["point3"]],["self"]]],[11,"new","","Creates a new similarity from a translation, rotation…",81,[[["vector3"],["n"]],["self"]]],[11,"face_towards","","Creates an similarity that corresponds to a scaling factor…",81,[[["vector3"],["n"],["point3"]],["self"]]],[11,"new_observer_frames","","Deprecated: Use [SimilarityMatrix3::face_towards] instead.",81,[[["vector3"],["n"],["point3"]],["self"]]],[11,"look_at_rh","","Builds a right-handed look-at view matrix including…",81,[[["vector3"],["n"],["point3"]],["self"]]],[11,"look_at_lh","","Builds a left-handed look-at view matrix including a…",81,[[["vector3"],["n"],["point3"]],["self"]]],[11,"xx","","Builds a new point from components of `self`.",77,[[["self"]],["point2"]]],[11,"xxx","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"xy","","Builds a new point from components of `self`.",77,[[["self"]],["point2"]]],[11,"yx","","Builds a new point from components of `self`.",77,[[["self"]],["point2"]]],[11,"yy","","Builds a new point from components of `self`.",77,[[["self"]],["point2"]]],[11,"xxy","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"xyx","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"xyy","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"yxx","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"yxy","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"yyx","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"yyy","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"xz","","Builds a new point from components of `self`.",77,[[["self"]],["point2"]]],[11,"yz","","Builds a new point from components of `self`.",77,[[["self"]],["point2"]]],[11,"zx","","Builds a new point from components of `self`.",77,[[["self"]],["point2"]]],[11,"zy","","Builds a new point from components of `self`.",77,[[["self"]],["point2"]]],[11,"zz","","Builds a new point from components of `self`.",77,[[["self"]],["point2"]]],[11,"xxz","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"xyz","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"xzx","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"xzy","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"xzz","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"yxz","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"yyz","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"yzx","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"yzy","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"yzz","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"zxx","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"zxy","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"zxz","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"zyx","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"zyy","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"zyz","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"zzx","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"zzy","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"zzz","","Builds a new point from components of `self`.",77,[[["self"]],["point3"]]],[11,"from_matrix_unchecked","","Creates a new transformation from the given homogeneous…",83,[[["dimnamesum",["u1"]],["matrixn",["dimnamesum"]]],["self"]]],[11,"into_inner","","Retrieves the underlying matrix.",83,[[],[["dimnamesum",["u1"]],["matrixn",["dimnamesum"]]]]],[11,"unwrap","","Retrieves the underlying matrix. Deprecated: Use…",83,[[],[["dimnamesum",["u1"]],["matrixn",["dimnamesum"]]]]],[11,"matrix","","A reference to the underlying matrix.",83,[[["self"]],["matrixn"]]],[11,"matrix_mut_unchecked","","A mutable reference to the underlying matrix.",83,[[["self"]],["matrixn"]]],[11,"set_category","","Sets the category of this transform.",83,[[],[["transform"],["supertcategoryof"]]]],[11,"clone_owned","","Clones this transform into one that owns its data.",83,[[["self"]],["transform"]]],[11,"to_homogeneous","","Converts this transform into its equivalent homogeneous…",83,[[["self"]],[["dimnamesum",["u1"]],["matrixn",["dimnamesum"]]]]],[11,"try_inverse","","Attempts to invert this transformation. You may use…",83,[[],[["option",["transform"]],["transform"]]]],[11,"inverse","","Inverts this transformation. Use `.try_inverse` if this…",83,[[],["transform"]]],[11,"try_inverse_mut","","Attempts to invert this transformation in-place. You may…",83,[[["self"]],["bool"]]],[11,"inverse_mut","","Inverts this transformation in-place. Use…",83,[[["self"]]]],[11,"transform_point","","Transform the given point by this transformation.",83,[[["self"],["point"]],["point"]]],[11,"transform_vector","","Transform the given vector by this transformation,…",83,[[["self"],["vectorn"]],["vectorn"]]],[11,"inverse_transform_point","","Transform the given point by the inverse of this…",83,[[["self"],["point"]],["point"]]],[11,"inverse_transform_vector","","Transform the given vector by the inverse of this…",83,[[["self"],["vectorn"]],["vectorn"]]],[11,"matrix_mut","","A mutable reference to underlying matrix. Use…",83,[[["self"]],["matrixn"]]],[11,"identity","","Creates a new identity transform.",83,[[],["self"]]],[11,"new","","Creates a new reflection wrt the plane orthogonal to the…",84,[[["vector"],["unit",["vector"]],["n"]],["self"]]],[11,"new_containing_point","","Creates a new reflection wrt. the plane orthogonal to the…",84,[[["vector"],["unit",["vector"]],["point"]],["self"]]],[11,"axis","","The reflexion axis.",84,[[["self"]],["vector"]]],[11,"reflect","","Applies the reflection to the columns of `rhs`.",84,[[["matrix"],["self"]]]],[11,"reflect_with_sign","","Applies the reflection to the columns of `rhs`.",84,[[["matrix"],["self"],["n"]]]],[11,"reflect_rows","","Applies the reflection to the rows of `lhs`.",84,[[["matrix"],["self"],["vector"]]]],[11,"reflect_rows_with_sign","","Applies the reflection to the rows of `lhs`.",84,[[["n"],["matrix"],["self"],["vector"]]]],[11,"new","","Creates a new orthographic projection matrix.",85,[[["n"]],["self"]]],[11,"from_matrix_unchecked","","Wraps the given matrix to interpret it as a 3D…",85,[[["matrix4"]],["self"]]],[11,"from_fov","","Creates a new orthographic projection matrix from an…",85,[[["n"]],["self"]]],[11,"inverse","","Retrieves the inverse of the underlying homogeneous matrix.",85,[[["self"]],["matrix4"]]],[11,"to_homogeneous","","Computes the corresponding homogeneous matrix.",85,[[["self"]],["matrix4"]]],[11,"as_matrix","","A reference to the underlying homogeneous transformation…",85,[[["self"]],["matrix4"]]],[11,"as_projective","","A reference to this transformation seen as a `Projective3`.",85,[[["self"]],["projective3"]]],[11,"to_projective","","This transformation seen as a `Projective3`.",85,[[["self"]],["projective3"]]],[11,"into_inner","","Retrieves the underlying homogeneous matrix.",85,[[],["matrix4"]]],[11,"unwrap","","Retrieves the underlying homogeneous matrix. Deprecated:…",85,[[],["matrix4"]]],[11,"left","","The left offset of the view cuboid.",85,[[["self"]],["n"]]],[11,"right","","The right offset of the view cuboid.",85,[[["self"]],["n"]]],[11,"bottom","","The bottom offset of the view cuboid.",85,[[["self"]],["n"]]],[11,"top","","The top offset of the view cuboid.",85,[[["self"]],["n"]]],[11,"znear","","The near plane offset of the view cuboid.",85,[[["self"]],["n"]]],[11,"zfar","","The far plane offset of the view cuboid.",85,[[["self"]],["n"]]],[11,"project_point","","Projects a point. Faster than matrix multiplication.",85,[[["self"],["point3"]],["point3"]]],[11,"unproject_point","","Un-projects a point. Faster than multiplication by the…",85,[[["self"],["point3"]],["point3"]]],[11,"project_vector","","Projects a vector. Faster than matrix multiplication.",85,[[["vector"],["self"]],["vector3"]]],[11,"set_left","","Sets the left offset of the view cuboid.",85,[[["self"],["n"]]]],[11,"set_right","","Sets the right offset of the view cuboid.",85,[[["self"],["n"]]]],[11,"set_bottom","","Sets the bottom offset of the view cuboid.",85,[[["self"],["n"]]]],[11,"set_top","","Sets the top offset of the view cuboid.",85,[[["self"],["n"]]]],[11,"set_znear","","Sets the near plane offset of the view cuboid.",85,[[["self"],["n"]]]],[11,"set_zfar","","Sets the far plane offset of the view cuboid.",85,[[["self"],["n"]]]],[11,"set_left_and_right","","Sets the view cuboid offsets along the `x` axis.",85,[[["self"],["n"]]]],[11,"set_bottom_and_top","","Sets the view cuboid offsets along the `y` axis.",85,[[["self"],["n"]]]],[11,"set_znear_and_zfar","","Sets the near and far plane offsets of the view cuboid.",85,[[["self"],["n"]]]],[11,"new","","Creates a new perspective matrix from the aspect ratio, y…",86,[[["n"]],["self"]]],[11,"from_matrix_unchecked","","Wraps the given matrix to interpret it as a 3D perspective…",86,[[["matrix4"]],["self"]]],[11,"inverse","","Retrieves the inverse of the underlying homogeneous matrix.",86,[[["self"]],["matrix4"]]],[11,"to_homogeneous","","Computes the corresponding homogeneous matrix.",86,[[["self"]],["matrix4"]]],[11,"as_matrix","","A reference to the underlying homogeneous transformation…",86,[[["self"]],["matrix4"]]],[11,"as_projective","","A reference to this transformation seen as a `Projective3`.",86,[[["self"]],["projective3"]]],[11,"to_projective","","This transformation seen as a `Projective3`.",86,[[["self"]],["projective3"]]],[11,"into_inner","","Retrieves the underlying homogeneous matrix.",86,[[],["matrix4"]]],[11,"unwrap","","Retrieves the underlying homogeneous matrix. Deprecated:…",86,[[],["matrix4"]]],[11,"aspect","","Gets the `width / height` aspect ratio of the view frustum.",86,[[["self"]],["n"]]],[11,"fovy","","Gets the y field of view of the view frustum.",86,[[["self"]],["n"]]],[11,"znear","","Gets the near plane offset of the view frustum.",86,[[["self"]],["n"]]],[11,"zfar","","Gets the far plane offset of the view frustum.",86,[[["self"]],["n"]]],[11,"project_point","","Projects a point. Faster than matrix multiplication.",86,[[["self"],["point3"]],["point3"]]],[11,"unproject_point","","Un-projects a point. Faster than multiplication by the…",86,[[["self"],["point3"]],["point3"]]],[11,"project_vector","","Projects a vector. Faster than matrix multiplication.",86,[[["vector"],["self"]],["vector3"]]],[11,"set_aspect","","Updates this perspective matrix with a new `width /…",86,[[["self"],["n"]]]],[11,"set_fovy","","Updates this perspective with a new y field of view of the…",86,[[["self"],["n"]]]],[11,"set_znear","","Updates this perspective matrix with a new near plane…",86,[[["self"],["n"]]]],[11,"set_zfar","","Updates this perspective matrix with a new far plane…",86,[[["self"],["n"]]]],[11,"set_znear_and_zfar","","Updates this perspective matrix with new near and far…",86,[[["self"],["n"]]]],[6,"Point1","","A statically sized 1-dimensional column point.",null,null],[6,"Point2","","A statically sized 2-dimensional column point.",null,null],[6,"Point3","","A statically sized 3-dimensional column point.",null,null],[6,"Point4","","A statically sized 4-dimensional column point.",null,null],[6,"Point5","","A statically sized 5-dimensional column point.",null,null],[6,"Point6","","A statically sized 6-dimensional column point.",null,null],[6,"Rotation2","","A 2-dimensional rotation matrix.",null,null],[6,"Rotation3","","A 3-dimensional rotation matrix.",null,null],[6,"UnitQuaternion","","A unit quaternions. May be used to represent a rotation.",null,null],[6,"UnitComplex","","A complex number with a norm equal to 1.",null,null],[6,"Translation1","","A 1-dimensional translation.",null,null],[6,"Translation2","","A 2-dimensional translation.",null,null],[6,"Translation3","","A 3-dimensional translation.",null,null],[6,"Translation4","","A 4-dimensional translation.",null,null],[6,"Translation5","","A 5-dimensional translation.",null,null],[6,"Translation6","","A 6-dimensional translation.",null,null],[6,"Isometry2","","A 2-dimensional direct isometry using a unit complex…",null,null],[6,"Isometry3","","A 3-dimensional direct isometry using a unit quaternion…",null,null],[6,"IsometryMatrix2","","A 2-dimensional direct isometry using a rotation matrix…",null,null],[6,"IsometryMatrix3","","A 3-dimensional direct isometry using a rotation matrix…",null,null],[6,"Similarity2","","A 2-dimensional similarity.",null,null],[6,"Similarity3","","A 3-dimensional similarity.",null,null],[6,"SimilarityMatrix2","","A 2-dimensional similarity using a rotation matrix for its…",null,null],[6,"SimilarityMatrix3","","A 3-dimensional similarity using a rotation matrix for its…",null,null],[6,"Transform2","","A 2D general transformation that may not be invertible.…",null,null],[6,"Projective2","","An invertible 2D general transformation. Stored as a…",null,null],[6,"Affine2","","A 2D affine transformation. Stored as a homogeneous 3x3…",null,null],[6,"Transform3","","A 3D general transformation that may not be inversible.…",null,null],[6,"Projective3","","An invertible 3D general transformation. Stored as a…",null,null],[6,"Affine3","","A 3D affine transformation. Stored as a homogeneous 4x4…",null,null],[8,"AbstractRotation","","Trait implemented by rotations that can be used inside of…",null,null],[10,"identity","","The rotation identity.",87,[[],["self"]]],[10,"inverse","","The rotation inverse.",87,[[["self"]],["self"]]],[10,"inverse_mut","","Change `self` to its inverse.",87,[[["self"]]]],[10,"transform_vector","","Apply the rotation to the given vector.",87,[[["self"],["vectorn"]],["vectorn"]]],[10,"transform_point","","Apply the rotation to the given point.",87,[[["self"],["point"]],["point"]]],[10,"inverse_transform_vector","","Apply the inverse rotation to the given vector.",87,[[["self"],["vectorn"]],["vectorn"]]],[10,"inverse_transform_point","","Apply the inverse rotation to the given point.",87,[[["self"],["point"]],["point"]]],[8,"TCategory","","Trait implemented by phantom types identifying the…",null,null],[11,"has_normalizer","","Indicates whether a `Transform` with the category `Self`…",88,[[],["bool"]]],[10,"check_homogeneous_invariants","","Checks that the given matrix is a valid homogeneous…",88,[[["matrixn"]],["bool"]]],[8,"TCategoryMul","","Traits that gives the `Transform` category that is…",null,null],[16,"Representative","","The transform category that results from the…",89,null],[8,"SuperTCategoryOf","","Indicates that `Self` is a more general `Transform`…",null,null],[8,"SubTCategoryOf","","Indicates that `Self` is a more specific `Transform`…",null,null],[0,"linalg","nalgebra","[Reexported at the root of this crate.] Factorization of…",null,null],[3,"Bidiagonal","nalgebra::linalg","The bidiagonalization of a general matrix.",null,null],[3,"Cholesky","","The Cholesky decomposition of a…",null,null],[3,"FullPivLU","","LU decomposition with full row and column pivoting.",null,null],[3,"Hessenberg","","Hessenberg decomposition of a general matrix.",null,null],[3,"LU","","LU decomposition with partial (row) pivoting.",null,null],[3,"PermutationSequence","","A sequence of row or column permutations.",null,null],[3,"QR","","The QR decomposition of a general matrix.",null,null],[3,"Schur","","Schur decomposition of a square matrix.",null,null],[3,"SVD","","Singular Value Decomposition of a general matrix.",null,null],[12,"u","","The left-singular vectors `U` of this SVD.",90,null],[12,"v_t","","The right-singular vectors `V^t` of this SVD.",90,null],[12,"singular_values","","The singular values of this SVD.",90,null],[3,"SymmetricEigen","","Eigendecomposition of a symmetric matrix.",null,null],[12,"eigenvectors","","The eigenvectors of the decomposed matrix.",91,null],[12,"eigenvalues","","The unsorted eigenvalues of the decomposed matrix.",91,null],[3,"SymmetricTridiagonal","","Tridiagonalization of a symmetric matrix.",null,null],[5,"try_invert_to","","Performs a LU decomposition to overwrite `out` with the…",null,[[["matrix"],["matrixn"],["complexfield"],["dim"]],["bool"]]],[5,"wilkinson_shift","","Computes the wilkinson shift, i.e., the 2x2 symmetric…",null,[[["complexfield"]],["complexfield"]]],[0,"balancing","","Functions for balancing a matrix.",null,null],[5,"balance_parlett_reinsch","nalgebra::linalg::balancing","Applies in-place a modified Parlett and Reinsch matrix…",null,[[["matrixn"]],[["vectorn"],["realfield"],["dim"]]]],[5,"unbalance","","Computes in-place `D * m * D.inverse()`, where `D` is the…",null,[[["matrixn"],["vectorn"]]]],[11,"new","nalgebra::linalg","Computes the Bidiagonal decomposition using householder…",92,[[["matrixmn"]],["self"]]],[11,"is_upper_diagonal","","Indicates whether this decomposition contains an…",92,[[["self"]],["bool"]]],[11,"unpack","","Unpacks this decomposition into its three matrix factors…",92,[[]]],[11,"d","","Retrieves the upper trapezoidal submatrix `R` of this…",92,[[["self"]],[["matrixn",["dimminimum"]],["dimminimum"]]]],[11,"u","","Computes the orthogonal matrix `U` of this `U * D * V`…",92,[[["self"]],[["dimminimum"],["matrixmn",["dimminimum"]]]]],[11,"v_t","","Computes the orthogonal matrix `V_t` of this `U * D * V_t`…",92,[[["self"]],[["matrixmn",["dimminimum"]],["dimminimum"]]]],[11,"diagonal","","The diagonal part of this decomposed matrix.",92,[[["self"]],[["vectorn",["dimminimum"]],["dimminimum"]]]],[11,"off_diagonal","","The off-diagonal part of this decomposed matrix.",92,[[["self"]],[["dimdiff",["dimminimum","u1"]],["vectorn",["dimdiff"]]]]],[11,"bidiagonalize","nalgebra::base","Computes the bidiagonalization using householder…",7,[[],["bidiagonal"]]],[11,"new","nalgebra::linalg","Attempts to compute the Cholesky decomposition of `matrix`.",93,[[["matrixn"]],["option"]]],[11,"unpack","","Retrieves the lower-triangular factor of the Cholesky…",93,[[],["matrixn"]]],[11,"unpack_dirty","","Retrieves the lower-triangular factor of the Cholesky…",93,[[],["matrixn"]]],[11,"l","","Retrieves the lower-triangular factor of the Cholesky…",93,[[["self"]],["matrixn"]]],[11,"l_dirty","","Retrieves the lower-triangular factor of the Cholesky…",93,[[["self"]],["matrixn"]]],[11,"solve_mut","","Solves the system `self * x = b` where `self` is the…",93,[[["matrix"],["self"]]]],[11,"solve","","Returns the solution of the system `self * x = b` where…",93,[[["self"],["matrix"]],[["matrixmn"],["dim"]]]],[11,"inverse","","Computes the inverse of the decomposed matrix.",93,[[["self"]],["matrixn"]]],[11,"rank_one_update","","Given the Cholesky decomposition of a matrix `M`, a scalar…",93,[[["self"],["vector"]]]],[11,"insert_column","","Updates the decomposition such that we get the…",93,[[["vector"],["self"],["usize"]],[["cholesky",["dimsum"]],["dimsum",["u1"]]]]],[11,"remove_column","","Updates the decomposition such that we get the…",93,[[["self"],["usize"]],[["cholesky",["dimdiff"]],["dimdiff",["u1"]]]]],[11,"cholesky","nalgebra::base","Attempts to compute the Cholesky decomposition of this…",7,[[],[["cholesky"],["option",["cholesky"]]]]],[11,"cholesky","nalgebra::linalg::cholesky","Attempts to compute the Cholesky decomposition of this…",94,[[],[["cholesky"],["option",["cholesky"]]]]],[11,"convolve_full","nalgebra::base","Returns the convolution of the target vector and a kernel.",7,[[["vector"],["self"]],[["dimdiff",["dimsum","u1"]],["vectorn",["dimdiff"]]]]],[11,"convolve_valid","","Returns the convolution of the target vector and a kernel.",7,[[["vector"],["self"]],[["vectorn",["dimdiff"]],["dimdiff",["dimsum"]]]]],[11,"convolve_same","","Returns the convolution of the target vector and a kernel.",7,[[["vector"],["self"]],["vectorn"]]],[11,"convolve_full","nalgebra::linalg::convolution","Returns the convolution of the target vector and a kernel.",95,[[["vector"],["self"]],[["dimdiff",["dimsum","u1"]],["vectorn",["dimdiff"]]]]],[11,"convolve_valid","","Returns the convolution of the target vector and a kernel.",95,[[["vector"],["self"]],[["vectorn",["dimdiff"]],["dimdiff",["dimsum"]]]]],[11,"convolve_same","","Returns the convolution of the target vector and a kernel.",95,[[["vector"],["self"]],["vectorn"]]],[11,"determinant","nalgebra::base","Computes the matrix determinant.",7,[[["self"]],["n"]]],[11,"determinant","nalgebra::linalg::determinant","Computes the matrix determinant.",94,[[["self"]],["n"]]],[11,"new","nalgebra::linalg","Computes the LU decomposition with full pivoting of…",96,[[["matrixmn"]],["self"]]],[11,"l","","The lower triangular matrix of this decomposition.",96,[[["self"]],[["dimminimum"],["matrixmn",["dimminimum"]]]]],[11,"u","","The upper triangular matrix of this decomposition.",96,[[["self"]],[["matrixmn",["dimminimum"]],["dimminimum"]]]],[11,"p","","The row permutations of this decomposition.",96,[[["self"]],["permutationsequence"]]],[11,"q","","The column permutations of this decomposition.",96,[[["self"]],["permutationsequence"]]],[11,"unpack","","The two matrices of this decomposition and the row and…",96,[[]]],[11,"solve","","Solves the linear system `self * x = b`, where `x` is the…",96,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"solve_mut","","Solves the linear system `self * x = b`, where `x` is the…",96,[[["matrix"],["self"]],["bool"]]],[11,"try_inverse","","Computes the inverse of the decomposed matrix.",96,[[["self"]],[["matrixn"],["option",["matrixn"]]]]],[11,"is_invertible","","Indicates if the decomposed matrix is invertible.",96,[[["self"]],["bool"]]],[11,"determinant","","Computes the determinant of the decomposed matrix.",96,[[["self"]],["n"]]],[11,"full_piv_lu","nalgebra::base","Computes the LU decomposition with full pivoting of…",7,[[],["fullpivlu"]]],[0,"givens","nalgebra::linalg","Construction of givens rotations.",null,null],[3,"GivensRotation","nalgebra::linalg::givens","A Givens rotation.",null,null],[11,"identity","","The Givents rotation that does nothing.",97,[[],["self"]]],[11,"new_unchecked","","Initializes a Givens rotation from its components.",97,[[["n"]],["self"]]],[11,"new","","Initializes a Givens rotation from its non-normalized…",97,[[["n"]]]],[11,"try_new","","Initializes a Givens rotation form its non-normalized…",97,[[["n"]],["option"]]],[11,"cancel_y","","Computes the rotation `R` required such that the `y`…",97,[[["vector"]],["option"]]],[11,"cancel_x","","Computes the rotation `R` required such that the `x`…",97,[[["vector"]],["option"]]],[11,"c","","The cos part of this roration.",97,[[["self"]]]],[11,"s","","The sin part of this roration.",97,[[["self"]],["n"]]],[11,"inverse","","The inverse of this givens rotation.",97,[[["self"]],["self"]]],[11,"rotate","","Performs the multiplication `rhs = self * rhs` in-place.",97,[[["matrix"],["self"]]]],[11,"rotate_rows","","Performs the multiplication `lhs = lhs * self` in-place.",97,[[["matrix"],["self"]]]],[11,"new","nalgebra::linalg","Computes the Hessenberg decomposition using householder…",98,[[["matrixn"]],["self"]]],[11,"new_with_workspace","","Computes the Hessenberg decomposition using householder…",98,[[["matrixn"],["vectorn"]],["self"]]],[11,"unpack","","Retrieves `(q, h)` with `q` the orthogonal matrix of this…",98,[[]]],[11,"unpack_h","","Retrieves the upper trapezoidal submatrix `H` of this…",98,[[],["matrixn"]]],[11,"h","","Retrieves the upper trapezoidal submatrix `H` of this…",98,[[["self"]],["matrixn"]]],[11,"q","","Computes the orthogonal matrix `Q` of this decomposition.",98,[[["self"]],["matrixn"]]],[11,"hessenberg","nalgebra::base","Computes the Hessenberg decomposition of this matrix using…",7,[[],["hessenberg"]]],[11,"hessenberg","nalgebra::linalg::hessenberg","Computes the Hessenberg decomposition of this matrix using…",94,[[],["hessenberg"]]],[0,"householder","nalgebra::linalg","Construction of householder elementary reflections.",null,null],[11,"try_inverse","nalgebra::base","Attempts to invert this matrix.",7,[[],[["matrixn"],["option",["matrixn"]]]]],[11,"try_inverse","nalgebra::linalg::inverse","Attempts to invert this matrix.",94,[[],[["matrixn"],["option",["matrixn"]]]]],[11,"try_inverse_mut","nalgebra::base","Attempts to invert this matrix in-place. Returns `false`…",7,[[["self"]],["bool"]]],[11,"try_inverse_mut","nalgebra::linalg::inverse","Attempts to invert this matrix in-place. Returns `false`…",94,[[["self"]],["bool"]]],[11,"new","nalgebra::linalg","Computes the LU decomposition with partial (row) pivoting…",99,[[["matrixmn"]],["self"]]],[11,"l","","The lower triangular matrix of this decomposition.",99,[[["self"]],[["dimminimum"],["matrixmn",["dimminimum"]]]]],[11,"l_unpack","","The lower triangular matrix of this decomposition.",99,[[],[["dimminimum"],["matrixmn",["dimminimum"]]]]],[11,"u","","The upper triangular matrix of this decomposition.",99,[[["self"]],[["matrixmn",["dimminimum"]],["dimminimum"]]]],[11,"p","","The row permutations of this decomposition.",99,[[["self"]],["permutationsequence"]]],[11,"unpack","","The row permutations and two triangular matrices of this…",99,[[]]],[11,"solve","","Solves the linear system `self * x = b`, where `x` is the…",99,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"solve_mut","","Solves the linear system `self * x = b`, where `x` is the…",99,[[["matrix"],["self"]],["bool"]]],[11,"try_inverse","","Computes the inverse of the decomposed matrix.",99,[[["self"]],[["matrixn"],["option",["matrixn"]]]]],[11,"try_inverse_to","","Computes the inverse of the decomposed matrix and outputs…",99,[[["self"],["matrix"]],["bool"]]],[11,"determinant","","Computes the determinant of the decomposed matrix.",99,[[["self"]],["n"]]],[11,"is_invertible","","Indicates if the decomposed matrix is invertible.",99,[[["self"]],["bool"]]],[11,"lu","nalgebra::base","Computes the LU decomposition with partial (row) pivoting…",7,[[],["lu"]]],[11,"identity","nalgebra::linalg","Creates a new statically-allocated sequence of `D`…",100,[[],["self"]]],[11,"identity","","Creates a new dynamically-allocated sequence of `n`…",100,[[["usize"]],["self"]]],[11,"identity_generic","","Creates a new sequence of D identity permutations.",100,[[["d"]],["self"]]],[11,"append_permutation","","Adds the interchange of the row (or column) `i` with the…",100,[[["self"],["usize"]]]],[11,"permute_rows","","Applies this sequence of permutations to the rows of `rhs`.",100,[[["matrix"],["self"]]]],[11,"inv_permute_rows","","Applies this sequence of permutations in reverse to the…",100,[[["matrix"],["self"]]]],[11,"permute_columns","","Applies this sequence of permutations to the columns of…",100,[[["matrix"],["self"]]]],[11,"inv_permute_columns","","Applies this sequence of permutations in reverse to the…",100,[[["matrix"],["self"]]]],[11,"len","","The number of non-identity permutations applied by this…",100,[[["self"]],["usize"]]],[11,"determinant","","The determinant of the matrix corresponding to this…",100,[[["self"]],[["closedneg"],["one"]]]],[11,"new","","Computes the QR decomposition using householder reflections.",101,[[["matrixmn"]],["self"]]],[11,"r","","Retrieves the upper trapezoidal submatrix `R` of this…",101,[[["self"]],[["matrixmn",["dimminimum"]],["dimminimum"]]]],[11,"unpack_r","","Retrieves the upper trapezoidal submatrix `R` of this…",101,[[],[["matrixmn",["dimminimum"]],["dimminimum"]]]],[11,"q","","Computes the orthogonal matrix `Q` of this decomposition.",101,[[["self"]],[["dimminimum"],["matrixmn",["dimminimum"]]]]],[11,"unpack","","Unpacks this decomposition into its two matrix factors.",101,[[]]],[11,"q_tr_mul","","Multiplies the provided matrix by the transpose of the `Q`…",101,[[["matrix"],["self"]]]],[11,"solve","","Solves the linear system `self * x = b`, where `x` is the…",101,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"solve_mut","","Solves the linear system `self * x = b`, where `x` is the…",101,[[["matrix"],["self"]],["bool"]]],[11,"try_inverse","","Computes the inverse of the decomposed matrix.",101,[[["self"]],[["matrixn"],["option",["matrixn"]]]]],[11,"is_invertible","","Indicates if the decomposed matrix is invertible.",101,[[["self"]],["bool"]]],[11,"qr","nalgebra::base","Computes the QR decomposition of this matrix.",7,[[],["qr"]]],[11,"new","nalgebra::linalg","Computes the Schur decomposition of a square matrix.",102,[[["matrixn"]],["self"]]],[11,"try_new","","Attempts to compute the Schur decomposition of a square…",102,[[["matrixn"],["usize"]],["option"]]],[11,"unpack","","Retrieves the unitary matrix `Q` and the…",102,[[]]],[11,"eigenvalues","","Computes the real eigenvalues of the decomposed matrix.",102,[[["self"]],[["vectorn"],["option",["vectorn"]]]]],[11,"complex_eigenvalues","","Computes the complex eigenvalues of the decomposed matrix.",102,[[["self"]],[["vectorn",["numcomplex"]],["numcomplex"]]]],[11,"schur","nalgebra::base","Computes the Schur decomposition of a square matrix.",7,[[],["schur"]]],[11,"try_schur","","Attempts to compute the Schur decomposition of a square…",7,[[["usize"]],[["option",["schur"]],["schur"]]]],[11,"eigenvalues","","Computes the eigenvalues of this matrix.",7,[[["self"]],[["vectorn"],["option",["vectorn"]]]]],[11,"complex_eigenvalues","","Computes the eigenvalues of this matrix.",7,[[["self"]],[["vectorn",["numcomplex"]],["numcomplex"]]]],[11,"schur","nalgebra::linalg::schur","Computes the Schur decomposition of a square matrix.",94,[[],["schur"]]],[11,"try_schur","","Attempts to compute the Schur decomposition of a square…",94,[[["usize"]],[["option",["schur"]],["schur"]]]],[11,"eigenvalues","","Computes the eigenvalues of this matrix.",94,[[["self"]],[["vectorn"],["option",["vectorn"]]]]],[11,"complex_eigenvalues","","Computes the eigenvalues of this matrix.",94,[[["self"]],[["vectorn",["numcomplex"]],["numcomplex"]]]],[11,"solve_lower_triangular","nalgebra::base","Computes the solution of the linear system `self . x = b`…",7,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"solve_upper_triangular","","Computes the solution of the linear system `self . x = b`…",7,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"solve_lower_triangular_mut","","Solves the linear system `self . x = b` where `x` is the…",7,[[["matrix"],["self"]],["bool"]]],[11,"solve_lower_triangular_with_diag_mut","","Solves the linear system `self . x = b` where `x` is the…",7,[[["matrix"],["self"],["n"]],["bool"]]],[11,"solve_upper_triangular_mut","","Solves the linear system `self . x = b` where `x` is the…",7,[[["matrix"],["self"]],["bool"]]],[11,"tr_solve_lower_triangular","","Computes the solution of the linear system…",7,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"tr_solve_upper_triangular","","Computes the solution of the linear system…",7,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"tr_solve_lower_triangular_mut","","Solves the linear system `self.transpose() . x = b` where…",7,[[["matrix"],["self"]],["bool"]]],[11,"tr_solve_upper_triangular_mut","","Solves the linear system `self.transpose() . x = b` where…",7,[[["matrix"],["self"]],["bool"]]],[11,"ad_solve_lower_triangular","","Computes the solution of the linear system `self.adjoint()…",7,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"ad_solve_upper_triangular","","Computes the solution of the linear system `self.adjoint()…",7,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"ad_solve_lower_triangular_mut","","Solves the linear system `self.adjoint() . x = b` where…",7,[[["matrix"],["self"]],["bool"]]],[11,"ad_solve_upper_triangular_mut","","Solves the linear system `self.adjoint() . x = b` where…",7,[[["matrix"],["self"]],["bool"]]],[11,"solve_lower_triangular","nalgebra::linalg::solve","Computes the solution of the linear system `self . x = b`…",94,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"solve_upper_triangular","","Computes the solution of the linear system `self . x = b`…",94,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"solve_lower_triangular_mut","","Solves the linear system `self . x = b` where `x` is the…",94,[[["matrix"],["self"]],["bool"]]],[11,"solve_lower_triangular_with_diag_mut","","Solves the linear system `self . x = b` where `x` is the…",94,[[["matrix"],["self"],["n"]],["bool"]]],[11,"solve_upper_triangular_mut","","Solves the linear system `self . x = b` where `x` is the…",94,[[["matrix"],["self"]],["bool"]]],[11,"tr_solve_lower_triangular","","Computes the solution of the linear system…",94,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"tr_solve_upper_triangular","","Computes the solution of the linear system…",94,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"tr_solve_lower_triangular_mut","","Solves the linear system `self.transpose() . x = b` where…",94,[[["matrix"],["self"]],["bool"]]],[11,"tr_solve_upper_triangular_mut","","Solves the linear system `self.transpose() . x = b` where…",94,[[["matrix"],["self"]],["bool"]]],[11,"ad_solve_lower_triangular","","Computes the solution of the linear system `self.adjoint()…",94,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"ad_solve_upper_triangular","","Computes the solution of the linear system `self.adjoint()…",94,[[["self"],["matrix"]],[["matrixmn"],["option",["matrixmn"]]]]],[11,"ad_solve_lower_triangular_mut","","Solves the linear system `self.adjoint() . x = b` where…",94,[[["matrix"],["self"]],["bool"]]],[11,"ad_solve_upper_triangular_mut","","Solves the linear system `self.adjoint() . x = b` where…",94,[[["matrix"],["self"]],["bool"]]],[11,"new","nalgebra::linalg","Computes the Singular Value Decomposition of `matrix`…",90,[[["matrixmn"],["bool"]],["self"]]],[11,"try_new","","Attempts to compute the Singular Value Decomposition of…",90,[[["matrixmn"],["usize"],["bool"]],["option"]]],[11,"rank","","Computes the rank of the decomposed matrix, i.e., the…",90,[[["self"]],["usize"]]],[11,"recompose","","Rebuild the original matrix.",90,[[],[["matrixmn"],["result",["matrixmn","str"]],["str"]]]],[11,"pseudo_inverse","","Computes the pseudo-inverse of the decomposed matrix.",90,[[],[["result",["matrixmn","str"]],["str"],["matrixmn"]]]],[11,"solve","","Solves the system `self * x = b` where `self` is the…",90,[[["self"],["matrix"]],[["result",["matrixmn","str"]],["matrixmn"],["str"]]]],[11,"svd","nalgebra::base","Computes the Singular Value Decomposition using implicit…",7,[[["bool"]],["svd"]]],[11,"try_svd","","Attempts to compute the Singular Value Decomposition of…",7,[[["usize"],["bool"]],[["option",["svd"]],["svd"]]]],[11,"singular_values","","Computes the singular values of this matrix.",7,[[["self"]],[["vectorn",["dimminimum"]],["dimminimum"]]]],[11,"rank","","Computes the rank of this matrix.",7,[[["self"]],["usize"]]],[11,"pseudo_inverse","","Computes the pseudo-inverse of this matrix.",7,[[],[["result",["matrixmn","str"]],["str"],["matrixmn"]]]],[11,"new","nalgebra::linalg","Computes the eigendecomposition of the given symmetric…",91,[[["matrixn"]],["self"]]],[11,"try_new","","Computes the eigendecomposition of the given symmetric…",91,[[["matrixn"],["usize"]],["option"]]],[11,"recompose","","Rebuild the original matrix.",91,[[["self"]],["matrixn"]]],[11,"symmetric_eigen","nalgebra::base","Computes the eigendecomposition of this symmetric matrix.",7,[[],["symmetriceigen"]]],[11,"try_symmetric_eigen","","Computes the eigendecomposition of the given symmetric…",7,[[["usize"]],[["option",["symmetriceigen"]],["symmetriceigen"]]]],[11,"symmetric_eigenvalues","","Computes the eigenvalues of this symmetric matrix.",7,[[["self"]],["vectorn"]]],[11,"symmetric_eigen","nalgebra::linalg::symmetric_eigen","Computes the eigendecomposition of this symmetric matrix.",94,[[],["symmetriceigen"]]],[11,"try_symmetric_eigen","","Computes the eigendecomposition of the given symmetric…",94,[[["usize"]],[["option",["symmetriceigen"]],["symmetriceigen"]]]],[11,"symmetric_eigenvalues","","Computes the eigenvalues of this symmetric matrix.",94,[[["self"]],["vectorn"]]],[11,"new","nalgebra::linalg","Computes the tridiagonalization of the symmetric matrix `m`.",103,[[["matrixn"]],["self"]]],[11,"unpack","","Retrieve the orthogonal transformation, diagonal, and off…",103,[[]]],[11,"unpack_tridiagonal","","Retrieve the diagonal, and off diagonal elements of this…",103,[[]]],[11,"diagonal","","The diagonal components of this decomposition.",103,[[["self"]],["vectorn"]]],[11,"off_diagonal","","The off-diagonal components of this decomposition.",103,[[["self"]],[["vectorn",["dimdiff"]],["dimdiff",["u1"]]]]],[11,"q","","Computes the orthogonal matrix `Q` of this decomposition.",103,[[["self"]],["matrixn"]]],[11,"recompose","","Recomputes the original symmetric matrix.",103,[[],["matrixn"]]],[11,"symmetric_tridiagonalize","nalgebra::base","Computes the tridiagonalization of this symmetric matrix.",7,[[],["symmetrictridiagonal"]]],[11,"symmetric_tridiagonalize","nalgebra::linalg::symmetric_tridiagonal","Computes the tridiagonalization of this symmetric matrix.",94,[[],["symmetrictridiagonal"]]],[11,"from","nalgebra","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"from_simd_real","","",0,[[],["t"]]],[11,"simd_real","","",0,[[]]],[11,"simd_imaginary","","",0,[[]]],[11,"simd_modulus","","",0,[[]]],[11,"simd_modulus_squared","","",0,[[]]],[11,"simd_argument","","",0,[[]]],[11,"simd_norm1","","",0,[[]]],[11,"simd_scale","","",0,[[],["t"]]],[11,"simd_unscale","","",0,[[],["t"]]],[11,"simd_to_polar","","",0,[[]]],[11,"simd_to_exp","","",0,[[]]],[11,"simd_signum","","",0,[[],["t"]]],[11,"simd_floor","","",0,[[],["t"]]],[11,"simd_ceil","","",0,[[],["t"]]],[11,"simd_round","","",0,[[],["t"]]],[11,"simd_trunc","","",0,[[],["t"]]],[11,"simd_fract","","",0,[[],["t"]]],[11,"simd_mul_add","","",0,[[["t"]],["t"]]],[11,"simd_abs","","",0,[[]]],[11,"simd_hypot","","",0,[[["t"]]]],[11,"simd_recip","","",0,[[],["t"]]],[11,"simd_conjugate","","",0,[[],["t"]]],[11,"simd_sin","","",0,[[],["t"]]],[11,"simd_cos","","",0,[[],["t"]]],[11,"simd_sin_cos","","",0,[[]]],[11,"simd_sinh_cosh","","",0,[[]]],[11,"simd_tan","","",0,[[],["t"]]],[11,"simd_asin","","",0,[[],["t"]]],[11,"simd_acos","","",0,[[],["t"]]],[11,"simd_atan","","",0,[[],["t"]]],[11,"simd_sinh","","",0,[[],["t"]]],[11,"simd_cosh","","",0,[[],["t"]]],[11,"simd_tanh","","",0,[[],["t"]]],[11,"simd_asinh","","",0,[[],["t"]]],[11,"simd_acosh","","",0,[[],["t"]]],[11,"simd_atanh","","",0,[[],["t"]]],[11,"simd_sinc","","",0,[[],["t"]]],[11,"simd_sinhc","","",0,[[],["t"]]],[11,"simd_cosc","","",0,[[],["t"]]],[11,"simd_coshc","","",0,[[],["t"]]],[11,"simd_log","","",0,[[],["t"]]],[11,"simd_log2","","",0,[[],["t"]]],[11,"simd_log10","","",0,[[],["t"]]],[11,"simd_ln","","",0,[[],["t"]]],[11,"simd_ln_1p","","",0,[[],["t"]]],[11,"simd_sqrt","","",0,[[],["t"]]],[11,"simd_exp","","",0,[[],["t"]]],[11,"simd_exp2","","",0,[[],["t"]]],[11,"simd_exp_m1","","",0,[[],["t"]]],[11,"simd_powi","","",0,[[["i32"]],["t"]]],[11,"simd_powf","","",0,[[],["t"]]],[11,"simd_powc","","",0,[[["t"]],["t"]]],[11,"simd_cbrt","","",0,[[],["t"]]],[11,"from","nalgebra::base","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"simd_gt","","",7,[[["t"]]]],[11,"simd_lt","","",7,[[["t"]]]],[11,"simd_ge","","",7,[[["t"]]]],[11,"simd_le","","",7,[[["t"]]]],[11,"simd_eq","","",7,[[["t"]]]],[11,"simd_ne","","",7,[[["t"]]]],[11,"simd_max","","",7,[[["t"]],["t"]]],[11,"simd_min","","",7,[[["t"]],["t"]]],[11,"simd_clamp","","",7,[[["t"]],["t"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"vzip","","",104,[[],["v"]]],[11,"to_subset","","",104,[[["self"]],["option"]]],[11,"is_in_subset","","",104,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",104,[[["self"]],["ss"]]],[11,"from_subset","","",104,[[["ss"]],["sp"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"vzip","","",105,[[],["v"]]],[11,"to_subset","","",105,[[["self"]],["option"]]],[11,"is_in_subset","","",105,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",105,[[["self"]],["ss"]]],[11,"from_subset","","",105,[[["ss"]],["sp"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"vzip","","",69,[[],["v"]]],[11,"to_subset","","",69,[[["self"]],["option"]]],[11,"is_in_subset","","",69,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",69,[[["self"]],["ss"]]],[11,"from_subset","","",69,[[["ss"]],["sp"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"vzip","","",106,[[],["v"]]],[11,"to_subset","","",106,[[["self"]],["option"]]],[11,"is_in_subset","","",106,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",106,[[["self"]],["ss"]]],[11,"from_subset","","",106,[[["ss"]],["sp"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"vzip","","",70,[[],["v"]]],[11,"to_subset","","",70,[[["self"]],["option"]]],[11,"is_in_subset","","",70,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",70,[[["self"]],["ss"]]],[11,"from_subset","","",70,[[["ss"]],["sp"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"vzip","","",71,[[],["v"]]],[11,"to_subset","","",71,[[["self"]],["option"]]],[11,"is_in_subset","","",71,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",71,[[["self"]],["ss"]]],[11,"from_subset","","",71,[[["ss"]],["sp"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"vzip","","",72,[[],["v"]]],[11,"to_subset","","",72,[[["self"]],["option"]]],[11,"is_in_subset","","",72,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",72,[[["self"]],["ss"]]],[11,"from_subset","","",72,[[["ss"]],["sp"]]],[11,"from","nalgebra::base::constraint","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"vzip","","",107,[[],["v"]]],[11,"to_subset","","",107,[[["self"]],["option"]]],[11,"is_in_subset","","",107,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",107,[[["self"]],["ss"]]],[11,"from_subset","","",107,[[["ss"]],["sp"]]],[11,"from","nalgebra::base::coordinates","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"to_subset","","",15,[[["self"]],["option"]]],[11,"is_in_subset","","",15,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",15,[[["self"]],["ss"]]],[11,"from_subset","","",15,[[["ss"]],["sp"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"to_subset","","",16,[[["self"]],["option"]]],[11,"is_in_subset","","",16,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",16,[[["self"]],["ss"]]],[11,"from_subset","","",16,[[["ss"]],["sp"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"to_subset","","",17,[[["self"]],["option"]]],[11,"is_in_subset","","",17,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",17,[[["self"]],["ss"]]],[11,"from_subset","","",17,[[["ss"]],["sp"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"to_subset","","",18,[[["self"]],["option"]]],[11,"is_in_subset","","",18,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",18,[[["self"]],["ss"]]],[11,"from_subset","","",18,[[["ss"]],["sp"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"to_subset","","",19,[[["self"]],["option"]]],[11,"is_in_subset","","",19,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",19,[[["self"]],["ss"]]],[11,"from_subset","","",19,[[["ss"]],["sp"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"to_subset","","",20,[[["self"]],["option"]]],[11,"is_in_subset","","",20,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",20,[[["self"]],["ss"]]],[11,"from_subset","","",20,[[["ss"]],["sp"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"to_subset","","",21,[[["self"]],["option"]]],[11,"is_in_subset","","",21,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",21,[[["self"]],["ss"]]],[11,"from_subset","","",21,[[["ss"]],["sp"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"to_subset","","",22,[[["self"]],["option"]]],[11,"is_in_subset","","",22,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",22,[[["self"]],["ss"]]],[11,"from_subset","","",22,[[["ss"]],["sp"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"to_subset","","",23,[[["self"]],["option"]]],[11,"is_in_subset","","",23,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",23,[[["self"]],["ss"]]],[11,"from_subset","","",23,[[["ss"]],["sp"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"to_subset","","",24,[[["self"]],["option"]]],[11,"is_in_subset","","",24,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",24,[[["self"]],["ss"]]],[11,"from_subset","","",24,[[["ss"]],["sp"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"to_subset","","",25,[[["self"]],["option"]]],[11,"is_in_subset","","",25,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",25,[[["self"]],["ss"]]],[11,"from_subset","","",25,[[["ss"]],["sp"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"to_subset","","",26,[[["self"]],["option"]]],[11,"is_in_subset","","",26,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",26,[[["self"]],["ss"]]],[11,"from_subset","","",26,[[["ss"]],["sp"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"to_subset","","",27,[[["self"]],["option"]]],[11,"is_in_subset","","",27,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",27,[[["self"]],["ss"]]],[11,"from_subset","","",27,[[["ss"]],["sp"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"to_subset","","",28,[[["self"]],["option"]]],[11,"is_in_subset","","",28,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",28,[[["self"]],["ss"]]],[11,"from_subset","","",28,[[["ss"]],["sp"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"to_subset","","",29,[[["self"]],["option"]]],[11,"is_in_subset","","",29,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",29,[[["self"]],["ss"]]],[11,"from_subset","","",29,[[["ss"]],["sp"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"to_subset","","",30,[[["self"]],["option"]]],[11,"is_in_subset","","",30,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",30,[[["self"]],["ss"]]],[11,"from_subset","","",30,[[["ss"]],["sp"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"to_subset","","",31,[[["self"]],["option"]]],[11,"is_in_subset","","",31,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",31,[[["self"]],["ss"]]],[11,"from_subset","","",31,[[["ss"]],["sp"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"to_subset","","",32,[[["self"]],["option"]]],[11,"is_in_subset","","",32,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",32,[[["self"]],["ss"]]],[11,"from_subset","","",32,[[["ss"]],["sp"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"to_subset","","",33,[[["self"]],["option"]]],[11,"is_in_subset","","",33,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",33,[[["self"]],["ss"]]],[11,"from_subset","","",33,[[["ss"]],["sp"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"to_subset","","",34,[[["self"]],["option"]]],[11,"is_in_subset","","",34,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",34,[[["self"]],["ss"]]],[11,"from_subset","","",34,[[["ss"]],["sp"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"to_subset","","",35,[[["self"]],["option"]]],[11,"is_in_subset","","",35,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",35,[[["self"]],["ss"]]],[11,"from_subset","","",35,[[["ss"]],["sp"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"to_subset","","",36,[[["self"]],["option"]]],[11,"is_in_subset","","",36,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",36,[[["self"]],["ss"]]],[11,"from_subset","","",36,[[["ss"]],["sp"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"to_subset","","",37,[[["self"]],["option"]]],[11,"is_in_subset","","",37,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",37,[[["self"]],["ss"]]],[11,"from_subset","","",37,[[["ss"]],["sp"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"to_subset","","",38,[[["self"]],["option"]]],[11,"is_in_subset","","",38,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",38,[[["self"]],["ss"]]],[11,"from_subset","","",38,[[["ss"]],["sp"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"to_subset","","",39,[[["self"]],["option"]]],[11,"is_in_subset","","",39,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",39,[[["self"]],["ss"]]],[11,"from_subset","","",39,[[["ss"]],["sp"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"to_subset","","",40,[[["self"]],["option"]]],[11,"is_in_subset","","",40,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",40,[[["self"]],["ss"]]],[11,"from_subset","","",40,[[["ss"]],["sp"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"to_subset","","",41,[[["self"]],["option"]]],[11,"is_in_subset","","",41,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",41,[[["self"]],["ss"]]],[11,"from_subset","","",41,[[["ss"]],["sp"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"to_subset","","",42,[[["self"]],["option"]]],[11,"is_in_subset","","",42,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",42,[[["self"]],["ss"]]],[11,"from_subset","","",42,[[["ss"]],["sp"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"to_subset","","",43,[[["self"]],["option"]]],[11,"is_in_subset","","",43,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",43,[[["self"]],["ss"]]],[11,"from_subset","","",43,[[["ss"]],["sp"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"to_subset","","",44,[[["self"]],["option"]]],[11,"is_in_subset","","",44,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",44,[[["self"]],["ss"]]],[11,"from_subset","","",44,[[["ss"]],["sp"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"to_subset","","",45,[[["self"]],["option"]]],[11,"is_in_subset","","",45,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",45,[[["self"]],["ss"]]],[11,"from_subset","","",45,[[["ss"]],["sp"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"to_subset","","",46,[[["self"]],["option"]]],[11,"is_in_subset","","",46,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",46,[[["self"]],["ss"]]],[11,"from_subset","","",46,[[["ss"]],["sp"]]],[11,"from","nalgebra::base::default_allocator","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"vzip","","",108,[[],["v"]]],[11,"to_subset","","",108,[[["self"]],["option"]]],[11,"is_in_subset","","",108,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",108,[[["self"]],["ss"]]],[11,"from_subset","","",108,[[["ss"]],["sp"]]],[11,"add","nalgebra::base::dimension","",62,[[["d2"]]]],[11,"add","","",62,[[["dynamic"]],["dynamic"]]],[11,"mul","","",62,[[["d2"]]]],[11,"mul","","",62,[[["dynamic"]],["dynamic"]]],[11,"sub","","",62,[[["d2"]]]],[11,"sub","","",62,[[["dynamic"]],["dynamic"]]],[11,"div","","",62,[[["d2"]]]],[11,"div","","",62,[[["dynamic"]],["dynamic"]]],[11,"min","","",62,[[["d2"]]]],[11,"min","","",62,[[["dynamic"]],["dynamic"]]],[11,"max","","",62,[[["d2"]]]],[11,"max","","",62,[[["dynamic"]],["dynamic"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"vzip","","",62,[[],["v"]]],[11,"to_subset","","",62,[[["self"]],["option"]]],[11,"is_in_subset","","",62,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",62,[[["self"]],["ss"]]],[11,"from_subset","","",62,[[["ss"]],["sp"]]],[11,"add","","",109,[[["d2"]]]],[11,"add","","",109,[[["dynamic"]],["dynamic"]]],[11,"add","","",109,[[["d2"]]]],[11,"mul","","",109,[[["d2"]]]],[11,"mul","","",109,[[["dynamic"]],["dynamic"]]],[11,"mul","","",109,[[["d2"]]]],[11,"sub","","",109,[[["d2"]]]],[11,"sub","","",109,[[["dynamic"]],["dynamic"]]],[11,"sub","","",109,[[["d2"]]]],[11,"div","","",109,[[["d2"]]]],[11,"div","","",109,[[["dynamic"]],["dynamic"]]],[11,"div","","",109,[[["d2"]]]],[11,"min","","",109,[[["d2"]]]],[11,"min","","",109,[[["dynamic"]],["dynamic"]]],[11,"min","","",109,[[["d2"]]]],[11,"max","","",109,[[["d2"]]]],[11,"max","","",109,[[["dynamic"]],["dynamic"]]],[11,"max","","",109,[[["d2"]]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"vzip","","",109,[[],["v"]]],[11,"to_subset","","",109,[[["self"]],["option"]]],[11,"is_in_subset","","",109,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",109,[[["self"]],["ss"]]],[11,"from_subset","","",109,[[["ss"]],["sp"]]],[11,"add","","",110,[[["d2"]]]],[11,"add","","",110,[[["dynamic"]],["dynamic"]]],[11,"add","","",110,[[["d2"]]]],[11,"mul","","",110,[[["d2"]]]],[11,"mul","","",110,[[["dynamic"]],["dynamic"]]],[11,"mul","","",110,[[["d2"]]]],[11,"sub","","",110,[[["d2"]]]],[11,"sub","","",110,[[["dynamic"]],["dynamic"]]],[11,"sub","","",110,[[["d2"]]]],[11,"div","","",110,[[["d2"]]]],[11,"div","","",110,[[["dynamic"]],["dynamic"]]],[11,"div","","",110,[[["d2"]]]],[11,"min","","",110,[[["d2"]]]],[11,"min","","",110,[[["dynamic"]],["dynamic"]]],[11,"min","","",110,[[["d2"]]]],[11,"max","","",110,[[["d2"]]]],[11,"max","","",110,[[["dynamic"]],["dynamic"]]],[11,"max","","",110,[[["d2"]]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"vzip","","",110,[[],["v"]]],[11,"to_subset","","",110,[[["self"]],["option"]]],[11,"is_in_subset","","",110,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",110,[[["self"]],["ss"]]],[11,"from_subset","","",110,[[["ss"]],["sp"]]],[11,"add","","",111,[[["d2"]]]],[11,"add","","",111,[[["dynamic"]],["dynamic"]]],[11,"add","","",111,[[["d2"]]]],[11,"mul","","",111,[[["d2"]]]],[11,"mul","","",111,[[["dynamic"]],["dynamic"]]],[11,"mul","","",111,[[["d2"]]]],[11,"sub","","",111,[[["d2"]]]],[11,"sub","","",111,[[["dynamic"]],["dynamic"]]],[11,"sub","","",111,[[["d2"]]]],[11,"div","","",111,[[["d2"]]]],[11,"div","","",111,[[["dynamic"]],["dynamic"]]],[11,"div","","",111,[[["d2"]]]],[11,"min","","",111,[[["d2"]]]],[11,"min","","",111,[[["dynamic"]],["dynamic"]]],[11,"min","","",111,[[["d2"]]]],[11,"max","","",111,[[["d2"]]]],[11,"max","","",111,[[["dynamic"]],["dynamic"]]],[11,"max","","",111,[[["d2"]]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"vzip","","",111,[[],["v"]]],[11,"to_subset","","",111,[[["self"]],["option"]]],[11,"is_in_subset","","",111,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",111,[[["self"]],["ss"]]],[11,"from_subset","","",111,[[["ss"]],["sp"]]],[11,"add","","",112,[[["d2"]]]],[11,"add","","",112,[[["dynamic"]],["dynamic"]]],[11,"add","","",112,[[["d2"]]]],[11,"mul","","",112,[[["d2"]]]],[11,"mul","","",112,[[["dynamic"]],["dynamic"]]],[11,"mul","","",112,[[["d2"]]]],[11,"sub","","",112,[[["d2"]]]],[11,"sub","","",112,[[["dynamic"]],["dynamic"]]],[11,"sub","","",112,[[["d2"]]]],[11,"div","","",112,[[["d2"]]]],[11,"div","","",112,[[["dynamic"]],["dynamic"]]],[11,"div","","",112,[[["d2"]]]],[11,"min","","",112,[[["d2"]]]],[11,"min","","",112,[[["dynamic"]],["dynamic"]]],[11,"min","","",112,[[["d2"]]]],[11,"max","","",112,[[["d2"]]]],[11,"max","","",112,[[["dynamic"]],["dynamic"]]],[11,"max","","",112,[[["d2"]]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"vzip","","",112,[[],["v"]]],[11,"to_subset","","",112,[[["self"]],["option"]]],[11,"is_in_subset","","",112,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",112,[[["self"]],["ss"]]],[11,"from_subset","","",112,[[["ss"]],["sp"]]],[11,"add","","",113,[[["d2"]]]],[11,"add","","",113,[[["dynamic"]],["dynamic"]]],[11,"add","","",113,[[["d2"]]]],[11,"mul","","",113,[[["d2"]]]],[11,"mul","","",113,[[["dynamic"]],["dynamic"]]],[11,"mul","","",113,[[["d2"]]]],[11,"sub","","",113,[[["d2"]]]],[11,"sub","","",113,[[["dynamic"]],["dynamic"]]],[11,"sub","","",113,[[["d2"]]]],[11,"div","","",113,[[["d2"]]]],[11,"div","","",113,[[["dynamic"]],["dynamic"]]],[11,"div","","",113,[[["d2"]]]],[11,"min","","",113,[[["d2"]]]],[11,"min","","",113,[[["dynamic"]],["dynamic"]]],[11,"min","","",113,[[["d2"]]]],[11,"max","","",113,[[["d2"]]]],[11,"max","","",113,[[["dynamic"]],["dynamic"]]],[11,"max","","",113,[[["d2"]]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"vzip","","",113,[[],["v"]]],[11,"to_subset","","",113,[[["self"]],["option"]]],[11,"is_in_subset","","",113,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",113,[[["self"]],["ss"]]],[11,"from_subset","","",113,[[["ss"]],["sp"]]],[11,"add","","",114,[[["d2"]]]],[11,"add","","",114,[[["dynamic"]],["dynamic"]]],[11,"add","","",114,[[["d2"]]]],[11,"mul","","",114,[[["d2"]]]],[11,"mul","","",114,[[["dynamic"]],["dynamic"]]],[11,"mul","","",114,[[["d2"]]]],[11,"sub","","",114,[[["d2"]]]],[11,"sub","","",114,[[["dynamic"]],["dynamic"]]],[11,"sub","","",114,[[["d2"]]]],[11,"div","","",114,[[["d2"]]]],[11,"div","","",114,[[["dynamic"]],["dynamic"]]],[11,"div","","",114,[[["d2"]]]],[11,"min","","",114,[[["d2"]]]],[11,"min","","",114,[[["dynamic"]],["dynamic"]]],[11,"min","","",114,[[["d2"]]]],[11,"max","","",114,[[["d2"]]]],[11,"max","","",114,[[["dynamic"]],["dynamic"]]],[11,"max","","",114,[[["d2"]]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"vzip","","",114,[[],["v"]]],[11,"to_subset","","",114,[[["self"]],["option"]]],[11,"is_in_subset","","",114,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",114,[[["self"]],["ss"]]],[11,"from_subset","","",114,[[["ss"]],["sp"]]],[11,"add","","",115,[[["d2"]]]],[11,"add","","",115,[[["dynamic"]],["dynamic"]]],[11,"add","","",115,[[["d2"]]]],[11,"mul","","",115,[[["d2"]]]],[11,"mul","","",115,[[["dynamic"]],["dynamic"]]],[11,"mul","","",115,[[["d2"]]]],[11,"sub","","",115,[[["d2"]]]],[11,"sub","","",115,[[["dynamic"]],["dynamic"]]],[11,"sub","","",115,[[["d2"]]]],[11,"div","","",115,[[["d2"]]]],[11,"div","","",115,[[["dynamic"]],["dynamic"]]],[11,"div","","",115,[[["d2"]]]],[11,"min","","",115,[[["d2"]]]],[11,"min","","",115,[[["dynamic"]],["dynamic"]]],[11,"min","","",115,[[["d2"]]]],[11,"max","","",115,[[["d2"]]]],[11,"max","","",115,[[["dynamic"]],["dynamic"]]],[11,"max","","",115,[[["d2"]]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"vzip","","",115,[[],["v"]]],[11,"to_subset","","",115,[[["self"]],["option"]]],[11,"is_in_subset","","",115,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",115,[[["self"]],["ss"]]],[11,"from_subset","","",115,[[["ss"]],["sp"]]],[11,"add","","",116,[[["d2"]]]],[11,"add","","",116,[[["dynamic"]],["dynamic"]]],[11,"add","","",116,[[["d2"]]]],[11,"mul","","",116,[[["d2"]]]],[11,"mul","","",116,[[["dynamic"]],["dynamic"]]],[11,"mul","","",116,[[["d2"]]]],[11,"sub","","",116,[[["d2"]]]],[11,"sub","","",116,[[["dynamic"]],["dynamic"]]],[11,"sub","","",116,[[["d2"]]]],[11,"div","","",116,[[["d2"]]]],[11,"div","","",116,[[["dynamic"]],["dynamic"]]],[11,"div","","",116,[[["d2"]]]],[11,"min","","",116,[[["d2"]]]],[11,"min","","",116,[[["dynamic"]],["dynamic"]]],[11,"min","","",116,[[["d2"]]]],[11,"max","","",116,[[["d2"]]]],[11,"max","","",116,[[["dynamic"]],["dynamic"]]],[11,"max","","",116,[[["d2"]]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"vzip","","",116,[[],["v"]]],[11,"to_subset","","",116,[[["self"]],["option"]]],[11,"is_in_subset","","",116,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",116,[[["self"]],["ss"]]],[11,"from_subset","","",116,[[["ss"]],["sp"]]],[11,"add","","",117,[[["d2"]]]],[11,"add","","",117,[[["dynamic"]],["dynamic"]]],[11,"add","","",117,[[["d2"]]]],[11,"mul","","",117,[[["d2"]]]],[11,"mul","","",117,[[["dynamic"]],["dynamic"]]],[11,"mul","","",117,[[["d2"]]]],[11,"sub","","",117,[[["d2"]]]],[11,"sub","","",117,[[["dynamic"]],["dynamic"]]],[11,"sub","","",117,[[["d2"]]]],[11,"div","","",117,[[["d2"]]]],[11,"div","","",117,[[["dynamic"]],["dynamic"]]],[11,"div","","",117,[[["d2"]]]],[11,"min","","",117,[[["d2"]]]],[11,"min","","",117,[[["dynamic"]],["dynamic"]]],[11,"min","","",117,[[["d2"]]]],[11,"max","","",117,[[["d2"]]]],[11,"max","","",117,[[["dynamic"]],["dynamic"]]],[11,"max","","",117,[[["d2"]]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"vzip","","",117,[[],["v"]]],[11,"to_subset","","",117,[[["self"]],["option"]]],[11,"is_in_subset","","",117,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",117,[[["self"]],["ss"]]],[11,"from_subset","","",117,[[["ss"]],["sp"]]],[11,"add","","",118,[[["d2"]]]],[11,"add","","",118,[[["dynamic"]],["dynamic"]]],[11,"add","","",118,[[["d2"]]]],[11,"mul","","",118,[[["d2"]]]],[11,"mul","","",118,[[["dynamic"]],["dynamic"]]],[11,"mul","","",118,[[["d2"]]]],[11,"sub","","",118,[[["d2"]]]],[11,"sub","","",118,[[["dynamic"]],["dynamic"]]],[11,"sub","","",118,[[["d2"]]]],[11,"div","","",118,[[["d2"]]]],[11,"div","","",118,[[["dynamic"]],["dynamic"]]],[11,"div","","",118,[[["d2"]]]],[11,"min","","",118,[[["d2"]]]],[11,"min","","",118,[[["dynamic"]],["dynamic"]]],[11,"min","","",118,[[["d2"]]]],[11,"max","","",118,[[["d2"]]]],[11,"max","","",118,[[["dynamic"]],["dynamic"]]],[11,"max","","",118,[[["d2"]]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"vzip","","",118,[[],["v"]]],[11,"to_subset","","",118,[[["self"]],["option"]]],[11,"is_in_subset","","",118,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",118,[[["self"]],["ss"]]],[11,"from_subset","","",118,[[["ss"]],["sp"]]],[11,"add","","",119,[[["d2"]]]],[11,"add","","",119,[[["dynamic"]],["dynamic"]]],[11,"add","","",119,[[["d2"]]]],[11,"mul","","",119,[[["d2"]]]],[11,"mul","","",119,[[["dynamic"]],["dynamic"]]],[11,"mul","","",119,[[["d2"]]]],[11,"sub","","",119,[[["d2"]]]],[11,"sub","","",119,[[["dynamic"]],["dynamic"]]],[11,"sub","","",119,[[["d2"]]]],[11,"div","","",119,[[["d2"]]]],[11,"div","","",119,[[["dynamic"]],["dynamic"]]],[11,"div","","",119,[[["d2"]]]],[11,"min","","",119,[[["d2"]]]],[11,"min","","",119,[[["dynamic"]],["dynamic"]]],[11,"min","","",119,[[["d2"]]]],[11,"max","","",119,[[["d2"]]]],[11,"max","","",119,[[["dynamic"]],["dynamic"]]],[11,"max","","",119,[[["d2"]]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"vzip","","",119,[[],["v"]]],[11,"to_subset","","",119,[[["self"]],["option"]]],[11,"is_in_subset","","",119,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",119,[[["self"]],["ss"]]],[11,"from_subset","","",119,[[["ss"]],["sp"]]],[11,"add","","",120,[[["d2"]]]],[11,"add","","",120,[[["dynamic"]],["dynamic"]]],[11,"add","","",120,[[["d2"]]]],[11,"mul","","",120,[[["d2"]]]],[11,"mul","","",120,[[["dynamic"]],["dynamic"]]],[11,"mul","","",120,[[["d2"]]]],[11,"sub","","",120,[[["d2"]]]],[11,"sub","","",120,[[["dynamic"]],["dynamic"]]],[11,"sub","","",120,[[["d2"]]]],[11,"div","","",120,[[["d2"]]]],[11,"div","","",120,[[["dynamic"]],["dynamic"]]],[11,"div","","",120,[[["d2"]]]],[11,"min","","",120,[[["d2"]]]],[11,"min","","",120,[[["dynamic"]],["dynamic"]]],[11,"min","","",120,[[["d2"]]]],[11,"max","","",120,[[["d2"]]]],[11,"max","","",120,[[["dynamic"]],["dynamic"]]],[11,"max","","",120,[[["d2"]]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"vzip","","",120,[[],["v"]]],[11,"to_subset","","",120,[[["self"]],["option"]]],[11,"is_in_subset","","",120,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",120,[[["self"]],["ss"]]],[11,"from_subset","","",120,[[["ss"]],["sp"]]],[11,"add","","",121,[[["d2"]]]],[11,"add","","",121,[[["dynamic"]],["dynamic"]]],[11,"add","","",121,[[["d2"]]]],[11,"mul","","",121,[[["d2"]]]],[11,"mul","","",121,[[["dynamic"]],["dynamic"]]],[11,"mul","","",121,[[["d2"]]]],[11,"sub","","",121,[[["d2"]]]],[11,"sub","","",121,[[["dynamic"]],["dynamic"]]],[11,"sub","","",121,[[["d2"]]]],[11,"div","","",121,[[["d2"]]]],[11,"div","","",121,[[["dynamic"]],["dynamic"]]],[11,"div","","",121,[[["d2"]]]],[11,"min","","",121,[[["d2"]]]],[11,"min","","",121,[[["dynamic"]],["dynamic"]]],[11,"min","","",121,[[["d2"]]]],[11,"max","","",121,[[["d2"]]]],[11,"max","","",121,[[["dynamic"]],["dynamic"]]],[11,"max","","",121,[[["d2"]]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"vzip","","",121,[[],["v"]]],[11,"to_subset","","",121,[[["self"]],["option"]]],[11,"is_in_subset","","",121,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",121,[[["self"]],["ss"]]],[11,"from_subset","","",121,[[["ss"]],["sp"]]],[11,"add","","",122,[[["d2"]]]],[11,"add","","",122,[[["dynamic"]],["dynamic"]]],[11,"add","","",122,[[["d2"]]]],[11,"mul","","",122,[[["d2"]]]],[11,"mul","","",122,[[["dynamic"]],["dynamic"]]],[11,"mul","","",122,[[["d2"]]]],[11,"sub","","",122,[[["d2"]]]],[11,"sub","","",122,[[["dynamic"]],["dynamic"]]],[11,"sub","","",122,[[["d2"]]]],[11,"div","","",122,[[["d2"]]]],[11,"div","","",122,[[["dynamic"]],["dynamic"]]],[11,"div","","",122,[[["d2"]]]],[11,"min","","",122,[[["d2"]]]],[11,"min","","",122,[[["dynamic"]],["dynamic"]]],[11,"min","","",122,[[["d2"]]]],[11,"max","","",122,[[["d2"]]]],[11,"max","","",122,[[["dynamic"]],["dynamic"]]],[11,"max","","",122,[[["d2"]]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"vzip","","",122,[[],["v"]]],[11,"to_subset","","",122,[[["self"]],["option"]]],[11,"is_in_subset","","",122,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",122,[[["self"]],["ss"]]],[11,"from_subset","","",122,[[["ss"]],["sp"]]],[11,"add","","",123,[[["d2"]]]],[11,"add","","",123,[[["dynamic"]],["dynamic"]]],[11,"add","","",123,[[["d2"]]]],[11,"mul","","",123,[[["d2"]]]],[11,"mul","","",123,[[["dynamic"]],["dynamic"]]],[11,"mul","","",123,[[["d2"]]]],[11,"sub","","",123,[[["d2"]]]],[11,"sub","","",123,[[["dynamic"]],["dynamic"]]],[11,"sub","","",123,[[["d2"]]]],[11,"div","","",123,[[["d2"]]]],[11,"div","","",123,[[["dynamic"]],["dynamic"]]],[11,"div","","",123,[[["d2"]]]],[11,"min","","",123,[[["d2"]]]],[11,"min","","",123,[[["dynamic"]],["dynamic"]]],[11,"min","","",123,[[["d2"]]]],[11,"max","","",123,[[["d2"]]]],[11,"max","","",123,[[["dynamic"]],["dynamic"]]],[11,"max","","",123,[[["d2"]]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"vzip","","",123,[[],["v"]]],[11,"to_subset","","",123,[[["self"]],["option"]]],[11,"is_in_subset","","",123,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",123,[[["self"]],["ss"]]],[11,"from_subset","","",123,[[["ss"]],["sp"]]],[11,"add","","",124,[[["d2"]]]],[11,"add","","",124,[[["dynamic"]],["dynamic"]]],[11,"add","","",124,[[["d2"]]]],[11,"mul","","",124,[[["d2"]]]],[11,"mul","","",124,[[["dynamic"]],["dynamic"]]],[11,"mul","","",124,[[["d2"]]]],[11,"sub","","",124,[[["d2"]]]],[11,"sub","","",124,[[["dynamic"]],["dynamic"]]],[11,"sub","","",124,[[["d2"]]]],[11,"div","","",124,[[["d2"]]]],[11,"div","","",124,[[["dynamic"]],["dynamic"]]],[11,"div","","",124,[[["d2"]]]],[11,"min","","",124,[[["d2"]]]],[11,"min","","",124,[[["dynamic"]],["dynamic"]]],[11,"min","","",124,[[["d2"]]]],[11,"max","","",124,[[["d2"]]]],[11,"max","","",124,[[["dynamic"]],["dynamic"]]],[11,"max","","",124,[[["d2"]]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"vzip","","",124,[[],["v"]]],[11,"to_subset","","",124,[[["self"]],["option"]]],[11,"is_in_subset","","",124,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",124,[[["self"]],["ss"]]],[11,"from_subset","","",124,[[["ss"]],["sp"]]],[11,"add","","",125,[[["d2"]]]],[11,"add","","",125,[[["dynamic"]],["dynamic"]]],[11,"add","","",125,[[["d2"]]]],[11,"mul","","",125,[[["d2"]]]],[11,"mul","","",125,[[["dynamic"]],["dynamic"]]],[11,"mul","","",125,[[["d2"]]]],[11,"sub","","",125,[[["d2"]]]],[11,"sub","","",125,[[["dynamic"]],["dynamic"]]],[11,"sub","","",125,[[["d2"]]]],[11,"div","","",125,[[["d2"]]]],[11,"div","","",125,[[["dynamic"]],["dynamic"]]],[11,"div","","",125,[[["d2"]]]],[11,"min","","",125,[[["d2"]]]],[11,"min","","",125,[[["dynamic"]],["dynamic"]]],[11,"min","","",125,[[["d2"]]]],[11,"max","","",125,[[["d2"]]]],[11,"max","","",125,[[["dynamic"]],["dynamic"]]],[11,"max","","",125,[[["d2"]]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"vzip","","",125,[[],["v"]]],[11,"to_subset","","",125,[[["self"]],["option"]]],[11,"is_in_subset","","",125,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",125,[[["self"]],["ss"]]],[11,"from_subset","","",125,[[["ss"]],["sp"]]],[11,"add","","",126,[[["d2"]]]],[11,"add","","",126,[[["dynamic"]],["dynamic"]]],[11,"add","","",126,[[["d2"]]]],[11,"mul","","",126,[[["d2"]]]],[11,"mul","","",126,[[["dynamic"]],["dynamic"]]],[11,"mul","","",126,[[["d2"]]]],[11,"sub","","",126,[[["d2"]]]],[11,"sub","","",126,[[["dynamic"]],["dynamic"]]],[11,"sub","","",126,[[["d2"]]]],[11,"div","","",126,[[["d2"]]]],[11,"div","","",126,[[["dynamic"]],["dynamic"]]],[11,"div","","",126,[[["d2"]]]],[11,"min","","",126,[[["d2"]]]],[11,"min","","",126,[[["dynamic"]],["dynamic"]]],[11,"min","","",126,[[["d2"]]]],[11,"max","","",126,[[["d2"]]]],[11,"max","","",126,[[["dynamic"]],["dynamic"]]],[11,"max","","",126,[[["d2"]]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"vzip","","",126,[[],["v"]]],[11,"to_subset","","",126,[[["self"]],["option"]]],[11,"is_in_subset","","",126,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",126,[[["self"]],["ss"]]],[11,"from_subset","","",126,[[["ss"]],["sp"]]],[11,"add","","",127,[[["d2"]]]],[11,"add","","",127,[[["dynamic"]],["dynamic"]]],[11,"add","","",127,[[["d2"]]]],[11,"mul","","",127,[[["d2"]]]],[11,"mul","","",127,[[["dynamic"]],["dynamic"]]],[11,"mul","","",127,[[["d2"]]]],[11,"sub","","",127,[[["d2"]]]],[11,"sub","","",127,[[["dynamic"]],["dynamic"]]],[11,"sub","","",127,[[["d2"]]]],[11,"div","","",127,[[["d2"]]]],[11,"div","","",127,[[["dynamic"]],["dynamic"]]],[11,"div","","",127,[[["d2"]]]],[11,"min","","",127,[[["d2"]]]],[11,"min","","",127,[[["dynamic"]],["dynamic"]]],[11,"min","","",127,[[["d2"]]]],[11,"max","","",127,[[["d2"]]]],[11,"max","","",127,[[["dynamic"]],["dynamic"]]],[11,"max","","",127,[[["d2"]]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"vzip","","",127,[[],["v"]]],[11,"to_subset","","",127,[[["self"]],["option"]]],[11,"is_in_subset","","",127,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",127,[[["self"]],["ss"]]],[11,"from_subset","","",127,[[["ss"]],["sp"]]],[11,"add","","",128,[[["d2"]]]],[11,"add","","",128,[[["dynamic"]],["dynamic"]]],[11,"add","","",128,[[["d2"]]]],[11,"mul","","",128,[[["d2"]]]],[11,"mul","","",128,[[["dynamic"]],["dynamic"]]],[11,"mul","","",128,[[["d2"]]]],[11,"sub","","",128,[[["d2"]]]],[11,"sub","","",128,[[["dynamic"]],["dynamic"]]],[11,"sub","","",128,[[["d2"]]]],[11,"div","","",128,[[["d2"]]]],[11,"div","","",128,[[["dynamic"]],["dynamic"]]],[11,"div","","",128,[[["d2"]]]],[11,"min","","",128,[[["d2"]]]],[11,"min","","",128,[[["dynamic"]],["dynamic"]]],[11,"min","","",128,[[["d2"]]]],[11,"max","","",128,[[["d2"]]]],[11,"max","","",128,[[["dynamic"]],["dynamic"]]],[11,"max","","",128,[[["d2"]]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"vzip","","",128,[[],["v"]]],[11,"to_subset","","",128,[[["self"]],["option"]]],[11,"is_in_subset","","",128,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",128,[[["self"]],["ss"]]],[11,"from_subset","","",128,[[["ss"]],["sp"]]],[11,"add","","",129,[[["d2"]]]],[11,"add","","",129,[[["dynamic"]],["dynamic"]]],[11,"add","","",129,[[["d2"]]]],[11,"mul","","",129,[[["d2"]]]],[11,"mul","","",129,[[["dynamic"]],["dynamic"]]],[11,"mul","","",129,[[["d2"]]]],[11,"sub","","",129,[[["d2"]]]],[11,"sub","","",129,[[["dynamic"]],["dynamic"]]],[11,"sub","","",129,[[["d2"]]]],[11,"div","","",129,[[["d2"]]]],[11,"div","","",129,[[["dynamic"]],["dynamic"]]],[11,"div","","",129,[[["d2"]]]],[11,"min","","",129,[[["d2"]]]],[11,"min","","",129,[[["dynamic"]],["dynamic"]]],[11,"min","","",129,[[["d2"]]]],[11,"max","","",129,[[["d2"]]]],[11,"max","","",129,[[["dynamic"]],["dynamic"]]],[11,"max","","",129,[[["d2"]]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"vzip","","",129,[[],["v"]]],[11,"to_subset","","",129,[[["self"]],["option"]]],[11,"is_in_subset","","",129,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",129,[[["self"]],["ss"]]],[11,"from_subset","","",129,[[["ss"]],["sp"]]],[11,"add","","",130,[[["d2"]]]],[11,"add","","",130,[[["dynamic"]],["dynamic"]]],[11,"add","","",130,[[["d2"]]]],[11,"mul","","",130,[[["d2"]]]],[11,"mul","","",130,[[["dynamic"]],["dynamic"]]],[11,"mul","","",130,[[["d2"]]]],[11,"sub","","",130,[[["d2"]]]],[11,"sub","","",130,[[["dynamic"]],["dynamic"]]],[11,"sub","","",130,[[["d2"]]]],[11,"div","","",130,[[["d2"]]]],[11,"div","","",130,[[["dynamic"]],["dynamic"]]],[11,"div","","",130,[[["d2"]]]],[11,"min","","",130,[[["d2"]]]],[11,"min","","",130,[[["dynamic"]],["dynamic"]]],[11,"min","","",130,[[["d2"]]]],[11,"max","","",130,[[["d2"]]]],[11,"max","","",130,[[["dynamic"]],["dynamic"]]],[11,"max","","",130,[[["d2"]]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"vzip","","",130,[[],["v"]]],[11,"to_subset","","",130,[[["self"]],["option"]]],[11,"is_in_subset","","",130,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",130,[[["self"]],["ss"]]],[11,"from_subset","","",130,[[["ss"]],["sp"]]],[11,"add","","",131,[[["d2"]]]],[11,"add","","",131,[[["dynamic"]],["dynamic"]]],[11,"add","","",131,[[["d2"]]]],[11,"mul","","",131,[[["d2"]]]],[11,"mul","","",131,[[["dynamic"]],["dynamic"]]],[11,"mul","","",131,[[["d2"]]]],[11,"sub","","",131,[[["d2"]]]],[11,"sub","","",131,[[["dynamic"]],["dynamic"]]],[11,"sub","","",131,[[["d2"]]]],[11,"div","","",131,[[["d2"]]]],[11,"div","","",131,[[["dynamic"]],["dynamic"]]],[11,"div","","",131,[[["d2"]]]],[11,"min","","",131,[[["d2"]]]],[11,"min","","",131,[[["dynamic"]],["dynamic"]]],[11,"min","","",131,[[["d2"]]]],[11,"max","","",131,[[["d2"]]]],[11,"max","","",131,[[["dynamic"]],["dynamic"]]],[11,"max","","",131,[[["d2"]]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"vzip","","",131,[[],["v"]]],[11,"to_subset","","",131,[[["self"]],["option"]]],[11,"is_in_subset","","",131,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",131,[[["self"]],["ss"]]],[11,"from_subset","","",131,[[["ss"]],["sp"]]],[11,"add","","",132,[[["d2"]]]],[11,"add","","",132,[[["dynamic"]],["dynamic"]]],[11,"add","","",132,[[["d2"]]]],[11,"mul","","",132,[[["d2"]]]],[11,"mul","","",132,[[["dynamic"]],["dynamic"]]],[11,"mul","","",132,[[["d2"]]]],[11,"sub","","",132,[[["d2"]]]],[11,"sub","","",132,[[["dynamic"]],["dynamic"]]],[11,"sub","","",132,[[["d2"]]]],[11,"div","","",132,[[["d2"]]]],[11,"div","","",132,[[["dynamic"]],["dynamic"]]],[11,"div","","",132,[[["d2"]]]],[11,"min","","",132,[[["d2"]]]],[11,"min","","",132,[[["dynamic"]],["dynamic"]]],[11,"min","","",132,[[["d2"]]]],[11,"max","","",132,[[["d2"]]]],[11,"max","","",132,[[["dynamic"]],["dynamic"]]],[11,"max","","",132,[[["d2"]]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"vzip","","",132,[[],["v"]]],[11,"to_subset","","",132,[[["self"]],["option"]]],[11,"is_in_subset","","",132,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",132,[[["self"]],["ss"]]],[11,"from_subset","","",132,[[["ss"]],["sp"]]],[11,"add","","",133,[[["d2"]]]],[11,"add","","",133,[[["dynamic"]],["dynamic"]]],[11,"add","","",133,[[["d2"]]]],[11,"mul","","",133,[[["d2"]]]],[11,"mul","","",133,[[["dynamic"]],["dynamic"]]],[11,"mul","","",133,[[["d2"]]]],[11,"sub","","",133,[[["d2"]]]],[11,"sub","","",133,[[["dynamic"]],["dynamic"]]],[11,"sub","","",133,[[["d2"]]]],[11,"div","","",133,[[["d2"]]]],[11,"div","","",133,[[["dynamic"]],["dynamic"]]],[11,"div","","",133,[[["d2"]]]],[11,"min","","",133,[[["d2"]]]],[11,"min","","",133,[[["dynamic"]],["dynamic"]]],[11,"min","","",133,[[["d2"]]]],[11,"max","","",133,[[["d2"]]]],[11,"max","","",133,[[["dynamic"]],["dynamic"]]],[11,"max","","",133,[[["d2"]]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"vzip","","",133,[[],["v"]]],[11,"to_subset","","",133,[[["self"]],["option"]]],[11,"is_in_subset","","",133,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",133,[[["self"]],["ss"]]],[11,"from_subset","","",133,[[["ss"]],["sp"]]],[11,"add","","",134,[[["d2"]]]],[11,"add","","",134,[[["dynamic"]],["dynamic"]]],[11,"add","","",134,[[["d2"]]]],[11,"mul","","",134,[[["d2"]]]],[11,"mul","","",134,[[["dynamic"]],["dynamic"]]],[11,"mul","","",134,[[["d2"]]]],[11,"sub","","",134,[[["d2"]]]],[11,"sub","","",134,[[["dynamic"]],["dynamic"]]],[11,"sub","","",134,[[["d2"]]]],[11,"div","","",134,[[["d2"]]]],[11,"div","","",134,[[["dynamic"]],["dynamic"]]],[11,"div","","",134,[[["d2"]]]],[11,"min","","",134,[[["d2"]]]],[11,"min","","",134,[[["dynamic"]],["dynamic"]]],[11,"min","","",134,[[["d2"]]]],[11,"max","","",134,[[["d2"]]]],[11,"max","","",134,[[["dynamic"]],["dynamic"]]],[11,"max","","",134,[[["d2"]]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"vzip","","",134,[[],["v"]]],[11,"to_subset","","",134,[[["self"]],["option"]]],[11,"is_in_subset","","",134,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",134,[[["self"]],["ss"]]],[11,"from_subset","","",134,[[["ss"]],["sp"]]],[11,"add","","",135,[[["d2"]]]],[11,"add","","",135,[[["dynamic"]],["dynamic"]]],[11,"add","","",135,[[["d2"]]]],[11,"mul","","",135,[[["d2"]]]],[11,"mul","","",135,[[["dynamic"]],["dynamic"]]],[11,"mul","","",135,[[["d2"]]]],[11,"sub","","",135,[[["d2"]]]],[11,"sub","","",135,[[["dynamic"]],["dynamic"]]],[11,"sub","","",135,[[["d2"]]]],[11,"div","","",135,[[["d2"]]]],[11,"div","","",135,[[["dynamic"]],["dynamic"]]],[11,"div","","",135,[[["d2"]]]],[11,"min","","",135,[[["d2"]]]],[11,"min","","",135,[[["dynamic"]],["dynamic"]]],[11,"min","","",135,[[["d2"]]]],[11,"max","","",135,[[["d2"]]]],[11,"max","","",135,[[["dynamic"]],["dynamic"]]],[11,"max","","",135,[[["d2"]]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"vzip","","",135,[[],["v"]]],[11,"to_subset","","",135,[[["self"]],["option"]]],[11,"is_in_subset","","",135,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",135,[[["self"]],["ss"]]],[11,"from_subset","","",135,[[["ss"]],["sp"]]],[11,"add","","",136,[[["d2"]]]],[11,"add","","",136,[[["dynamic"]],["dynamic"]]],[11,"add","","",136,[[["d2"]]]],[11,"mul","","",136,[[["d2"]]]],[11,"mul","","",136,[[["dynamic"]],["dynamic"]]],[11,"mul","","",136,[[["d2"]]]],[11,"sub","","",136,[[["d2"]]]],[11,"sub","","",136,[[["dynamic"]],["dynamic"]]],[11,"sub","","",136,[[["d2"]]]],[11,"div","","",136,[[["d2"]]]],[11,"div","","",136,[[["dynamic"]],["dynamic"]]],[11,"div","","",136,[[["d2"]]]],[11,"min","","",136,[[["d2"]]]],[11,"min","","",136,[[["dynamic"]],["dynamic"]]],[11,"min","","",136,[[["d2"]]]],[11,"max","","",136,[[["d2"]]]],[11,"max","","",136,[[["dynamic"]],["dynamic"]]],[11,"max","","",136,[[["d2"]]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"vzip","","",136,[[],["v"]]],[11,"to_subset","","",136,[[["self"]],["option"]]],[11,"is_in_subset","","",136,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",136,[[["self"]],["ss"]]],[11,"from_subset","","",136,[[["ss"]],["sp"]]],[11,"add","","",137,[[["d2"]]]],[11,"add","","",137,[[["dynamic"]],["dynamic"]]],[11,"add","","",137,[[["d2"]]]],[11,"mul","","",137,[[["d2"]]]],[11,"mul","","",137,[[["dynamic"]],["dynamic"]]],[11,"mul","","",137,[[["d2"]]]],[11,"sub","","",137,[[["d2"]]]],[11,"sub","","",137,[[["dynamic"]],["dynamic"]]],[11,"sub","","",137,[[["d2"]]]],[11,"div","","",137,[[["d2"]]]],[11,"div","","",137,[[["dynamic"]],["dynamic"]]],[11,"div","","",137,[[["d2"]]]],[11,"min","","",137,[[["d2"]]]],[11,"min","","",137,[[["dynamic"]],["dynamic"]]],[11,"min","","",137,[[["d2"]]]],[11,"max","","",137,[[["d2"]]]],[11,"max","","",137,[[["dynamic"]],["dynamic"]]],[11,"max","","",137,[[["d2"]]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"vzip","","",137,[[],["v"]]],[11,"to_subset","","",137,[[["self"]],["option"]]],[11,"is_in_subset","","",137,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",137,[[["self"]],["ss"]]],[11,"from_subset","","",137,[[["ss"]],["sp"]]],[11,"add","","",138,[[["d2"]]]],[11,"add","","",138,[[["dynamic"]],["dynamic"]]],[11,"add","","",138,[[["d2"]]]],[11,"mul","","",138,[[["d2"]]]],[11,"mul","","",138,[[["dynamic"]],["dynamic"]]],[11,"mul","","",138,[[["d2"]]]],[11,"sub","","",138,[[["d2"]]]],[11,"sub","","",138,[[["dynamic"]],["dynamic"]]],[11,"sub","","",138,[[["d2"]]]],[11,"div","","",138,[[["d2"]]]],[11,"div","","",138,[[["dynamic"]],["dynamic"]]],[11,"div","","",138,[[["d2"]]]],[11,"min","","",138,[[["d2"]]]],[11,"min","","",138,[[["dynamic"]],["dynamic"]]],[11,"min","","",138,[[["d2"]]]],[11,"max","","",138,[[["d2"]]]],[11,"max","","",138,[[["dynamic"]],["dynamic"]]],[11,"max","","",138,[[["d2"]]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"vzip","","",138,[[],["v"]]],[11,"to_subset","","",138,[[["self"]],["option"]]],[11,"is_in_subset","","",138,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",138,[[["self"]],["ss"]]],[11,"from_subset","","",138,[[["ss"]],["sp"]]],[11,"add","","",139,[[["d2"]]]],[11,"add","","",139,[[["dynamic"]],["dynamic"]]],[11,"add","","",139,[[["d2"]]]],[11,"mul","","",139,[[["d2"]]]],[11,"mul","","",139,[[["dynamic"]],["dynamic"]]],[11,"mul","","",139,[[["d2"]]]],[11,"sub","","",139,[[["d2"]]]],[11,"sub","","",139,[[["dynamic"]],["dynamic"]]],[11,"sub","","",139,[[["d2"]]]],[11,"div","","",139,[[["d2"]]]],[11,"div","","",139,[[["dynamic"]],["dynamic"]]],[11,"div","","",139,[[["d2"]]]],[11,"min","","",139,[[["d2"]]]],[11,"min","","",139,[[["dynamic"]],["dynamic"]]],[11,"min","","",139,[[["d2"]]]],[11,"max","","",139,[[["d2"]]]],[11,"max","","",139,[[["dynamic"]],["dynamic"]]],[11,"max","","",139,[[["d2"]]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"vzip","","",139,[[],["v"]]],[11,"to_subset","","",139,[[["self"]],["option"]]],[11,"is_in_subset","","",139,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",139,[[["self"]],["ss"]]],[11,"from_subset","","",139,[[["ss"]],["sp"]]],[11,"add","","",140,[[["d2"]]]],[11,"add","","",140,[[["dynamic"]],["dynamic"]]],[11,"add","","",140,[[["d2"]]]],[11,"mul","","",140,[[["d2"]]]],[11,"mul","","",140,[[["dynamic"]],["dynamic"]]],[11,"mul","","",140,[[["d2"]]]],[11,"sub","","",140,[[["d2"]]]],[11,"sub","","",140,[[["dynamic"]],["dynamic"]]],[11,"sub","","",140,[[["d2"]]]],[11,"div","","",140,[[["d2"]]]],[11,"div","","",140,[[["dynamic"]],["dynamic"]]],[11,"div","","",140,[[["d2"]]]],[11,"min","","",140,[[["d2"]]]],[11,"min","","",140,[[["dynamic"]],["dynamic"]]],[11,"min","","",140,[[["d2"]]]],[11,"max","","",140,[[["d2"]]]],[11,"max","","",140,[[["dynamic"]],["dynamic"]]],[11,"max","","",140,[[["d2"]]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"vzip","","",140,[[],["v"]]],[11,"to_subset","","",140,[[["self"]],["option"]]],[11,"is_in_subset","","",140,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",140,[[["self"]],["ss"]]],[11,"from_subset","","",140,[[["ss"]],["sp"]]],[11,"add","","",141,[[["d2"]]]],[11,"add","","",141,[[["dynamic"]],["dynamic"]]],[11,"add","","",141,[[["d2"]]]],[11,"mul","","",141,[[["d2"]]]],[11,"mul","","",141,[[["dynamic"]],["dynamic"]]],[11,"mul","","",141,[[["d2"]]]],[11,"sub","","",141,[[["d2"]]]],[11,"sub","","",141,[[["dynamic"]],["dynamic"]]],[11,"sub","","",141,[[["d2"]]]],[11,"div","","",141,[[["d2"]]]],[11,"div","","",141,[[["dynamic"]],["dynamic"]]],[11,"div","","",141,[[["d2"]]]],[11,"min","","",141,[[["d2"]]]],[11,"min","","",141,[[["dynamic"]],["dynamic"]]],[11,"min","","",141,[[["d2"]]]],[11,"max","","",141,[[["d2"]]]],[11,"max","","",141,[[["dynamic"]],["dynamic"]]],[11,"max","","",141,[[["d2"]]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"vzip","","",141,[[],["v"]]],[11,"to_subset","","",141,[[["self"]],["option"]]],[11,"is_in_subset","","",141,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",141,[[["self"]],["ss"]]],[11,"from_subset","","",141,[[["ss"]],["sp"]]],[11,"add","","",142,[[["d2"]]]],[11,"add","","",142,[[["dynamic"]],["dynamic"]]],[11,"add","","",142,[[["d2"]]]],[11,"mul","","",142,[[["d2"]]]],[11,"mul","","",142,[[["dynamic"]],["dynamic"]]],[11,"mul","","",142,[[["d2"]]]],[11,"sub","","",142,[[["d2"]]]],[11,"sub","","",142,[[["dynamic"]],["dynamic"]]],[11,"sub","","",142,[[["d2"]]]],[11,"div","","",142,[[["d2"]]]],[11,"div","","",142,[[["dynamic"]],["dynamic"]]],[11,"div","","",142,[[["d2"]]]],[11,"min","","",142,[[["d2"]]]],[11,"min","","",142,[[["dynamic"]],["dynamic"]]],[11,"min","","",142,[[["d2"]]]],[11,"max","","",142,[[["d2"]]]],[11,"max","","",142,[[["dynamic"]],["dynamic"]]],[11,"max","","",142,[[["d2"]]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"vzip","","",142,[[],["v"]]],[11,"to_subset","","",142,[[["self"]],["option"]]],[11,"is_in_subset","","",142,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",142,[[["self"]],["ss"]]],[11,"from_subset","","",142,[[["ss"]],["sp"]]],[11,"add","","",143,[[["d2"]]]],[11,"add","","",143,[[["dynamic"]],["dynamic"]]],[11,"add","","",143,[[["d2"]]]],[11,"mul","","",143,[[["d2"]]]],[11,"mul","","",143,[[["dynamic"]],["dynamic"]]],[11,"mul","","",143,[[["d2"]]]],[11,"sub","","",143,[[["d2"]]]],[11,"sub","","",143,[[["dynamic"]],["dynamic"]]],[11,"sub","","",143,[[["d2"]]]],[11,"div","","",143,[[["d2"]]]],[11,"div","","",143,[[["dynamic"]],["dynamic"]]],[11,"div","","",143,[[["d2"]]]],[11,"min","","",143,[[["d2"]]]],[11,"min","","",143,[[["dynamic"]],["dynamic"]]],[11,"min","","",143,[[["d2"]]]],[11,"max","","",143,[[["d2"]]]],[11,"max","","",143,[[["dynamic"]],["dynamic"]]],[11,"max","","",143,[[["d2"]]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"vzip","","",143,[[],["v"]]],[11,"to_subset","","",143,[[["self"]],["option"]]],[11,"is_in_subset","","",143,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",143,[[["self"]],["ss"]]],[11,"from_subset","","",143,[[["ss"]],["sp"]]],[11,"add","","",144,[[["d2"]]]],[11,"add","","",144,[[["dynamic"]],["dynamic"]]],[11,"add","","",144,[[["d2"]]]],[11,"mul","","",144,[[["d2"]]]],[11,"mul","","",144,[[["dynamic"]],["dynamic"]]],[11,"mul","","",144,[[["d2"]]]],[11,"sub","","",144,[[["d2"]]]],[11,"sub","","",144,[[["dynamic"]],["dynamic"]]],[11,"sub","","",144,[[["d2"]]]],[11,"div","","",144,[[["d2"]]]],[11,"div","","",144,[[["dynamic"]],["dynamic"]]],[11,"div","","",144,[[["d2"]]]],[11,"min","","",144,[[["d2"]]]],[11,"min","","",144,[[["dynamic"]],["dynamic"]]],[11,"min","","",144,[[["d2"]]]],[11,"max","","",144,[[["d2"]]]],[11,"max","","",144,[[["dynamic"]],["dynamic"]]],[11,"max","","",144,[[["d2"]]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"vzip","","",144,[[],["v"]]],[11,"to_subset","","",144,[[["self"]],["option"]]],[11,"is_in_subset","","",144,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",144,[[["self"]],["ss"]]],[11,"from_subset","","",144,[[["ss"]],["sp"]]],[11,"add","","",145,[[["d2"]]]],[11,"add","","",145,[[["dynamic"]],["dynamic"]]],[11,"add","","",145,[[["d2"]]]],[11,"mul","","",145,[[["d2"]]]],[11,"mul","","",145,[[["dynamic"]],["dynamic"]]],[11,"mul","","",145,[[["d2"]]]],[11,"sub","","",145,[[["d2"]]]],[11,"sub","","",145,[[["dynamic"]],["dynamic"]]],[11,"sub","","",145,[[["d2"]]]],[11,"div","","",145,[[["d2"]]]],[11,"div","","",145,[[["dynamic"]],["dynamic"]]],[11,"div","","",145,[[["d2"]]]],[11,"min","","",145,[[["d2"]]]],[11,"min","","",145,[[["dynamic"]],["dynamic"]]],[11,"min","","",145,[[["d2"]]]],[11,"max","","",145,[[["d2"]]]],[11,"max","","",145,[[["dynamic"]],["dynamic"]]],[11,"max","","",145,[[["d2"]]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"vzip","","",145,[[],["v"]]],[11,"to_subset","","",145,[[["self"]],["option"]]],[11,"is_in_subset","","",145,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",145,[[["self"]],["ss"]]],[11,"from_subset","","",145,[[["ss"]],["sp"]]],[11,"add","","",146,[[["d2"]]]],[11,"add","","",146,[[["dynamic"]],["dynamic"]]],[11,"add","","",146,[[["d2"]]]],[11,"mul","","",146,[[["d2"]]]],[11,"mul","","",146,[[["dynamic"]],["dynamic"]]],[11,"mul","","",146,[[["d2"]]]],[11,"sub","","",146,[[["d2"]]]],[11,"sub","","",146,[[["dynamic"]],["dynamic"]]],[11,"sub","","",146,[[["d2"]]]],[11,"div","","",146,[[["d2"]]]],[11,"div","","",146,[[["dynamic"]],["dynamic"]]],[11,"div","","",146,[[["d2"]]]],[11,"min","","",146,[[["d2"]]]],[11,"min","","",146,[[["dynamic"]],["dynamic"]]],[11,"min","","",146,[[["d2"]]]],[11,"max","","",146,[[["d2"]]]],[11,"max","","",146,[[["dynamic"]],["dynamic"]]],[11,"max","","",146,[[["d2"]]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"vzip","","",146,[[],["v"]]],[11,"to_subset","","",146,[[["self"]],["option"]]],[11,"is_in_subset","","",146,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",146,[[["self"]],["ss"]]],[11,"from_subset","","",146,[[["ss"]],["sp"]]],[11,"add","","",147,[[["d2"]]]],[11,"add","","",147,[[["dynamic"]],["dynamic"]]],[11,"add","","",147,[[["d2"]]]],[11,"mul","","",147,[[["d2"]]]],[11,"mul","","",147,[[["dynamic"]],["dynamic"]]],[11,"mul","","",147,[[["d2"]]]],[11,"sub","","",147,[[["d2"]]]],[11,"sub","","",147,[[["dynamic"]],["dynamic"]]],[11,"sub","","",147,[[["d2"]]]],[11,"div","","",147,[[["d2"]]]],[11,"div","","",147,[[["dynamic"]],["dynamic"]]],[11,"div","","",147,[[["d2"]]]],[11,"min","","",147,[[["d2"]]]],[11,"min","","",147,[[["dynamic"]],["dynamic"]]],[11,"min","","",147,[[["d2"]]]],[11,"max","","",147,[[["d2"]]]],[11,"max","","",147,[[["dynamic"]],["dynamic"]]],[11,"max","","",147,[[["d2"]]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"vzip","","",147,[[],["v"]]],[11,"to_subset","","",147,[[["self"]],["option"]]],[11,"is_in_subset","","",147,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",147,[[["self"]],["ss"]]],[11,"from_subset","","",147,[[["ss"]],["sp"]]],[11,"add","","",148,[[["d2"]]]],[11,"add","","",148,[[["dynamic"]],["dynamic"]]],[11,"add","","",148,[[["d2"]]]],[11,"mul","","",148,[[["d2"]]]],[11,"mul","","",148,[[["dynamic"]],["dynamic"]]],[11,"mul","","",148,[[["d2"]]]],[11,"sub","","",148,[[["d2"]]]],[11,"sub","","",148,[[["dynamic"]],["dynamic"]]],[11,"sub","","",148,[[["d2"]]]],[11,"div","","",148,[[["d2"]]]],[11,"div","","",148,[[["dynamic"]],["dynamic"]]],[11,"div","","",148,[[["d2"]]]],[11,"min","","",148,[[["d2"]]]],[11,"min","","",148,[[["dynamic"]],["dynamic"]]],[11,"min","","",148,[[["d2"]]]],[11,"max","","",148,[[["d2"]]]],[11,"max","","",148,[[["dynamic"]],["dynamic"]]],[11,"max","","",148,[[["d2"]]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"vzip","","",148,[[],["v"]]],[11,"to_subset","","",148,[[["self"]],["option"]]],[11,"is_in_subset","","",148,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",148,[[["self"]],["ss"]]],[11,"from_subset","","",148,[[["ss"]],["sp"]]],[11,"add","","",149,[[["d2"]]]],[11,"add","","",149,[[["dynamic"]],["dynamic"]]],[11,"add","","",149,[[["d2"]]]],[11,"mul","","",149,[[["d2"]]]],[11,"mul","","",149,[[["dynamic"]],["dynamic"]]],[11,"mul","","",149,[[["d2"]]]],[11,"sub","","",149,[[["d2"]]]],[11,"sub","","",149,[[["dynamic"]],["dynamic"]]],[11,"sub","","",149,[[["d2"]]]],[11,"div","","",149,[[["d2"]]]],[11,"div","","",149,[[["dynamic"]],["dynamic"]]],[11,"div","","",149,[[["d2"]]]],[11,"min","","",149,[[["d2"]]]],[11,"min","","",149,[[["dynamic"]],["dynamic"]]],[11,"min","","",149,[[["d2"]]]],[11,"max","","",149,[[["d2"]]]],[11,"max","","",149,[[["dynamic"]],["dynamic"]]],[11,"max","","",149,[[["d2"]]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"vzip","","",149,[[],["v"]]],[11,"to_subset","","",149,[[["self"]],["option"]]],[11,"is_in_subset","","",149,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",149,[[["self"]],["ss"]]],[11,"from_subset","","",149,[[["ss"]],["sp"]]],[11,"add","","",150,[[["d2"]]]],[11,"add","","",150,[[["dynamic"]],["dynamic"]]],[11,"add","","",150,[[["d2"]]]],[11,"mul","","",150,[[["d2"]]]],[11,"mul","","",150,[[["dynamic"]],["dynamic"]]],[11,"mul","","",150,[[["d2"]]]],[11,"sub","","",150,[[["d2"]]]],[11,"sub","","",150,[[["dynamic"]],["dynamic"]]],[11,"sub","","",150,[[["d2"]]]],[11,"div","","",150,[[["d2"]]]],[11,"div","","",150,[[["dynamic"]],["dynamic"]]],[11,"div","","",150,[[["d2"]]]],[11,"min","","",150,[[["d2"]]]],[11,"min","","",150,[[["dynamic"]],["dynamic"]]],[11,"min","","",150,[[["d2"]]]],[11,"max","","",150,[[["d2"]]]],[11,"max","","",150,[[["dynamic"]],["dynamic"]]],[11,"max","","",150,[[["d2"]]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"vzip","","",150,[[],["v"]]],[11,"to_subset","","",150,[[["self"]],["option"]]],[11,"is_in_subset","","",150,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",150,[[["self"]],["ss"]]],[11,"from_subset","","",150,[[["ss"]],["sp"]]],[11,"add","","",151,[[["d2"]]]],[11,"add","","",151,[[["dynamic"]],["dynamic"]]],[11,"add","","",151,[[["d2"]]]],[11,"mul","","",151,[[["d2"]]]],[11,"mul","","",151,[[["dynamic"]],["dynamic"]]],[11,"mul","","",151,[[["d2"]]]],[11,"sub","","",151,[[["d2"]]]],[11,"sub","","",151,[[["dynamic"]],["dynamic"]]],[11,"sub","","",151,[[["d2"]]]],[11,"div","","",151,[[["d2"]]]],[11,"div","","",151,[[["dynamic"]],["dynamic"]]],[11,"div","","",151,[[["d2"]]]],[11,"min","","",151,[[["d2"]]]],[11,"min","","",151,[[["dynamic"]],["dynamic"]]],[11,"min","","",151,[[["d2"]]]],[11,"max","","",151,[[["d2"]]]],[11,"max","","",151,[[["dynamic"]],["dynamic"]]],[11,"max","","",151,[[["d2"]]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"vzip","","",151,[[],["v"]]],[11,"to_subset","","",151,[[["self"]],["option"]]],[11,"is_in_subset","","",151,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",151,[[["self"]],["ss"]]],[11,"from_subset","","",151,[[["ss"]],["sp"]]],[11,"add","","",152,[[["d2"]]]],[11,"add","","",152,[[["dynamic"]],["dynamic"]]],[11,"add","","",152,[[["d2"]]]],[11,"mul","","",152,[[["d2"]]]],[11,"mul","","",152,[[["dynamic"]],["dynamic"]]],[11,"mul","","",152,[[["d2"]]]],[11,"sub","","",152,[[["d2"]]]],[11,"sub","","",152,[[["dynamic"]],["dynamic"]]],[11,"sub","","",152,[[["d2"]]]],[11,"div","","",152,[[["d2"]]]],[11,"div","","",152,[[["dynamic"]],["dynamic"]]],[11,"div","","",152,[[["d2"]]]],[11,"min","","",152,[[["d2"]]]],[11,"min","","",152,[[["dynamic"]],["dynamic"]]],[11,"min","","",152,[[["d2"]]]],[11,"max","","",152,[[["d2"]]]],[11,"max","","",152,[[["dynamic"]],["dynamic"]]],[11,"max","","",152,[[["d2"]]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"vzip","","",152,[[],["v"]]],[11,"to_subset","","",152,[[["self"]],["option"]]],[11,"is_in_subset","","",152,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",152,[[["self"]],["ss"]]],[11,"from_subset","","",152,[[["ss"]],["sp"]]],[11,"add","","",153,[[["d2"]]]],[11,"add","","",153,[[["dynamic"]],["dynamic"]]],[11,"add","","",153,[[["d2"]]]],[11,"mul","","",153,[[["d2"]]]],[11,"mul","","",153,[[["dynamic"]],["dynamic"]]],[11,"mul","","",153,[[["d2"]]]],[11,"sub","","",153,[[["d2"]]]],[11,"sub","","",153,[[["dynamic"]],["dynamic"]]],[11,"sub","","",153,[[["d2"]]]],[11,"div","","",153,[[["d2"]]]],[11,"div","","",153,[[["dynamic"]],["dynamic"]]],[11,"div","","",153,[[["d2"]]]],[11,"min","","",153,[[["d2"]]]],[11,"min","","",153,[[["dynamic"]],["dynamic"]]],[11,"min","","",153,[[["d2"]]]],[11,"max","","",153,[[["d2"]]]],[11,"max","","",153,[[["dynamic"]],["dynamic"]]],[11,"max","","",153,[[["d2"]]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"vzip","","",153,[[],["v"]]],[11,"to_subset","","",153,[[["self"]],["option"]]],[11,"is_in_subset","","",153,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",153,[[["self"]],["ss"]]],[11,"from_subset","","",153,[[["ss"]],["sp"]]],[11,"add","","",154,[[["d2"]]]],[11,"add","","",154,[[["dynamic"]],["dynamic"]]],[11,"add","","",154,[[["d2"]]]],[11,"mul","","",154,[[["d2"]]]],[11,"mul","","",154,[[["dynamic"]],["dynamic"]]],[11,"mul","","",154,[[["d2"]]]],[11,"sub","","",154,[[["d2"]]]],[11,"sub","","",154,[[["dynamic"]],["dynamic"]]],[11,"sub","","",154,[[["d2"]]]],[11,"div","","",154,[[["d2"]]]],[11,"div","","",154,[[["dynamic"]],["dynamic"]]],[11,"div","","",154,[[["d2"]]]],[11,"min","","",154,[[["d2"]]]],[11,"min","","",154,[[["dynamic"]],["dynamic"]]],[11,"min","","",154,[[["d2"]]]],[11,"max","","",154,[[["d2"]]]],[11,"max","","",154,[[["dynamic"]],["dynamic"]]],[11,"max","","",154,[[["d2"]]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"vzip","","",154,[[],["v"]]],[11,"to_subset","","",154,[[["self"]],["option"]]],[11,"is_in_subset","","",154,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",154,[[["self"]],["ss"]]],[11,"from_subset","","",154,[[["ss"]],["sp"]]],[11,"add","","",155,[[["d2"]]]],[11,"add","","",155,[[["dynamic"]],["dynamic"]]],[11,"add","","",155,[[["d2"]]]],[11,"mul","","",155,[[["d2"]]]],[11,"mul","","",155,[[["dynamic"]],["dynamic"]]],[11,"mul","","",155,[[["d2"]]]],[11,"sub","","",155,[[["d2"]]]],[11,"sub","","",155,[[["dynamic"]],["dynamic"]]],[11,"sub","","",155,[[["d2"]]]],[11,"div","","",155,[[["d2"]]]],[11,"div","","",155,[[["dynamic"]],["dynamic"]]],[11,"div","","",155,[[["d2"]]]],[11,"min","","",155,[[["d2"]]]],[11,"min","","",155,[[["dynamic"]],["dynamic"]]],[11,"min","","",155,[[["d2"]]]],[11,"max","","",155,[[["d2"]]]],[11,"max","","",155,[[["dynamic"]],["dynamic"]]],[11,"max","","",155,[[["d2"]]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"vzip","","",155,[[],["v"]]],[11,"to_subset","","",155,[[["self"]],["option"]]],[11,"is_in_subset","","",155,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",155,[[["self"]],["ss"]]],[11,"from_subset","","",155,[[["ss"]],["sp"]]],[11,"add","","",156,[[["d2"]]]],[11,"add","","",156,[[["dynamic"]],["dynamic"]]],[11,"add","","",156,[[["d2"]]]],[11,"mul","","",156,[[["d2"]]]],[11,"mul","","",156,[[["dynamic"]],["dynamic"]]],[11,"mul","","",156,[[["d2"]]]],[11,"sub","","",156,[[["d2"]]]],[11,"sub","","",156,[[["dynamic"]],["dynamic"]]],[11,"sub","","",156,[[["d2"]]]],[11,"div","","",156,[[["d2"]]]],[11,"div","","",156,[[["dynamic"]],["dynamic"]]],[11,"div","","",156,[[["d2"]]]],[11,"min","","",156,[[["d2"]]]],[11,"min","","",156,[[["dynamic"]],["dynamic"]]],[11,"min","","",156,[[["d2"]]]],[11,"max","","",156,[[["d2"]]]],[11,"max","","",156,[[["dynamic"]],["dynamic"]]],[11,"max","","",156,[[["d2"]]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"vzip","","",156,[[],["v"]]],[11,"to_subset","","",156,[[["self"]],["option"]]],[11,"is_in_subset","","",156,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",156,[[["self"]],["ss"]]],[11,"from_subset","","",156,[[["ss"]],["sp"]]],[11,"add","","",157,[[["d2"]]]],[11,"add","","",157,[[["dynamic"]],["dynamic"]]],[11,"add","","",157,[[["d2"]]]],[11,"mul","","",157,[[["d2"]]]],[11,"mul","","",157,[[["dynamic"]],["dynamic"]]],[11,"mul","","",157,[[["d2"]]]],[11,"sub","","",157,[[["d2"]]]],[11,"sub","","",157,[[["dynamic"]],["dynamic"]]],[11,"sub","","",157,[[["d2"]]]],[11,"div","","",157,[[["d2"]]]],[11,"div","","",157,[[["dynamic"]],["dynamic"]]],[11,"div","","",157,[[["d2"]]]],[11,"min","","",157,[[["d2"]]]],[11,"min","","",157,[[["dynamic"]],["dynamic"]]],[11,"min","","",157,[[["d2"]]]],[11,"max","","",157,[[["d2"]]]],[11,"max","","",157,[[["dynamic"]],["dynamic"]]],[11,"max","","",157,[[["d2"]]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"vzip","","",157,[[],["v"]]],[11,"to_subset","","",157,[[["self"]],["option"]]],[11,"is_in_subset","","",157,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",157,[[["self"]],["ss"]]],[11,"from_subset","","",157,[[["ss"]],["sp"]]],[11,"add","","",158,[[["d2"]]]],[11,"add","","",158,[[["dynamic"]],["dynamic"]]],[11,"add","","",158,[[["d2"]]]],[11,"mul","","",158,[[["d2"]]]],[11,"mul","","",158,[[["dynamic"]],["dynamic"]]],[11,"mul","","",158,[[["d2"]]]],[11,"sub","","",158,[[["d2"]]]],[11,"sub","","",158,[[["dynamic"]],["dynamic"]]],[11,"sub","","",158,[[["d2"]]]],[11,"div","","",158,[[["d2"]]]],[11,"div","","",158,[[["dynamic"]],["dynamic"]]],[11,"div","","",158,[[["d2"]]]],[11,"min","","",158,[[["d2"]]]],[11,"min","","",158,[[["dynamic"]],["dynamic"]]],[11,"min","","",158,[[["d2"]]]],[11,"max","","",158,[[["d2"]]]],[11,"max","","",158,[[["dynamic"]],["dynamic"]]],[11,"max","","",158,[[["d2"]]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"vzip","","",158,[[],["v"]]],[11,"to_subset","","",158,[[["self"]],["option"]]],[11,"is_in_subset","","",158,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",158,[[["self"]],["ss"]]],[11,"from_subset","","",158,[[["ss"]],["sp"]]],[11,"add","","",159,[[["d2"]]]],[11,"add","","",159,[[["dynamic"]],["dynamic"]]],[11,"add","","",159,[[["d2"]]]],[11,"mul","","",159,[[["d2"]]]],[11,"mul","","",159,[[["dynamic"]],["dynamic"]]],[11,"mul","","",159,[[["d2"]]]],[11,"sub","","",159,[[["d2"]]]],[11,"sub","","",159,[[["dynamic"]],["dynamic"]]],[11,"sub","","",159,[[["d2"]]]],[11,"div","","",159,[[["d2"]]]],[11,"div","","",159,[[["dynamic"]],["dynamic"]]],[11,"div","","",159,[[["d2"]]]],[11,"min","","",159,[[["d2"]]]],[11,"min","","",159,[[["dynamic"]],["dynamic"]]],[11,"min","","",159,[[["d2"]]]],[11,"max","","",159,[[["d2"]]]],[11,"max","","",159,[[["dynamic"]],["dynamic"]]],[11,"max","","",159,[[["d2"]]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"vzip","","",159,[[],["v"]]],[11,"to_subset","","",159,[[["self"]],["option"]]],[11,"is_in_subset","","",159,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",159,[[["self"]],["ss"]]],[11,"from_subset","","",159,[[["ss"]],["sp"]]],[11,"add","","",160,[[["d2"]]]],[11,"add","","",160,[[["dynamic"]],["dynamic"]]],[11,"add","","",160,[[["d2"]]]],[11,"mul","","",160,[[["d2"]]]],[11,"mul","","",160,[[["dynamic"]],["dynamic"]]],[11,"mul","","",160,[[["d2"]]]],[11,"sub","","",160,[[["d2"]]]],[11,"sub","","",160,[[["dynamic"]],["dynamic"]]],[11,"sub","","",160,[[["d2"]]]],[11,"div","","",160,[[["d2"]]]],[11,"div","","",160,[[["dynamic"]],["dynamic"]]],[11,"div","","",160,[[["d2"]]]],[11,"min","","",160,[[["d2"]]]],[11,"min","","",160,[[["dynamic"]],["dynamic"]]],[11,"min","","",160,[[["d2"]]]],[11,"max","","",160,[[["d2"]]]],[11,"max","","",160,[[["dynamic"]],["dynamic"]]],[11,"max","","",160,[[["d2"]]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"vzip","","",160,[[],["v"]]],[11,"to_subset","","",160,[[["self"]],["option"]]],[11,"is_in_subset","","",160,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",160,[[["self"]],["ss"]]],[11,"from_subset","","",160,[[["ss"]],["sp"]]],[11,"add","","",161,[[["d2"]]]],[11,"add","","",161,[[["dynamic"]],["dynamic"]]],[11,"add","","",161,[[["d2"]]]],[11,"mul","","",161,[[["d2"]]]],[11,"mul","","",161,[[["dynamic"]],["dynamic"]]],[11,"mul","","",161,[[["d2"]]]],[11,"sub","","",161,[[["d2"]]]],[11,"sub","","",161,[[["dynamic"]],["dynamic"]]],[11,"sub","","",161,[[["d2"]]]],[11,"div","","",161,[[["d2"]]]],[11,"div","","",161,[[["dynamic"]],["dynamic"]]],[11,"div","","",161,[[["d2"]]]],[11,"min","","",161,[[["d2"]]]],[11,"min","","",161,[[["dynamic"]],["dynamic"]]],[11,"min","","",161,[[["d2"]]]],[11,"max","","",161,[[["d2"]]]],[11,"max","","",161,[[["dynamic"]],["dynamic"]]],[11,"max","","",161,[[["d2"]]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"vzip","","",161,[[],["v"]]],[11,"to_subset","","",161,[[["self"]],["option"]]],[11,"is_in_subset","","",161,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",161,[[["self"]],["ss"]]],[11,"from_subset","","",161,[[["ss"]],["sp"]]],[11,"add","","",162,[[["d2"]]]],[11,"add","","",162,[[["dynamic"]],["dynamic"]]],[11,"add","","",162,[[["d2"]]]],[11,"mul","","",162,[[["d2"]]]],[11,"mul","","",162,[[["dynamic"]],["dynamic"]]],[11,"mul","","",162,[[["d2"]]]],[11,"sub","","",162,[[["d2"]]]],[11,"sub","","",162,[[["dynamic"]],["dynamic"]]],[11,"sub","","",162,[[["d2"]]]],[11,"div","","",162,[[["d2"]]]],[11,"div","","",162,[[["dynamic"]],["dynamic"]]],[11,"div","","",162,[[["d2"]]]],[11,"min","","",162,[[["d2"]]]],[11,"min","","",162,[[["dynamic"]],["dynamic"]]],[11,"min","","",162,[[["d2"]]]],[11,"max","","",162,[[["d2"]]]],[11,"max","","",162,[[["dynamic"]],["dynamic"]]],[11,"max","","",162,[[["d2"]]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"vzip","","",162,[[],["v"]]],[11,"to_subset","","",162,[[["self"]],["option"]]],[11,"is_in_subset","","",162,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",162,[[["self"]],["ss"]]],[11,"from_subset","","",162,[[["ss"]],["sp"]]],[11,"add","","",163,[[["d2"]]]],[11,"add","","",163,[[["dynamic"]],["dynamic"]]],[11,"add","","",163,[[["d2"]]]],[11,"mul","","",163,[[["d2"]]]],[11,"mul","","",163,[[["dynamic"]],["dynamic"]]],[11,"mul","","",163,[[["d2"]]]],[11,"sub","","",163,[[["d2"]]]],[11,"sub","","",163,[[["dynamic"]],["dynamic"]]],[11,"sub","","",163,[[["d2"]]]],[11,"div","","",163,[[["d2"]]]],[11,"div","","",163,[[["dynamic"]],["dynamic"]]],[11,"div","","",163,[[["d2"]]]],[11,"min","","",163,[[["d2"]]]],[11,"min","","",163,[[["dynamic"]],["dynamic"]]],[11,"min","","",163,[[["d2"]]]],[11,"max","","",163,[[["d2"]]]],[11,"max","","",163,[[["dynamic"]],["dynamic"]]],[11,"max","","",163,[[["d2"]]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"vzip","","",163,[[],["v"]]],[11,"to_subset","","",163,[[["self"]],["option"]]],[11,"is_in_subset","","",163,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",163,[[["self"]],["ss"]]],[11,"from_subset","","",163,[[["ss"]],["sp"]]],[11,"add","","",164,[[["d2"]]]],[11,"add","","",164,[[["dynamic"]],["dynamic"]]],[11,"add","","",164,[[["d2"]]]],[11,"mul","","",164,[[["d2"]]]],[11,"mul","","",164,[[["dynamic"]],["dynamic"]]],[11,"mul","","",164,[[["d2"]]]],[11,"sub","","",164,[[["d2"]]]],[11,"sub","","",164,[[["dynamic"]],["dynamic"]]],[11,"sub","","",164,[[["d2"]]]],[11,"div","","",164,[[["d2"]]]],[11,"div","","",164,[[["dynamic"]],["dynamic"]]],[11,"div","","",164,[[["d2"]]]],[11,"min","","",164,[[["d2"]]]],[11,"min","","",164,[[["dynamic"]],["dynamic"]]],[11,"min","","",164,[[["d2"]]]],[11,"max","","",164,[[["d2"]]]],[11,"max","","",164,[[["dynamic"]],["dynamic"]]],[11,"max","","",164,[[["d2"]]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"vzip","","",164,[[],["v"]]],[11,"to_subset","","",164,[[["self"]],["option"]]],[11,"is_in_subset","","",164,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",164,[[["self"]],["ss"]]],[11,"from_subset","","",164,[[["ss"]],["sp"]]],[11,"add","","",165,[[["d2"]]]],[11,"add","","",165,[[["dynamic"]],["dynamic"]]],[11,"add","","",165,[[["d2"]]]],[11,"mul","","",165,[[["d2"]]]],[11,"mul","","",165,[[["dynamic"]],["dynamic"]]],[11,"mul","","",165,[[["d2"]]]],[11,"sub","","",165,[[["d2"]]]],[11,"sub","","",165,[[["dynamic"]],["dynamic"]]],[11,"sub","","",165,[[["d2"]]]],[11,"div","","",165,[[["d2"]]]],[11,"div","","",165,[[["dynamic"]],["dynamic"]]],[11,"div","","",165,[[["d2"]]]],[11,"min","","",165,[[["d2"]]]],[11,"min","","",165,[[["dynamic"]],["dynamic"]]],[11,"min","","",165,[[["d2"]]]],[11,"max","","",165,[[["d2"]]]],[11,"max","","",165,[[["dynamic"]],["dynamic"]]],[11,"max","","",165,[[["d2"]]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"vzip","","",165,[[],["v"]]],[11,"to_subset","","",165,[[["self"]],["option"]]],[11,"is_in_subset","","",165,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",165,[[["self"]],["ss"]]],[11,"from_subset","","",165,[[["ss"]],["sp"]]],[11,"add","","",166,[[["d2"]]]],[11,"add","","",166,[[["dynamic"]],["dynamic"]]],[11,"add","","",166,[[["d2"]]]],[11,"mul","","",166,[[["d2"]]]],[11,"mul","","",166,[[["dynamic"]],["dynamic"]]],[11,"mul","","",166,[[["d2"]]]],[11,"sub","","",166,[[["d2"]]]],[11,"sub","","",166,[[["dynamic"]],["dynamic"]]],[11,"sub","","",166,[[["d2"]]]],[11,"div","","",166,[[["d2"]]]],[11,"div","","",166,[[["dynamic"]],["dynamic"]]],[11,"div","","",166,[[["d2"]]]],[11,"min","","",166,[[["d2"]]]],[11,"min","","",166,[[["dynamic"]],["dynamic"]]],[11,"min","","",166,[[["d2"]]]],[11,"max","","",166,[[["d2"]]]],[11,"max","","",166,[[["dynamic"]],["dynamic"]]],[11,"max","","",166,[[["d2"]]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"vzip","","",166,[[],["v"]]],[11,"to_subset","","",166,[[["self"]],["option"]]],[11,"is_in_subset","","",166,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",166,[[["self"]],["ss"]]],[11,"from_subset","","",166,[[["ss"]],["sp"]]],[11,"add","","",167,[[["d2"]]]],[11,"add","","",167,[[["dynamic"]],["dynamic"]]],[11,"add","","",167,[[["d2"]]]],[11,"mul","","",167,[[["d2"]]]],[11,"mul","","",167,[[["dynamic"]],["dynamic"]]],[11,"mul","","",167,[[["d2"]]]],[11,"sub","","",167,[[["d2"]]]],[11,"sub","","",167,[[["dynamic"]],["dynamic"]]],[11,"sub","","",167,[[["d2"]]]],[11,"div","","",167,[[["d2"]]]],[11,"div","","",167,[[["dynamic"]],["dynamic"]]],[11,"div","","",167,[[["d2"]]]],[11,"min","","",167,[[["d2"]]]],[11,"min","","",167,[[["dynamic"]],["dynamic"]]],[11,"min","","",167,[[["d2"]]]],[11,"max","","",167,[[["d2"]]]],[11,"max","","",167,[[["dynamic"]],["dynamic"]]],[11,"max","","",167,[[["d2"]]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"vzip","","",167,[[],["v"]]],[11,"to_subset","","",167,[[["self"]],["option"]]],[11,"is_in_subset","","",167,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",167,[[["self"]],["ss"]]],[11,"from_subset","","",167,[[["ss"]],["sp"]]],[11,"add","","",168,[[["d2"]]]],[11,"add","","",168,[[["dynamic"]],["dynamic"]]],[11,"add","","",168,[[["d2"]]]],[11,"mul","","",168,[[["d2"]]]],[11,"mul","","",168,[[["dynamic"]],["dynamic"]]],[11,"mul","","",168,[[["d2"]]]],[11,"sub","","",168,[[["d2"]]]],[11,"sub","","",168,[[["dynamic"]],["dynamic"]]],[11,"sub","","",168,[[["d2"]]]],[11,"div","","",168,[[["d2"]]]],[11,"div","","",168,[[["dynamic"]],["dynamic"]]],[11,"div","","",168,[[["d2"]]]],[11,"min","","",168,[[["d2"]]]],[11,"min","","",168,[[["dynamic"]],["dynamic"]]],[11,"min","","",168,[[["d2"]]]],[11,"max","","",168,[[["d2"]]]],[11,"max","","",168,[[["dynamic"]],["dynamic"]]],[11,"max","","",168,[[["d2"]]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"vzip","","",168,[[],["v"]]],[11,"to_subset","","",168,[[["self"]],["option"]]],[11,"is_in_subset","","",168,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",168,[[["self"]],["ss"]]],[11,"from_subset","","",168,[[["ss"]],["sp"]]],[11,"add","","",169,[[["d2"]]]],[11,"add","","",169,[[["dynamic"]],["dynamic"]]],[11,"add","","",169,[[["d2"]]]],[11,"mul","","",169,[[["d2"]]]],[11,"mul","","",169,[[["dynamic"]],["dynamic"]]],[11,"mul","","",169,[[["d2"]]]],[11,"sub","","",169,[[["d2"]]]],[11,"sub","","",169,[[["dynamic"]],["dynamic"]]],[11,"sub","","",169,[[["d2"]]]],[11,"div","","",169,[[["d2"]]]],[11,"div","","",169,[[["dynamic"]],["dynamic"]]],[11,"div","","",169,[[["d2"]]]],[11,"min","","",169,[[["d2"]]]],[11,"min","","",169,[[["dynamic"]],["dynamic"]]],[11,"min","","",169,[[["d2"]]]],[11,"max","","",169,[[["d2"]]]],[11,"max","","",169,[[["dynamic"]],["dynamic"]]],[11,"max","","",169,[[["d2"]]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"vzip","","",169,[[],["v"]]],[11,"to_subset","","",169,[[["self"]],["option"]]],[11,"is_in_subset","","",169,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",169,[[["self"]],["ss"]]],[11,"from_subset","","",169,[[["ss"]],["sp"]]],[11,"add","","",170,[[["d2"]]]],[11,"add","","",170,[[["dynamic"]],["dynamic"]]],[11,"add","","",170,[[["d2"]]]],[11,"mul","","",170,[[["d2"]]]],[11,"mul","","",170,[[["dynamic"]],["dynamic"]]],[11,"mul","","",170,[[["d2"]]]],[11,"sub","","",170,[[["d2"]]]],[11,"sub","","",170,[[["dynamic"]],["dynamic"]]],[11,"sub","","",170,[[["d2"]]]],[11,"div","","",170,[[["d2"]]]],[11,"div","","",170,[[["dynamic"]],["dynamic"]]],[11,"div","","",170,[[["d2"]]]],[11,"min","","",170,[[["d2"]]]],[11,"min","","",170,[[["dynamic"]],["dynamic"]]],[11,"min","","",170,[[["d2"]]]],[11,"max","","",170,[[["d2"]]]],[11,"max","","",170,[[["dynamic"]],["dynamic"]]],[11,"max","","",170,[[["d2"]]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"vzip","","",170,[[],["v"]]],[11,"to_subset","","",170,[[["self"]],["option"]]],[11,"is_in_subset","","",170,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",170,[[["self"]],["ss"]]],[11,"from_subset","","",170,[[["ss"]],["sp"]]],[11,"add","","",171,[[["d2"]]]],[11,"add","","",171,[[["dynamic"]],["dynamic"]]],[11,"add","","",171,[[["d2"]]]],[11,"mul","","",171,[[["d2"]]]],[11,"mul","","",171,[[["dynamic"]],["dynamic"]]],[11,"mul","","",171,[[["d2"]]]],[11,"sub","","",171,[[["d2"]]]],[11,"sub","","",171,[[["dynamic"]],["dynamic"]]],[11,"sub","","",171,[[["d2"]]]],[11,"div","","",171,[[["d2"]]]],[11,"div","","",171,[[["dynamic"]],["dynamic"]]],[11,"div","","",171,[[["d2"]]]],[11,"min","","",171,[[["d2"]]]],[11,"min","","",171,[[["dynamic"]],["dynamic"]]],[11,"min","","",171,[[["d2"]]]],[11,"max","","",171,[[["d2"]]]],[11,"max","","",171,[[["dynamic"]],["dynamic"]]],[11,"max","","",171,[[["d2"]]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"vzip","","",171,[[],["v"]]],[11,"to_subset","","",171,[[["self"]],["option"]]],[11,"is_in_subset","","",171,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",171,[[["self"]],["ss"]]],[11,"from_subset","","",171,[[["ss"]],["sp"]]],[11,"add","","",172,[[["d2"]]]],[11,"add","","",172,[[["dynamic"]],["dynamic"]]],[11,"add","","",172,[[["d2"]]]],[11,"mul","","",172,[[["d2"]]]],[11,"mul","","",172,[[["dynamic"]],["dynamic"]]],[11,"mul","","",172,[[["d2"]]]],[11,"sub","","",172,[[["d2"]]]],[11,"sub","","",172,[[["dynamic"]],["dynamic"]]],[11,"sub","","",172,[[["d2"]]]],[11,"div","","",172,[[["d2"]]]],[11,"div","","",172,[[["dynamic"]],["dynamic"]]],[11,"div","","",172,[[["d2"]]]],[11,"min","","",172,[[["d2"]]]],[11,"min","","",172,[[["dynamic"]],["dynamic"]]],[11,"min","","",172,[[["d2"]]]],[11,"max","","",172,[[["d2"]]]],[11,"max","","",172,[[["dynamic"]],["dynamic"]]],[11,"max","","",172,[[["d2"]]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"vzip","","",172,[[],["v"]]],[11,"to_subset","","",172,[[["self"]],["option"]]],[11,"is_in_subset","","",172,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",172,[[["self"]],["ss"]]],[11,"from_subset","","",172,[[["ss"]],["sp"]]],[11,"add","","",173,[[["d2"]]]],[11,"add","","",173,[[["dynamic"]],["dynamic"]]],[11,"add","","",173,[[["d2"]]]],[11,"mul","","",173,[[["d2"]]]],[11,"mul","","",173,[[["dynamic"]],["dynamic"]]],[11,"mul","","",173,[[["d2"]]]],[11,"sub","","",173,[[["d2"]]]],[11,"sub","","",173,[[["dynamic"]],["dynamic"]]],[11,"sub","","",173,[[["d2"]]]],[11,"div","","",173,[[["d2"]]]],[11,"div","","",173,[[["dynamic"]],["dynamic"]]],[11,"div","","",173,[[["d2"]]]],[11,"min","","",173,[[["d2"]]]],[11,"min","","",173,[[["dynamic"]],["dynamic"]]],[11,"min","","",173,[[["d2"]]]],[11,"max","","",173,[[["d2"]]]],[11,"max","","",173,[[["dynamic"]],["dynamic"]]],[11,"max","","",173,[[["d2"]]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"vzip","","",173,[[],["v"]]],[11,"to_subset","","",173,[[["self"]],["option"]]],[11,"is_in_subset","","",173,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",173,[[["self"]],["ss"]]],[11,"from_subset","","",173,[[["ss"]],["sp"]]],[11,"add","","",174,[[["d2"]]]],[11,"add","","",174,[[["dynamic"]],["dynamic"]]],[11,"add","","",174,[[["d2"]]]],[11,"mul","","",174,[[["d2"]]]],[11,"mul","","",174,[[["dynamic"]],["dynamic"]]],[11,"mul","","",174,[[["d2"]]]],[11,"sub","","",174,[[["d2"]]]],[11,"sub","","",174,[[["dynamic"]],["dynamic"]]],[11,"sub","","",174,[[["d2"]]]],[11,"div","","",174,[[["d2"]]]],[11,"div","","",174,[[["dynamic"]],["dynamic"]]],[11,"div","","",174,[[["d2"]]]],[11,"min","","",174,[[["d2"]]]],[11,"min","","",174,[[["dynamic"]],["dynamic"]]],[11,"min","","",174,[[["d2"]]]],[11,"max","","",174,[[["d2"]]]],[11,"max","","",174,[[["dynamic"]],["dynamic"]]],[11,"max","","",174,[[["d2"]]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"vzip","","",174,[[],["v"]]],[11,"to_subset","","",174,[[["self"]],["option"]]],[11,"is_in_subset","","",174,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",174,[[["self"]],["ss"]]],[11,"from_subset","","",174,[[["ss"]],["sp"]]],[11,"add","","",175,[[["d2"]]]],[11,"add","","",175,[[["dynamic"]],["dynamic"]]],[11,"add","","",175,[[["d2"]]]],[11,"mul","","",175,[[["d2"]]]],[11,"mul","","",175,[[["dynamic"]],["dynamic"]]],[11,"mul","","",175,[[["d2"]]]],[11,"sub","","",175,[[["d2"]]]],[11,"sub","","",175,[[["dynamic"]],["dynamic"]]],[11,"sub","","",175,[[["d2"]]]],[11,"div","","",175,[[["d2"]]]],[11,"div","","",175,[[["dynamic"]],["dynamic"]]],[11,"div","","",175,[[["d2"]]]],[11,"min","","",175,[[["d2"]]]],[11,"min","","",175,[[["dynamic"]],["dynamic"]]],[11,"min","","",175,[[["d2"]]]],[11,"max","","",175,[[["d2"]]]],[11,"max","","",175,[[["dynamic"]],["dynamic"]]],[11,"max","","",175,[[["d2"]]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"vzip","","",175,[[],["v"]]],[11,"to_subset","","",175,[[["self"]],["option"]]],[11,"is_in_subset","","",175,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",175,[[["self"]],["ss"]]],[11,"from_subset","","",175,[[["ss"]],["sp"]]],[11,"add","","",176,[[["d2"]]]],[11,"add","","",176,[[["dynamic"]],["dynamic"]]],[11,"add","","",176,[[["d2"]]]],[11,"mul","","",176,[[["d2"]]]],[11,"mul","","",176,[[["dynamic"]],["dynamic"]]],[11,"mul","","",176,[[["d2"]]]],[11,"sub","","",176,[[["d2"]]]],[11,"sub","","",176,[[["dynamic"]],["dynamic"]]],[11,"sub","","",176,[[["d2"]]]],[11,"div","","",176,[[["d2"]]]],[11,"div","","",176,[[["dynamic"]],["dynamic"]]],[11,"div","","",176,[[["d2"]]]],[11,"min","","",176,[[["d2"]]]],[11,"min","","",176,[[["dynamic"]],["dynamic"]]],[11,"min","","",176,[[["d2"]]]],[11,"max","","",176,[[["d2"]]]],[11,"max","","",176,[[["dynamic"]],["dynamic"]]],[11,"max","","",176,[[["d2"]]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"vzip","","",176,[[],["v"]]],[11,"to_subset","","",176,[[["self"]],["option"]]],[11,"is_in_subset","","",176,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",176,[[["self"]],["ss"]]],[11,"from_subset","","",176,[[["ss"]],["sp"]]],[11,"add","","",177,[[["d2"]]]],[11,"add","","",177,[[["dynamic"]],["dynamic"]]],[11,"add","","",177,[[["d2"]]]],[11,"mul","","",177,[[["d2"]]]],[11,"mul","","",177,[[["dynamic"]],["dynamic"]]],[11,"mul","","",177,[[["d2"]]]],[11,"sub","","",177,[[["d2"]]]],[11,"sub","","",177,[[["dynamic"]],["dynamic"]]],[11,"sub","","",177,[[["d2"]]]],[11,"div","","",177,[[["d2"]]]],[11,"div","","",177,[[["dynamic"]],["dynamic"]]],[11,"div","","",177,[[["d2"]]]],[11,"min","","",177,[[["d2"]]]],[11,"min","","",177,[[["dynamic"]],["dynamic"]]],[11,"min","","",177,[[["d2"]]]],[11,"max","","",177,[[["d2"]]]],[11,"max","","",177,[[["dynamic"]],["dynamic"]]],[11,"max","","",177,[[["d2"]]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"vzip","","",177,[[],["v"]]],[11,"to_subset","","",177,[[["self"]],["option"]]],[11,"is_in_subset","","",177,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",177,[[["self"]],["ss"]]],[11,"from_subset","","",177,[[["ss"]],["sp"]]],[11,"add","","",178,[[["d2"]]]],[11,"add","","",178,[[["dynamic"]],["dynamic"]]],[11,"add","","",178,[[["d2"]]]],[11,"mul","","",178,[[["d2"]]]],[11,"mul","","",178,[[["dynamic"]],["dynamic"]]],[11,"mul","","",178,[[["d2"]]]],[11,"sub","","",178,[[["d2"]]]],[11,"sub","","",178,[[["dynamic"]],["dynamic"]]],[11,"sub","","",178,[[["d2"]]]],[11,"div","","",178,[[["d2"]]]],[11,"div","","",178,[[["dynamic"]],["dynamic"]]],[11,"div","","",178,[[["d2"]]]],[11,"min","","",178,[[["d2"]]]],[11,"min","","",178,[[["dynamic"]],["dynamic"]]],[11,"min","","",178,[[["d2"]]]],[11,"max","","",178,[[["d2"]]]],[11,"max","","",178,[[["dynamic"]],["dynamic"]]],[11,"max","","",178,[[["d2"]]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"vzip","","",178,[[],["v"]]],[11,"to_subset","","",178,[[["self"]],["option"]]],[11,"is_in_subset","","",178,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",178,[[["self"]],["ss"]]],[11,"from_subset","","",178,[[["ss"]],["sp"]]],[11,"add","","",179,[[["d2"]]]],[11,"add","","",179,[[["dynamic"]],["dynamic"]]],[11,"add","","",179,[[["d2"]]]],[11,"mul","","",179,[[["d2"]]]],[11,"mul","","",179,[[["dynamic"]],["dynamic"]]],[11,"mul","","",179,[[["d2"]]]],[11,"sub","","",179,[[["d2"]]]],[11,"sub","","",179,[[["dynamic"]],["dynamic"]]],[11,"sub","","",179,[[["d2"]]]],[11,"div","","",179,[[["d2"]]]],[11,"div","","",179,[[["dynamic"]],["dynamic"]]],[11,"div","","",179,[[["d2"]]]],[11,"min","","",179,[[["d2"]]]],[11,"min","","",179,[[["dynamic"]],["dynamic"]]],[11,"min","","",179,[[["d2"]]]],[11,"max","","",179,[[["d2"]]]],[11,"max","","",179,[[["dynamic"]],["dynamic"]]],[11,"max","","",179,[[["d2"]]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"vzip","","",179,[[],["v"]]],[11,"to_subset","","",179,[[["self"]],["option"]]],[11,"is_in_subset","","",179,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",179,[[["self"]],["ss"]]],[11,"from_subset","","",179,[[["ss"]],["sp"]]],[11,"add","","",180,[[["d2"]]]],[11,"add","","",180,[[["dynamic"]],["dynamic"]]],[11,"add","","",180,[[["d2"]]]],[11,"mul","","",180,[[["d2"]]]],[11,"mul","","",180,[[["dynamic"]],["dynamic"]]],[11,"mul","","",180,[[["d2"]]]],[11,"sub","","",180,[[["d2"]]]],[11,"sub","","",180,[[["dynamic"]],["dynamic"]]],[11,"sub","","",180,[[["d2"]]]],[11,"div","","",180,[[["d2"]]]],[11,"div","","",180,[[["dynamic"]],["dynamic"]]],[11,"div","","",180,[[["d2"]]]],[11,"min","","",180,[[["d2"]]]],[11,"min","","",180,[[["dynamic"]],["dynamic"]]],[11,"min","","",180,[[["d2"]]]],[11,"max","","",180,[[["d2"]]]],[11,"max","","",180,[[["dynamic"]],["dynamic"]]],[11,"max","","",180,[[["d2"]]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"vzip","","",180,[[],["v"]]],[11,"to_subset","","",180,[[["self"]],["option"]]],[11,"is_in_subset","","",180,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",180,[[["self"]],["ss"]]],[11,"from_subset","","",180,[[["ss"]],["sp"]]],[11,"add","","",181,[[["d2"]]]],[11,"add","","",181,[[["dynamic"]],["dynamic"]]],[11,"add","","",181,[[["d2"]]]],[11,"mul","","",181,[[["d2"]]]],[11,"mul","","",181,[[["dynamic"]],["dynamic"]]],[11,"mul","","",181,[[["d2"]]]],[11,"sub","","",181,[[["d2"]]]],[11,"sub","","",181,[[["dynamic"]],["dynamic"]]],[11,"sub","","",181,[[["d2"]]]],[11,"div","","",181,[[["d2"]]]],[11,"div","","",181,[[["dynamic"]],["dynamic"]]],[11,"div","","",181,[[["d2"]]]],[11,"min","","",181,[[["d2"]]]],[11,"min","","",181,[[["dynamic"]],["dynamic"]]],[11,"min","","",181,[[["d2"]]]],[11,"max","","",181,[[["d2"]]]],[11,"max","","",181,[[["dynamic"]],["dynamic"]]],[11,"max","","",181,[[["d2"]]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"vzip","","",181,[[],["v"]]],[11,"to_subset","","",181,[[["self"]],["option"]]],[11,"is_in_subset","","",181,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",181,[[["self"]],["ss"]]],[11,"from_subset","","",181,[[["ss"]],["sp"]]],[11,"add","","",182,[[["d2"]]]],[11,"add","","",182,[[["dynamic"]],["dynamic"]]],[11,"add","","",182,[[["d2"]]]],[11,"mul","","",182,[[["d2"]]]],[11,"mul","","",182,[[["dynamic"]],["dynamic"]]],[11,"mul","","",182,[[["d2"]]]],[11,"sub","","",182,[[["d2"]]]],[11,"sub","","",182,[[["dynamic"]],["dynamic"]]],[11,"sub","","",182,[[["d2"]]]],[11,"div","","",182,[[["d2"]]]],[11,"div","","",182,[[["dynamic"]],["dynamic"]]],[11,"div","","",182,[[["d2"]]]],[11,"min","","",182,[[["d2"]]]],[11,"min","","",182,[[["dynamic"]],["dynamic"]]],[11,"min","","",182,[[["d2"]]]],[11,"max","","",182,[[["d2"]]]],[11,"max","","",182,[[["dynamic"]],["dynamic"]]],[11,"max","","",182,[[["d2"]]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"vzip","","",182,[[],["v"]]],[11,"to_subset","","",182,[[["self"]],["option"]]],[11,"is_in_subset","","",182,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",182,[[["self"]],["ss"]]],[11,"from_subset","","",182,[[["ss"]],["sp"]]],[11,"add","","",183,[[["d2"]]]],[11,"add","","",183,[[["dynamic"]],["dynamic"]]],[11,"add","","",183,[[["d2"]]]],[11,"mul","","",183,[[["d2"]]]],[11,"mul","","",183,[[["dynamic"]],["dynamic"]]],[11,"mul","","",183,[[["d2"]]]],[11,"sub","","",183,[[["d2"]]]],[11,"sub","","",183,[[["dynamic"]],["dynamic"]]],[11,"sub","","",183,[[["d2"]]]],[11,"div","","",183,[[["d2"]]]],[11,"div","","",183,[[["dynamic"]],["dynamic"]]],[11,"div","","",183,[[["d2"]]]],[11,"min","","",183,[[["d2"]]]],[11,"min","","",183,[[["dynamic"]],["dynamic"]]],[11,"min","","",183,[[["d2"]]]],[11,"max","","",183,[[["d2"]]]],[11,"max","","",183,[[["dynamic"]],["dynamic"]]],[11,"max","","",183,[[["d2"]]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"vzip","","",183,[[],["v"]]],[11,"to_subset","","",183,[[["self"]],["option"]]],[11,"is_in_subset","","",183,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",183,[[["self"]],["ss"]]],[11,"from_subset","","",183,[[["ss"]],["sp"]]],[11,"add","","",184,[[["d2"]]]],[11,"add","","",184,[[["dynamic"]],["dynamic"]]],[11,"add","","",184,[[["d2"]]]],[11,"mul","","",184,[[["d2"]]]],[11,"mul","","",184,[[["dynamic"]],["dynamic"]]],[11,"mul","","",184,[[["d2"]]]],[11,"sub","","",184,[[["d2"]]]],[11,"sub","","",184,[[["dynamic"]],["dynamic"]]],[11,"sub","","",184,[[["d2"]]]],[11,"div","","",184,[[["d2"]]]],[11,"div","","",184,[[["dynamic"]],["dynamic"]]],[11,"div","","",184,[[["d2"]]]],[11,"min","","",184,[[["d2"]]]],[11,"min","","",184,[[["dynamic"]],["dynamic"]]],[11,"min","","",184,[[["d2"]]]],[11,"max","","",184,[[["d2"]]]],[11,"max","","",184,[[["dynamic"]],["dynamic"]]],[11,"max","","",184,[[["d2"]]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"vzip","","",184,[[],["v"]]],[11,"to_subset","","",184,[[["self"]],["option"]]],[11,"is_in_subset","","",184,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",184,[[["self"]],["ss"]]],[11,"from_subset","","",184,[[["ss"]],["sp"]]],[11,"add","","",185,[[["d2"]]]],[11,"add","","",185,[[["dynamic"]],["dynamic"]]],[11,"add","","",185,[[["d2"]]]],[11,"mul","","",185,[[["d2"]]]],[11,"mul","","",185,[[["dynamic"]],["dynamic"]]],[11,"mul","","",185,[[["d2"]]]],[11,"sub","","",185,[[["d2"]]]],[11,"sub","","",185,[[["dynamic"]],["dynamic"]]],[11,"sub","","",185,[[["d2"]]]],[11,"div","","",185,[[["d2"]]]],[11,"div","","",185,[[["dynamic"]],["dynamic"]]],[11,"div","","",185,[[["d2"]]]],[11,"min","","",185,[[["d2"]]]],[11,"min","","",185,[[["dynamic"]],["dynamic"]]],[11,"min","","",185,[[["d2"]]]],[11,"max","","",185,[[["d2"]]]],[11,"max","","",185,[[["dynamic"]],["dynamic"]]],[11,"max","","",185,[[["d2"]]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"vzip","","",185,[[],["v"]]],[11,"to_subset","","",185,[[["self"]],["option"]]],[11,"is_in_subset","","",185,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",185,[[["self"]],["ss"]]],[11,"from_subset","","",185,[[["ss"]],["sp"]]],[11,"add","","",186,[[["d2"]]]],[11,"add","","",186,[[["dynamic"]],["dynamic"]]],[11,"add","","",186,[[["d2"]]]],[11,"mul","","",186,[[["d2"]]]],[11,"mul","","",186,[[["dynamic"]],["dynamic"]]],[11,"mul","","",186,[[["d2"]]]],[11,"sub","","",186,[[["d2"]]]],[11,"sub","","",186,[[["dynamic"]],["dynamic"]]],[11,"sub","","",186,[[["d2"]]]],[11,"div","","",186,[[["d2"]]]],[11,"div","","",186,[[["dynamic"]],["dynamic"]]],[11,"div","","",186,[[["d2"]]]],[11,"min","","",186,[[["d2"]]]],[11,"min","","",186,[[["dynamic"]],["dynamic"]]],[11,"min","","",186,[[["d2"]]]],[11,"max","","",186,[[["d2"]]]],[11,"max","","",186,[[["dynamic"]],["dynamic"]]],[11,"max","","",186,[[["d2"]]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"vzip","","",186,[[],["v"]]],[11,"to_subset","","",186,[[["self"]],["option"]]],[11,"is_in_subset","","",186,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",186,[[["self"]],["ss"]]],[11,"from_subset","","",186,[[["ss"]],["sp"]]],[11,"add","","",187,[[["d2"]]]],[11,"add","","",187,[[["dynamic"]],["dynamic"]]],[11,"add","","",187,[[["d2"]]]],[11,"mul","","",187,[[["d2"]]]],[11,"mul","","",187,[[["dynamic"]],["dynamic"]]],[11,"mul","","",187,[[["d2"]]]],[11,"sub","","",187,[[["d2"]]]],[11,"sub","","",187,[[["dynamic"]],["dynamic"]]],[11,"sub","","",187,[[["d2"]]]],[11,"div","","",187,[[["d2"]]]],[11,"div","","",187,[[["dynamic"]],["dynamic"]]],[11,"div","","",187,[[["d2"]]]],[11,"min","","",187,[[["d2"]]]],[11,"min","","",187,[[["dynamic"]],["dynamic"]]],[11,"min","","",187,[[["d2"]]]],[11,"max","","",187,[[["d2"]]]],[11,"max","","",187,[[["dynamic"]],["dynamic"]]],[11,"max","","",187,[[["d2"]]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"vzip","","",187,[[],["v"]]],[11,"to_subset","","",187,[[["self"]],["option"]]],[11,"is_in_subset","","",187,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",187,[[["self"]],["ss"]]],[11,"from_subset","","",187,[[["ss"]],["sp"]]],[11,"add","","",188,[[["d2"]]]],[11,"add","","",188,[[["dynamic"]],["dynamic"]]],[11,"add","","",188,[[["d2"]]]],[11,"mul","","",188,[[["d2"]]]],[11,"mul","","",188,[[["dynamic"]],["dynamic"]]],[11,"mul","","",188,[[["d2"]]]],[11,"sub","","",188,[[["d2"]]]],[11,"sub","","",188,[[["dynamic"]],["dynamic"]]],[11,"sub","","",188,[[["d2"]]]],[11,"div","","",188,[[["d2"]]]],[11,"div","","",188,[[["dynamic"]],["dynamic"]]],[11,"div","","",188,[[["d2"]]]],[11,"min","","",188,[[["d2"]]]],[11,"min","","",188,[[["dynamic"]],["dynamic"]]],[11,"min","","",188,[[["d2"]]]],[11,"max","","",188,[[["d2"]]]],[11,"max","","",188,[[["dynamic"]],["dynamic"]]],[11,"max","","",188,[[["d2"]]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"vzip","","",188,[[],["v"]]],[11,"to_subset","","",188,[[["self"]],["option"]]],[11,"is_in_subset","","",188,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",188,[[["self"]],["ss"]]],[11,"from_subset","","",188,[[["ss"]],["sp"]]],[11,"add","","",189,[[["d2"]]]],[11,"add","","",189,[[["dynamic"]],["dynamic"]]],[11,"add","","",189,[[["d2"]]]],[11,"mul","","",189,[[["d2"]]]],[11,"mul","","",189,[[["dynamic"]],["dynamic"]]],[11,"mul","","",189,[[["d2"]]]],[11,"sub","","",189,[[["d2"]]]],[11,"sub","","",189,[[["dynamic"]],["dynamic"]]],[11,"sub","","",189,[[["d2"]]]],[11,"div","","",189,[[["d2"]]]],[11,"div","","",189,[[["dynamic"]],["dynamic"]]],[11,"div","","",189,[[["d2"]]]],[11,"min","","",189,[[["d2"]]]],[11,"min","","",189,[[["dynamic"]],["dynamic"]]],[11,"min","","",189,[[["d2"]]]],[11,"max","","",189,[[["d2"]]]],[11,"max","","",189,[[["dynamic"]],["dynamic"]]],[11,"max","","",189,[[["d2"]]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"vzip","","",189,[[],["v"]]],[11,"to_subset","","",189,[[["self"]],["option"]]],[11,"is_in_subset","","",189,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",189,[[["self"]],["ss"]]],[11,"from_subset","","",189,[[["ss"]],["sp"]]],[11,"add","","",190,[[["d2"]]]],[11,"add","","",190,[[["dynamic"]],["dynamic"]]],[11,"add","","",190,[[["d2"]]]],[11,"mul","","",190,[[["d2"]]]],[11,"mul","","",190,[[["dynamic"]],["dynamic"]]],[11,"mul","","",190,[[["d2"]]]],[11,"sub","","",190,[[["d2"]]]],[11,"sub","","",190,[[["dynamic"]],["dynamic"]]],[11,"sub","","",190,[[["d2"]]]],[11,"div","","",190,[[["d2"]]]],[11,"div","","",190,[[["dynamic"]],["dynamic"]]],[11,"div","","",190,[[["d2"]]]],[11,"min","","",190,[[["d2"]]]],[11,"min","","",190,[[["dynamic"]],["dynamic"]]],[11,"min","","",190,[[["d2"]]]],[11,"max","","",190,[[["d2"]]]],[11,"max","","",190,[[["dynamic"]],["dynamic"]]],[11,"max","","",190,[[["d2"]]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"vzip","","",190,[[],["v"]]],[11,"to_subset","","",190,[[["self"]],["option"]]],[11,"is_in_subset","","",190,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",190,[[["self"]],["ss"]]],[11,"from_subset","","",190,[[["ss"]],["sp"]]],[11,"add","","",191,[[["d2"]]]],[11,"add","","",191,[[["dynamic"]],["dynamic"]]],[11,"add","","",191,[[["d2"]]]],[11,"mul","","",191,[[["d2"]]]],[11,"mul","","",191,[[["dynamic"]],["dynamic"]]],[11,"mul","","",191,[[["d2"]]]],[11,"sub","","",191,[[["d2"]]]],[11,"sub","","",191,[[["dynamic"]],["dynamic"]]],[11,"sub","","",191,[[["d2"]]]],[11,"div","","",191,[[["d2"]]]],[11,"div","","",191,[[["dynamic"]],["dynamic"]]],[11,"div","","",191,[[["d2"]]]],[11,"min","","",191,[[["d2"]]]],[11,"min","","",191,[[["dynamic"]],["dynamic"]]],[11,"min","","",191,[[["d2"]]]],[11,"max","","",191,[[["d2"]]]],[11,"max","","",191,[[["dynamic"]],["dynamic"]]],[11,"max","","",191,[[["d2"]]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"vzip","","",191,[[],["v"]]],[11,"to_subset","","",191,[[["self"]],["option"]]],[11,"is_in_subset","","",191,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",191,[[["self"]],["ss"]]],[11,"from_subset","","",191,[[["ss"]],["sp"]]],[11,"add","","",192,[[["d2"]]]],[11,"add","","",192,[[["dynamic"]],["dynamic"]]],[11,"add","","",192,[[["d2"]]]],[11,"mul","","",192,[[["d2"]]]],[11,"mul","","",192,[[["dynamic"]],["dynamic"]]],[11,"mul","","",192,[[["d2"]]]],[11,"sub","","",192,[[["d2"]]]],[11,"sub","","",192,[[["dynamic"]],["dynamic"]]],[11,"sub","","",192,[[["d2"]]]],[11,"div","","",192,[[["d2"]]]],[11,"div","","",192,[[["dynamic"]],["dynamic"]]],[11,"div","","",192,[[["d2"]]]],[11,"min","","",192,[[["d2"]]]],[11,"min","","",192,[[["dynamic"]],["dynamic"]]],[11,"min","","",192,[[["d2"]]]],[11,"max","","",192,[[["d2"]]]],[11,"max","","",192,[[["dynamic"]],["dynamic"]]],[11,"max","","",192,[[["d2"]]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"vzip","","",192,[[],["v"]]],[11,"to_subset","","",192,[[["self"]],["option"]]],[11,"is_in_subset","","",192,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",192,[[["self"]],["ss"]]],[11,"from_subset","","",192,[[["ss"]],["sp"]]],[11,"add","","",193,[[["d2"]]]],[11,"add","","",193,[[["dynamic"]],["dynamic"]]],[11,"add","","",193,[[["d2"]]]],[11,"mul","","",193,[[["d2"]]]],[11,"mul","","",193,[[["dynamic"]],["dynamic"]]],[11,"mul","","",193,[[["d2"]]]],[11,"sub","","",193,[[["d2"]]]],[11,"sub","","",193,[[["dynamic"]],["dynamic"]]],[11,"sub","","",193,[[["d2"]]]],[11,"div","","",193,[[["d2"]]]],[11,"div","","",193,[[["dynamic"]],["dynamic"]]],[11,"div","","",193,[[["d2"]]]],[11,"min","","",193,[[["d2"]]]],[11,"min","","",193,[[["dynamic"]],["dynamic"]]],[11,"min","","",193,[[["d2"]]]],[11,"max","","",193,[[["d2"]]]],[11,"max","","",193,[[["dynamic"]],["dynamic"]]],[11,"max","","",193,[[["d2"]]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"vzip","","",193,[[],["v"]]],[11,"to_subset","","",193,[[["self"]],["option"]]],[11,"is_in_subset","","",193,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",193,[[["self"]],["ss"]]],[11,"from_subset","","",193,[[["ss"]],["sp"]]],[11,"add","","",194,[[["d2"]]]],[11,"add","","",194,[[["dynamic"]],["dynamic"]]],[11,"add","","",194,[[["d2"]]]],[11,"mul","","",194,[[["d2"]]]],[11,"mul","","",194,[[["dynamic"]],["dynamic"]]],[11,"mul","","",194,[[["d2"]]]],[11,"sub","","",194,[[["d2"]]]],[11,"sub","","",194,[[["dynamic"]],["dynamic"]]],[11,"sub","","",194,[[["d2"]]]],[11,"div","","",194,[[["d2"]]]],[11,"div","","",194,[[["dynamic"]],["dynamic"]]],[11,"div","","",194,[[["d2"]]]],[11,"min","","",194,[[["d2"]]]],[11,"min","","",194,[[["dynamic"]],["dynamic"]]],[11,"min","","",194,[[["d2"]]]],[11,"max","","",194,[[["d2"]]]],[11,"max","","",194,[[["dynamic"]],["dynamic"]]],[11,"max","","",194,[[["d2"]]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"vzip","","",194,[[],["v"]]],[11,"to_subset","","",194,[[["self"]],["option"]]],[11,"is_in_subset","","",194,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",194,[[["self"]],["ss"]]],[11,"from_subset","","",194,[[["ss"]],["sp"]]],[11,"add","","",195,[[["d2"]]]],[11,"add","","",195,[[["dynamic"]],["dynamic"]]],[11,"add","","",195,[[["d2"]]]],[11,"mul","","",195,[[["d2"]]]],[11,"mul","","",195,[[["dynamic"]],["dynamic"]]],[11,"mul","","",195,[[["d2"]]]],[11,"sub","","",195,[[["d2"]]]],[11,"sub","","",195,[[["dynamic"]],["dynamic"]]],[11,"sub","","",195,[[["d2"]]]],[11,"div","","",195,[[["d2"]]]],[11,"div","","",195,[[["dynamic"]],["dynamic"]]],[11,"div","","",195,[[["d2"]]]],[11,"min","","",195,[[["d2"]]]],[11,"min","","",195,[[["dynamic"]],["dynamic"]]],[11,"min","","",195,[[["d2"]]]],[11,"max","","",195,[[["d2"]]]],[11,"max","","",195,[[["dynamic"]],["dynamic"]]],[11,"max","","",195,[[["d2"]]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"vzip","","",195,[[],["v"]]],[11,"to_subset","","",195,[[["self"]],["option"]]],[11,"is_in_subset","","",195,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",195,[[["self"]],["ss"]]],[11,"from_subset","","",195,[[["ss"]],["sp"]]],[11,"add","","",196,[[["d2"]]]],[11,"add","","",196,[[["dynamic"]],["dynamic"]]],[11,"add","","",196,[[["d2"]]]],[11,"mul","","",196,[[["d2"]]]],[11,"mul","","",196,[[["dynamic"]],["dynamic"]]],[11,"mul","","",196,[[["d2"]]]],[11,"sub","","",196,[[["d2"]]]],[11,"sub","","",196,[[["dynamic"]],["dynamic"]]],[11,"sub","","",196,[[["d2"]]]],[11,"div","","",196,[[["d2"]]]],[11,"div","","",196,[[["dynamic"]],["dynamic"]]],[11,"div","","",196,[[["d2"]]]],[11,"min","","",196,[[["d2"]]]],[11,"min","","",196,[[["dynamic"]],["dynamic"]]],[11,"min","","",196,[[["d2"]]]],[11,"max","","",196,[[["d2"]]]],[11,"max","","",196,[[["dynamic"]],["dynamic"]]],[11,"max","","",196,[[["d2"]]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"vzip","","",196,[[],["v"]]],[11,"to_subset","","",196,[[["self"]],["option"]]],[11,"is_in_subset","","",196,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",196,[[["self"]],["ss"]]],[11,"from_subset","","",196,[[["ss"]],["sp"]]],[11,"add","","",197,[[["d2"]]]],[11,"add","","",197,[[["dynamic"]],["dynamic"]]],[11,"add","","",197,[[["d2"]]]],[11,"mul","","",197,[[["d2"]]]],[11,"mul","","",197,[[["dynamic"]],["dynamic"]]],[11,"mul","","",197,[[["d2"]]]],[11,"sub","","",197,[[["d2"]]]],[11,"sub","","",197,[[["dynamic"]],["dynamic"]]],[11,"sub","","",197,[[["d2"]]]],[11,"div","","",197,[[["d2"]]]],[11,"div","","",197,[[["dynamic"]],["dynamic"]]],[11,"div","","",197,[[["d2"]]]],[11,"min","","",197,[[["d2"]]]],[11,"min","","",197,[[["dynamic"]],["dynamic"]]],[11,"min","","",197,[[["d2"]]]],[11,"max","","",197,[[["d2"]]]],[11,"max","","",197,[[["dynamic"]],["dynamic"]]],[11,"max","","",197,[[["d2"]]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,[[["self"],["t"]]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"vzip","","",197,[[],["v"]]],[11,"to_subset","","",197,[[["self"]],["option"]]],[11,"is_in_subset","","",197,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",197,[[["self"]],["ss"]]],[11,"from_subset","","",197,[[["ss"]],["sp"]]],[11,"add","","",198,[[["d2"]]]],[11,"add","","",198,[[["dynamic"]],["dynamic"]]],[11,"add","","",198,[[["d2"]]]],[11,"mul","","",198,[[["d2"]]]],[11,"mul","","",198,[[["dynamic"]],["dynamic"]]],[11,"mul","","",198,[[["d2"]]]],[11,"sub","","",198,[[["d2"]]]],[11,"sub","","",198,[[["dynamic"]],["dynamic"]]],[11,"sub","","",198,[[["d2"]]]],[11,"div","","",198,[[["d2"]]]],[11,"div","","",198,[[["dynamic"]],["dynamic"]]],[11,"div","","",198,[[["d2"]]]],[11,"min","","",198,[[["d2"]]]],[11,"min","","",198,[[["dynamic"]],["dynamic"]]],[11,"min","","",198,[[["d2"]]]],[11,"max","","",198,[[["d2"]]]],[11,"max","","",198,[[["dynamic"]],["dynamic"]]],[11,"max","","",198,[[["d2"]]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,[[["self"],["t"]]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"vzip","","",198,[[],["v"]]],[11,"to_subset","","",198,[[["self"]],["option"]]],[11,"is_in_subset","","",198,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",198,[[["self"]],["ss"]]],[11,"from_subset","","",198,[[["ss"]],["sp"]]],[11,"add","","",199,[[["d2"]]]],[11,"add","","",199,[[["dynamic"]],["dynamic"]]],[11,"add","","",199,[[["d2"]]]],[11,"mul","","",199,[[["d2"]]]],[11,"mul","","",199,[[["dynamic"]],["dynamic"]]],[11,"mul","","",199,[[["d2"]]]],[11,"sub","","",199,[[["d2"]]]],[11,"sub","","",199,[[["dynamic"]],["dynamic"]]],[11,"sub","","",199,[[["d2"]]]],[11,"div","","",199,[[["d2"]]]],[11,"div","","",199,[[["dynamic"]],["dynamic"]]],[11,"div","","",199,[[["d2"]]]],[11,"min","","",199,[[["d2"]]]],[11,"min","","",199,[[["dynamic"]],["dynamic"]]],[11,"min","","",199,[[["d2"]]]],[11,"max","","",199,[[["d2"]]]],[11,"max","","",199,[[["dynamic"]],["dynamic"]]],[11,"max","","",199,[[["d2"]]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,[[["self"],["t"]]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"vzip","","",199,[[],["v"]]],[11,"to_subset","","",199,[[["self"]],["option"]]],[11,"is_in_subset","","",199,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",199,[[["self"]],["ss"]]],[11,"from_subset","","",199,[[["ss"]],["sp"]]],[11,"add","","",200,[[["d2"]]]],[11,"add","","",200,[[["dynamic"]],["dynamic"]]],[11,"add","","",200,[[["d2"]]]],[11,"mul","","",200,[[["d2"]]]],[11,"mul","","",200,[[["dynamic"]],["dynamic"]]],[11,"mul","","",200,[[["d2"]]]],[11,"sub","","",200,[[["d2"]]]],[11,"sub","","",200,[[["dynamic"]],["dynamic"]]],[11,"sub","","",200,[[["d2"]]]],[11,"div","","",200,[[["d2"]]]],[11,"div","","",200,[[["dynamic"]],["dynamic"]]],[11,"div","","",200,[[["d2"]]]],[11,"min","","",200,[[["d2"]]]],[11,"min","","",200,[[["dynamic"]],["dynamic"]]],[11,"min","","",200,[[["d2"]]]],[11,"max","","",200,[[["d2"]]]],[11,"max","","",200,[[["dynamic"]],["dynamic"]]],[11,"max","","",200,[[["d2"]]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,[[["self"],["t"]]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"vzip","","",200,[[],["v"]]],[11,"to_subset","","",200,[[["self"]],["option"]]],[11,"is_in_subset","","",200,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",200,[[["self"]],["ss"]]],[11,"from_subset","","",200,[[["ss"]],["sp"]]],[11,"add","","",201,[[["d2"]]]],[11,"add","","",201,[[["dynamic"]],["dynamic"]]],[11,"add","","",201,[[["d2"]]]],[11,"mul","","",201,[[["d2"]]]],[11,"mul","","",201,[[["dynamic"]],["dynamic"]]],[11,"mul","","",201,[[["d2"]]]],[11,"sub","","",201,[[["d2"]]]],[11,"sub","","",201,[[["dynamic"]],["dynamic"]]],[11,"sub","","",201,[[["d2"]]]],[11,"div","","",201,[[["d2"]]]],[11,"div","","",201,[[["dynamic"]],["dynamic"]]],[11,"div","","",201,[[["d2"]]]],[11,"min","","",201,[[["d2"]]]],[11,"min","","",201,[[["dynamic"]],["dynamic"]]],[11,"min","","",201,[[["d2"]]]],[11,"max","","",201,[[["d2"]]]],[11,"max","","",201,[[["dynamic"]],["dynamic"]]],[11,"max","","",201,[[["d2"]]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,[[["self"],["t"]]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"vzip","","",201,[[],["v"]]],[11,"to_subset","","",201,[[["self"]],["option"]]],[11,"is_in_subset","","",201,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",201,[[["self"]],["ss"]]],[11,"from_subset","","",201,[[["ss"]],["sp"]]],[11,"add","","",202,[[["d2"]]]],[11,"add","","",202,[[["dynamic"]],["dynamic"]]],[11,"add","","",202,[[["d2"]]]],[11,"mul","","",202,[[["d2"]]]],[11,"mul","","",202,[[["dynamic"]],["dynamic"]]],[11,"mul","","",202,[[["d2"]]]],[11,"sub","","",202,[[["d2"]]]],[11,"sub","","",202,[[["dynamic"]],["dynamic"]]],[11,"sub","","",202,[[["d2"]]]],[11,"div","","",202,[[["d2"]]]],[11,"div","","",202,[[["dynamic"]],["dynamic"]]],[11,"div","","",202,[[["d2"]]]],[11,"min","","",202,[[["d2"]]]],[11,"min","","",202,[[["dynamic"]],["dynamic"]]],[11,"min","","",202,[[["d2"]]]],[11,"max","","",202,[[["d2"]]]],[11,"max","","",202,[[["dynamic"]],["dynamic"]]],[11,"max","","",202,[[["d2"]]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"vzip","","",202,[[],["v"]]],[11,"to_subset","","",202,[[["self"]],["option"]]],[11,"is_in_subset","","",202,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",202,[[["self"]],["ss"]]],[11,"from_subset","","",202,[[["ss"]],["sp"]]],[11,"add","","",203,[[["d2"]]]],[11,"add","","",203,[[["dynamic"]],["dynamic"]]],[11,"add","","",203,[[["d2"]]]],[11,"mul","","",203,[[["d2"]]]],[11,"mul","","",203,[[["dynamic"]],["dynamic"]]],[11,"mul","","",203,[[["d2"]]]],[11,"sub","","",203,[[["d2"]]]],[11,"sub","","",203,[[["dynamic"]],["dynamic"]]],[11,"sub","","",203,[[["d2"]]]],[11,"div","","",203,[[["d2"]]]],[11,"div","","",203,[[["dynamic"]],["dynamic"]]],[11,"div","","",203,[[["d2"]]]],[11,"min","","",203,[[["d2"]]]],[11,"min","","",203,[[["dynamic"]],["dynamic"]]],[11,"min","","",203,[[["d2"]]]],[11,"max","","",203,[[["d2"]]]],[11,"max","","",203,[[["dynamic"]],["dynamic"]]],[11,"max","","",203,[[["d2"]]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,[[["self"],["t"]]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"vzip","","",203,[[],["v"]]],[11,"to_subset","","",203,[[["self"]],["option"]]],[11,"is_in_subset","","",203,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",203,[[["self"]],["ss"]]],[11,"from_subset","","",203,[[["ss"]],["sp"]]],[11,"add","","",204,[[["d2"]]]],[11,"add","","",204,[[["dynamic"]],["dynamic"]]],[11,"add","","",204,[[["d2"]]]],[11,"mul","","",204,[[["d2"]]]],[11,"mul","","",204,[[["dynamic"]],["dynamic"]]],[11,"mul","","",204,[[["d2"]]]],[11,"sub","","",204,[[["d2"]]]],[11,"sub","","",204,[[["dynamic"]],["dynamic"]]],[11,"sub","","",204,[[["d2"]]]],[11,"div","","",204,[[["d2"]]]],[11,"div","","",204,[[["dynamic"]],["dynamic"]]],[11,"div","","",204,[[["d2"]]]],[11,"min","","",204,[[["d2"]]]],[11,"min","","",204,[[["dynamic"]],["dynamic"]]],[11,"min","","",204,[[["d2"]]]],[11,"max","","",204,[[["d2"]]]],[11,"max","","",204,[[["dynamic"]],["dynamic"]]],[11,"max","","",204,[[["d2"]]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,[[["self"],["t"]]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"vzip","","",204,[[],["v"]]],[11,"to_subset","","",204,[[["self"]],["option"]]],[11,"is_in_subset","","",204,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",204,[[["self"]],["ss"]]],[11,"from_subset","","",204,[[["ss"]],["sp"]]],[11,"add","","",205,[[["d2"]]]],[11,"add","","",205,[[["dynamic"]],["dynamic"]]],[11,"add","","",205,[[["d2"]]]],[11,"mul","","",205,[[["d2"]]]],[11,"mul","","",205,[[["dynamic"]],["dynamic"]]],[11,"mul","","",205,[[["d2"]]]],[11,"sub","","",205,[[["d2"]]]],[11,"sub","","",205,[[["dynamic"]],["dynamic"]]],[11,"sub","","",205,[[["d2"]]]],[11,"div","","",205,[[["d2"]]]],[11,"div","","",205,[[["dynamic"]],["dynamic"]]],[11,"div","","",205,[[["d2"]]]],[11,"min","","",205,[[["d2"]]]],[11,"min","","",205,[[["dynamic"]],["dynamic"]]],[11,"min","","",205,[[["d2"]]]],[11,"max","","",205,[[["d2"]]]],[11,"max","","",205,[[["dynamic"]],["dynamic"]]],[11,"max","","",205,[[["d2"]]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"vzip","","",205,[[],["v"]]],[11,"to_subset","","",205,[[["self"]],["option"]]],[11,"is_in_subset","","",205,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",205,[[["self"]],["ss"]]],[11,"from_subset","","",205,[[["ss"]],["sp"]]],[11,"add","","",206,[[["d2"]]]],[11,"add","","",206,[[["dynamic"]],["dynamic"]]],[11,"add","","",206,[[["d2"]]]],[11,"mul","","",206,[[["d2"]]]],[11,"mul","","",206,[[["dynamic"]],["dynamic"]]],[11,"mul","","",206,[[["d2"]]]],[11,"sub","","",206,[[["d2"]]]],[11,"sub","","",206,[[["dynamic"]],["dynamic"]]],[11,"sub","","",206,[[["d2"]]]],[11,"div","","",206,[[["d2"]]]],[11,"div","","",206,[[["dynamic"]],["dynamic"]]],[11,"div","","",206,[[["d2"]]]],[11,"min","","",206,[[["d2"]]]],[11,"min","","",206,[[["dynamic"]],["dynamic"]]],[11,"min","","",206,[[["d2"]]]],[11,"max","","",206,[[["d2"]]]],[11,"max","","",206,[[["dynamic"]],["dynamic"]]],[11,"max","","",206,[[["d2"]]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"vzip","","",206,[[],["v"]]],[11,"to_subset","","",206,[[["self"]],["option"]]],[11,"is_in_subset","","",206,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",206,[[["self"]],["ss"]]],[11,"from_subset","","",206,[[["ss"]],["sp"]]],[11,"add","","",207,[[["d2"]]]],[11,"add","","",207,[[["dynamic"]],["dynamic"]]],[11,"add","","",207,[[["d2"]]]],[11,"mul","","",207,[[["d2"]]]],[11,"mul","","",207,[[["dynamic"]],["dynamic"]]],[11,"mul","","",207,[[["d2"]]]],[11,"sub","","",207,[[["d2"]]]],[11,"sub","","",207,[[["dynamic"]],["dynamic"]]],[11,"sub","","",207,[[["d2"]]]],[11,"div","","",207,[[["d2"]]]],[11,"div","","",207,[[["dynamic"]],["dynamic"]]],[11,"div","","",207,[[["d2"]]]],[11,"min","","",207,[[["d2"]]]],[11,"min","","",207,[[["dynamic"]],["dynamic"]]],[11,"min","","",207,[[["d2"]]]],[11,"max","","",207,[[["d2"]]]],[11,"max","","",207,[[["dynamic"]],["dynamic"]]],[11,"max","","",207,[[["d2"]]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"vzip","","",207,[[],["v"]]],[11,"to_subset","","",207,[[["self"]],["option"]]],[11,"is_in_subset","","",207,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",207,[[["self"]],["ss"]]],[11,"from_subset","","",207,[[["ss"]],["sp"]]],[11,"add","","",208,[[["d2"]]]],[11,"add","","",208,[[["dynamic"]],["dynamic"]]],[11,"add","","",208,[[["d2"]]]],[11,"mul","","",208,[[["d2"]]]],[11,"mul","","",208,[[["dynamic"]],["dynamic"]]],[11,"mul","","",208,[[["d2"]]]],[11,"sub","","",208,[[["d2"]]]],[11,"sub","","",208,[[["dynamic"]],["dynamic"]]],[11,"sub","","",208,[[["d2"]]]],[11,"div","","",208,[[["d2"]]]],[11,"div","","",208,[[["dynamic"]],["dynamic"]]],[11,"div","","",208,[[["d2"]]]],[11,"min","","",208,[[["d2"]]]],[11,"min","","",208,[[["dynamic"]],["dynamic"]]],[11,"min","","",208,[[["d2"]]]],[11,"max","","",208,[[["d2"]]]],[11,"max","","",208,[[["dynamic"]],["dynamic"]]],[11,"max","","",208,[[["d2"]]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"vzip","","",208,[[],["v"]]],[11,"to_subset","","",208,[[["self"]],["option"]]],[11,"is_in_subset","","",208,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",208,[[["self"]],["ss"]]],[11,"from_subset","","",208,[[["ss"]],["sp"]]],[11,"add","","",209,[[["d2"]]]],[11,"add","","",209,[[["dynamic"]],["dynamic"]]],[11,"add","","",209,[[["d2"]]]],[11,"mul","","",209,[[["d2"]]]],[11,"mul","","",209,[[["dynamic"]],["dynamic"]]],[11,"mul","","",209,[[["d2"]]]],[11,"sub","","",209,[[["d2"]]]],[11,"sub","","",209,[[["dynamic"]],["dynamic"]]],[11,"sub","","",209,[[["d2"]]]],[11,"div","","",209,[[["d2"]]]],[11,"div","","",209,[[["dynamic"]],["dynamic"]]],[11,"div","","",209,[[["d2"]]]],[11,"min","","",209,[[["d2"]]]],[11,"min","","",209,[[["dynamic"]],["dynamic"]]],[11,"min","","",209,[[["d2"]]]],[11,"max","","",209,[[["d2"]]]],[11,"max","","",209,[[["dynamic"]],["dynamic"]]],[11,"max","","",209,[[["d2"]]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"vzip","","",209,[[],["v"]]],[11,"to_subset","","",209,[[["self"]],["option"]]],[11,"is_in_subset","","",209,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",209,[[["self"]],["ss"]]],[11,"from_subset","","",209,[[["ss"]],["sp"]]],[11,"add","","",210,[[["d2"]]]],[11,"add","","",210,[[["dynamic"]],["dynamic"]]],[11,"add","","",210,[[["d2"]]]],[11,"mul","","",210,[[["d2"]]]],[11,"mul","","",210,[[["dynamic"]],["dynamic"]]],[11,"mul","","",210,[[["d2"]]]],[11,"sub","","",210,[[["d2"]]]],[11,"sub","","",210,[[["dynamic"]],["dynamic"]]],[11,"sub","","",210,[[["d2"]]]],[11,"div","","",210,[[["d2"]]]],[11,"div","","",210,[[["dynamic"]],["dynamic"]]],[11,"div","","",210,[[["d2"]]]],[11,"min","","",210,[[["d2"]]]],[11,"min","","",210,[[["dynamic"]],["dynamic"]]],[11,"min","","",210,[[["d2"]]]],[11,"max","","",210,[[["d2"]]]],[11,"max","","",210,[[["dynamic"]],["dynamic"]]],[11,"max","","",210,[[["d2"]]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"vzip","","",210,[[],["v"]]],[11,"to_subset","","",210,[[["self"]],["option"]]],[11,"is_in_subset","","",210,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",210,[[["self"]],["ss"]]],[11,"from_subset","","",210,[[["ss"]],["sp"]]],[11,"add","","",211,[[["d2"]]]],[11,"add","","",211,[[["dynamic"]],["dynamic"]]],[11,"add","","",211,[[["d2"]]]],[11,"mul","","",211,[[["d2"]]]],[11,"mul","","",211,[[["dynamic"]],["dynamic"]]],[11,"mul","","",211,[[["d2"]]]],[11,"sub","","",211,[[["d2"]]]],[11,"sub","","",211,[[["dynamic"]],["dynamic"]]],[11,"sub","","",211,[[["d2"]]]],[11,"div","","",211,[[["d2"]]]],[11,"div","","",211,[[["dynamic"]],["dynamic"]]],[11,"div","","",211,[[["d2"]]]],[11,"min","","",211,[[["d2"]]]],[11,"min","","",211,[[["dynamic"]],["dynamic"]]],[11,"min","","",211,[[["d2"]]]],[11,"max","","",211,[[["d2"]]]],[11,"max","","",211,[[["dynamic"]],["dynamic"]]],[11,"max","","",211,[[["d2"]]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"vzip","","",211,[[],["v"]]],[11,"to_subset","","",211,[[["self"]],["option"]]],[11,"is_in_subset","","",211,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",211,[[["self"]],["ss"]]],[11,"from_subset","","",211,[[["ss"]],["sp"]]],[11,"add","","",212,[[["d2"]]]],[11,"add","","",212,[[["dynamic"]],["dynamic"]]],[11,"add","","",212,[[["d2"]]]],[11,"mul","","",212,[[["d2"]]]],[11,"mul","","",212,[[["dynamic"]],["dynamic"]]],[11,"mul","","",212,[[["d2"]]]],[11,"sub","","",212,[[["d2"]]]],[11,"sub","","",212,[[["dynamic"]],["dynamic"]]],[11,"sub","","",212,[[["d2"]]]],[11,"div","","",212,[[["d2"]]]],[11,"div","","",212,[[["dynamic"]],["dynamic"]]],[11,"div","","",212,[[["d2"]]]],[11,"min","","",212,[[["d2"]]]],[11,"min","","",212,[[["dynamic"]],["dynamic"]]],[11,"min","","",212,[[["d2"]]]],[11,"max","","",212,[[["d2"]]]],[11,"max","","",212,[[["dynamic"]],["dynamic"]]],[11,"max","","",212,[[["d2"]]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"vzip","","",212,[[],["v"]]],[11,"to_subset","","",212,[[["self"]],["option"]]],[11,"is_in_subset","","",212,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",212,[[["self"]],["ss"]]],[11,"from_subset","","",212,[[["ss"]],["sp"]]],[11,"add","","",213,[[["d2"]]]],[11,"add","","",213,[[["dynamic"]],["dynamic"]]],[11,"add","","",213,[[["d2"]]]],[11,"mul","","",213,[[["d2"]]]],[11,"mul","","",213,[[["dynamic"]],["dynamic"]]],[11,"mul","","",213,[[["d2"]]]],[11,"sub","","",213,[[["d2"]]]],[11,"sub","","",213,[[["dynamic"]],["dynamic"]]],[11,"sub","","",213,[[["d2"]]]],[11,"div","","",213,[[["d2"]]]],[11,"div","","",213,[[["dynamic"]],["dynamic"]]],[11,"div","","",213,[[["d2"]]]],[11,"min","","",213,[[["d2"]]]],[11,"min","","",213,[[["dynamic"]],["dynamic"]]],[11,"min","","",213,[[["d2"]]]],[11,"max","","",213,[[["d2"]]]],[11,"max","","",213,[[["dynamic"]],["dynamic"]]],[11,"max","","",213,[[["d2"]]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"vzip","","",213,[[],["v"]]],[11,"to_subset","","",213,[[["self"]],["option"]]],[11,"is_in_subset","","",213,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",213,[[["self"]],["ss"]]],[11,"from_subset","","",213,[[["ss"]],["sp"]]],[11,"add","","",214,[[["d2"]]]],[11,"add","","",214,[[["dynamic"]],["dynamic"]]],[11,"add","","",214,[[["d2"]]]],[11,"mul","","",214,[[["d2"]]]],[11,"mul","","",214,[[["dynamic"]],["dynamic"]]],[11,"mul","","",214,[[["d2"]]]],[11,"sub","","",214,[[["d2"]]]],[11,"sub","","",214,[[["dynamic"]],["dynamic"]]],[11,"sub","","",214,[[["d2"]]]],[11,"div","","",214,[[["d2"]]]],[11,"div","","",214,[[["dynamic"]],["dynamic"]]],[11,"div","","",214,[[["d2"]]]],[11,"min","","",214,[[["d2"]]]],[11,"min","","",214,[[["dynamic"]],["dynamic"]]],[11,"min","","",214,[[["d2"]]]],[11,"max","","",214,[[["d2"]]]],[11,"max","","",214,[[["dynamic"]],["dynamic"]]],[11,"max","","",214,[[["d2"]]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"vzip","","",214,[[],["v"]]],[11,"to_subset","","",214,[[["self"]],["option"]]],[11,"is_in_subset","","",214,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",214,[[["self"]],["ss"]]],[11,"from_subset","","",214,[[["ss"]],["sp"]]],[11,"add","","",215,[[["d2"]]]],[11,"add","","",215,[[["dynamic"]],["dynamic"]]],[11,"add","","",215,[[["d2"]]]],[11,"mul","","",215,[[["d2"]]]],[11,"mul","","",215,[[["dynamic"]],["dynamic"]]],[11,"mul","","",215,[[["d2"]]]],[11,"sub","","",215,[[["d2"]]]],[11,"sub","","",215,[[["dynamic"]],["dynamic"]]],[11,"sub","","",215,[[["d2"]]]],[11,"div","","",215,[[["d2"]]]],[11,"div","","",215,[[["dynamic"]],["dynamic"]]],[11,"div","","",215,[[["d2"]]]],[11,"min","","",215,[[["d2"]]]],[11,"min","","",215,[[["dynamic"]],["dynamic"]]],[11,"min","","",215,[[["d2"]]]],[11,"max","","",215,[[["d2"]]]],[11,"max","","",215,[[["dynamic"]],["dynamic"]]],[11,"max","","",215,[[["d2"]]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"vzip","","",215,[[],["v"]]],[11,"to_subset","","",215,[[["self"]],["option"]]],[11,"is_in_subset","","",215,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",215,[[["self"]],["ss"]]],[11,"from_subset","","",215,[[["ss"]],["sp"]]],[11,"add","","",216,[[["d2"]]]],[11,"add","","",216,[[["dynamic"]],["dynamic"]]],[11,"add","","",216,[[["d2"]]]],[11,"mul","","",216,[[["d2"]]]],[11,"mul","","",216,[[["dynamic"]],["dynamic"]]],[11,"mul","","",216,[[["d2"]]]],[11,"sub","","",216,[[["d2"]]]],[11,"sub","","",216,[[["dynamic"]],["dynamic"]]],[11,"sub","","",216,[[["d2"]]]],[11,"div","","",216,[[["d2"]]]],[11,"div","","",216,[[["dynamic"]],["dynamic"]]],[11,"div","","",216,[[["d2"]]]],[11,"min","","",216,[[["d2"]]]],[11,"min","","",216,[[["dynamic"]],["dynamic"]]],[11,"min","","",216,[[["d2"]]]],[11,"max","","",216,[[["d2"]]]],[11,"max","","",216,[[["dynamic"]],["dynamic"]]],[11,"max","","",216,[[["d2"]]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"vzip","","",216,[[],["v"]]],[11,"to_subset","","",216,[[["self"]],["option"]]],[11,"is_in_subset","","",216,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",216,[[["self"]],["ss"]]],[11,"from_subset","","",216,[[["ss"]],["sp"]]],[11,"add","","",217,[[["d2"]]]],[11,"add","","",217,[[["dynamic"]],["dynamic"]]],[11,"add","","",217,[[["d2"]]]],[11,"mul","","",217,[[["d2"]]]],[11,"mul","","",217,[[["dynamic"]],["dynamic"]]],[11,"mul","","",217,[[["d2"]]]],[11,"sub","","",217,[[["d2"]]]],[11,"sub","","",217,[[["dynamic"]],["dynamic"]]],[11,"sub","","",217,[[["d2"]]]],[11,"div","","",217,[[["d2"]]]],[11,"div","","",217,[[["dynamic"]],["dynamic"]]],[11,"div","","",217,[[["d2"]]]],[11,"min","","",217,[[["d2"]]]],[11,"min","","",217,[[["dynamic"]],["dynamic"]]],[11,"min","","",217,[[["d2"]]]],[11,"max","","",217,[[["d2"]]]],[11,"max","","",217,[[["dynamic"]],["dynamic"]]],[11,"max","","",217,[[["d2"]]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"vzip","","",217,[[],["v"]]],[11,"to_subset","","",217,[[["self"]],["option"]]],[11,"is_in_subset","","",217,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",217,[[["self"]],["ss"]]],[11,"from_subset","","",217,[[["ss"]],["sp"]]],[11,"add","","",218,[[["d2"]]]],[11,"add","","",218,[[["dynamic"]],["dynamic"]]],[11,"add","","",218,[[["d2"]]]],[11,"mul","","",218,[[["d2"]]]],[11,"mul","","",218,[[["dynamic"]],["dynamic"]]],[11,"mul","","",218,[[["d2"]]]],[11,"sub","","",218,[[["d2"]]]],[11,"sub","","",218,[[["dynamic"]],["dynamic"]]],[11,"sub","","",218,[[["d2"]]]],[11,"div","","",218,[[["d2"]]]],[11,"div","","",218,[[["dynamic"]],["dynamic"]]],[11,"div","","",218,[[["d2"]]]],[11,"min","","",218,[[["d2"]]]],[11,"min","","",218,[[["dynamic"]],["dynamic"]]],[11,"min","","",218,[[["d2"]]]],[11,"max","","",218,[[["d2"]]]],[11,"max","","",218,[[["dynamic"]],["dynamic"]]],[11,"max","","",218,[[["d2"]]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,[[["self"],["t"]]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"vzip","","",218,[[],["v"]]],[11,"to_subset","","",218,[[["self"]],["option"]]],[11,"is_in_subset","","",218,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",218,[[["self"]],["ss"]]],[11,"from_subset","","",218,[[["ss"]],["sp"]]],[11,"add","","",219,[[["d2"]]]],[11,"add","","",219,[[["dynamic"]],["dynamic"]]],[11,"add","","",219,[[["d2"]]]],[11,"mul","","",219,[[["d2"]]]],[11,"mul","","",219,[[["dynamic"]],["dynamic"]]],[11,"mul","","",219,[[["d2"]]]],[11,"sub","","",219,[[["d2"]]]],[11,"sub","","",219,[[["dynamic"]],["dynamic"]]],[11,"sub","","",219,[[["d2"]]]],[11,"div","","",219,[[["d2"]]]],[11,"div","","",219,[[["dynamic"]],["dynamic"]]],[11,"div","","",219,[[["d2"]]]],[11,"min","","",219,[[["d2"]]]],[11,"min","","",219,[[["dynamic"]],["dynamic"]]],[11,"min","","",219,[[["d2"]]]],[11,"max","","",219,[[["d2"]]]],[11,"max","","",219,[[["dynamic"]],["dynamic"]]],[11,"max","","",219,[[["d2"]]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,[[["self"],["t"]]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"vzip","","",219,[[],["v"]]],[11,"to_subset","","",219,[[["self"]],["option"]]],[11,"is_in_subset","","",219,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",219,[[["self"]],["ss"]]],[11,"from_subset","","",219,[[["ss"]],["sp"]]],[11,"add","","",220,[[["d2"]]]],[11,"add","","",220,[[["dynamic"]],["dynamic"]]],[11,"add","","",220,[[["d2"]]]],[11,"mul","","",220,[[["d2"]]]],[11,"mul","","",220,[[["dynamic"]],["dynamic"]]],[11,"mul","","",220,[[["d2"]]]],[11,"sub","","",220,[[["d2"]]]],[11,"sub","","",220,[[["dynamic"]],["dynamic"]]],[11,"sub","","",220,[[["d2"]]]],[11,"div","","",220,[[["d2"]]]],[11,"div","","",220,[[["dynamic"]],["dynamic"]]],[11,"div","","",220,[[["d2"]]]],[11,"min","","",220,[[["d2"]]]],[11,"min","","",220,[[["dynamic"]],["dynamic"]]],[11,"min","","",220,[[["d2"]]]],[11,"max","","",220,[[["d2"]]]],[11,"max","","",220,[[["dynamic"]],["dynamic"]]],[11,"max","","",220,[[["d2"]]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,[[["self"],["t"]]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"vzip","","",220,[[],["v"]]],[11,"to_subset","","",220,[[["self"]],["option"]]],[11,"is_in_subset","","",220,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",220,[[["self"]],["ss"]]],[11,"from_subset","","",220,[[["ss"]],["sp"]]],[11,"add","","",221,[[["d2"]]]],[11,"add","","",221,[[["dynamic"]],["dynamic"]]],[11,"add","","",221,[[["d2"]]]],[11,"mul","","",221,[[["d2"]]]],[11,"mul","","",221,[[["dynamic"]],["dynamic"]]],[11,"mul","","",221,[[["d2"]]]],[11,"sub","","",221,[[["d2"]]]],[11,"sub","","",221,[[["dynamic"]],["dynamic"]]],[11,"sub","","",221,[[["d2"]]]],[11,"div","","",221,[[["d2"]]]],[11,"div","","",221,[[["dynamic"]],["dynamic"]]],[11,"div","","",221,[[["d2"]]]],[11,"min","","",221,[[["d2"]]]],[11,"min","","",221,[[["dynamic"]],["dynamic"]]],[11,"min","","",221,[[["d2"]]]],[11,"max","","",221,[[["d2"]]]],[11,"max","","",221,[[["dynamic"]],["dynamic"]]],[11,"max","","",221,[[["d2"]]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,[[["self"],["t"]]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"vzip","","",221,[[],["v"]]],[11,"to_subset","","",221,[[["self"]],["option"]]],[11,"is_in_subset","","",221,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",221,[[["self"]],["ss"]]],[11,"from_subset","","",221,[[["ss"]],["sp"]]],[11,"add","","",222,[[["d2"]]]],[11,"add","","",222,[[["dynamic"]],["dynamic"]]],[11,"add","","",222,[[["d2"]]]],[11,"mul","","",222,[[["d2"]]]],[11,"mul","","",222,[[["dynamic"]],["dynamic"]]],[11,"mul","","",222,[[["d2"]]]],[11,"sub","","",222,[[["d2"]]]],[11,"sub","","",222,[[["dynamic"]],["dynamic"]]],[11,"sub","","",222,[[["d2"]]]],[11,"div","","",222,[[["d2"]]]],[11,"div","","",222,[[["dynamic"]],["dynamic"]]],[11,"div","","",222,[[["d2"]]]],[11,"min","","",222,[[["d2"]]]],[11,"min","","",222,[[["dynamic"]],["dynamic"]]],[11,"min","","",222,[[["d2"]]]],[11,"max","","",222,[[["d2"]]]],[11,"max","","",222,[[["dynamic"]],["dynamic"]]],[11,"max","","",222,[[["d2"]]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,[[["self"],["t"]]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"vzip","","",222,[[],["v"]]],[11,"to_subset","","",222,[[["self"]],["option"]]],[11,"is_in_subset","","",222,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",222,[[["self"]],["ss"]]],[11,"from_subset","","",222,[[["ss"]],["sp"]]],[11,"add","","",223,[[["d2"]]]],[11,"add","","",223,[[["dynamic"]],["dynamic"]]],[11,"add","","",223,[[["d2"]]]],[11,"mul","","",223,[[["d2"]]]],[11,"mul","","",223,[[["dynamic"]],["dynamic"]]],[11,"mul","","",223,[[["d2"]]]],[11,"sub","","",223,[[["d2"]]]],[11,"sub","","",223,[[["dynamic"]],["dynamic"]]],[11,"sub","","",223,[[["d2"]]]],[11,"div","","",223,[[["d2"]]]],[11,"div","","",223,[[["dynamic"]],["dynamic"]]],[11,"div","","",223,[[["d2"]]]],[11,"min","","",223,[[["d2"]]]],[11,"min","","",223,[[["dynamic"]],["dynamic"]]],[11,"min","","",223,[[["d2"]]]],[11,"max","","",223,[[["d2"]]]],[11,"max","","",223,[[["dynamic"]],["dynamic"]]],[11,"max","","",223,[[["d2"]]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,[[["self"],["t"]]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"vzip","","",223,[[],["v"]]],[11,"to_subset","","",223,[[["self"]],["option"]]],[11,"is_in_subset","","",223,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",223,[[["self"]],["ss"]]],[11,"from_subset","","",223,[[["ss"]],["sp"]]],[11,"add","","",224,[[["d2"]]]],[11,"add","","",224,[[["dynamic"]],["dynamic"]]],[11,"add","","",224,[[["d2"]]]],[11,"mul","","",224,[[["d2"]]]],[11,"mul","","",224,[[["dynamic"]],["dynamic"]]],[11,"mul","","",224,[[["d2"]]]],[11,"sub","","",224,[[["d2"]]]],[11,"sub","","",224,[[["dynamic"]],["dynamic"]]],[11,"sub","","",224,[[["d2"]]]],[11,"div","","",224,[[["d2"]]]],[11,"div","","",224,[[["dynamic"]],["dynamic"]]],[11,"div","","",224,[[["d2"]]]],[11,"min","","",224,[[["d2"]]]],[11,"min","","",224,[[["dynamic"]],["dynamic"]]],[11,"min","","",224,[[["d2"]]]],[11,"max","","",224,[[["d2"]]]],[11,"max","","",224,[[["dynamic"]],["dynamic"]]],[11,"max","","",224,[[["d2"]]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,[[["self"],["t"]]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"vzip","","",224,[[],["v"]]],[11,"to_subset","","",224,[[["self"]],["option"]]],[11,"is_in_subset","","",224,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",224,[[["self"]],["ss"]]],[11,"from_subset","","",224,[[["ss"]],["sp"]]],[11,"add","","",225,[[["d2"]]]],[11,"add","","",225,[[["dynamic"]],["dynamic"]]],[11,"add","","",225,[[["d2"]]]],[11,"mul","","",225,[[["d2"]]]],[11,"mul","","",225,[[["dynamic"]],["dynamic"]]],[11,"mul","","",225,[[["d2"]]]],[11,"sub","","",225,[[["d2"]]]],[11,"sub","","",225,[[["dynamic"]],["dynamic"]]],[11,"sub","","",225,[[["d2"]]]],[11,"div","","",225,[[["d2"]]]],[11,"div","","",225,[[["dynamic"]],["dynamic"]]],[11,"div","","",225,[[["d2"]]]],[11,"min","","",225,[[["d2"]]]],[11,"min","","",225,[[["dynamic"]],["dynamic"]]],[11,"min","","",225,[[["d2"]]]],[11,"max","","",225,[[["d2"]]]],[11,"max","","",225,[[["dynamic"]],["dynamic"]]],[11,"max","","",225,[[["d2"]]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,[[["self"],["t"]]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"vzip","","",225,[[],["v"]]],[11,"to_subset","","",225,[[["self"]],["option"]]],[11,"is_in_subset","","",225,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",225,[[["self"]],["ss"]]],[11,"from_subset","","",225,[[["ss"]],["sp"]]],[11,"add","","",226,[[["d2"]]]],[11,"add","","",226,[[["dynamic"]],["dynamic"]]],[11,"add","","",226,[[["d2"]]]],[11,"mul","","",226,[[["d2"]]]],[11,"mul","","",226,[[["dynamic"]],["dynamic"]]],[11,"mul","","",226,[[["d2"]]]],[11,"sub","","",226,[[["d2"]]]],[11,"sub","","",226,[[["dynamic"]],["dynamic"]]],[11,"sub","","",226,[[["d2"]]]],[11,"div","","",226,[[["d2"]]]],[11,"div","","",226,[[["dynamic"]],["dynamic"]]],[11,"div","","",226,[[["d2"]]]],[11,"min","","",226,[[["d2"]]]],[11,"min","","",226,[[["dynamic"]],["dynamic"]]],[11,"min","","",226,[[["d2"]]]],[11,"max","","",226,[[["d2"]]]],[11,"max","","",226,[[["dynamic"]],["dynamic"]]],[11,"max","","",226,[[["d2"]]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,[[["self"],["t"]]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"vzip","","",226,[[],["v"]]],[11,"to_subset","","",226,[[["self"]],["option"]]],[11,"is_in_subset","","",226,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",226,[[["self"]],["ss"]]],[11,"from_subset","","",226,[[["ss"]],["sp"]]],[11,"add","","",227,[[["d2"]]]],[11,"add","","",227,[[["dynamic"]],["dynamic"]]],[11,"add","","",227,[[["d2"]]]],[11,"mul","","",227,[[["d2"]]]],[11,"mul","","",227,[[["dynamic"]],["dynamic"]]],[11,"mul","","",227,[[["d2"]]]],[11,"sub","","",227,[[["d2"]]]],[11,"sub","","",227,[[["dynamic"]],["dynamic"]]],[11,"sub","","",227,[[["d2"]]]],[11,"div","","",227,[[["d2"]]]],[11,"div","","",227,[[["dynamic"]],["dynamic"]]],[11,"div","","",227,[[["d2"]]]],[11,"min","","",227,[[["d2"]]]],[11,"min","","",227,[[["dynamic"]],["dynamic"]]],[11,"min","","",227,[[["d2"]]]],[11,"max","","",227,[[["d2"]]]],[11,"max","","",227,[[["dynamic"]],["dynamic"]]],[11,"max","","",227,[[["d2"]]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,[[["self"],["t"]]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"try_into","","",227,[[],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"type_id","","",227,[[["self"]],["typeid"]]],[11,"vzip","","",227,[[],["v"]]],[11,"to_subset","","",227,[[["self"]],["option"]]],[11,"is_in_subset","","",227,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",227,[[["self"]],["ss"]]],[11,"from_subset","","",227,[[["ss"]],["sp"]]],[11,"add","","",228,[[["d2"]]]],[11,"add","","",228,[[["dynamic"]],["dynamic"]]],[11,"add","","",228,[[["d2"]]]],[11,"mul","","",228,[[["d2"]]]],[11,"mul","","",228,[[["dynamic"]],["dynamic"]]],[11,"mul","","",228,[[["d2"]]]],[11,"sub","","",228,[[["d2"]]]],[11,"sub","","",228,[[["dynamic"]],["dynamic"]]],[11,"sub","","",228,[[["d2"]]]],[11,"div","","",228,[[["d2"]]]],[11,"div","","",228,[[["dynamic"]],["dynamic"]]],[11,"div","","",228,[[["d2"]]]],[11,"min","","",228,[[["d2"]]]],[11,"min","","",228,[[["dynamic"]],["dynamic"]]],[11,"min","","",228,[[["d2"]]]],[11,"max","","",228,[[["d2"]]]],[11,"max","","",228,[[["dynamic"]],["dynamic"]]],[11,"max","","",228,[[["d2"]]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,[[["self"],["t"]]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"try_into","","",228,[[],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"type_id","","",228,[[["self"]],["typeid"]]],[11,"vzip","","",228,[[],["v"]]],[11,"to_subset","","",228,[[["self"]],["option"]]],[11,"is_in_subset","","",228,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",228,[[["self"]],["ss"]]],[11,"from_subset","","",228,[[["ss"]],["sp"]]],[11,"add","","",229,[[["d2"]]]],[11,"add","","",229,[[["dynamic"]],["dynamic"]]],[11,"add","","",229,[[["d2"]]]],[11,"mul","","",229,[[["d2"]]]],[11,"mul","","",229,[[["dynamic"]],["dynamic"]]],[11,"mul","","",229,[[["d2"]]]],[11,"sub","","",229,[[["d2"]]]],[11,"sub","","",229,[[["dynamic"]],["dynamic"]]],[11,"sub","","",229,[[["d2"]]]],[11,"div","","",229,[[["d2"]]]],[11,"div","","",229,[[["dynamic"]],["dynamic"]]],[11,"div","","",229,[[["d2"]]]],[11,"min","","",229,[[["d2"]]]],[11,"min","","",229,[[["dynamic"]],["dynamic"]]],[11,"min","","",229,[[["d2"]]]],[11,"max","","",229,[[["d2"]]]],[11,"max","","",229,[[["dynamic"]],["dynamic"]]],[11,"max","","",229,[[["d2"]]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,[[["self"],["t"]]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"vzip","","",229,[[],["v"]]],[11,"to_subset","","",229,[[["self"]],["option"]]],[11,"is_in_subset","","",229,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",229,[[["self"]],["ss"]]],[11,"from_subset","","",229,[[["ss"]],["sp"]]],[11,"add","","",230,[[["d2"]]]],[11,"add","","",230,[[["dynamic"]],["dynamic"]]],[11,"add","","",230,[[["d2"]]]],[11,"mul","","",230,[[["d2"]]]],[11,"mul","","",230,[[["dynamic"]],["dynamic"]]],[11,"mul","","",230,[[["d2"]]]],[11,"sub","","",230,[[["d2"]]]],[11,"sub","","",230,[[["dynamic"]],["dynamic"]]],[11,"sub","","",230,[[["d2"]]]],[11,"div","","",230,[[["d2"]]]],[11,"div","","",230,[[["dynamic"]],["dynamic"]]],[11,"div","","",230,[[["d2"]]]],[11,"min","","",230,[[["d2"]]]],[11,"min","","",230,[[["dynamic"]],["dynamic"]]],[11,"min","","",230,[[["d2"]]]],[11,"max","","",230,[[["d2"]]]],[11,"max","","",230,[[["dynamic"]],["dynamic"]]],[11,"max","","",230,[[["d2"]]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,[[["self"],["t"]]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"vzip","","",230,[[],["v"]]],[11,"to_subset","","",230,[[["self"]],["option"]]],[11,"is_in_subset","","",230,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",230,[[["self"]],["ss"]]],[11,"from_subset","","",230,[[["ss"]],["sp"]]],[11,"add","","",231,[[["d2"]]]],[11,"add","","",231,[[["dynamic"]],["dynamic"]]],[11,"add","","",231,[[["d2"]]]],[11,"mul","","",231,[[["d2"]]]],[11,"mul","","",231,[[["dynamic"]],["dynamic"]]],[11,"mul","","",231,[[["d2"]]]],[11,"sub","","",231,[[["d2"]]]],[11,"sub","","",231,[[["dynamic"]],["dynamic"]]],[11,"sub","","",231,[[["d2"]]]],[11,"div","","",231,[[["d2"]]]],[11,"div","","",231,[[["dynamic"]],["dynamic"]]],[11,"div","","",231,[[["d2"]]]],[11,"min","","",231,[[["d2"]]]],[11,"min","","",231,[[["dynamic"]],["dynamic"]]],[11,"min","","",231,[[["d2"]]]],[11,"max","","",231,[[["d2"]]]],[11,"max","","",231,[[["dynamic"]],["dynamic"]]],[11,"max","","",231,[[["d2"]]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,[[["self"],["t"]]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"vzip","","",231,[[],["v"]]],[11,"to_subset","","",231,[[["self"]],["option"]]],[11,"is_in_subset","","",231,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",231,[[["self"]],["ss"]]],[11,"from_subset","","",231,[[["ss"]],["sp"]]],[11,"add","","",232,[[["d2"]]]],[11,"add","","",232,[[["dynamic"]],["dynamic"]]],[11,"add","","",232,[[["d2"]]]],[11,"mul","","",232,[[["d2"]]]],[11,"mul","","",232,[[["dynamic"]],["dynamic"]]],[11,"mul","","",232,[[["d2"]]]],[11,"sub","","",232,[[["d2"]]]],[11,"sub","","",232,[[["dynamic"]],["dynamic"]]],[11,"sub","","",232,[[["d2"]]]],[11,"div","","",232,[[["d2"]]]],[11,"div","","",232,[[["dynamic"]],["dynamic"]]],[11,"div","","",232,[[["d2"]]]],[11,"min","","",232,[[["d2"]]]],[11,"min","","",232,[[["dynamic"]],["dynamic"]]],[11,"min","","",232,[[["d2"]]]],[11,"max","","",232,[[["d2"]]]],[11,"max","","",232,[[["dynamic"]],["dynamic"]]],[11,"max","","",232,[[["d2"]]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,[[["self"],["t"]]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"vzip","","",232,[[],["v"]]],[11,"to_subset","","",232,[[["self"]],["option"]]],[11,"is_in_subset","","",232,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",232,[[["self"]],["ss"]]],[11,"from_subset","","",232,[[["ss"]],["sp"]]],[11,"add","","",233,[[["d2"]]]],[11,"add","","",233,[[["dynamic"]],["dynamic"]]],[11,"add","","",233,[[["d2"]]]],[11,"mul","","",233,[[["d2"]]]],[11,"mul","","",233,[[["dynamic"]],["dynamic"]]],[11,"mul","","",233,[[["d2"]]]],[11,"sub","","",233,[[["d2"]]]],[11,"sub","","",233,[[["dynamic"]],["dynamic"]]],[11,"sub","","",233,[[["d2"]]]],[11,"div","","",233,[[["d2"]]]],[11,"div","","",233,[[["dynamic"]],["dynamic"]]],[11,"div","","",233,[[["d2"]]]],[11,"min","","",233,[[["d2"]]]],[11,"min","","",233,[[["dynamic"]],["dynamic"]]],[11,"min","","",233,[[["d2"]]]],[11,"max","","",233,[[["d2"]]]],[11,"max","","",233,[[["dynamic"]],["dynamic"]]],[11,"max","","",233,[[["d2"]]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,[[["self"],["t"]]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"vzip","","",233,[[],["v"]]],[11,"to_subset","","",233,[[["self"]],["option"]]],[11,"is_in_subset","","",233,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",233,[[["self"]],["ss"]]],[11,"from_subset","","",233,[[["ss"]],["sp"]]],[11,"add","","",234,[[["d2"]]]],[11,"add","","",234,[[["dynamic"]],["dynamic"]]],[11,"add","","",234,[[["d2"]]]],[11,"mul","","",234,[[["d2"]]]],[11,"mul","","",234,[[["dynamic"]],["dynamic"]]],[11,"mul","","",234,[[["d2"]]]],[11,"sub","","",234,[[["d2"]]]],[11,"sub","","",234,[[["dynamic"]],["dynamic"]]],[11,"sub","","",234,[[["d2"]]]],[11,"div","","",234,[[["d2"]]]],[11,"div","","",234,[[["dynamic"]],["dynamic"]]],[11,"div","","",234,[[["d2"]]]],[11,"min","","",234,[[["d2"]]]],[11,"min","","",234,[[["dynamic"]],["dynamic"]]],[11,"min","","",234,[[["d2"]]]],[11,"max","","",234,[[["d2"]]]],[11,"max","","",234,[[["dynamic"]],["dynamic"]]],[11,"max","","",234,[[["d2"]]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,[[["self"],["t"]]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"vzip","","",234,[[],["v"]]],[11,"to_subset","","",234,[[["self"]],["option"]]],[11,"is_in_subset","","",234,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",234,[[["self"]],["ss"]]],[11,"from_subset","","",234,[[["ss"]],["sp"]]],[11,"add","","",235,[[["d2"]]]],[11,"add","","",235,[[["dynamic"]],["dynamic"]]],[11,"add","","",235,[[["d2"]]]],[11,"mul","","",235,[[["d2"]]]],[11,"mul","","",235,[[["dynamic"]],["dynamic"]]],[11,"mul","","",235,[[["d2"]]]],[11,"sub","","",235,[[["d2"]]]],[11,"sub","","",235,[[["dynamic"]],["dynamic"]]],[11,"sub","","",235,[[["d2"]]]],[11,"div","","",235,[[["d2"]]]],[11,"div","","",235,[[["dynamic"]],["dynamic"]]],[11,"div","","",235,[[["d2"]]]],[11,"min","","",235,[[["d2"]]]],[11,"min","","",235,[[["dynamic"]],["dynamic"]]],[11,"min","","",235,[[["d2"]]]],[11,"max","","",235,[[["d2"]]]],[11,"max","","",235,[[["dynamic"]],["dynamic"]]],[11,"max","","",235,[[["d2"]]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,[[["self"],["t"]]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"try_into","","",235,[[],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"type_id","","",235,[[["self"]],["typeid"]]],[11,"vzip","","",235,[[],["v"]]],[11,"to_subset","","",235,[[["self"]],["option"]]],[11,"is_in_subset","","",235,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",235,[[["self"]],["ss"]]],[11,"from_subset","","",235,[[["ss"]],["sp"]]],[11,"add","","",236,[[["d2"]]]],[11,"add","","",236,[[["dynamic"]],["dynamic"]]],[11,"add","","",236,[[["d2"]]]],[11,"mul","","",236,[[["d2"]]]],[11,"mul","","",236,[[["dynamic"]],["dynamic"]]],[11,"mul","","",236,[[["d2"]]]],[11,"sub","","",236,[[["d2"]]]],[11,"sub","","",236,[[["dynamic"]],["dynamic"]]],[11,"sub","","",236,[[["d2"]]]],[11,"div","","",236,[[["d2"]]]],[11,"div","","",236,[[["dynamic"]],["dynamic"]]],[11,"div","","",236,[[["d2"]]]],[11,"min","","",236,[[["d2"]]]],[11,"min","","",236,[[["dynamic"]],["dynamic"]]],[11,"min","","",236,[[["d2"]]]],[11,"max","","",236,[[["d2"]]]],[11,"max","","",236,[[["dynamic"]],["dynamic"]]],[11,"max","","",236,[[["d2"]]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,[[["self"],["t"]]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"vzip","","",236,[[],["v"]]],[11,"to_subset","","",236,[[["self"]],["option"]]],[11,"is_in_subset","","",236,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",236,[[["self"]],["ss"]]],[11,"from_subset","","",236,[[["ss"]],["sp"]]],[11,"from","nalgebra::base::iter","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"into_iter","","",63,[[],["i"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"vzip","","",63,[[],["v"]]],[11,"to_subset","","",63,[[["self"]],["option"]]],[11,"is_in_subset","","",63,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",63,[[["self"]],["ss"]]],[11,"from_subset","","",63,[[["ss"]],["sp"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"into_iter","","",64,[[],["i"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"vzip","","",64,[[],["v"]]],[11,"to_subset","","",64,[[["self"]],["option"]]],[11,"is_in_subset","","",64,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",64,[[["self"]],["ss"]]],[11,"from_subset","","",64,[[["ss"]],["sp"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[],["u"]]],[11,"into_iter","","",237,[[],["i"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,[[["self"],["t"]]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"vzip","","",237,[[],["v"]]],[11,"to_subset","","",237,[[["self"]],["option"]]],[11,"is_in_subset","","",237,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",237,[[["self"]],["ss"]]],[11,"from_subset","","",237,[[["ss"]],["sp"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[],["u"]]],[11,"into_iter","","",238,[[],["i"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"vzip","","",238,[[],["v"]]],[11,"to_subset","","",238,[[["self"]],["option"]]],[11,"is_in_subset","","",238,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",238,[[["self"]],["ss"]]],[11,"from_subset","","",238,[[["ss"]],["sp"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[],["u"]]],[11,"into_iter","","",239,[[],["i"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,[[["self"],["t"]]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"vzip","","",239,[[],["v"]]],[11,"to_subset","","",239,[[["self"]],["option"]]],[11,"is_in_subset","","",239,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",239,[[["self"]],["ss"]]],[11,"from_subset","","",239,[[["ss"]],["sp"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[],["u"]]],[11,"into_iter","","",240,[[],["i"]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"vzip","","",240,[[],["v"]]],[11,"to_subset","","",240,[[["self"]],["option"]]],[11,"is_in_subset","","",240,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",240,[[["self"]],["ss"]]],[11,"from_subset","","",240,[[["ss"]],["sp"]]],[11,"from","nalgebra::geometry","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"to_string","","",77,[[["self"]],["string"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"vzip","","",77,[[],["v"]]],[11,"to_subset","","",77,[[["self"]],["option"]]],[11,"is_in_subset","","",77,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",77,[[["self"]],["ss"]]],[11,"from_subset","","",77,[[["ss"]],["sp"]]],[11,"simd_gt","","",77,[[["t"]]]],[11,"simd_lt","","",77,[[["t"]]]],[11,"simd_ge","","",77,[[["t"]]]],[11,"simd_le","","",77,[[["t"]]]],[11,"simd_eq","","",77,[[["t"]]]],[11,"simd_ne","","",77,[[["t"]]]],[11,"simd_max","","",77,[[["t"]],["t"]]],[11,"simd_min","","",77,[[["t"]],["t"]]],[11,"simd_clamp","","",77,[[["t"]],["t"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"to_string","","",82,[[["self"]],["string"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"vzip","","",82,[[],["v"]]],[11,"to_subset","","",82,[[["self"]],["option"]]],[11,"is_in_subset","","",82,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",82,[[["self"]],["ss"]]],[11,"from_subset","","",82,[[["ss"]],["sp"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"to_string","","",78,[[["self"]],["string"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"vzip","","",78,[[],["v"]]],[11,"to_subset","","",78,[[["self"]],["option"]]],[11,"is_in_subset","","",78,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",78,[[["self"]],["ss"]]],[11,"from_subset","","",78,[[["ss"]],["sp"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"to_string","","",79,[[["self"]],["string"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"vzip","","",79,[[],["v"]]],[11,"to_subset","","",79,[[["self"]],["option"]]],[11,"is_in_subset","","",79,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",79,[[["self"]],["ss"]]],[11,"from_subset","","",79,[[["ss"]],["sp"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"to_string","","",80,[[["self"]],["string"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"vzip","","",80,[[],["v"]]],[11,"to_subset","","",80,[[["self"]],["option"]]],[11,"is_in_subset","","",80,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",80,[[["self"]],["ss"]]],[11,"from_subset","","",80,[[["ss"]],["sp"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"to_string","","",81,[[["self"]],["string"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"vzip","","",81,[[],["v"]]],[11,"to_subset","","",81,[[["self"]],["option"]]],[11,"is_in_subset","","",81,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",81,[[["self"]],["ss"]]],[11,"from_subset","","",81,[[["ss"]],["sp"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"vzip","","",83,[[],["v"]]],[11,"to_subset","","",83,[[["self"]],["option"]]],[11,"is_in_subset","","",83,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",83,[[["self"]],["ss"]]],[11,"from_subset","","",83,[[["ss"]],["sp"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"vzip","","",84,[[],["v"]]],[11,"to_subset","","",84,[[["self"]],["option"]]],[11,"is_in_subset","","",84,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",84,[[["self"]],["ss"]]],[11,"from_subset","","",84,[[["ss"]],["sp"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"vzip","","",85,[[],["v"]]],[11,"to_subset","","",85,[[["self"]],["option"]]],[11,"is_in_subset","","",85,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",85,[[["self"]],["ss"]]],[11,"from_subset","","",85,[[["ss"]],["sp"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"vzip","","",86,[[],["v"]]],[11,"to_subset","","",86,[[["self"]],["option"]]],[11,"is_in_subset","","",86,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",86,[[["self"]],["ss"]]],[11,"from_subset","","",86,[[["ss"]],["sp"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,[[["self"],["t"]]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"try_into","","",241,[[],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"type_id","","",241,[[["self"]],["typeid"]]],[11,"vzip","","",241,[[],["v"]]],[11,"to_subset","","",241,[[["self"]],["option"]]],[11,"is_in_subset","","",241,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",241,[[["self"]],["ss"]]],[11,"from_subset","","",241,[[["ss"]],["sp"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[],["u"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,[[["self"],["t"]]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"try_into","","",242,[[],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"type_id","","",242,[[["self"]],["typeid"]]],[11,"vzip","","",242,[[],["v"]]],[11,"to_subset","","",242,[[["self"]],["option"]]],[11,"is_in_subset","","",242,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",242,[[["self"]],["ss"]]],[11,"from_subset","","",242,[[["ss"]],["sp"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[],["u"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,[[["self"],["t"]]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"vzip","","",243,[[],["v"]]],[11,"to_subset","","",243,[[["self"]],["option"]]],[11,"is_in_subset","","",243,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",243,[[["self"]],["ss"]]],[11,"from_subset","","",243,[[["ss"]],["sp"]]],[11,"from","nalgebra::linalg","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"vzip","","",92,[[],["v"]]],[11,"to_subset","","",92,[[["self"]],["option"]]],[11,"is_in_subset","","",92,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",92,[[["self"]],["ss"]]],[11,"from_subset","","",92,[[["ss"]],["sp"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"vzip","","",93,[[],["v"]]],[11,"to_subset","","",93,[[["self"]],["option"]]],[11,"is_in_subset","","",93,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",93,[[["self"]],["ss"]]],[11,"from_subset","","",93,[[["ss"]],["sp"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"vzip","","",96,[[],["v"]]],[11,"to_subset","","",96,[[["self"]],["option"]]],[11,"is_in_subset","","",96,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",96,[[["self"]],["ss"]]],[11,"from_subset","","",96,[[["ss"]],["sp"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"vzip","","",98,[[],["v"]]],[11,"to_subset","","",98,[[["self"]],["option"]]],[11,"is_in_subset","","",98,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",98,[[["self"]],["ss"]]],[11,"from_subset","","",98,[[["ss"]],["sp"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"vzip","","",99,[[],["v"]]],[11,"to_subset","","",99,[[["self"]],["option"]]],[11,"is_in_subset","","",99,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",99,[[["self"]],["ss"]]],[11,"from_subset","","",99,[[["ss"]],["sp"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"vzip","","",100,[[],["v"]]],[11,"to_subset","","",100,[[["self"]],["option"]]],[11,"is_in_subset","","",100,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",100,[[["self"]],["ss"]]],[11,"from_subset","","",100,[[["ss"]],["sp"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"vzip","","",101,[[],["v"]]],[11,"to_subset","","",101,[[["self"]],["option"]]],[11,"is_in_subset","","",101,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",101,[[["self"]],["ss"]]],[11,"from_subset","","",101,[[["ss"]],["sp"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"vzip","","",102,[[],["v"]]],[11,"to_subset","","",102,[[["self"]],["option"]]],[11,"is_in_subset","","",102,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",102,[[["self"]],["ss"]]],[11,"from_subset","","",102,[[["ss"]],["sp"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"vzip","","",90,[[],["v"]]],[11,"to_subset","","",90,[[["self"]],["option"]]],[11,"is_in_subset","","",90,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",90,[[["self"]],["ss"]]],[11,"from_subset","","",90,[[["ss"]],["sp"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"vzip","","",91,[[],["v"]]],[11,"to_subset","","",91,[[["self"]],["option"]]],[11,"is_in_subset","","",91,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",91,[[["self"]],["ss"]]],[11,"from_subset","","",91,[[["ss"]],["sp"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"vzip","","",103,[[],["v"]]],[11,"to_subset","","",103,[[["self"]],["option"]]],[11,"is_in_subset","","",103,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",103,[[["self"]],["ss"]]],[11,"from_subset","","",103,[[["ss"]],["sp"]]],[11,"from","nalgebra::linalg::givens","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"vzip","","",97,[[],["v"]]],[11,"to_subset","","",97,[[["self"]],["option"]]],[11,"is_in_subset","","",97,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",97,[[["self"]],["ss"]]],[11,"from_subset","","",97,[[["ss"]],["sp"]]],[11,"lanes","nalgebra","",0,[[],["usize"]]],[11,"splat","","",0,[[],["complex"]]],[11,"extract","","",0,[[["self"],["usize"]]]],[11,"extract_unchecked","","",0,[[["self"],["usize"]]]],[11,"replace","","",0,[[["self"],["usize"]]]],[11,"replace_unchecked","","",0,[[["self"],["usize"]]]],[11,"select","","",0,[[["complex"]],["complex"]]],[11,"to_superset","","",0,[[["self"]],["complex"]]],[11,"from_superset_unchecked","","",0,[[["complex"]],["complex"]]],[11,"is_in_subset","","",0,[[["complex"]],["bool"]]],[11,"from_real","","",0,[[],["complex"]]],[11,"real","","",0,[[]]],[11,"imaginary","","",0,[[]]],[11,"argument","","",0,[[]]],[11,"modulus","","",0,[[]]],[11,"modulus_squared","","",0,[[]]],[11,"norm1","","",0,[[]]],[11,"recip","","",0,[[],["complex"]]],[11,"conjugate","","",0,[[],["complex"]]],[11,"scale","","",0,[[],["complex"]]],[11,"unscale","","",0,[[],["complex"]]],[11,"floor","","",0,[[],["complex"]]],[11,"ceil","","",0,[[],["complex"]]],[11,"round","","",0,[[],["complex"]]],[11,"trunc","","",0,[[],["complex"]]],[11,"fract","","",0,[[],["complex"]]],[11,"mul_add","","",0,[[["complex"]],["complex"]]],[11,"abs","","",0,[[]]],[11,"exp2","","",0,[[],["complex"]]],[11,"exp_m1","","",0,[[],["complex"]]],[11,"ln_1p","","",0,[[],["complex"]]],[11,"log2","","",0,[[],["complex"]]],[11,"log10","","",0,[[],["complex"]]],[11,"cbrt","","",0,[[],["complex"]]],[11,"powi","","",0,[[["i32"]],["complex"]]],[11,"is_finite","","",0,[[["self"]],["bool"]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[],["complex"]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[],["complex"]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[],["complex"]]],[11,"try_sqrt","","",0,[[],[["complex"],["option",["complex"]]]]],[11,"hypot","","",0,[[["complex"]]]],[11,"powf","","Raises `self` to a floating point power.",0,[[],["complex"]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[["n"]],["complex"]]],[11,"powc","","Raises `self` to a complex power.",0,[[["complex"]],["complex"]]],[11,"sin","","Computes the sine of `self`.",0,[[],["complex"]]],[11,"cos","","Computes the cosine of `self`.",0,[[],["complex"]]],[11,"sin_cos","","",0,[[]]],[11,"tan","","Computes the tangent of `self`.",0,[[],["complex"]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[],["complex"]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[],["complex"]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[],["complex"]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[],["complex"]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[],["complex"]]],[11,"sinh_cosh","","",0,[[]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[],["complex"]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[],["complex"]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[],["complex"]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[],["complex"]]],[11,"div","","",0,[[["t"]]]],[11,"div","","",0,[[["t"]]]],[11,"div","","",0,[[["complex"]]]],[11,"div","","",0,[[["complex"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"product","","",0,[[["i"]],["complex"]]],[11,"product","","",0,[[["i"]],["complex"]]],[11,"to_usize","","",0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_isize","","",0,[[["self"]],[["option",["isize"]],["isize"]]]],[11,"to_u8","","",0,[[["self"]],[["u8"],["option",["u8"]]]]],[11,"to_u16","","",0,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32","","",0,[[["self"]],[["option",["u32"]],["u32"]]]],[11,"to_u64","","",0,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_i8","","",0,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","",0,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","",0,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"to_i64","","",0,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_u128","","",0,[[["self"]],[["option",["u128"]],["u128"]]]],[11,"to_i128","","",0,[[["self"]],[["i128"],["option",["i128"]]]]],[11,"to_f32","","",0,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","",0,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"mul_add_assign","","",0,[[["self"],["complex"]]]],[11,"mul_add_assign","","",0,[[["self"],["complex"]]]],[11,"from","","",0,[[["t"]],["complex"]]],[11,"from","","",0,[[["t"]],["complex"]]],[11,"deserialize","","",0,[[["d"]],[["result",["complex"]],["complex"]]]],[11,"zero","","",0,[[],["complex"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"set_zero","","",0,[[["self"]]]],[11,"neg","","",0,[[]]],[11,"clone","","",0,[[["self"]],["complex"]]],[11,"serialize","","",0,[[["s"],["self"]],["result"]]],[11,"as_","","",0,[[],["u"]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"inv","","",0,[[]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"default","","",0,[[],["complex"]]],[11,"sub","","",0,[[["t"]]]],[11,"sub","","",0,[[["complex"]]]],[11,"sub","","",0,[[["t"]]]],[11,"sub","","",0,[[["complex"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"sum","","",0,[[["i"]],["complex"]]],[11,"sum","","",0,[[["i"]],["complex"]]],[11,"pow","","",0,[[["complex"]]]],[11,"pow","","",0,[[["f64"]]]],[11,"pow","","",0,[[["f32"]]]],[11,"pow","","",0,[[["f32"]]]],[11,"pow","","",0,[[["complex"]]]],[11,"pow","","",0,[[["f64"]]]],[11,"mul_assign","","",0,[[["self"],["complex"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["complex"]]]],[11,"from_usize","","",0,[[["usize"]],[["option",["complex"]],["complex"]]]],[11,"from_isize","","",0,[[["isize"]],[["option",["complex"]],["complex"]]]],[11,"from_u8","","",0,[[["u8"]],[["option",["complex"]],["complex"]]]],[11,"from_u16","","",0,[[["u16"]],[["option",["complex"]],["complex"]]]],[11,"from_u32","","",0,[[["u32"]],[["option",["complex"]],["complex"]]]],[11,"from_u64","","",0,[[["u64"]],[["option",["complex"]],["complex"]]]],[11,"from_i8","","",0,[[["i8"]],[["option",["complex"]],["complex"]]]],[11,"from_i16","","",0,[[["i16"]],[["option",["complex"]],["complex"]]]],[11,"from_i32","","",0,[[["i32"]],[["option",["complex"]],["complex"]]]],[11,"from_i64","","",0,[[["i64"]],[["option",["complex"]],["complex"]]]],[11,"from_u128","","",0,[[["u128"]],[["option",["complex"]],["complex"]]]],[11,"from_i128","","",0,[[["i128"]],[["option",["complex"]],["complex"]]]],[11,"from_f32","","",0,[[["f32"]],[["option",["complex"]],["complex"]]]],[11,"from_f64","","",0,[[["f64"]],[["option",["complex"]],["complex"]]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"]],[["complex"],["result",["complex"]]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["self"],["complex"]]]],[11,"add_assign","","",0,[[["self"],["complex"]]]],[11,"mul","","",0,[[["t"]]]],[11,"mul","","",0,[[["t"]]]],[11,"mul","","",0,[[["complex"]]]],[11,"mul","","",0,[[["complex"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"rem","","",0,[[["complex"]]]],[11,"rem","","",0,[[["t"]]]],[11,"rem","","",0,[[["complex"]]]],[11,"rem","","",0,[[["t"]]]],[11,"eq","","",0,[[["self"],["complex"]],["bool"]]],[11,"ne","","",0,[[["self"],["complex"]],["bool"]]],[11,"mul_add","","",0,[[["complex"]],["complex"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"add","","",0,[[["complex"]]]],[11,"add","","",0,[[["t"]]]],[11,"add","","",0,[[["complex"]]]],[11,"add","","",0,[[["t"]]]],[11,"div_assign","","",0,[[["self"],["complex"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["complex"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["complex"]]]],[11,"rem_assign","","",0,[[["self"],["complex"]]]],[11,"sub_assign","","",0,[[["self"],["complex"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["complex"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"from","","",0,[[["u"]],[["option",["complex"]],["complex"]]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"],["u32"]],[["result",["complex"]],["complex"]]]],[11,"one","","",0,[[],["complex"]]],[11,"is_one","","",0,[[["self"]],["bool"]]],[11,"set_one","","",0,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"allocate_uninitialized","nalgebra::base::default_allocator","",108,[[["c"],["r"]]]],[11,"allocate_from_iterator","","",108,[[["c"],["intoiterator"],["r"]]]],[11,"allocate_uninitialized","","",108,[[["c"],["dynamic"]]]],[11,"allocate_from_iterator","","",108,[[["c"],["intoiterator"],["dynamic"]]]],[11,"allocate_uninitialized","","",108,[[["dynamic"],["r"]]]],[11,"allocate_from_iterator","","",108,[[["dynamic"],["intoiterator"],["r"]]]],[11,"reallocate_copy","","",108,[[["cto"],["rto"]],["arraystorage"]]],[11,"reallocate_copy","","",108,[[["arraystorage"],["cto"],["dynamic"]],[["vecstorage",["dynamic"]],["dynamic"]]]],[11,"reallocate_copy","","",108,[[["arraystorage"],["rto"],["dynamic"]],[["vecstorage",["dynamic"]],["dynamic"]]]],[11,"reallocate_copy","","",108,[[["vecstorage",["dynamic"]],["cto"],["dynamic"]],[["vecstorage",["dynamic"]],["dynamic"]]]],[11,"reallocate_copy","","",108,[[["vecstorage",["dynamic"]],["rto"],["dynamic"]],[["vecstorage",["dynamic"]],["dynamic"]]]],[11,"reallocate_copy","","",108,[[["cto"],["vecstorage",["dynamic"]],["dynamic"]],[["vecstorage",["dynamic"]],["dynamic"]]]],[11,"reallocate_copy","","",108,[[["vecstorage",["dynamic"]],["rto"],["dynamic"]],[["vecstorage",["dynamic"]],["dynamic"]]]],[11,"try_to_usize","nalgebra::base::dimension","",62,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",62,[[["usize"]],["self"]]],[11,"value","","",62,[[["self"]],["usize"]]],[11,"try_to_usize","","",109,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",109,[[["usize"]],["self"]]],[11,"value","","",109,[[["self"]],["usize"]]],[11,"try_to_usize","","",110,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",110,[[["usize"]],["self"]]],[11,"value","","",110,[[["self"]],["usize"]]],[11,"try_to_usize","","",111,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",111,[[["usize"]],["self"]]],[11,"value","","",111,[[["self"]],["usize"]]],[11,"try_to_usize","","",112,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",112,[[["usize"]],["self"]]],[11,"value","","",112,[[["self"]],["usize"]]],[11,"try_to_usize","","",113,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",113,[[["usize"]],["self"]]],[11,"value","","",113,[[["self"]],["usize"]]],[11,"try_to_usize","","",114,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",114,[[["usize"]],["self"]]],[11,"value","","",114,[[["self"]],["usize"]]],[11,"try_to_usize","","",115,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",115,[[["usize"]],["self"]]],[11,"value","","",115,[[["self"]],["usize"]]],[11,"try_to_usize","","",116,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",116,[[["usize"]],["self"]]],[11,"value","","",116,[[["self"]],["usize"]]],[11,"try_to_usize","","",117,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",117,[[["usize"]],["self"]]],[11,"value","","",117,[[["self"]],["usize"]]],[11,"try_to_usize","","",118,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",118,[[["usize"]],["self"]]],[11,"value","","",118,[[["self"]],["usize"]]],[11,"try_to_usize","","",119,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",119,[[["usize"]],["self"]]],[11,"value","","",119,[[["self"]],["usize"]]],[11,"try_to_usize","","",120,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",120,[[["usize"]],["self"]]],[11,"value","","",120,[[["self"]],["usize"]]],[11,"try_to_usize","","",121,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",121,[[["usize"]],["self"]]],[11,"value","","",121,[[["self"]],["usize"]]],[11,"try_to_usize","","",122,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",122,[[["usize"]],["self"]]],[11,"value","","",122,[[["self"]],["usize"]]],[11,"try_to_usize","","",123,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",123,[[["usize"]],["self"]]],[11,"value","","",123,[[["self"]],["usize"]]],[11,"try_to_usize","","",124,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",124,[[["usize"]],["self"]]],[11,"value","","",124,[[["self"]],["usize"]]],[11,"try_to_usize","","",125,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",125,[[["usize"]],["self"]]],[11,"value","","",125,[[["self"]],["usize"]]],[11,"try_to_usize","","",126,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",126,[[["usize"]],["self"]]],[11,"value","","",126,[[["self"]],["usize"]]],[11,"try_to_usize","","",127,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",127,[[["usize"]],["self"]]],[11,"value","","",127,[[["self"]],["usize"]]],[11,"try_to_usize","","",128,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",128,[[["usize"]],["self"]]],[11,"value","","",128,[[["self"]],["usize"]]],[11,"try_to_usize","","",129,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",129,[[["usize"]],["self"]]],[11,"value","","",129,[[["self"]],["usize"]]],[11,"try_to_usize","","",130,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",130,[[["usize"]],["self"]]],[11,"value","","",130,[[["self"]],["usize"]]],[11,"try_to_usize","","",131,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",131,[[["usize"]],["self"]]],[11,"value","","",131,[[["self"]],["usize"]]],[11,"try_to_usize","","",132,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",132,[[["usize"]],["self"]]],[11,"value","","",132,[[["self"]],["usize"]]],[11,"try_to_usize","","",133,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",133,[[["usize"]],["self"]]],[11,"value","","",133,[[["self"]],["usize"]]],[11,"try_to_usize","","",134,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",134,[[["usize"]],["self"]]],[11,"value","","",134,[[["self"]],["usize"]]],[11,"try_to_usize","","",135,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",135,[[["usize"]],["self"]]],[11,"value","","",135,[[["self"]],["usize"]]],[11,"try_to_usize","","",136,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",136,[[["usize"]],["self"]]],[11,"value","","",136,[[["self"]],["usize"]]],[11,"try_to_usize","","",137,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",137,[[["usize"]],["self"]]],[11,"value","","",137,[[["self"]],["usize"]]],[11,"try_to_usize","","",138,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",138,[[["usize"]],["self"]]],[11,"value","","",138,[[["self"]],["usize"]]],[11,"try_to_usize","","",139,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",139,[[["usize"]],["self"]]],[11,"value","","",139,[[["self"]],["usize"]]],[11,"try_to_usize","","",140,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",140,[[["usize"]],["self"]]],[11,"value","","",140,[[["self"]],["usize"]]],[11,"try_to_usize","","",141,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",141,[[["usize"]],["self"]]],[11,"value","","",141,[[["self"]],["usize"]]],[11,"try_to_usize","","",142,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",142,[[["usize"]],["self"]]],[11,"value","","",142,[[["self"]],["usize"]]],[11,"try_to_usize","","",143,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",143,[[["usize"]],["self"]]],[11,"value","","",143,[[["self"]],["usize"]]],[11,"try_to_usize","","",144,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",144,[[["usize"]],["self"]]],[11,"value","","",144,[[["self"]],["usize"]]],[11,"try_to_usize","","",145,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",145,[[["usize"]],["self"]]],[11,"value","","",145,[[["self"]],["usize"]]],[11,"try_to_usize","","",146,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",146,[[["usize"]],["self"]]],[11,"value","","",146,[[["self"]],["usize"]]],[11,"try_to_usize","","",147,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",147,[[["usize"]],["self"]]],[11,"value","","",147,[[["self"]],["usize"]]],[11,"try_to_usize","","",148,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",148,[[["usize"]],["self"]]],[11,"value","","",148,[[["self"]],["usize"]]],[11,"try_to_usize","","",149,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",149,[[["usize"]],["self"]]],[11,"value","","",149,[[["self"]],["usize"]]],[11,"try_to_usize","","",150,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",150,[[["usize"]],["self"]]],[11,"value","","",150,[[["self"]],["usize"]]],[11,"try_to_usize","","",151,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",151,[[["usize"]],["self"]]],[11,"value","","",151,[[["self"]],["usize"]]],[11,"try_to_usize","","",152,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",152,[[["usize"]],["self"]]],[11,"value","","",152,[[["self"]],["usize"]]],[11,"try_to_usize","","",153,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",153,[[["usize"]],["self"]]],[11,"value","","",153,[[["self"]],["usize"]]],[11,"try_to_usize","","",154,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",154,[[["usize"]],["self"]]],[11,"value","","",154,[[["self"]],["usize"]]],[11,"try_to_usize","","",155,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",155,[[["usize"]],["self"]]],[11,"value","","",155,[[["self"]],["usize"]]],[11,"try_to_usize","","",156,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",156,[[["usize"]],["self"]]],[11,"value","","",156,[[["self"]],["usize"]]],[11,"try_to_usize","","",157,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",157,[[["usize"]],["self"]]],[11,"value","","",157,[[["self"]],["usize"]]],[11,"try_to_usize","","",158,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",158,[[["usize"]],["self"]]],[11,"value","","",158,[[["self"]],["usize"]]],[11,"try_to_usize","","",159,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",159,[[["usize"]],["self"]]],[11,"value","","",159,[[["self"]],["usize"]]],[11,"try_to_usize","","",160,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",160,[[["usize"]],["self"]]],[11,"value","","",160,[[["self"]],["usize"]]],[11,"try_to_usize","","",161,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",161,[[["usize"]],["self"]]],[11,"value","","",161,[[["self"]],["usize"]]],[11,"try_to_usize","","",162,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",162,[[["usize"]],["self"]]],[11,"value","","",162,[[["self"]],["usize"]]],[11,"try_to_usize","","",163,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",163,[[["usize"]],["self"]]],[11,"value","","",163,[[["self"]],["usize"]]],[11,"try_to_usize","","",164,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",164,[[["usize"]],["self"]]],[11,"value","","",164,[[["self"]],["usize"]]],[11,"try_to_usize","","",165,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",165,[[["usize"]],["self"]]],[11,"value","","",165,[[["self"]],["usize"]]],[11,"try_to_usize","","",166,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",166,[[["usize"]],["self"]]],[11,"value","","",166,[[["self"]],["usize"]]],[11,"try_to_usize","","",167,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",167,[[["usize"]],["self"]]],[11,"value","","",167,[[["self"]],["usize"]]],[11,"try_to_usize","","",168,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",168,[[["usize"]],["self"]]],[11,"value","","",168,[[["self"]],["usize"]]],[11,"try_to_usize","","",169,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",169,[[["usize"]],["self"]]],[11,"value","","",169,[[["self"]],["usize"]]],[11,"try_to_usize","","",170,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",170,[[["usize"]],["self"]]],[11,"value","","",170,[[["self"]],["usize"]]],[11,"try_to_usize","","",171,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",171,[[["usize"]],["self"]]],[11,"value","","",171,[[["self"]],["usize"]]],[11,"try_to_usize","","",172,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",172,[[["usize"]],["self"]]],[11,"value","","",172,[[["self"]],["usize"]]],[11,"try_to_usize","","",173,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",173,[[["usize"]],["self"]]],[11,"value","","",173,[[["self"]],["usize"]]],[11,"try_to_usize","","",174,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",174,[[["usize"]],["self"]]],[11,"value","","",174,[[["self"]],["usize"]]],[11,"try_to_usize","","",175,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",175,[[["usize"]],["self"]]],[11,"value","","",175,[[["self"]],["usize"]]],[11,"try_to_usize","","",176,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",176,[[["usize"]],["self"]]],[11,"value","","",176,[[["self"]],["usize"]]],[11,"try_to_usize","","",177,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",177,[[["usize"]],["self"]]],[11,"value","","",177,[[["self"]],["usize"]]],[11,"try_to_usize","","",178,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",178,[[["usize"]],["self"]]],[11,"value","","",178,[[["self"]],["usize"]]],[11,"try_to_usize","","",179,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",179,[[["usize"]],["self"]]],[11,"value","","",179,[[["self"]],["usize"]]],[11,"try_to_usize","","",180,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",180,[[["usize"]],["self"]]],[11,"value","","",180,[[["self"]],["usize"]]],[11,"try_to_usize","","",181,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",181,[[["usize"]],["self"]]],[11,"value","","",181,[[["self"]],["usize"]]],[11,"try_to_usize","","",182,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",182,[[["usize"]],["self"]]],[11,"value","","",182,[[["self"]],["usize"]]],[11,"try_to_usize","","",183,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",183,[[["usize"]],["self"]]],[11,"value","","",183,[[["self"]],["usize"]]],[11,"try_to_usize","","",184,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",184,[[["usize"]],["self"]]],[11,"value","","",184,[[["self"]],["usize"]]],[11,"try_to_usize","","",185,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",185,[[["usize"]],["self"]]],[11,"value","","",185,[[["self"]],["usize"]]],[11,"try_to_usize","","",186,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",186,[[["usize"]],["self"]]],[11,"value","","",186,[[["self"]],["usize"]]],[11,"try_to_usize","","",187,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",187,[[["usize"]],["self"]]],[11,"value","","",187,[[["self"]],["usize"]]],[11,"try_to_usize","","",188,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",188,[[["usize"]],["self"]]],[11,"value","","",188,[[["self"]],["usize"]]],[11,"try_to_usize","","",189,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",189,[[["usize"]],["self"]]],[11,"value","","",189,[[["self"]],["usize"]]],[11,"try_to_usize","","",190,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",190,[[["usize"]],["self"]]],[11,"value","","",190,[[["self"]],["usize"]]],[11,"try_to_usize","","",191,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",191,[[["usize"]],["self"]]],[11,"value","","",191,[[["self"]],["usize"]]],[11,"try_to_usize","","",192,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",192,[[["usize"]],["self"]]],[11,"value","","",192,[[["self"]],["usize"]]],[11,"try_to_usize","","",193,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",193,[[["usize"]],["self"]]],[11,"value","","",193,[[["self"]],["usize"]]],[11,"try_to_usize","","",194,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",194,[[["usize"]],["self"]]],[11,"value","","",194,[[["self"]],["usize"]]],[11,"try_to_usize","","",195,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",195,[[["usize"]],["self"]]],[11,"value","","",195,[[["self"]],["usize"]]],[11,"try_to_usize","","",196,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",196,[[["usize"]],["self"]]],[11,"value","","",196,[[["self"]],["usize"]]],[11,"try_to_usize","","",197,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",197,[[["usize"]],["self"]]],[11,"value","","",197,[[["self"]],["usize"]]],[11,"try_to_usize","","",198,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",198,[[["usize"]],["self"]]],[11,"value","","",198,[[["self"]],["usize"]]],[11,"try_to_usize","","",199,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",199,[[["usize"]],["self"]]],[11,"value","","",199,[[["self"]],["usize"]]],[11,"try_to_usize","","",200,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",200,[[["usize"]],["self"]]],[11,"value","","",200,[[["self"]],["usize"]]],[11,"try_to_usize","","",201,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",201,[[["usize"]],["self"]]],[11,"value","","",201,[[["self"]],["usize"]]],[11,"try_to_usize","","",202,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",202,[[["usize"]],["self"]]],[11,"value","","",202,[[["self"]],["usize"]]],[11,"try_to_usize","","",203,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",203,[[["usize"]],["self"]]],[11,"value","","",203,[[["self"]],["usize"]]],[11,"try_to_usize","","",204,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",204,[[["usize"]],["self"]]],[11,"value","","",204,[[["self"]],["usize"]]],[11,"try_to_usize","","",205,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",205,[[["usize"]],["self"]]],[11,"value","","",205,[[["self"]],["usize"]]],[11,"try_to_usize","","",206,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",206,[[["usize"]],["self"]]],[11,"value","","",206,[[["self"]],["usize"]]],[11,"try_to_usize","","",207,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",207,[[["usize"]],["self"]]],[11,"value","","",207,[[["self"]],["usize"]]],[11,"try_to_usize","","",208,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",208,[[["usize"]],["self"]]],[11,"value","","",208,[[["self"]],["usize"]]],[11,"try_to_usize","","",209,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",209,[[["usize"]],["self"]]],[11,"value","","",209,[[["self"]],["usize"]]],[11,"try_to_usize","","",210,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",210,[[["usize"]],["self"]]],[11,"value","","",210,[[["self"]],["usize"]]],[11,"try_to_usize","","",211,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",211,[[["usize"]],["self"]]],[11,"value","","",211,[[["self"]],["usize"]]],[11,"try_to_usize","","",212,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",212,[[["usize"]],["self"]]],[11,"value","","",212,[[["self"]],["usize"]]],[11,"try_to_usize","","",213,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",213,[[["usize"]],["self"]]],[11,"value","","",213,[[["self"]],["usize"]]],[11,"try_to_usize","","",214,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",214,[[["usize"]],["self"]]],[11,"value","","",214,[[["self"]],["usize"]]],[11,"try_to_usize","","",215,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",215,[[["usize"]],["self"]]],[11,"value","","",215,[[["self"]],["usize"]]],[11,"try_to_usize","","",216,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",216,[[["usize"]],["self"]]],[11,"value","","",216,[[["self"]],["usize"]]],[11,"try_to_usize","","",217,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",217,[[["usize"]],["self"]]],[11,"value","","",217,[[["self"]],["usize"]]],[11,"try_to_usize","","",218,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",218,[[["usize"]],["self"]]],[11,"value","","",218,[[["self"]],["usize"]]],[11,"try_to_usize","","",219,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",219,[[["usize"]],["self"]]],[11,"value","","",219,[[["self"]],["usize"]]],[11,"try_to_usize","","",220,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",220,[[["usize"]],["self"]]],[11,"value","","",220,[[["self"]],["usize"]]],[11,"try_to_usize","","",221,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",221,[[["usize"]],["self"]]],[11,"value","","",221,[[["self"]],["usize"]]],[11,"try_to_usize","","",222,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",222,[[["usize"]],["self"]]],[11,"value","","",222,[[["self"]],["usize"]]],[11,"try_to_usize","","",223,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",223,[[["usize"]],["self"]]],[11,"value","","",223,[[["self"]],["usize"]]],[11,"try_to_usize","","",224,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",224,[[["usize"]],["self"]]],[11,"value","","",224,[[["self"]],["usize"]]],[11,"try_to_usize","","",225,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",225,[[["usize"]],["self"]]],[11,"value","","",225,[[["self"]],["usize"]]],[11,"try_to_usize","","",226,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",226,[[["usize"]],["self"]]],[11,"value","","",226,[[["self"]],["usize"]]],[11,"try_to_usize","","",227,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",227,[[["usize"]],["self"]]],[11,"value","","",227,[[["self"]],["usize"]]],[11,"try_to_usize","","",228,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",228,[[["usize"]],["self"]]],[11,"value","","",228,[[["self"]],["usize"]]],[11,"try_to_usize","","",229,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",229,[[["usize"]],["self"]]],[11,"value","","",229,[[["self"]],["usize"]]],[11,"try_to_usize","","",230,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",230,[[["usize"]],["self"]]],[11,"value","","",230,[[["self"]],["usize"]]],[11,"try_to_usize","","",231,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",231,[[["usize"]],["self"]]],[11,"value","","",231,[[["self"]],["usize"]]],[11,"try_to_usize","","",232,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",232,[[["usize"]],["self"]]],[11,"value","","",232,[[["self"]],["usize"]]],[11,"try_to_usize","","",233,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",233,[[["usize"]],["self"]]],[11,"value","","",233,[[["self"]],["usize"]]],[11,"try_to_usize","","",234,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",234,[[["usize"]],["self"]]],[11,"value","","",234,[[["self"]],["usize"]]],[11,"try_to_usize","","",235,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",235,[[["usize"]],["self"]]],[11,"value","","",235,[[["self"]],["usize"]]],[11,"try_to_usize","","",236,[[],[["usize"],["option",["usize"]]]]],[11,"from_usize","","",236,[[["usize"]],["self"]]],[11,"value","","",236,[[["self"]],["usize"]]],[11,"name","","",109,[[],["self"]]],[11,"name","","",110,[[],["self"]]],[11,"name","","",111,[[],["self"]]],[11,"name","","",112,[[],["self"]]],[11,"name","","",113,[[],["self"]]],[11,"name","","",114,[[],["self"]]],[11,"name","","",115,[[],["self"]]],[11,"name","","",116,[[],["self"]]],[11,"name","","",117,[[],["self"]]],[11,"name","","",118,[[],["self"]]],[11,"name","","",119,[[],["self"]]],[11,"name","","",120,[[],["self"]]],[11,"name","","",121,[[],["self"]]],[11,"name","","",122,[[],["self"]]],[11,"name","","",123,[[],["self"]]],[11,"name","","",124,[[],["self"]]],[11,"name","","",125,[[],["self"]]],[11,"name","","",126,[[],["self"]]],[11,"name","","",127,[[],["self"]]],[11,"name","","",128,[[],["self"]]],[11,"name","","",129,[[],["self"]]],[11,"name","","",130,[[],["self"]]],[11,"name","","",131,[[],["self"]]],[11,"name","","",132,[[],["self"]]],[11,"name","","",133,[[],["self"]]],[11,"name","","",134,[[],["self"]]],[11,"name","","",135,[[],["self"]]],[11,"name","","",136,[[],["self"]]],[11,"name","","",137,[[],["self"]]],[11,"name","","",138,[[],["self"]]],[11,"name","","",139,[[],["self"]]],[11,"name","","",140,[[],["self"]]],[11,"name","","",141,[[],["self"]]],[11,"name","","",142,[[],["self"]]],[11,"name","","",143,[[],["self"]]],[11,"name","","",144,[[],["self"]]],[11,"name","","",145,[[],["self"]]],[11,"name","","",146,[[],["self"]]],[11,"name","","",147,[[],["self"]]],[11,"name","","",148,[[],["self"]]],[11,"name","","",149,[[],["self"]]],[11,"name","","",150,[[],["self"]]],[11,"name","","",151,[[],["self"]]],[11,"name","","",152,[[],["self"]]],[11,"name","","",153,[[],["self"]]],[11,"name","","",154,[[],["self"]]],[11,"name","","",155,[[],["self"]]],[11,"name","","",156,[[],["self"]]],[11,"name","","",157,[[],["self"]]],[11,"name","","",158,[[],["self"]]],[11,"name","","",159,[[],["self"]]],[11,"name","","",160,[[],["self"]]],[11,"name","","",161,[[],["self"]]],[11,"name","","",162,[[],["self"]]],[11,"name","","",163,[[],["self"]]],[11,"name","","",164,[[],["self"]]],[11,"name","","",165,[[],["self"]]],[11,"name","","",166,[[],["self"]]],[11,"name","","",167,[[],["self"]]],[11,"name","","",168,[[],["self"]]],[11,"name","","",169,[[],["self"]]],[11,"name","","",170,[[],["self"]]],[11,"name","","",171,[[],["self"]]],[11,"name","","",172,[[],["self"]]],[11,"name","","",173,[[],["self"]]],[11,"name","","",174,[[],["self"]]],[11,"name","","",175,[[],["self"]]],[11,"name","","",176,[[],["self"]]],[11,"name","","",177,[[],["self"]]],[11,"name","","",178,[[],["self"]]],[11,"name","","",179,[[],["self"]]],[11,"name","","",180,[[],["self"]]],[11,"name","","",181,[[],["self"]]],[11,"name","","",182,[[],["self"]]],[11,"name","","",183,[[],["self"]]],[11,"name","","",184,[[],["self"]]],[11,"name","","",185,[[],["self"]]],[11,"name","","",186,[[],["self"]]],[11,"name","","",187,[[],["self"]]],[11,"name","","",188,[[],["self"]]],[11,"name","","",189,[[],["self"]]],[11,"name","","",190,[[],["self"]]],[11,"name","","",191,[[],["self"]]],[11,"name","","",192,[[],["self"]]],[11,"name","","",193,[[],["self"]]],[11,"name","","",194,[[],["self"]]],[11,"name","","",195,[[],["self"]]],[11,"name","","",196,[[],["self"]]],[11,"name","","",197,[[],["self"]]],[11,"name","","",198,[[],["self"]]],[11,"name","","",199,[[],["self"]]],[11,"name","","",200,[[],["self"]]],[11,"name","","",201,[[],["self"]]],[11,"name","","",202,[[],["self"]]],[11,"name","","",203,[[],["self"]]],[11,"name","","",204,[[],["self"]]],[11,"name","","",205,[[],["self"]]],[11,"name","","",206,[[],["self"]]],[11,"name","","",207,[[],["self"]]],[11,"name","","",208,[[],["self"]]],[11,"name","","",209,[[],["self"]]],[11,"name","","",210,[[],["self"]]],[11,"name","","",211,[[],["self"]]],[11,"name","","",212,[[],["self"]]],[11,"name","","",213,[[],["self"]]],[11,"name","","",214,[[],["self"]]],[11,"name","","",215,[[],["self"]]],[11,"name","","",216,[[],["self"]]],[11,"name","","",217,[[],["self"]]],[11,"name","","",218,[[],["self"]]],[11,"name","","",219,[[],["self"]]],[11,"name","","",220,[[],["self"]]],[11,"name","","",221,[[],["self"]]],[11,"name","","",222,[[],["self"]]],[11,"name","","",223,[[],["self"]]],[11,"name","","",224,[[],["self"]]],[11,"name","","",225,[[],["self"]]],[11,"name","","",226,[[],["self"]]],[11,"name","","",227,[[],["self"]]],[11,"name","","",228,[[],["self"]]],[11,"name","","",229,[[],["self"]]],[11,"name","","",230,[[],["self"]]],[11,"name","","",231,[[],["self"]]],[11,"name","","",232,[[],["self"]]],[11,"name","","",233,[[],["self"]]],[11,"name","","",234,[[],["self"]]],[11,"name","","",235,[[],["self"]]],[11,"name","","",236,[[],["self"]]],[11,"ptr","nalgebra::base","",106,[[["self"]]]],[11,"shape","","",106,[[["self"]]]],[11,"strides","","",106,[[["self"]]]],[11,"is_contiguous","","",106,[[["self"]],["bool"]]],[11,"into_owned","","",106,[[],["owned"]]],[11,"clone_owned","","",106,[[["self"]],["owned"]]],[11,"as_slice","","",106,[[["self"]]]],[11,"ptr","","",70,[[["self"]]]],[11,"shape","","",70,[[["self"]]]],[11,"strides","","",70,[[["self"]]]],[11,"is_contiguous","","",70,[[["self"]],["bool"]]],[11,"into_owned","","",70,[[],["owned"]]],[11,"clone_owned","","",70,[[["self"]],["owned"]]],[11,"as_slice","","",70,[[["self"]]]],[11,"ptr","","",71,[[["self"]]]],[11,"shape","","",71,[[["self"]]]],[11,"strides","","",71,[[["self"]]]],[11,"is_contiguous","","",71,[[["self"]],["bool"]]],[11,"into_owned","","",71,[[],["owned"]]],[11,"clone_owned","","",71,[[["self"]],["owned"]]],[11,"as_slice","","",71,[[["self"]]]],[11,"ptr","","",72,[[["self"]]]],[11,"shape","","",72,[[["self"]]]],[11,"strides","","",72,[[["self"]]]],[11,"is_contiguous","","",72,[[["self"]],["bool"]]],[11,"into_owned","","",72,[[],[["owned",["dynamic"]],["dynamic"]]]],[11,"clone_owned","","",72,[[["self"]],[["owned",["dynamic"]],["dynamic"]]]],[11,"as_slice","","",72,[[["self"]]]],[11,"ptr","","",72,[[["self"]]]],[11,"shape","","",72,[[["self"]]]],[11,"strides","","",72,[[["self"]]]],[11,"is_contiguous","","",72,[[["self"]],["bool"]]],[11,"into_owned","","",72,[[],[["dynamic"],["owned",["dynamic"]]]]],[11,"clone_owned","","",72,[[["self"]],[["dynamic"],["owned",["dynamic"]]]]],[11,"as_slice","","",72,[[["self"]]]],[11,"ptr_mut","","",106,[[["self"]]]],[11,"as_mut_slice","","",106,[[["self"]]]],[11,"ptr_mut","","",71,[[["self"]]]],[11,"as_mut_slice","","",71,[[["self"]]]],[11,"ptr_mut","","",72,[[["self"]]]],[11,"as_mut_slice","","",72,[[["self"]]]],[11,"ptr_mut","","",72,[[["self"]]]],[11,"as_mut_slice","","",72,[[["self"]]]],[11,"norm","","",104,[[["self"],["matrix"]]]],[11,"metric_distance","","",104,[[["matrix"],["self"],["matrix"]]]],[11,"norm","","",8,[[["self"],["matrix"]]]],[11,"metric_distance","","",8,[[["matrix"],["self"],["matrix"]]]],[11,"norm","","",105,[[["self"],["matrix"]]]],[11,"metric_distance","","",105,[[["matrix"],["self"],["matrix"]]]],[11,"norm","nalgebra","",244,[[["self"]]]],[11,"norm_squared","","",244,[[["self"]]]],[11,"scale_mut","","",244,[[["self"]]]],[11,"unscale_mut","","",244,[[["self"]]]],[11,"norm","nalgebra::geometry","",78,[[["self"]]]],[11,"norm_squared","","",78,[[["self"]]]],[11,"scale_mut","","",78,[[["self"]]]],[11,"unscale_mut","","",78,[[["self"]]]],[11,"norm","nalgebra","",0,[[["self"]]]],[11,"norm_squared","","",0,[[["self"]]]],[11,"scale_mut","","",0,[[["self"]]]],[11,"unscale_mut","","",0,[[["self"]]]],[11,"identity","nalgebra::geometry","",82,[[],["self"]]],[11,"inverse","","",82,[[["self"]],["self"]]],[11,"inverse_mut","","",82,[[["self"]]]],[11,"transform_vector","","",82,[[["self"],["vectorn"]],["vectorn"]]],[11,"transform_point","","",82,[[["self"],["point"]],["point"]]],[11,"inverse_transform_vector","","",82,[[["self"],["vectorn"]],["vectorn"]]],[11,"inverse_transform_point","","",82,[[["self"],["point"]],["point"]]],[11,"identity","nalgebra","",245,[[],["self"]]],[11,"inverse","","",245,[[["self"]],["self"]]],[11,"inverse_mut","","",245,[[["self"]]]],[11,"transform_vector","","",245,[[["vectorn"],["self"]],[["u3"],["vectorn",["u3"]]]]],[11,"transform_point","","",245,[[["point"],["self"]],[["point",["u3"]],["u3"]]]],[11,"inverse_transform_vector","","",245,[[["vectorn"],["self"]],[["u3"],["vectorn",["u3"]]]]],[11,"inverse_transform_point","","",245,[[["point"],["self"]],[["point",["u3"]],["u3"]]]],[11,"identity","","",246,[[],["self"]]],[11,"inverse","","",246,[[["self"]],["self"]]],[11,"inverse_mut","","",246,[[["self"]]]],[11,"transform_vector","","",246,[[["self"],["vectorn"]],[["u2"],["vectorn",["u2"]]]]],[11,"transform_point","","",246,[[["self"],["point"]],[["u2"],["point",["u2"]]]]],[11,"inverse_transform_vector","","",246,[[["self"],["vectorn"]],[["u2"],["vectorn",["u2"]]]]],[11,"inverse_transform_point","","",246,[[["self"],["point"]],[["u2"],["point",["u2"]]]]],[11,"check_homogeneous_invariants","nalgebra::geometry","",241,[[["matrixn"]],["bool"]]],[11,"check_homogeneous_invariants","","",242,[[["matrixn"]],["bool"]]],[11,"has_normalizer","","",243,[[],["bool"]]],[11,"check_homogeneous_invariants","","",243,[[["matrixn"]],["bool"]]],[11,"add","nalgebra::base::dimension","",62,[[["d"]],["dynamic"]]],[11,"mul","","",62,[[["d"]],["dynamic"]]],[11,"sub","","",62,[[["d"]],["dynamic"]]],[11,"div","","",62,[[["d"]],["dynamic"]]],[11,"min","","",62,[[["d"]],["dynamic"]]],[11,"max","","",62,[[["d"]],["dynamic"]]],[11,"as_mut","nalgebra::base","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_mut","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",7,[[["self"]]]],[11,"as_ref","","",69,[[["self"]],["t"]]],[11,"from","nalgebra","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","nalgebra::base","",7,[[["matrixslice"]],["self"]]],[11,"from","","",7,[[["matrixslice",["dynamic"]],["dynamic"]],["self"]]],[11,"from","","",7,[[["matrixslice",["dynamic"]],["dynamic"]],["self"]]],[11,"from","","",7,[[["matrixslicemut"]],["self"]]],[11,"from","","",7,[[["matrixslicemut",["dynamic"]],["dynamic"]],["self"]]],[11,"from","","",7,[[["matrixslicemut",["dynamic"]],["dynamic"]],["self"]]],[11,"from","nalgebra","",247,[[["matrix"]],["self"]]],[11,"from","","",247,[[["matrix"]],["self"]]],[11,"from","","",248,[[["matrix"]],["self"]]],[11,"from","","",249,[[],["self"]]],[11,"from","","",250,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",244,[[],["self"]]],[11,"from","","",247,[[["matrixslicemut"]],["self"]]],[11,"from","nalgebra::base","",69,[[],["self"]]],[11,"from","","",69,[[],["self"]]],[11,"from","","",69,[[],["self"]]],[11,"from","","",69,[[],["self"]]],[11,"from","nalgebra::geometry","",77,[[],["self"]]],[11,"from","","",77,[[],["self"]]],[11,"from","","",77,[[],["self"]]],[11,"from","","",77,[[],["self"]]],[11,"from","","",77,[[],["self"]]],[11,"from","","",77,[[],["self"]]],[11,"from","nalgebra","",251,[[["point"]],["self"]]],[11,"from","nalgebra::geometry","",77,[[["vectorn"]],["self"]]],[11,"from","","",77,[[],["self"]]],[11,"from","","",77,[[],["self"]]],[11,"from","","",77,[[],["self"]]],[11,"from","","",77,[[],["self"]]],[11,"from","nalgebra","",252,[[["rotation2"]],["self"]]],[11,"from","","",253,[[["rotation2"]],["self"]]],[11,"from","","",254,[[["rotation3"]],["self"]]],[11,"from","","",252,[[["rotation3"]],["self"]]],[11,"from","nalgebra::geometry","",82,[[],["self"]]],[11,"from","","",82,[[],["self"]]],[11,"from","","",82,[[],["self"]]],[11,"from","","",82,[[],["self"]]],[11,"from","nalgebra","",254,[[["unitquaternion"]],["self"]]],[11,"from","","",255,[[["unitquaternion"]],["self"]]],[11,"from","","",245,[[["rotation3"]],["self"]]],[11,"from","","",252,[[["unitquaternion"]],["self"]]],[11,"from","nalgebra::geometry","",78,[[["vector4"]],["self"]]],[11,"from","","",78,[[],["self"]]],[11,"from","","",78,[[],["self"]]],[11,"from","","",78,[[],["self"]]],[11,"from","","",78,[[],["self"]]],[11,"from","nalgebra","",245,[[],["self"]]],[11,"from","","",245,[[],["self"]]],[11,"from","","",245,[[],["self"]]],[11,"from","","",245,[[],["self"]]],[11,"from","","",256,[[["unitcomplex"]],["self"]]],[11,"from","","",246,[[["rotation2"]],["self"]]],[11,"from","","",252,[[["unitcomplex"]],["matrix3"]]],[11,"from","","",253,[[["unitcomplex"]],["self"]]],[11,"from","","",246,[[],["self"]]],[11,"from","","",246,[[],["self"]]],[11,"from","","",246,[[],["self"]]],[11,"from","","",246,[[],["self"]]],[11,"from","","",257,[[["translation"]],["self"]]],[11,"from","nalgebra::geometry","",79,[[["vectorn"]],["self"]]],[11,"from","","",79,[[],["self"]]],[11,"from","","",79,[[],["self"]]],[11,"from","","",79,[[],["self"]]],[11,"from","","",79,[[],["self"]]],[11,"from","nalgebra","",257,[[["isometry"]],["self"]]],[11,"from","nalgebra::geometry","",80,[[],["self"]]],[11,"from","","",80,[[],["self"]]],[11,"from","","",80,[[],["self"]]],[11,"from","","",80,[[],["self"]]],[11,"from","nalgebra","",257,[[["similarity"]],["self"]]],[11,"from","nalgebra::geometry","",81,[[],["self"]]],[11,"from","","",81,[[],["self"]]],[11,"from","","",81,[[],["self"]]],[11,"from","","",81,[[],["self"]]],[11,"from","nalgebra","",257,[[["transform"]],["self"]]],[11,"from","","",254,[[["orthographic3"]],["self"]]],[11,"from","","",254,[[["perspective3"]],["self"]]],[11,"into","nalgebra::base","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",72,[[],["vec"]]],[11,"len","nalgebra::base::iter","",63,[[["self"]],["usize"]]],[11,"len","","",64,[[["self"]],["usize"]]],[11,"len","","",237,[[["self"]],["usize"]]],[11,"len","","",238,[[["self"]],["usize"]]],[11,"len","","",239,[[["self"]],["usize"]]],[11,"len","","",240,[[["self"]],["usize"]]],[11,"extend","nalgebra::base","Extend the number of columns of the `Matrix` with elements…",7,[[["intoiterator"],["self"]]]],[11,"extend","","Extend the number of rows of a `Vector` with elements from…",7,[[["intoiterator"],["self"]]]],[11,"extend","","Extends the number of columns of a `Matrix` with `Vector`s…",7,[[["self"],["intoiterator"]]]],[11,"extend","","Extends the number of columns of the `VecStorage` with…",72,[[["intoiterator"],["self"]]]],[11,"extend","","Extends the number of columns of the `VecStorage` with…",72,[[["intoiterator"],["self"]]]],[11,"extend","","Extends the number of columns of the `VecStorage` with…",72,[[["self"],["intoiterator"]]]],[11,"extend","","Extends the number of rows of the `VecStorage` with…",72,[[["intoiterator"],["self"]]]],[11,"next","nalgebra::base::iter","",63,[[["self"]],[["n"],["option"]]]],[11,"size_hint","","",63,[[["self"]]]],[11,"count","","",63,[[],["usize"]]],[11,"next","","",64,[[["self"]],[["option"],["n"]]]],[11,"size_hint","","",64,[[["self"]]]],[11,"count","","",64,[[],["usize"]]],[11,"next","","",237,[[["self"]],["option"]]],[11,"size_hint","","",237,[[["self"]]]],[11,"count","","",237,[[],["usize"]]],[11,"next","","",238,[[["self"]],["option"]]],[11,"size_hint","","",238,[[["self"]]]],[11,"count","","",238,[[],["usize"]]],[11,"next","","",239,[[["self"]],["option"]]],[11,"size_hint","","",239,[[["self"]]]],[11,"count","","",239,[[],["usize"]]],[11,"next","","",240,[[["self"]],["option"]]],[11,"size_hint","","",240,[[["self"]]]],[11,"count","","",240,[[],["usize"]]],[11,"clone","nalgebra::base::coordinates","",15,[[["self"]],["x"]]],[11,"clone","","",16,[[["self"]],["xy"]]],[11,"clone","","",17,[[["self"]],["xyz"]]],[11,"clone","","",18,[[["self"]],["xyzw"]]],[11,"clone","","",19,[[["self"]],["xyzwa"]]],[11,"clone","","",20,[[["self"]],["xyzwab"]]],[11,"clone","","",21,[[["self"]],["ijkw"]]],[11,"clone","","",22,[[["self"]],["m2x2"]]],[11,"clone","","",23,[[["self"]],["m2x3"]]],[11,"clone","","",24,[[["self"]],["m2x4"]]],[11,"clone","","",25,[[["self"]],["m2x5"]]],[11,"clone","","",26,[[["self"]],["m2x6"]]],[11,"clone","","",27,[[["self"]],["m3x2"]]],[11,"clone","","",28,[[["self"]],["m3x3"]]],[11,"clone","","",29,[[["self"]],["m3x4"]]],[11,"clone","","",30,[[["self"]],["m3x5"]]],[11,"clone","","",31,[[["self"]],["m3x6"]]],[11,"clone","","",32,[[["self"]],["m4x2"]]],[11,"clone","","",33,[[["self"]],["m4x3"]]],[11,"clone","","",34,[[["self"]],["m4x4"]]],[11,"clone","","",35,[[["self"]],["m4x5"]]],[11,"clone","","",36,[[["self"]],["m4x6"]]],[11,"clone","","",37,[[["self"]],["m5x2"]]],[11,"clone","","",38,[[["self"]],["m5x3"]]],[11,"clone","","",39,[[["self"]],["m5x4"]]],[11,"clone","","",40,[[["self"]],["m5x5"]]],[11,"clone","","",41,[[["self"]],["m5x6"]]],[11,"clone","","",42,[[["self"]],["m6x2"]]],[11,"clone","","",43,[[["self"]],["m6x3"]]],[11,"clone","","",44,[[["self"]],["m6x4"]]],[11,"clone","","",45,[[["self"]],["m6x5"]]],[11,"clone","","",46,[[["self"]],["m6x6"]]],[11,"clone","nalgebra::base::dimension","",62,[[["self"]],["dynamic"]]],[11,"clone","","",109,[[["self"]],["u1"]]],[11,"clone","","",110,[[["self"]],["u0"]]],[11,"clone","","",111,[[["self"]],["u2"]]],[11,"clone","","",112,[[["self"]],["u3"]]],[11,"clone","","",113,[[["self"]],["u4"]]],[11,"clone","","",114,[[["self"]],["u5"]]],[11,"clone","","",115,[[["self"]],["u6"]]],[11,"clone","","",116,[[["self"]],["u7"]]],[11,"clone","","",117,[[["self"]],["u8"]]],[11,"clone","","",118,[[["self"]],["u9"]]],[11,"clone","","",119,[[["self"]],["u10"]]],[11,"clone","","",120,[[["self"]],["u11"]]],[11,"clone","","",121,[[["self"]],["u12"]]],[11,"clone","","",122,[[["self"]],["u13"]]],[11,"clone","","",123,[[["self"]],["u14"]]],[11,"clone","","",124,[[["self"]],["u15"]]],[11,"clone","","",125,[[["self"]],["u16"]]],[11,"clone","","",126,[[["self"]],["u17"]]],[11,"clone","","",127,[[["self"]],["u18"]]],[11,"clone","","",128,[[["self"]],["u19"]]],[11,"clone","","",129,[[["self"]],["u20"]]],[11,"clone","","",130,[[["self"]],["u21"]]],[11,"clone","","",131,[[["self"]],["u22"]]],[11,"clone","","",132,[[["self"]],["u23"]]],[11,"clone","","",133,[[["self"]],["u24"]]],[11,"clone","","",134,[[["self"]],["u25"]]],[11,"clone","","",135,[[["self"]],["u26"]]],[11,"clone","","",136,[[["self"]],["u27"]]],[11,"clone","","",137,[[["self"]],["u28"]]],[11,"clone","","",138,[[["self"]],["u29"]]],[11,"clone","","",139,[[["self"]],["u30"]]],[11,"clone","","",140,[[["self"]],["u31"]]],[11,"clone","","",141,[[["self"]],["u32"]]],[11,"clone","","",142,[[["self"]],["u33"]]],[11,"clone","","",143,[[["self"]],["u34"]]],[11,"clone","","",144,[[["self"]],["u35"]]],[11,"clone","","",145,[[["self"]],["u36"]]],[11,"clone","","",146,[[["self"]],["u37"]]],[11,"clone","","",147,[[["self"]],["u38"]]],[11,"clone","","",148,[[["self"]],["u39"]]],[11,"clone","","",149,[[["self"]],["u40"]]],[11,"clone","","",150,[[["self"]],["u41"]]],[11,"clone","","",151,[[["self"]],["u42"]]],[11,"clone","","",152,[[["self"]],["u43"]]],[11,"clone","","",153,[[["self"]],["u44"]]],[11,"clone","","",154,[[["self"]],["u45"]]],[11,"clone","","",155,[[["self"]],["u46"]]],[11,"clone","","",156,[[["self"]],["u47"]]],[11,"clone","","",157,[[["self"]],["u48"]]],[11,"clone","","",158,[[["self"]],["u49"]]],[11,"clone","","",159,[[["self"]],["u50"]]],[11,"clone","","",160,[[["self"]],["u51"]]],[11,"clone","","",161,[[["self"]],["u52"]]],[11,"clone","","",162,[[["self"]],["u53"]]],[11,"clone","","",163,[[["self"]],["u54"]]],[11,"clone","","",164,[[["self"]],["u55"]]],[11,"clone","","",165,[[["self"]],["u56"]]],[11,"clone","","",166,[[["self"]],["u57"]]],[11,"clone","","",167,[[["self"]],["u58"]]],[11,"clone","","",168,[[["self"]],["u59"]]],[11,"clone","","",169,[[["self"]],["u60"]]],[11,"clone","","",170,[[["self"]],["u61"]]],[11,"clone","","",171,[[["self"]],["u62"]]],[11,"clone","","",172,[[["self"]],["u63"]]],[11,"clone","","",173,[[["self"]],["u64"]]],[11,"clone","","",174,[[["self"]],["u65"]]],[11,"clone","","",175,[[["self"]],["u66"]]],[11,"clone","","",176,[[["self"]],["u67"]]],[11,"clone","","",177,[[["self"]],["u68"]]],[11,"clone","","",178,[[["self"]],["u69"]]],[11,"clone","","",179,[[["self"]],["u70"]]],[11,"clone","","",180,[[["self"]],["u71"]]],[11,"clone","","",181,[[["self"]],["u72"]]],[11,"clone","","",182,[[["self"]],["u73"]]],[11,"clone","","",183,[[["self"]],["u74"]]],[11,"clone","","",184,[[["self"]],["u75"]]],[11,"clone","","",185,[[["self"]],["u76"]]],[11,"clone","","",186,[[["self"]],["u77"]]],[11,"clone","","",187,[[["self"]],["u78"]]],[11,"clone","","",188,[[["self"]],["u79"]]],[11,"clone","","",189,[[["self"]],["u80"]]],[11,"clone","","",190,[[["self"]],["u81"]]],[11,"clone","","",191,[[["self"]],["u82"]]],[11,"clone","","",192,[[["self"]],["u83"]]],[11,"clone","","",193,[[["self"]],["u84"]]],[11,"clone","","",194,[[["self"]],["u85"]]],[11,"clone","","",195,[[["self"]],["u86"]]],[11,"clone","","",196,[[["self"]],["u87"]]],[11,"clone","","",197,[[["self"]],["u88"]]],[11,"clone","","",198,[[["self"]],["u89"]]],[11,"clone","","",199,[[["self"]],["u90"]]],[11,"clone","","",200,[[["self"]],["u91"]]],[11,"clone","","",201,[[["self"]],["u92"]]],[11,"clone","","",202,[[["self"]],["u93"]]],[11,"clone","","",203,[[["self"]],["u94"]]],[11,"clone","","",204,[[["self"]],["u95"]]],[11,"clone","","",205,[[["self"]],["u96"]]],[11,"clone","","",206,[[["self"]],["u97"]]],[11,"clone","","",207,[[["self"]],["u98"]]],[11,"clone","","",208,[[["self"]],["u99"]]],[11,"clone","","",209,[[["self"]],["u100"]]],[11,"clone","","",210,[[["self"]],["u101"]]],[11,"clone","","",211,[[["self"]],["u102"]]],[11,"clone","","",212,[[["self"]],["u103"]]],[11,"clone","","",213,[[["self"]],["u104"]]],[11,"clone","","",214,[[["self"]],["u105"]]],[11,"clone","","",215,[[["self"]],["u106"]]],[11,"clone","","",216,[[["self"]],["u107"]]],[11,"clone","","",217,[[["self"]],["u108"]]],[11,"clone","","",218,[[["self"]],["u109"]]],[11,"clone","","",219,[[["self"]],["u110"]]],[11,"clone","","",220,[[["self"]],["u111"]]],[11,"clone","","",221,[[["self"]],["u112"]]],[11,"clone","","",222,[[["self"]],["u113"]]],[11,"clone","","",223,[[["self"]],["u114"]]],[11,"clone","","",224,[[["self"]],["u115"]]],[11,"clone","","",225,[[["self"]],["u116"]]],[11,"clone","","",226,[[["self"]],["u117"]]],[11,"clone","","",227,[[["self"]],["u118"]]],[11,"clone","","",228,[[["self"]],["u119"]]],[11,"clone","","",229,[[["self"]],["u120"]]],[11,"clone","","",230,[[["self"]],["u121"]]],[11,"clone","","",231,[[["self"]],["u122"]]],[11,"clone","","",232,[[["self"]],["u123"]]],[11,"clone","","",233,[[["self"]],["u124"]]],[11,"clone","","",234,[[["self"]],["u125"]]],[11,"clone","","",235,[[["self"]],["u126"]]],[11,"clone","","",236,[[["self"]],["u127"]]],[11,"clone","nalgebra::base::iter","",237,[[["self"]],["rowiter"]]],[11,"clone","","",239,[[["self"]],["columniter"]]],[11,"clone","nalgebra::base","",106,[[["self"]],["self"]]],[11,"clone","","",7,[[["self"]],["matrix"]]],[11,"clone","","",70,[[["self"]],["self"]]],[11,"clone","","",69,[[["self"]],["unit"]]],[11,"clone","","",72,[[["self"]],["vecstorage"]]],[11,"clone","nalgebra::geometry","",77,[[["self"]],["point"]]],[11,"clone","","",82,[[["self"]],["self"]]],[11,"clone","","",78,[[["self"]],["self"]]],[11,"clone","","",79,[[["self"]],["self"]]],[11,"clone","","",80,[[["self"]],["self"]]],[11,"clone","","",81,[[["self"]],["self"]]],[11,"clone","","",241,[[["self"]],["tgeneral"]]],[11,"clone","","",242,[[["self"]],["tprojective"]]],[11,"clone","","",243,[[["self"]],["taffine"]]],[11,"clone","","",83,[[["self"]],["self"]]],[11,"clone","","",85,[[["self"]],["self"]]],[11,"clone","","",86,[[["self"]],["self"]]],[11,"clone","nalgebra::linalg","",92,[[["self"]],["bidiagonal"]]],[11,"clone","","",93,[[["self"]],["cholesky"]]],[11,"clone","","",96,[[["self"]],["fullpivlu"]]],[11,"clone","nalgebra::linalg::givens","",97,[[["self"]],["givensrotation"]]],[11,"clone","nalgebra::linalg","",98,[[["self"]],["hessenberg"]]],[11,"clone","","",99,[[["self"]],["lu"]]],[11,"clone","","",100,[[["self"]],["permutationsequence"]]],[11,"clone","","",101,[[["self"]],["qr"]]],[11,"clone","","",102,[[["self"]],["schur"]]],[11,"clone","","",90,[[["self"]],["svd"]]],[11,"clone","","",91,[[["self"]],["symmetriceigen"]]],[11,"clone","","",103,[[["self"]],["symmetrictridiagonal"]]],[11,"eq","nalgebra::base::coordinates","",15,[[["x"],["self"]],["bool"]]],[11,"ne","","",15,[[["x"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["xy"]],["bool"]]],[11,"ne","","",16,[[["self"],["xy"]],["bool"]]],[11,"eq","","",17,[[["xyz"],["self"]],["bool"]]],[11,"ne","","",17,[[["xyz"],["self"]],["bool"]]],[11,"eq","","",18,[[["xyzw"],["self"]],["bool"]]],[11,"ne","","",18,[[["xyzw"],["self"]],["bool"]]],[11,"eq","","",19,[[["xyzwa"],["self"]],["bool"]]],[11,"ne","","",19,[[["xyzwa"],["self"]],["bool"]]],[11,"eq","","",20,[[["xyzwab"],["self"]],["bool"]]],[11,"ne","","",20,[[["xyzwab"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["ijkw"]],["bool"]]],[11,"ne","","",21,[[["self"],["ijkw"]],["bool"]]],[11,"eq","","",22,[[["self"],["m2x2"]],["bool"]]],[11,"ne","","",22,[[["self"],["m2x2"]],["bool"]]],[11,"eq","","",23,[[["m2x3"],["self"]],["bool"]]],[11,"ne","","",23,[[["m2x3"],["self"]],["bool"]]],[11,"eq","","",24,[[["self"],["m2x4"]],["bool"]]],[11,"ne","","",24,[[["self"],["m2x4"]],["bool"]]],[11,"eq","","",25,[[["self"],["m2x5"]],["bool"]]],[11,"ne","","",25,[[["self"],["m2x5"]],["bool"]]],[11,"eq","","",26,[[["self"],["m2x6"]],["bool"]]],[11,"ne","","",26,[[["self"],["m2x6"]],["bool"]]],[11,"eq","","",27,[[["m3x2"],["self"]],["bool"]]],[11,"ne","","",27,[[["m3x2"],["self"]],["bool"]]],[11,"eq","","",28,[[["m3x3"],["self"]],["bool"]]],[11,"ne","","",28,[[["m3x3"],["self"]],["bool"]]],[11,"eq","","",29,[[["self"],["m3x4"]],["bool"]]],[11,"ne","","",29,[[["self"],["m3x4"]],["bool"]]],[11,"eq","","",30,[[["self"],["m3x5"]],["bool"]]],[11,"ne","","",30,[[["self"],["m3x5"]],["bool"]]],[11,"eq","","",31,[[["m3x6"],["self"]],["bool"]]],[11,"ne","","",31,[[["m3x6"],["self"]],["bool"]]],[11,"eq","","",32,[[["m4x2"],["self"]],["bool"]]],[11,"ne","","",32,[[["m4x2"],["self"]],["bool"]]],[11,"eq","","",33,[[["m4x3"],["self"]],["bool"]]],[11,"ne","","",33,[[["m4x3"],["self"]],["bool"]]],[11,"eq","","",34,[[["self"],["m4x4"]],["bool"]]],[11,"ne","","",34,[[["self"],["m4x4"]],["bool"]]],[11,"eq","","",35,[[["self"],["m4x5"]],["bool"]]],[11,"ne","","",35,[[["self"],["m4x5"]],["bool"]]],[11,"eq","","",36,[[["m4x6"],["self"]],["bool"]]],[11,"ne","","",36,[[["m4x6"],["self"]],["bool"]]],[11,"eq","","",37,[[["m5x2"],["self"]],["bool"]]],[11,"ne","","",37,[[["m5x2"],["self"]],["bool"]]],[11,"eq","","",38,[[["self"],["m5x3"]],["bool"]]],[11,"ne","","",38,[[["self"],["m5x3"]],["bool"]]],[11,"eq","","",39,[[["m5x4"],["self"]],["bool"]]],[11,"ne","","",39,[[["m5x4"],["self"]],["bool"]]],[11,"eq","","",40,[[["m5x5"],["self"]],["bool"]]],[11,"ne","","",40,[[["m5x5"],["self"]],["bool"]]],[11,"eq","","",41,[[["m5x6"],["self"]],["bool"]]],[11,"ne","","",41,[[["m5x6"],["self"]],["bool"]]],[11,"eq","","",42,[[["m6x2"],["self"]],["bool"]]],[11,"ne","","",42,[[["m6x2"],["self"]],["bool"]]],[11,"eq","","",43,[[["m6x3"],["self"]],["bool"]]],[11,"ne","","",43,[[["m6x3"],["self"]],["bool"]]],[11,"eq","","",44,[[["m6x4"],["self"]],["bool"]]],[11,"ne","","",44,[[["m6x4"],["self"]],["bool"]]],[11,"eq","","",45,[[["m6x5"],["self"]],["bool"]]],[11,"ne","","",45,[[["m6x5"],["self"]],["bool"]]],[11,"eq","","",46,[[["self"],["m6x6"]],["bool"]]],[11,"ne","","",46,[[["self"],["m6x6"]],["bool"]]],[11,"eq","nalgebra::base::dimension","",62,[[["dynamic"],["self"]],["bool"]]],[11,"ne","","",62,[[["dynamic"],["self"]],["bool"]]],[11,"eq","","",109,[[["u1"],["self"]],["bool"]]],[11,"eq","","",110,[[["u0"],["self"]],["bool"]]],[11,"eq","","",111,[[["u2"],["self"]],["bool"]]],[11,"eq","","",112,[[["u3"],["self"]],["bool"]]],[11,"eq","","",113,[[["self"],["u4"]],["bool"]]],[11,"eq","","",114,[[["u5"],["self"]],["bool"]]],[11,"eq","","",115,[[["self"],["u6"]],["bool"]]],[11,"eq","","",116,[[["self"],["u7"]],["bool"]]],[11,"eq","","",117,[[["u8"],["self"]],["bool"]]],[11,"eq","","",118,[[["self"],["u9"]],["bool"]]],[11,"eq","","",119,[[["u10"],["self"]],["bool"]]],[11,"eq","","",120,[[["self"],["u11"]],["bool"]]],[11,"eq","","",121,[[["self"],["u12"]],["bool"]]],[11,"eq","","",122,[[["u13"],["self"]],["bool"]]],[11,"eq","","",123,[[["self"],["u14"]],["bool"]]],[11,"eq","","",124,[[["self"],["u15"]],["bool"]]],[11,"eq","","",125,[[["self"],["u16"]],["bool"]]],[11,"eq","","",126,[[["self"],["u17"]],["bool"]]],[11,"eq","","",127,[[["self"],["u18"]],["bool"]]],[11,"eq","","",128,[[["self"],["u19"]],["bool"]]],[11,"eq","","",129,[[["self"],["u20"]],["bool"]]],[11,"eq","","",130,[[["self"],["u21"]],["bool"]]],[11,"eq","","",131,[[["u22"],["self"]],["bool"]]],[11,"eq","","",132,[[["self"],["u23"]],["bool"]]],[11,"eq","","",133,[[["self"],["u24"]],["bool"]]],[11,"eq","","",134,[[["u25"],["self"]],["bool"]]],[11,"eq","","",135,[[["self"],["u26"]],["bool"]]],[11,"eq","","",136,[[["u27"],["self"]],["bool"]]],[11,"eq","","",137,[[["u28"],["self"]],["bool"]]],[11,"eq","","",138,[[["u29"],["self"]],["bool"]]],[11,"eq","","",139,[[["self"],["u30"]],["bool"]]],[11,"eq","","",140,[[["u31"],["self"]],["bool"]]],[11,"eq","","",141,[[["self"],["u32"]],["bool"]]],[11,"eq","","",142,[[["u33"],["self"]],["bool"]]],[11,"eq","","",143,[[["u34"],["self"]],["bool"]]],[11,"eq","","",144,[[["self"],["u35"]],["bool"]]],[11,"eq","","",145,[[["self"],["u36"]],["bool"]]],[11,"eq","","",146,[[["self"],["u37"]],["bool"]]],[11,"eq","","",147,[[["self"],["u38"]],["bool"]]],[11,"eq","","",148,[[["u39"],["self"]],["bool"]]],[11,"eq","","",149,[[["u40"],["self"]],["bool"]]],[11,"eq","","",150,[[["u41"],["self"]],["bool"]]],[11,"eq","","",151,[[["u42"],["self"]],["bool"]]],[11,"eq","","",152,[[["self"],["u43"]],["bool"]]],[11,"eq","","",153,[[["self"],["u44"]],["bool"]]],[11,"eq","","",154,[[["u45"],["self"]],["bool"]]],[11,"eq","","",155,[[["u46"],["self"]],["bool"]]],[11,"eq","","",156,[[["self"],["u47"]],["bool"]]],[11,"eq","","",157,[[["u48"],["self"]],["bool"]]],[11,"eq","","",158,[[["u49"],["self"]],["bool"]]],[11,"eq","","",159,[[["u50"],["self"]],["bool"]]],[11,"eq","","",160,[[["u51"],["self"]],["bool"]]],[11,"eq","","",161,[[["self"],["u52"]],["bool"]]],[11,"eq","","",162,[[["self"],["u53"]],["bool"]]],[11,"eq","","",163,[[["self"],["u54"]],["bool"]]],[11,"eq","","",164,[[["self"],["u55"]],["bool"]]],[11,"eq","","",165,[[["self"],["u56"]],["bool"]]],[11,"eq","","",166,[[["self"],["u57"]],["bool"]]],[11,"eq","","",167,[[["u58"],["self"]],["bool"]]],[11,"eq","","",168,[[["u59"],["self"]],["bool"]]],[11,"eq","","",169,[[["self"],["u60"]],["bool"]]],[11,"eq","","",170,[[["u61"],["self"]],["bool"]]],[11,"eq","","",171,[[["self"],["u62"]],["bool"]]],[11,"eq","","",172,[[["u63"],["self"]],["bool"]]],[11,"eq","","",173,[[["u64"],["self"]],["bool"]]],[11,"eq","","",174,[[["u65"],["self"]],["bool"]]],[11,"eq","","",175,[[["u66"],["self"]],["bool"]]],[11,"eq","","",176,[[["u67"],["self"]],["bool"]]],[11,"eq","","",177,[[["self"],["u68"]],["bool"]]],[11,"eq","","",178,[[["u69"],["self"]],["bool"]]],[11,"eq","","",179,[[["u70"],["self"]],["bool"]]],[11,"eq","","",180,[[["self"],["u71"]],["bool"]]],[11,"eq","","",181,[[["self"],["u72"]],["bool"]]],[11,"eq","","",182,[[["u73"],["self"]],["bool"]]],[11,"eq","","",183,[[["u74"],["self"]],["bool"]]],[11,"eq","","",184,[[["u75"],["self"]],["bool"]]],[11,"eq","","",185,[[["self"],["u76"]],["bool"]]],[11,"eq","","",186,[[["self"],["u77"]],["bool"]]],[11,"eq","","",187,[[["u78"],["self"]],["bool"]]],[11,"eq","","",188,[[["self"],["u79"]],["bool"]]],[11,"eq","","",189,[[["u80"],["self"]],["bool"]]],[11,"eq","","",190,[[["u81"],["self"]],["bool"]]],[11,"eq","","",191,[[["u82"],["self"]],["bool"]]],[11,"eq","","",192,[[["u83"],["self"]],["bool"]]],[11,"eq","","",193,[[["self"],["u84"]],["bool"]]],[11,"eq","","",194,[[["u85"],["self"]],["bool"]]],[11,"eq","","",195,[[["self"],["u86"]],["bool"]]],[11,"eq","","",196,[[["self"],["u87"]],["bool"]]],[11,"eq","","",197,[[["self"],["u88"]],["bool"]]],[11,"eq","","",198,[[["u89"],["self"]],["bool"]]],[11,"eq","","",199,[[["self"],["u90"]],["bool"]]],[11,"eq","","",200,[[["self"],["u91"]],["bool"]]],[11,"eq","","",201,[[["u92"],["self"]],["bool"]]],[11,"eq","","",202,[[["self"],["u93"]],["bool"]]],[11,"eq","","",203,[[["u94"],["self"]],["bool"]]],[11,"eq","","",204,[[["u95"],["self"]],["bool"]]],[11,"eq","","",205,[[["self"],["u96"]],["bool"]]],[11,"eq","","",206,[[["self"],["u97"]],["bool"]]],[11,"eq","","",207,[[["self"],["u98"]],["bool"]]],[11,"eq","","",208,[[["self"],["u99"]],["bool"]]],[11,"eq","","",209,[[["u100"],["self"]],["bool"]]],[11,"eq","","",210,[[["u101"],["self"]],["bool"]]],[11,"eq","","",211,[[["self"],["u102"]],["bool"]]],[11,"eq","","",212,[[["u103"],["self"]],["bool"]]],[11,"eq","","",213,[[["u104"],["self"]],["bool"]]],[11,"eq","","",214,[[["self"],["u105"]],["bool"]]],[11,"eq","","",215,[[["u106"],["self"]],["bool"]]],[11,"eq","","",216,[[["u107"],["self"]],["bool"]]],[11,"eq","","",217,[[["self"],["u108"]],["bool"]]],[11,"eq","","",218,[[["u109"],["self"]],["bool"]]],[11,"eq","","",219,[[["self"],["u110"]],["bool"]]],[11,"eq","","",220,[[["u111"],["self"]],["bool"]]],[11,"eq","","",221,[[["u112"],["self"]],["bool"]]],[11,"eq","","",222,[[["u113"],["self"]],["bool"]]],[11,"eq","","",223,[[["u114"],["self"]],["bool"]]],[11,"eq","","",224,[[["u115"],["self"]],["bool"]]],[11,"eq","","",225,[[["self"],["u116"]],["bool"]]],[11,"eq","","",226,[[["self"],["u117"]],["bool"]]],[11,"eq","","",227,[[["self"],["u118"]],["bool"]]],[11,"eq","","",228,[[["self"],["u119"]],["bool"]]],[11,"eq","","",229,[[["u120"],["self"]],["bool"]]],[11,"eq","","",230,[[["u121"],["self"]],["bool"]]],[11,"eq","","",231,[[["u122"],["self"]],["bool"]]],[11,"eq","","",232,[[["u123"],["self"]],["bool"]]],[11,"eq","","",233,[[["u124"],["self"]],["bool"]]],[11,"eq","","",234,[[["self"],["u125"]],["bool"]]],[11,"eq","","",235,[[["u126"],["self"]],["bool"]]],[11,"eq","","",236,[[["u127"],["self"]],["bool"]]],[11,"eq","nalgebra::base","",106,[[["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["matrix"]],["bool"]]],[11,"eq","","",69,[[["self"],["unit"]],["bool"]]],[11,"ne","","",69,[[["self"],["unit"]],["bool"]]],[11,"eq","","",72,[[["vecstorage"],["self"]],["bool"]]],[11,"ne","","",72,[[["vecstorage"],["self"]],["bool"]]],[11,"eq","nalgebra::geometry","",77,[[["self"]],["bool"]]],[11,"eq","","",82,[[["self"]],["bool"]]],[11,"eq","","",78,[[["self"]],["bool"]]],[11,"eq","","",79,[[["self"],["translation"]],["bool"]]],[11,"eq","","",80,[[["self"]],["bool"]]],[11,"eq","","",81,[[["self"]],["bool"]]],[11,"eq","","",241,[[["self"],["tgeneral"]],["bool"]]],[11,"eq","","",242,[[["tprojective"],["self"]],["bool"]]],[11,"eq","","",243,[[["self"],["taffine"]],["bool"]]],[11,"eq","","",83,[[["self"]],["bool"]]],[11,"eq","","",85,[[["self"]],["bool"]]],[11,"eq","","",86,[[["self"]],["bool"]]],[11,"partial_cmp","nalgebra::base","",7,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",7,[[["self"]],["bool"]]],[11,"le","","",7,[[["self"]],["bool"]]],[11,"gt","","",7,[[["self"]],["bool"]]],[11,"ge","","",7,[[["self"]],["bool"]]],[11,"partial_cmp","nalgebra::geometry","",77,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",77,[[["self"]],["bool"]]],[11,"le","","",77,[[["self"]],["bool"]]],[11,"gt","","",77,[[["self"]],["bool"]]],[11,"ge","","",77,[[["self"]],["bool"]]],[11,"deref","nalgebra::base","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",106,[[["self"]]]],[11,"deref","","",69,[[["self"]],["t"]]],[11,"deref","nalgebra::geometry","",77,[[["self"]]]],[11,"deref","","",77,[[["self"]]]],[11,"deref","","",77,[[["self"]]]],[11,"deref","","",77,[[["self"]]]],[11,"deref","","",77,[[["self"]]]],[11,"deref","","",77,[[["self"]]]],[11,"deref","","",78,[[["self"]]]],[11,"deref","","",79,[[["self"]]]],[11,"deref","","",79,[[["self"]]]],[11,"deref","","",79,[[["self"]]]],[11,"deref","","",79,[[["self"]]]],[11,"deref","","",79,[[["self"]]]],[11,"deref","","",79,[[["self"]]]],[11,"deref_mut","nalgebra::base","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",7,[[["self"]]]],[11,"deref_mut","","",106,[[["self"]]]],[11,"deref_mut","nalgebra::geometry","",77,[[["self"]]]],[11,"deref_mut","","",77,[[["self"]]]],[11,"deref_mut","","",77,[[["self"]]]],[11,"deref_mut","","",77,[[["self"]]]],[11,"deref_mut","","",77,[[["self"]]]],[11,"deref_mut","","",77,[[["self"]]]],[11,"deref_mut","","",78,[[["self"]]]],[11,"deref_mut","","",79,[[["self"]]]],[11,"deref_mut","","",79,[[["self"]]]],[11,"deref_mut","","",79,[[["self"]]]],[11,"deref_mut","","",79,[[["self"]]]],[11,"deref_mut","","",79,[[["self"]]]],[11,"deref_mut","","",79,[[["self"]]]],[11,"fmt","nalgebra::base::coordinates","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","nalgebra::base::dimension","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",131,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",132,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",151,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",170,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",171,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",172,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",175,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",176,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",177,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",178,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",179,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",187,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",188,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",192,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",193,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",194,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",195,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",197,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",198,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",199,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",200,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",201,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",202,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",204,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",205,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",206,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",207,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",208,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",209,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",210,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",211,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",212,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",213,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",214,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",215,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",216,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",217,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",218,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",219,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",220,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",221,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",222,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",223,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",224,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",225,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",226,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",227,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",228,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",229,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",230,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",231,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",232,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",233,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",234,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",235,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",236,[[["formatter"],["self"]],["result"]]],[11,"fmt","nalgebra::base","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","nalgebra::geometry","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",241,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",242,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",243,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",86,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","nalgebra::linalg","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","nalgebra::linalg::givens","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","nalgebra::linalg","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","nalgebra::base","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","nalgebra::geometry","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","nalgebra","",245,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",246,[[["formatter"],["self"]],["result"]]],[11,"fmt","nalgebra::geometry","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","nalgebra::base","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"div","","",7,[[["n"]]]],[11,"div","nalgebra::geometry","",77,[[["n"]]]],[11,"div","","",82,[[["rotation"]]]],[11,"div","","",82,[[["rotation"]]]],[11,"div","nalgebra::base","",7,[[["rotation"]]]],[11,"div","","",7,[[["rotation"]]]],[11,"div","nalgebra","",245,[[["unitquaternion"]]]],[11,"div","","",245,[[["unitquaternion"]]]],[11,"div","","",245,[[["rotation"]]]],[11,"div","","",245,[[["rotation",["u3"]],["u3"]]]],[11,"div","nalgebra::geometry","",82,[[["unitquaternion"]]]],[11,"div","","",82,[[["unitquaternion"]]]],[11,"div","","",78,[[["n"]]]],[11,"div","nalgebra","",246,[[]]],[11,"div","","",246,[[["unitcomplex"]]]],[11,"div","","",246,[[["u2"],["rotation",["u2"]]]]],[11,"div","","",246,[[["rotation"]]]],[11,"div","nalgebra::geometry","",82,[[["unitcomplex"]]]],[11,"div","","",82,[[["unitcomplex"]]]],[11,"div","","",79,[[["translation"]]]],[11,"div","","",79,[[["translation"]]]],[11,"div","","",80,[[["isometry"]]]],[11,"div","","",80,[[["isometry"]]]],[11,"div","","",80,[[["rotation"]]]],[11,"div","","",80,[[["rotation"]]]],[11,"div","","",82,[[["rotation"],["isometry",["rotation"]]]]],[11,"div","","",82,[[["isometry"]]]],[11,"div","","",80,[[["unitquaternion"]]]],[11,"div","","",80,[[["unitquaternion"]]]],[11,"div","nalgebra","",245,[[["u3"],["isometry",["u3","unitquaternion"]],["unitquaternion"]]]],[11,"div","","",245,[[["isometry"]]]],[11,"div","nalgebra::geometry","",80,[[["unitcomplex"]]]],[11,"div","","",80,[[["unitcomplex"]]]],[11,"div","","",81,[[["similarity"]]]],[11,"div","","",81,[[["similarity"]]]],[11,"div","","",81,[[["isometry"]]]],[11,"div","","",81,[[["isometry"]]]],[11,"div","","",80,[[["similarity"]]]],[11,"div","","",80,[[["similarity"]]]],[11,"div","","",81,[[["rotation"]]]],[11,"div","","",81,[[["rotation"]]]],[11,"div","","",82,[[["rotation"],["similarity",["rotation"]]]]],[11,"div","","",82,[[["similarity"]]]],[11,"div","","",81,[[["unitquaternion"]]]],[11,"div","","",81,[[["unitquaternion"]]]],[11,"div","nalgebra","",245,[[["similarity",["u3","unitquaternion"]],["u3"],["unitquaternion"]]]],[11,"div","","",245,[[["similarity"]]]],[11,"div","nalgebra::geometry","",81,[[["unitcomplex"]]]],[11,"div","","",81,[[["unitcomplex"]]]],[11,"div","","",83,[[["transform"]]]],[11,"div","","",83,[[["transform"]]]],[11,"div","","",83,[[["rotation"]]]],[11,"div","","",83,[[["rotation"]]]],[11,"div","","",82,[[["transform"]]]],[11,"div","","",82,[[["transform"]]]],[11,"div","","",83,[[["unitquaternion"]]]],[11,"div","","",83,[[["unitquaternion"]]]],[11,"div","nalgebra","",245,[[["transform",["u3"]],["u3"]]]],[11,"div","","",245,[[["transform"]]]],[11,"div","nalgebra::geometry","",83,[[["translation"]]]],[11,"div","","",83,[[["translation"]]]],[11,"div","","",79,[[["transform"]]]],[11,"div","","",79,[[["transform"]]]],[11,"sub","nalgebra::base::dimension","",62,[[["usize"]],["self"]]],[11,"sub","nalgebra::base","",7,[[["matrix"]]]],[11,"sub","","",7,[[["matrix"]]]],[11,"sub","nalgebra::geometry","",77,[[["point"]]]],[11,"sub","","",77,[[["point"]]]],[11,"sub","","",77,[[["vector"]]]],[11,"sub","","",77,[[["vector"]]]],[11,"sub","","",78,[[["quaternion"]]]],[11,"sub","","",78,[[["quaternion"]]]],[11,"add","nalgebra::base::dimension","",62,[[["usize"]],["self"]]],[11,"add","nalgebra::base","",7,[[["matrix"]]]],[11,"add","","",7,[[["matrix"]]]],[11,"add","nalgebra::geometry","",77,[[["vector"]]]],[11,"add","","",77,[[["vector"]]]],[11,"add","","",78,[[["quaternion"]]]],[11,"add","","",78,[[["quaternion"]]]],[11,"mul","nalgebra::base","",7,[[["n"]]]],[11,"mul","","",7,[[["matrix"]]]],[11,"mul","","",7,[[["matrix"]]]],[11,"mul","","",7,[[["point"]]]],[11,"mul","","",7,[[["point"]]]],[11,"mul","nalgebra::geometry","",77,[[["n"]]]],[11,"mul","","",82,[[["rotation"]]]],[11,"mul","","",82,[[["rotation"]]]],[11,"mul","","",82,[[["matrix"]]]],[11,"mul","","",82,[[["matrix"]]]],[11,"mul","nalgebra::base","",7,[[["rotation"]]]],[11,"mul","","",7,[[["rotation"]]]],[11,"mul","nalgebra::geometry","",82,[[["point"]]]],[11,"mul","","",82,[[["point"]]]],[11,"mul","","",82,[[["vector"],["unit",["vector"]]]]],[11,"mul","","",82,[[["unit"]]]],[11,"mul","","",78,[[["quaternion"]]]],[11,"mul","","",78,[[["quaternion"]]]],[11,"mul","nalgebra","",245,[[["unitquaternion"]]]],[11,"mul","","",245,[[["unitquaternion"]]]],[11,"mul","","",245,[[["rotation"]]]],[11,"mul","","",245,[[["rotation",["u3"]],["u3"]]]],[11,"mul","nalgebra::geometry","",82,[[["unitquaternion"]]]],[11,"mul","","",82,[[["unitquaternion"]]]],[11,"mul","nalgebra","",245,[[["vector"]]]],[11,"mul","","",245,[[["u3"],["vector",["u3"]]]]],[11,"mul","","",245,[[["point3"]]]],[11,"mul","","",245,[[["point3"]]]],[11,"mul","","",245,[[["unit"]]]],[11,"mul","","",245,[[["unit",["vector"]],["vector",["u3"]]]]],[11,"mul","nalgebra::geometry","",78,[[["n"]]]],[11,"mul","nalgebra","",246,[[],["self"]]],[11,"mul","","",246,[[["unitcomplex"]]]],[11,"mul","","",246,[[["u2"],["rotation",["u2"]]]]],[11,"mul","","",246,[[["rotation"]]]],[11,"mul","nalgebra::geometry","",82,[[["unitcomplex"]]]],[11,"mul","","",82,[[["unitcomplex"]]]],[11,"mul","nalgebra","",246,[[["point2"]]]],[11,"mul","","",246,[[["point2"]]]],[11,"mul","","",246,[[["u2"],["vector",["u2"]]]]],[11,"mul","","",246,[[["vector"]]]],[11,"mul","","",246,[[["unit",["vector"]],["vector",["u2"]]]]],[11,"mul","","",246,[[["unit"]]]],[11,"mul","","",246,[[["u2"],["isometry",["u2","unitcomplex"]],["unitcomplex"]]]],[11,"mul","","",246,[[["isometry"]]]],[11,"mul","","",246,[[["u2"],["similarity",["u2","unitcomplex"]],["unitcomplex"]]]],[11,"mul","","",246,[[["similarity"]]]],[11,"mul","","",246,[[["u2"],["translation",["u2"]]]]],[11,"mul","","",246,[[["translation"]]]],[11,"mul","nalgebra::geometry","",79,[[["unitcomplex"]]]],[11,"mul","","",79,[[["unitcomplex"]]]],[11,"mul","","",79,[[["translation"]]]],[11,"mul","","",79,[[["translation"]]]],[11,"mul","","",79,[[["point"]]]],[11,"mul","","",79,[[["point"]]]],[11,"mul","","",80,[[["isometry"]]]],[11,"mul","","",80,[[["isometry"]]]],[11,"mul","","",80,[[["point"]]]],[11,"mul","","",80,[[["point"]]]],[11,"mul","","",80,[[["vectorn"]]]],[11,"mul","","",80,[[["vectorn"]]]],[11,"mul","","",80,[[["unit",["vectorn"]],["vectorn"]]]],[11,"mul","","",80,[[["unit"]]]],[11,"mul","","",80,[[["translation"]]]],[11,"mul","","",80,[[["translation"]]]],[11,"mul","","",79,[[["isometry"]]]],[11,"mul","","",79,[[["isometry"]]]],[11,"mul","","",82,[[["translation"]]]],[11,"mul","","",82,[[["translation"]]]],[11,"mul","nalgebra","",245,[[["u3"],["translation",["u3"]]]]],[11,"mul","","",245,[[["translation"]]]],[11,"mul","nalgebra::geometry","",80,[[["rotation"]]]],[11,"mul","","",80,[[["rotation"]]]],[11,"mul","","",82,[[["rotation"],["isometry",["rotation"]]]]],[11,"mul","","",82,[[["isometry"]]]],[11,"mul","","",80,[[["unitquaternion"]]]],[11,"mul","","",80,[[["unitquaternion"]]]],[11,"mul","nalgebra","",245,[[["u3"],["isometry",["u3","unitquaternion"]],["unitquaternion"]]]],[11,"mul","","",245,[[["isometry"]]]],[11,"mul","nalgebra::geometry","",79,[[["rotation"]]]],[11,"mul","","",79,[[["rotation"]]]],[11,"mul","","",79,[[["unitquaternion"]]]],[11,"mul","","",79,[[["unitquaternion"]]]],[11,"mul","","",80,[[["unitcomplex"]]]],[11,"mul","","",80,[[["unitcomplex"]]]],[11,"mul","","",81,[[["similarity"]]]],[11,"mul","","",81,[[["similarity"]]]],[11,"mul","","",81,[[["isometry"]]]],[11,"mul","","",81,[[["isometry"]]]],[11,"mul","","",80,[[["similarity"]]]],[11,"mul","","",80,[[["similarity"]]]],[11,"mul","","",81,[[["point"]]]],[11,"mul","","",81,[[["point"]]]],[11,"mul","","",81,[[["vectorn"]]]],[11,"mul","","",81,[[["vectorn"]]]],[11,"mul","","",81,[[["translation"]]]],[11,"mul","","",81,[[["translation"]]]],[11,"mul","","",79,[[["similarity"]]]],[11,"mul","","",79,[[["similarity"]]]],[11,"mul","","",81,[[["rotation"]]]],[11,"mul","","",81,[[["rotation"]]]],[11,"mul","","",82,[[["rotation"],["similarity",["rotation"]]]]],[11,"mul","","",82,[[["similarity"]]]],[11,"mul","","",81,[[["unitquaternion"]]]],[11,"mul","","",81,[[["unitquaternion"]]]],[11,"mul","nalgebra","",245,[[["similarity",["u3","unitquaternion"]],["u3"],["unitquaternion"]]]],[11,"mul","","",245,[[["similarity"]]]],[11,"mul","nalgebra::geometry","",81,[[["unitcomplex"]]]],[11,"mul","","",81,[[["unitcomplex"]]]],[11,"mul","","",83,[[["vectorn"]]]],[11,"mul","","",83,[[["vectorn"]]]],[11,"mul","","",83,[[["point"]]]],[11,"mul","","",83,[[["point"]]]],[11,"mul","","",83,[[["transform"]]]],[11,"mul","","",83,[[["transform"]]]],[11,"mul","","",83,[[["rotation"]]]],[11,"mul","","",83,[[["rotation"]]]],[11,"mul","","",82,[[["transform"]]]],[11,"mul","","",82,[[["transform"]]]],[11,"mul","","",83,[[["unitquaternion"]]]],[11,"mul","","",83,[[["unitquaternion"]]]],[11,"mul","nalgebra","",245,[[["transform",["u3"]],["u3"]]]],[11,"mul","","",245,[[["transform"]]]],[11,"mul","nalgebra::geometry","",83,[[["isometry"]]]],[11,"mul","","",83,[[["isometry"]]]],[11,"mul","","",80,[[["transform"]]]],[11,"mul","","",80,[[["transform"]]]],[11,"mul","","",83,[[["similarity"]]]],[11,"mul","","",83,[[["similarity"]]]],[11,"mul","","",81,[[["transform"]]]],[11,"mul","","",81,[[["transform"]]]],[11,"mul","","",83,[[["translation"]]]],[11,"mul","","",83,[[["translation"]]]],[11,"mul","","",79,[[["transform"]]]],[11,"mul","","",79,[[["transform"]]]],[11,"neg","nalgebra::base","",7,[[]]],[11,"neg","","",69,[[]]],[11,"neg","nalgebra::geometry","",77,[[]]],[11,"neg","","",78,[[]]],[11,"add_assign","nalgebra::base","",7,[[["matrix"],["self"]]]],[11,"add_assign","","",7,[[["self"],["matrix"]]]],[11,"add_assign","nalgebra::geometry","",77,[[["self"],["vector"]]]],[11,"add_assign","","",77,[[["self"],["vector"]]]],[11,"add_assign","","",78,[[["self"],["quaternion"]]]],[11,"add_assign","","",78,[[["self"],["quaternion"]]]],[11,"sub_assign","nalgebra::base","",7,[[["matrix"],["self"]]]],[11,"sub_assign","","",7,[[["self"],["matrix"]]]],[11,"sub_assign","nalgebra::geometry","",77,[[["self"],["vector"]]]],[11,"sub_assign","","",77,[[["self"],["vector"]]]],[11,"sub_assign","","",78,[[["self"],["quaternion"]]]],[11,"sub_assign","","",78,[[["self"],["quaternion"]]]],[11,"mul_assign","nalgebra::base","",7,[[["self"],["n"]]]],[11,"mul_assign","","",7,[[["matrix"],["self"]]]],[11,"mul_assign","","",7,[[["self"],["matrix"]]]],[11,"mul_assign","nalgebra::geometry","",77,[[["self"],["n"]]]],[11,"mul_assign","","",82,[[["rotation"],["self"]]]],[11,"mul_assign","","",82,[[["self"],["rotation"]]]],[11,"mul_assign","nalgebra","",244,[[["self"],["rotation"]]]],[11,"mul_assign","","",244,[[["self"],["rotation"]]]],[11,"mul_assign","nalgebra::geometry","",78,[[["self"],["n"]]]],[11,"mul_assign","","",78,[[["self"],["quaternion"]]]],[11,"mul_assign","","",78,[[["self"],["quaternion"]]]],[11,"mul_assign","nalgebra","",245,[[["unitquaternion"],["self"]]]],[11,"mul_assign","","",245,[[["self"],["unitquaternion"]]]],[11,"mul_assign","","",245,[[["self"],["rotation"]]]],[11,"mul_assign","","",245,[[["rotation",["u3"]],["self"],["u3"]]]],[11,"mul_assign","","",246,[[["self"],["unitcomplex"]]]],[11,"mul_assign","","",246,[[["unitcomplex"],["self"]]]],[11,"mul_assign","","",246,[[["u2"],["self"],["rotation",["u2"]]]]],[11,"mul_assign","","",246,[[["self"],["rotation"]]]],[11,"mul_assign","nalgebra::geometry","",82,[[["self"],["unitcomplex"]]]],[11,"mul_assign","","",82,[[["unitcomplex"],["self"]]]],[11,"mul_assign","","",79,[[["translation"],["self"]]]],[11,"mul_assign","","",79,[[["translation"],["self"]]]],[11,"mul_assign","","",80,[[["translation"],["self"]]]],[11,"mul_assign","","",80,[[["translation"],["self"]]]],[11,"mul_assign","","",80,[[["self"],["isometry"]]]],[11,"mul_assign","","",80,[[["self"],["isometry"]]]],[11,"mul_assign","","",80,[[["rotation"],["self"]]]],[11,"mul_assign","","",80,[[["self"],["rotation"]]]],[11,"mul_assign","","",80,[[["self"],["unitquaternion"]]]],[11,"mul_assign","","",80,[[["unitquaternion"],["self"]]]],[11,"mul_assign","","",80,[[["self"],["unitcomplex"]]]],[11,"mul_assign","","",80,[[["unitcomplex"],["self"]]]],[11,"mul_assign","","",81,[[["translation"],["self"]]]],[11,"mul_assign","","",81,[[["translation"],["self"]]]],[11,"mul_assign","","",81,[[["self"],["similarity"]]]],[11,"mul_assign","","",81,[[["self"],["similarity"]]]],[11,"mul_assign","","",81,[[["self"],["isometry"]]]],[11,"mul_assign","","",81,[[["self"],["isometry"]]]],[11,"mul_assign","","",81,[[["rotation"],["self"]]]],[11,"mul_assign","","",81,[[["self"],["rotation"]]]],[11,"mul_assign","","",81,[[["self"],["unitquaternion"]]]],[11,"mul_assign","","",81,[[["unitquaternion"],["self"]]]],[11,"mul_assign","","",81,[[["self"],["unitcomplex"]]]],[11,"mul_assign","","",81,[[["unitcomplex"],["self"]]]],[11,"mul_assign","","",83,[[["self"],["transform"]]]],[11,"mul_assign","","",83,[[["self"],["transform"]]]],[11,"mul_assign","","",83,[[["self"],["similarity"]]]],[11,"mul_assign","","",83,[[["self"],["similarity"]]]],[11,"mul_assign","","",83,[[["self"],["isometry"]]]],[11,"mul_assign","","",83,[[["self"],["isometry"]]]],[11,"mul_assign","","",83,[[["translation"],["self"]]]],[11,"mul_assign","","",83,[[["translation"],["self"]]]],[11,"mul_assign","","",83,[[["rotation"],["self"]]]],[11,"mul_assign","","",83,[[["self"],["rotation"]]]],[11,"mul_assign","","",83,[[["self"],["unitquaternion"]]]],[11,"mul_assign","","",83,[[["unitquaternion"],["self"]]]],[11,"div_assign","nalgebra::base","",7,[[["self"],["n"]]]],[11,"div_assign","nalgebra::geometry","",77,[[["self"],["n"]]]],[11,"div_assign","","",82,[[["rotation"],["self"]]]],[11,"div_assign","","",82,[[["self"],["rotation"]]]],[11,"div_assign","nalgebra","",244,[[["self"],["rotation"]]]],[11,"div_assign","","",244,[[["self"],["rotation"]]]],[11,"div_assign","nalgebra::geometry","",78,[[["self"],["n"]]]],[11,"div_assign","nalgebra","",245,[[["unitquaternion"],["self"]]]],[11,"div_assign","","",245,[[["self"],["unitquaternion"]]]],[11,"div_assign","","",245,[[["self"],["rotation"]]]],[11,"div_assign","","",245,[[["rotation",["u3"]],["self"],["u3"]]]],[11,"div_assign","","",246,[[["self"],["unitcomplex"]]]],[11,"div_assign","","",246,[[["unitcomplex"],["self"]]]],[11,"div_assign","","",246,[[["u2"],["self"],["rotation",["u2"]]]]],[11,"div_assign","","",246,[[["self"],["rotation"]]]],[11,"div_assign","nalgebra::geometry","",82,[[["self"],["unitcomplex"]]]],[11,"div_assign","","",82,[[["unitcomplex"],["self"]]]],[11,"div_assign","","",79,[[["translation"],["self"]]]],[11,"div_assign","","",79,[[["translation"],["self"]]]],[11,"div_assign","","",80,[[["self"],["isometry"]]]],[11,"div_assign","","",80,[[["self"],["isometry"]]]],[11,"div_assign","","",80,[[["rotation"],["self"]]]],[11,"div_assign","","",80,[[["self"],["rotation"]]]],[11,"div_assign","","",80,[[["self"],["unitquaternion"]]]],[11,"div_assign","","",80,[[["unitquaternion"],["self"]]]],[11,"div_assign","","",80,[[["self"],["unitcomplex"]]]],[11,"div_assign","","",80,[[["unitcomplex"],["self"]]]],[11,"div_assign","","",81,[[["self"],["similarity"]]]],[11,"div_assign","","",81,[[["self"],["similarity"]]]],[11,"div_assign","","",81,[[["self"],["isometry"]]]],[11,"div_assign","","",81,[[["self"],["isometry"]]]],[11,"div_assign","","",81,[[["rotation"],["self"]]]],[11,"div_assign","","",81,[[["self"],["rotation"]]]],[11,"div_assign","","",81,[[["self"],["unitquaternion"]]]],[11,"div_assign","","",81,[[["unitquaternion"],["self"]]]],[11,"div_assign","","",81,[[["self"],["unitcomplex"]]]],[11,"div_assign","","",81,[[["unitcomplex"],["self"]]]],[11,"div_assign","","",83,[[["self"],["transform"]]]],[11,"div_assign","","",83,[[["self"],["transform"]]]],[11,"div_assign","","",83,[[["translation"],["self"]]]],[11,"div_assign","","",83,[[["translation"],["self"]]]],[11,"div_assign","","",83,[[["rotation"],["self"]]]],[11,"div_assign","","",83,[[["self"],["rotation"]]]],[11,"div_assign","","",83,[[["self"],["unitquaternion"]]]],[11,"div_assign","","",83,[[["unitquaternion"],["self"]]]],[11,"index","nalgebra::base","",7,[[["self"],["usize"]]]],[11,"index","","",7,[[["self"]]]],[11,"index","nalgebra::geometry","",77,[[["self"],["usize"]]]],[11,"index","","",82,[[["self"]],["n"]]],[11,"index","","",78,[[["self"],["usize"]]]],[11,"index","","",83,[[["self"]],["n"]]],[11,"index_mut","nalgebra::base","",7,[[["self"],["usize"]],["n"]]],[11,"index_mut","","",7,[[["self"]],["n"]]],[11,"index_mut","nalgebra::geometry","",77,[[["self"],["usize"]]]],[11,"index_mut","","",78,[[["self"],["usize"]],["n"]]],[11,"index_mut","","",83,[[["self"]],["n"]]],[11,"hash","nalgebra::base::coordinates","",15,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","","",27,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"hash","nalgebra::base::dimension","",109,[[["self"],["__h"]]]],[11,"hash","","",110,[[["self"],["__h"]]]],[11,"hash","","",111,[[["self"],["__h"]]]],[11,"hash","","",112,[[["self"],["__h"]]]],[11,"hash","","",113,[[["self"],["__h"]]]],[11,"hash","","",114,[[["self"],["__h"]]]],[11,"hash","","",115,[[["self"],["__h"]]]],[11,"hash","","",116,[[["self"],["__h"]]]],[11,"hash","","",117,[[["self"],["__h"]]]],[11,"hash","","",118,[[["self"],["__h"]]]],[11,"hash","","",119,[[["self"],["__h"]]]],[11,"hash","","",120,[[["self"],["__h"]]]],[11,"hash","","",121,[[["self"],["__h"]]]],[11,"hash","","",122,[[["self"],["__h"]]]],[11,"hash","","",123,[[["self"],["__h"]]]],[11,"hash","","",124,[[["self"],["__h"]]]],[11,"hash","","",125,[[["self"],["__h"]]]],[11,"hash","","",126,[[["self"],["__h"]]]],[11,"hash","","",127,[[["self"],["__h"]]]],[11,"hash","","",128,[[["self"],["__h"]]]],[11,"hash","","",129,[[["self"],["__h"]]]],[11,"hash","","",130,[[["self"],["__h"]]]],[11,"hash","","",131,[[["self"],["__h"]]]],[11,"hash","","",132,[[["self"],["__h"]]]],[11,"hash","","",133,[[["self"],["__h"]]]],[11,"hash","","",134,[[["self"],["__h"]]]],[11,"hash","","",135,[[["self"],["__h"]]]],[11,"hash","","",136,[[["self"],["__h"]]]],[11,"hash","","",137,[[["self"],["__h"]]]],[11,"hash","","",138,[[["self"],["__h"]]]],[11,"hash","","",139,[[["self"],["__h"]]]],[11,"hash","","",140,[[["self"],["__h"]]]],[11,"hash","","",141,[[["self"],["__h"]]]],[11,"hash","","",142,[[["self"],["__h"]]]],[11,"hash","","",143,[[["self"],["__h"]]]],[11,"hash","","",144,[[["self"],["__h"]]]],[11,"hash","","",145,[[["self"],["__h"]]]],[11,"hash","","",146,[[["self"],["__h"]]]],[11,"hash","","",147,[[["self"],["__h"]]]],[11,"hash","","",148,[[["self"],["__h"]]]],[11,"hash","","",149,[[["self"],["__h"]]]],[11,"hash","","",150,[[["self"],["__h"]]]],[11,"hash","","",151,[[["self"],["__h"]]]],[11,"hash","","",152,[[["self"],["__h"]]]],[11,"hash","","",153,[[["self"],["__h"]]]],[11,"hash","","",154,[[["self"],["__h"]]]],[11,"hash","","",155,[[["self"],["__h"]]]],[11,"hash","","",156,[[["self"],["__h"]]]],[11,"hash","","",157,[[["self"],["__h"]]]],[11,"hash","","",158,[[["self"],["__h"]]]],[11,"hash","","",159,[[["self"],["__h"]]]],[11,"hash","","",160,[[["self"],["__h"]]]],[11,"hash","","",161,[[["self"],["__h"]]]],[11,"hash","","",162,[[["self"],["__h"]]]],[11,"hash","","",163,[[["self"],["__h"]]]],[11,"hash","","",164,[[["self"],["__h"]]]],[11,"hash","","",165,[[["self"],["__h"]]]],[11,"hash","","",166,[[["self"],["__h"]]]],[11,"hash","","",167,[[["self"],["__h"]]]],[11,"hash","","",168,[[["self"],["__h"]]]],[11,"hash","","",169,[[["self"],["__h"]]]],[11,"hash","","",170,[[["self"],["__h"]]]],[11,"hash","","",171,[[["self"],["__h"]]]],[11,"hash","","",172,[[["self"],["__h"]]]],[11,"hash","","",173,[[["self"],["__h"]]]],[11,"hash","","",174,[[["self"],["__h"]]]],[11,"hash","","",175,[[["self"],["__h"]]]],[11,"hash","","",176,[[["self"],["__h"]]]],[11,"hash","","",177,[[["self"],["__h"]]]],[11,"hash","","",178,[[["self"],["__h"]]]],[11,"hash","","",179,[[["self"],["__h"]]]],[11,"hash","","",180,[[["self"],["__h"]]]],[11,"hash","","",181,[[["self"],["__h"]]]],[11,"hash","","",182,[[["self"],["__h"]]]],[11,"hash","","",183,[[["self"],["__h"]]]],[11,"hash","","",184,[[["self"],["__h"]]]],[11,"hash","","",185,[[["self"],["__h"]]]],[11,"hash","","",186,[[["self"],["__h"]]]],[11,"hash","","",187,[[["self"],["__h"]]]],[11,"hash","","",188,[[["self"],["__h"]]]],[11,"hash","","",189,[[["self"],["__h"]]]],[11,"hash","","",190,[[["self"],["__h"]]]],[11,"hash","","",191,[[["self"],["__h"]]]],[11,"hash","","",192,[[["self"],["__h"]]]],[11,"hash","","",193,[[["self"],["__h"]]]],[11,"hash","","",194,[[["self"],["__h"]]]],[11,"hash","","",195,[[["self"],["__h"]]]],[11,"hash","","",196,[[["self"],["__h"]]]],[11,"hash","","",197,[[["self"],["__h"]]]],[11,"hash","","",198,[[["self"],["__h"]]]],[11,"hash","","",199,[[["self"],["__h"]]]],[11,"hash","","",200,[[["self"],["__h"]]]],[11,"hash","","",201,[[["self"],["__h"]]]],[11,"hash","","",202,[[["self"],["__h"]]]],[11,"hash","","",203,[[["self"],["__h"]]]],[11,"hash","","",204,[[["self"],["__h"]]]],[11,"hash","","",205,[[["self"],["__h"]]]],[11,"hash","","",206,[[["self"],["__h"]]]],[11,"hash","","",207,[[["self"],["__h"]]]],[11,"hash","","",208,[[["self"],["__h"]]]],[11,"hash","","",209,[[["self"],["__h"]]]],[11,"hash","","",210,[[["self"],["__h"]]]],[11,"hash","","",211,[[["self"],["__h"]]]],[11,"hash","","",212,[[["self"],["__h"]]]],[11,"hash","","",213,[[["self"],["__h"]]]],[11,"hash","","",214,[[["self"],["__h"]]]],[11,"hash","","",215,[[["self"],["__h"]]]],[11,"hash","","",216,[[["self"],["__h"]]]],[11,"hash","","",217,[[["self"],["__h"]]]],[11,"hash","","",218,[[["self"],["__h"]]]],[11,"hash","","",219,[[["self"],["__h"]]]],[11,"hash","","",220,[[["self"],["__h"]]]],[11,"hash","","",221,[[["self"],["__h"]]]],[11,"hash","","",222,[[["self"],["__h"]]]],[11,"hash","","",223,[[["self"],["__h"]]]],[11,"hash","","",224,[[["self"],["__h"]]]],[11,"hash","","",225,[[["self"],["__h"]]]],[11,"hash","","",226,[[["self"],["__h"]]]],[11,"hash","","",227,[[["self"],["__h"]]]],[11,"hash","","",228,[[["self"],["__h"]]]],[11,"hash","","",229,[[["self"],["__h"]]]],[11,"hash","","",230,[[["self"],["__h"]]]],[11,"hash","","",231,[[["self"],["__h"]]]],[11,"hash","","",232,[[["self"],["__h"]]]],[11,"hash","","",233,[[["self"],["__h"]]]],[11,"hash","","",234,[[["self"],["__h"]]]],[11,"hash","","",235,[[["self"],["__h"]]]],[11,"hash","","",236,[[["self"],["__h"]]]],[11,"hash","nalgebra::base","",106,[[["self"],["h"]]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"hash","","",69,[[["self"],["__h"]]]],[11,"hash","nalgebra::geometry","",77,[[["self"],["h"]]]],[11,"hash","","",82,[[["self"],["h"]]]],[11,"hash","","",78,[[["self"],["h"]]]],[11,"hash","","",79,[[["self"],["h"]]]],[11,"hash","","",80,[[["self"],["h"]]]],[11,"hash","","",81,[[["self"],["h"]]]],[11,"hash","","",241,[[["self"],["__h"]]]],[11,"hash","","",242,[[["self"],["__h"]]]],[11,"hash","","",243,[[["self"],["__h"]]]],[11,"product","nalgebra","",257,[[["iterator"]],["matrixn"]]],[11,"product","","",257,[[["iterator"]],["matrixn"]]],[11,"sum","","",244,[[["iterator"]],["matrixmn"]]],[11,"sum","","Example `# use nalgebra::DVector;…",244,[[["iterator"]],[["matrixmn",["dynamic"]],["dynamic"]]]],[11,"sum","","",244,[[["iterator"]],["matrixmn"]]],[11,"sum","","Example ``` # use nalgebra::DVector; let v =…",244,[[["iterator"]],[["matrixmn",["dynamic"]],["dynamic"]]]],[11,"fmt","nalgebra::base","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"serialize","nalgebra::base::coordinates","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"serialize","","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","","",21,[[["self"],["__s"]],["result"]]],[11,"serialize","","",22,[[["self"],["__s"]],["result"]]],[11,"serialize","","",23,[[["self"],["__s"]],["result"]]],[11,"serialize","","",24,[[["self"],["__s"]],["result"]]],[11,"serialize","","",25,[[["self"],["__s"]],["result"]]],[11,"serialize","","",26,[[["self"],["__s"]],["result"]]],[11,"serialize","","",27,[[["self"],["__s"]],["result"]]],[11,"serialize","","",28,[[["self"],["__s"]],["result"]]],[11,"serialize","","",29,[[["self"],["__s"]],["result"]]],[11,"serialize","","",30,[[["self"],["__s"]],["result"]]],[11,"serialize","","",31,[[["self"],["__s"]],["result"]]],[11,"serialize","","",32,[[["self"],["__s"]],["result"]]],[11,"serialize","","",33,[[["self"],["__s"]],["result"]]],[11,"serialize","","",34,[[["self"],["__s"]],["result"]]],[11,"serialize","","",35,[[["self"],["__s"]],["result"]]],[11,"serialize","","",36,[[["self"],["__s"]],["result"]]],[11,"serialize","","",37,[[["self"],["__s"]],["result"]]],[11,"serialize","","",38,[[["self"],["__s"]],["result"]]],[11,"serialize","","",39,[[["self"],["__s"]],["result"]]],[11,"serialize","","",40,[[["self"],["__s"]],["result"]]],[11,"serialize","","",41,[[["self"],["__s"]],["result"]]],[11,"serialize","","",42,[[["self"],["__s"]],["result"]]],[11,"serialize","","",43,[[["self"],["__s"]],["result"]]],[11,"serialize","","",44,[[["self"],["__s"]],["result"]]],[11,"serialize","","",45,[[["self"],["__s"]],["result"]]],[11,"serialize","","",46,[[["self"],["__s"]],["result"]]],[11,"serialize","nalgebra::base::dimension","",62,[[["s"],["self"]],["result"]]],[11,"serialize","","",109,[[["self"],["__s"]],["result"]]],[11,"serialize","","",110,[[["self"],["__s"]],["result"]]],[11,"serialize","","",111,[[["self"],["__s"]],["result"]]],[11,"serialize","","",112,[[["self"],["__s"]],["result"]]],[11,"serialize","","",113,[[["self"],["__s"]],["result"]]],[11,"serialize","","",114,[[["self"],["__s"]],["result"]]],[11,"serialize","","",115,[[["self"],["__s"]],["result"]]],[11,"serialize","","",116,[[["self"],["__s"]],["result"]]],[11,"serialize","","",117,[[["self"],["__s"]],["result"]]],[11,"serialize","","",118,[[["self"],["__s"]],["result"]]],[11,"serialize","","",119,[[["self"],["__s"]],["result"]]],[11,"serialize","","",120,[[["self"],["__s"]],["result"]]],[11,"serialize","","",121,[[["self"],["__s"]],["result"]]],[11,"serialize","","",122,[[["self"],["__s"]],["result"]]],[11,"serialize","","",123,[[["self"],["__s"]],["result"]]],[11,"serialize","","",124,[[["self"],["__s"]],["result"]]],[11,"serialize","","",125,[[["self"],["__s"]],["result"]]],[11,"serialize","","",126,[[["self"],["__s"]],["result"]]],[11,"serialize","","",127,[[["self"],["__s"]],["result"]]],[11,"serialize","","",128,[[["self"],["__s"]],["result"]]],[11,"serialize","","",129,[[["self"],["__s"]],["result"]]],[11,"serialize","","",130,[[["self"],["__s"]],["result"]]],[11,"serialize","","",131,[[["self"],["__s"]],["result"]]],[11,"serialize","","",132,[[["self"],["__s"]],["result"]]],[11,"serialize","","",133,[[["self"],["__s"]],["result"]]],[11,"serialize","","",134,[[["self"],["__s"]],["result"]]],[11,"serialize","","",135,[[["self"],["__s"]],["result"]]],[11,"serialize","","",136,[[["self"],["__s"]],["result"]]],[11,"serialize","","",137,[[["self"],["__s"]],["result"]]],[11,"serialize","","",138,[[["self"],["__s"]],["result"]]],[11,"serialize","","",139,[[["self"],["__s"]],["result"]]],[11,"serialize","","",140,[[["self"],["__s"]],["result"]]],[11,"serialize","","",141,[[["self"],["__s"]],["result"]]],[11,"serialize","","",142,[[["self"],["__s"]],["result"]]],[11,"serialize","","",143,[[["self"],["__s"]],["result"]]],[11,"serialize","","",144,[[["self"],["__s"]],["result"]]],[11,"serialize","","",145,[[["self"],["__s"]],["result"]]],[11,"serialize","","",146,[[["self"],["__s"]],["result"]]],[11,"serialize","","",147,[[["self"],["__s"]],["result"]]],[11,"serialize","","",148,[[["self"],["__s"]],["result"]]],[11,"serialize","","",149,[[["self"],["__s"]],["result"]]],[11,"serialize","","",150,[[["self"],["__s"]],["result"]]],[11,"serialize","","",151,[[["self"],["__s"]],["result"]]],[11,"serialize","","",152,[[["self"],["__s"]],["result"]]],[11,"serialize","","",153,[[["self"],["__s"]],["result"]]],[11,"serialize","","",154,[[["self"],["__s"]],["result"]]],[11,"serialize","","",155,[[["self"],["__s"]],["result"]]],[11,"serialize","","",156,[[["self"],["__s"]],["result"]]],[11,"serialize","","",157,[[["self"],["__s"]],["result"]]],[11,"serialize","","",158,[[["self"],["__s"]],["result"]]],[11,"serialize","","",159,[[["self"],["__s"]],["result"]]],[11,"serialize","","",160,[[["self"],["__s"]],["result"]]],[11,"serialize","","",161,[[["self"],["__s"]],["result"]]],[11,"serialize","","",162,[[["self"],["__s"]],["result"]]],[11,"serialize","","",163,[[["self"],["__s"]],["result"]]],[11,"serialize","","",164,[[["self"],["__s"]],["result"]]],[11,"serialize","","",165,[[["self"],["__s"]],["result"]]],[11,"serialize","","",166,[[["self"],["__s"]],["result"]]],[11,"serialize","","",167,[[["self"],["__s"]],["result"]]],[11,"serialize","","",168,[[["self"],["__s"]],["result"]]],[11,"serialize","","",169,[[["self"],["__s"]],["result"]]],[11,"serialize","","",170,[[["self"],["__s"]],["result"]]],[11,"serialize","","",171,[[["self"],["__s"]],["result"]]],[11,"serialize","","",172,[[["self"],["__s"]],["result"]]],[11,"serialize","","",173,[[["self"],["__s"]],["result"]]],[11,"serialize","","",174,[[["self"],["__s"]],["result"]]],[11,"serialize","","",175,[[["self"],["__s"]],["result"]]],[11,"serialize","","",176,[[["self"],["__s"]],["result"]]],[11,"serialize","","",177,[[["self"],["__s"]],["result"]]],[11,"serialize","","",178,[[["self"],["__s"]],["result"]]],[11,"serialize","","",179,[[["self"],["__s"]],["result"]]],[11,"serialize","","",180,[[["self"],["__s"]],["result"]]],[11,"serialize","","",181,[[["self"],["__s"]],["result"]]],[11,"serialize","","",182,[[["self"],["__s"]],["result"]]],[11,"serialize","","",183,[[["self"],["__s"]],["result"]]],[11,"serialize","","",184,[[["self"],["__s"]],["result"]]],[11,"serialize","","",185,[[["self"],["__s"]],["result"]]],[11,"serialize","","",186,[[["self"],["__s"]],["result"]]],[11,"serialize","","",187,[[["self"],["__s"]],["result"]]],[11,"serialize","","",188,[[["self"],["__s"]],["result"]]],[11,"serialize","","",189,[[["self"],["__s"]],["result"]]],[11,"serialize","","",190,[[["self"],["__s"]],["result"]]],[11,"serialize","","",191,[[["self"],["__s"]],["result"]]],[11,"serialize","","",192,[[["self"],["__s"]],["result"]]],[11,"serialize","","",193,[[["self"],["__s"]],["result"]]],[11,"serialize","","",194,[[["self"],["__s"]],["result"]]],[11,"serialize","","",195,[[["self"],["__s"]],["result"]]],[11,"serialize","","",196,[[["self"],["__s"]],["result"]]],[11,"serialize","","",197,[[["self"],["__s"]],["result"]]],[11,"serialize","","",198,[[["self"],["__s"]],["result"]]],[11,"serialize","","",199,[[["self"],["__s"]],["result"]]],[11,"serialize","","",200,[[["self"],["__s"]],["result"]]],[11,"serialize","","",201,[[["self"],["__s"]],["result"]]],[11,"serialize","","",202,[[["self"],["__s"]],["result"]]],[11,"serialize","","",203,[[["self"],["__s"]],["result"]]],[11,"serialize","","",204,[[["self"],["__s"]],["result"]]],[11,"serialize","","",205,[[["self"],["__s"]],["result"]]],[11,"serialize","","",206,[[["self"],["__s"]],["result"]]],[11,"serialize","","",207,[[["self"],["__s"]],["result"]]],[11,"serialize","","",208,[[["self"],["__s"]],["result"]]],[11,"serialize","","",209,[[["self"],["__s"]],["result"]]],[11,"serialize","","",210,[[["self"],["__s"]],["result"]]],[11,"serialize","","",211,[[["self"],["__s"]],["result"]]],[11,"serialize","","",212,[[["self"],["__s"]],["result"]]],[11,"serialize","","",213,[[["self"],["__s"]],["result"]]],[11,"serialize","","",214,[[["self"],["__s"]],["result"]]],[11,"serialize","","",215,[[["self"],["__s"]],["result"]]],[11,"serialize","","",216,[[["self"],["__s"]],["result"]]],[11,"serialize","","",217,[[["self"],["__s"]],["result"]]],[11,"serialize","","",218,[[["self"],["__s"]],["result"]]],[11,"serialize","","",219,[[["self"],["__s"]],["result"]]],[11,"serialize","","",220,[[["self"],["__s"]],["result"]]],[11,"serialize","","",221,[[["self"],["__s"]],["result"]]],[11,"serialize","","",222,[[["self"],["__s"]],["result"]]],[11,"serialize","","",223,[[["self"],["__s"]],["result"]]],[11,"serialize","","",224,[[["self"],["__s"]],["result"]]],[11,"serialize","","",225,[[["self"],["__s"]],["result"]]],[11,"serialize","","",226,[[["self"],["__s"]],["result"]]],[11,"serialize","","",227,[[["self"],["__s"]],["result"]]],[11,"serialize","","",228,[[["self"],["__s"]],["result"]]],[11,"serialize","","",229,[[["self"],["__s"]],["result"]]],[11,"serialize","","",230,[[["self"],["__s"]],["result"]]],[11,"serialize","","",231,[[["self"],["__s"]],["result"]]],[11,"serialize","","",232,[[["self"],["__s"]],["result"]]],[11,"serialize","","",233,[[["self"],["__s"]],["result"]]],[11,"serialize","","",234,[[["self"],["__s"]],["result"]]],[11,"serialize","","",235,[[["self"],["__s"]],["result"]]],[11,"serialize","","",236,[[["self"],["__s"]],["result"]]],[11,"serialize","nalgebra::base","",106,[[["s"],["self"]],["result"]]],[11,"serialize","","",7,[[["self"],["t"]],["result"]]],[11,"serialize","","",69,[[["s"],["self"]],["result"]]],[11,"serialize","","",72,[[["self"],["__s"]],["result"]]],[11,"serialize","nalgebra::geometry","",77,[[["s"],["self"]],["result"]]],[11,"serialize","","",82,[[["s"],["self"]],["result"]]],[11,"serialize","","",78,[[["s"],["self"]],["result"]]],[11,"serialize","","",79,[[["s"],["self"]],["result"]]],[11,"serialize","","",80,[[["self"],["__s"]],["result"]]],[11,"serialize","","",81,[[["self"],["__s"]],["result"]]],[11,"serialize","","",83,[[["s"],["self"]],["result"]]],[11,"serialize","","",85,[[["s"],["self"]],["result"]]],[11,"serialize","","",86,[[["s"],["self"]],["result"]]],[11,"serialize","nalgebra::linalg","",92,[[["self"],["__s"]],["result"]]],[11,"serialize","","",93,[[["self"],["__s"]],["result"]]],[11,"serialize","","",96,[[["self"],["__s"]],["result"]]],[11,"serialize","","",98,[[["self"],["__s"]],["result"]]],[11,"serialize","","",99,[[["self"],["__s"]],["result"]]],[11,"serialize","","",100,[[["self"],["__s"]],["result"]]],[11,"serialize","","",101,[[["self"],["__s"]],["result"]]],[11,"serialize","","",102,[[["self"],["__s"]],["result"]]],[11,"serialize","","",90,[[["self"],["__s"]],["result"]]],[11,"serialize","","",91,[[["self"],["__s"]],["result"]]],[11,"serialize","","",103,[[["self"],["__s"]],["result"]]],[11,"deserialize","nalgebra::base::coordinates","",15,[[["__d"]],["result"]]],[11,"deserialize","","",16,[[["__d"]],["result"]]],[11,"deserialize","","",17,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","","",19,[[["__d"]],["result"]]],[11,"deserialize","","",20,[[["__d"]],["result"]]],[11,"deserialize","","",21,[[["__d"]],["result"]]],[11,"deserialize","","",22,[[["__d"]],["result"]]],[11,"deserialize","","",23,[[["__d"]],["result"]]],[11,"deserialize","","",24,[[["__d"]],["result"]]],[11,"deserialize","","",25,[[["__d"]],["result"]]],[11,"deserialize","","",26,[[["__d"]],["result"]]],[11,"deserialize","","",27,[[["__d"]],["result"]]],[11,"deserialize","","",28,[[["__d"]],["result"]]],[11,"deserialize","","",29,[[["__d"]],["result"]]],[11,"deserialize","","",30,[[["__d"]],["result"]]],[11,"deserialize","","",31,[[["__d"]],["result"]]],[11,"deserialize","","",32,[[["__d"]],["result"]]],[11,"deserialize","","",33,[[["__d"]],["result"]]],[11,"deserialize","","",34,[[["__d"]],["result"]]],[11,"deserialize","","",35,[[["__d"]],["result"]]],[11,"deserialize","","",36,[[["__d"]],["result"]]],[11,"deserialize","","",37,[[["__d"]],["result"]]],[11,"deserialize","","",38,[[["__d"]],["result"]]],[11,"deserialize","","",39,[[["__d"]],["result"]]],[11,"deserialize","","",40,[[["__d"]],["result"]]],[11,"deserialize","","",41,[[["__d"]],["result"]]],[11,"deserialize","","",42,[[["__d"]],["result"]]],[11,"deserialize","","",43,[[["__d"]],["result"]]],[11,"deserialize","","",44,[[["__d"]],["result"]]],[11,"deserialize","","",45,[[["__d"]],["result"]]],[11,"deserialize","","",46,[[["__d"]],["result"]]],[11,"deserialize","nalgebra::base::dimension","",62,[[["d"]],["result"]]],[11,"deserialize","","",109,[[["__d"]],["result"]]],[11,"deserialize","","",110,[[["__d"]],["result"]]],[11,"deserialize","","",111,[[["__d"]],["result"]]],[11,"deserialize","","",112,[[["__d"]],["result"]]],[11,"deserialize","","",113,[[["__d"]],["result"]]],[11,"deserialize","","",114,[[["__d"]],["result"]]],[11,"deserialize","","",115,[[["__d"]],["result"]]],[11,"deserialize","","",116,[[["__d"]],["result"]]],[11,"deserialize","","",117,[[["__d"]],["result"]]],[11,"deserialize","","",118,[[["__d"]],["result"]]],[11,"deserialize","","",119,[[["__d"]],["result"]]],[11,"deserialize","","",120,[[["__d"]],["result"]]],[11,"deserialize","","",121,[[["__d"]],["result"]]],[11,"deserialize","","",122,[[["__d"]],["result"]]],[11,"deserialize","","",123,[[["__d"]],["result"]]],[11,"deserialize","","",124,[[["__d"]],["result"]]],[11,"deserialize","","",125,[[["__d"]],["result"]]],[11,"deserialize","","",126,[[["__d"]],["result"]]],[11,"deserialize","","",127,[[["__d"]],["result"]]],[11,"deserialize","","",128,[[["__d"]],["result"]]],[11,"deserialize","","",129,[[["__d"]],["result"]]],[11,"deserialize","","",130,[[["__d"]],["result"]]],[11,"deserialize","","",131,[[["__d"]],["result"]]],[11,"deserialize","","",132,[[["__d"]],["result"]]],[11,"deserialize","","",133,[[["__d"]],["result"]]],[11,"deserialize","","",134,[[["__d"]],["result"]]],[11,"deserialize","","",135,[[["__d"]],["result"]]],[11,"deserialize","","",136,[[["__d"]],["result"]]],[11,"deserialize","","",137,[[["__d"]],["result"]]],[11,"deserialize","","",138,[[["__d"]],["result"]]],[11,"deserialize","","",139,[[["__d"]],["result"]]],[11,"deserialize","","",140,[[["__d"]],["result"]]],[11,"deserialize","","",141,[[["__d"]],["result"]]],[11,"deserialize","","",142,[[["__d"]],["result"]]],[11,"deserialize","","",143,[[["__d"]],["result"]]],[11,"deserialize","","",144,[[["__d"]],["result"]]],[11,"deserialize","","",145,[[["__d"]],["result"]]],[11,"deserialize","","",146,[[["__d"]],["result"]]],[11,"deserialize","","",147,[[["__d"]],["result"]]],[11,"deserialize","","",148,[[["__d"]],["result"]]],[11,"deserialize","","",149,[[["__d"]],["result"]]],[11,"deserialize","","",150,[[["__d"]],["result"]]],[11,"deserialize","","",151,[[["__d"]],["result"]]],[11,"deserialize","","",152,[[["__d"]],["result"]]],[11,"deserialize","","",153,[[["__d"]],["result"]]],[11,"deserialize","","",154,[[["__d"]],["result"]]],[11,"deserialize","","",155,[[["__d"]],["result"]]],[11,"deserialize","","",156,[[["__d"]],["result"]]],[11,"deserialize","","",157,[[["__d"]],["result"]]],[11,"deserialize","","",158,[[["__d"]],["result"]]],[11,"deserialize","","",159,[[["__d"]],["result"]]],[11,"deserialize","","",160,[[["__d"]],["result"]]],[11,"deserialize","","",161,[[["__d"]],["result"]]],[11,"deserialize","","",162,[[["__d"]],["result"]]],[11,"deserialize","","",163,[[["__d"]],["result"]]],[11,"deserialize","","",164,[[["__d"]],["result"]]],[11,"deserialize","","",165,[[["__d"]],["result"]]],[11,"deserialize","","",166,[[["__d"]],["result"]]],[11,"deserialize","","",167,[[["__d"]],["result"]]],[11,"deserialize","","",168,[[["__d"]],["result"]]],[11,"deserialize","","",169,[[["__d"]],["result"]]],[11,"deserialize","","",170,[[["__d"]],["result"]]],[11,"deserialize","","",171,[[["__d"]],["result"]]],[11,"deserialize","","",172,[[["__d"]],["result"]]],[11,"deserialize","","",173,[[["__d"]],["result"]]],[11,"deserialize","","",174,[[["__d"]],["result"]]],[11,"deserialize","","",175,[[["__d"]],["result"]]],[11,"deserialize","","",176,[[["__d"]],["result"]]],[11,"deserialize","","",177,[[["__d"]],["result"]]],[11,"deserialize","","",178,[[["__d"]],["result"]]],[11,"deserialize","","",179,[[["__d"]],["result"]]],[11,"deserialize","","",180,[[["__d"]],["result"]]],[11,"deserialize","","",181,[[["__d"]],["result"]]],[11,"deserialize","","",182,[[["__d"]],["result"]]],[11,"deserialize","","",183,[[["__d"]],["result"]]],[11,"deserialize","","",184,[[["__d"]],["result"]]],[11,"deserialize","","",185,[[["__d"]],["result"]]],[11,"deserialize","","",186,[[["__d"]],["result"]]],[11,"deserialize","","",187,[[["__d"]],["result"]]],[11,"deserialize","","",188,[[["__d"]],["result"]]],[11,"deserialize","","",189,[[["__d"]],["result"]]],[11,"deserialize","","",190,[[["__d"]],["result"]]],[11,"deserialize","","",191,[[["__d"]],["result"]]],[11,"deserialize","","",192,[[["__d"]],["result"]]],[11,"deserialize","","",193,[[["__d"]],["result"]]],[11,"deserialize","","",194,[[["__d"]],["result"]]],[11,"deserialize","","",195,[[["__d"]],["result"]]],[11,"deserialize","","",196,[[["__d"]],["result"]]],[11,"deserialize","","",197,[[["__d"]],["result"]]],[11,"deserialize","","",198,[[["__d"]],["result"]]],[11,"deserialize","","",199,[[["__d"]],["result"]]],[11,"deserialize","","",200,[[["__d"]],["result"]]],[11,"deserialize","","",201,[[["__d"]],["result"]]],[11,"deserialize","","",202,[[["__d"]],["result"]]],[11,"deserialize","","",203,[[["__d"]],["result"]]],[11,"deserialize","","",204,[[["__d"]],["result"]]],[11,"deserialize","","",205,[[["__d"]],["result"]]],[11,"deserialize","","",206,[[["__d"]],["result"]]],[11,"deserialize","","",207,[[["__d"]],["result"]]],[11,"deserialize","","",208,[[["__d"]],["result"]]],[11,"deserialize","","",209,[[["__d"]],["result"]]],[11,"deserialize","","",210,[[["__d"]],["result"]]],[11,"deserialize","","",211,[[["__d"]],["result"]]],[11,"deserialize","","",212,[[["__d"]],["result"]]],[11,"deserialize","","",213,[[["__d"]],["result"]]],[11,"deserialize","","",214,[[["__d"]],["result"]]],[11,"deserialize","","",215,[[["__d"]],["result"]]],[11,"deserialize","","",216,[[["__d"]],["result"]]],[11,"deserialize","","",217,[[["__d"]],["result"]]],[11,"deserialize","","",218,[[["__d"]],["result"]]],[11,"deserialize","","",219,[[["__d"]],["result"]]],[11,"deserialize","","",220,[[["__d"]],["result"]]],[11,"deserialize","","",221,[[["__d"]],["result"]]],[11,"deserialize","","",222,[[["__d"]],["result"]]],[11,"deserialize","","",223,[[["__d"]],["result"]]],[11,"deserialize","","",224,[[["__d"]],["result"]]],[11,"deserialize","","",225,[[["__d"]],["result"]]],[11,"deserialize","","",226,[[["__d"]],["result"]]],[11,"deserialize","","",227,[[["__d"]],["result"]]],[11,"deserialize","","",228,[[["__d"]],["result"]]],[11,"deserialize","","",229,[[["__d"]],["result"]]],[11,"deserialize","","",230,[[["__d"]],["result"]]],[11,"deserialize","","",231,[[["__d"]],["result"]]],[11,"deserialize","","",232,[[["__d"]],["result"]]],[11,"deserialize","","",233,[[["__d"]],["result"]]],[11,"deserialize","","",234,[[["__d"]],["result"]]],[11,"deserialize","","",235,[[["__d"]],["result"]]],[11,"deserialize","","",236,[[["__d"]],["result"]]],[11,"deserialize","nalgebra::base","",106,[[["d"]],["result"]]],[11,"deserialize","","",7,[[["d"]],["result"]]],[11,"deserialize","","",69,[[["d"]],["result"]]],[11,"deserialize","","",72,[[["__d"]],["result"]]],[11,"deserialize","nalgebra::geometry","",77,[[["des"]],["result"]]],[11,"deserialize","","",82,[[["des"]],["result"]]],[11,"deserialize","","",78,[[["des"]],["result"]]],[11,"deserialize","","",79,[[["des"]],["result"]]],[11,"deserialize","","",80,[[["__d"]],["result"]]],[11,"deserialize","","",81,[[["__d"]],["result"]]],[11,"deserialize","","",83,[[["des"]],["result"]]],[11,"deserialize","","",85,[[["des"]],["result"]]],[11,"deserialize","","",86,[[["des"]],["result"]]],[11,"deserialize","nalgebra::linalg","",92,[[["__d"]],["result"]]],[11,"deserialize","","",93,[[["__d"]],["result"]]],[11,"deserialize","","",96,[[["__d"]],["result"]]],[11,"deserialize","","",98,[[["__d"]],["result"]]],[11,"deserialize","","",99,[[["__d"]],["result"]]],[11,"deserialize","","",100,[[["__d"]],["result"]]],[11,"deserialize","","",101,[[["__d"]],["result"]]],[11,"deserialize","","",102,[[["__d"]],["result"]]],[11,"deserialize","","",90,[[["__d"]],["result"]]],[11,"deserialize","","",91,[[["__d"]],["result"]]],[11,"deserialize","","",103,[[["__d"]],["result"]]],[11,"default_epsilon","nalgebra::base","",7,[[]]],[11,"abs_diff_eq","","",7,[[["self"]],["bool"]]],[11,"default_epsilon","","",69,[[]]],[11,"abs_diff_eq","","",69,[[["self"]],["bool"]]],[11,"default_epsilon","nalgebra::geometry","",77,[[]]],[11,"abs_diff_eq","","",77,[[["self"]],["bool"]]],[11,"default_epsilon","","",82,[[]]],[11,"abs_diff_eq","","",82,[[["self"]],["bool"]]],[11,"default_epsilon","","",78,[[]]],[11,"abs_diff_eq","","",78,[[["self"]],["bool"]]],[11,"default_epsilon","nalgebra","",245,[[]]],[11,"abs_diff_eq","","",245,[[["self"]],["bool"]]],[11,"default_epsilon","","",246,[[]]],[11,"abs_diff_eq","","",246,[[["self"]],["bool"]]],[11,"default_epsilon","nalgebra::geometry","",79,[[]]],[11,"abs_diff_eq","","",79,[[["self"]],["bool"]]],[11,"default_epsilon","","",80,[[]]],[11,"abs_diff_eq","","",80,[[["self"]],["bool"]]],[11,"default_epsilon","","",81,[[]]],[11,"abs_diff_eq","","",81,[[["self"]],["bool"]]],[11,"default_epsilon","","",83,[[]]],[11,"abs_diff_eq","","",83,[[["self"]],["bool"]]],[11,"default_max_relative","nalgebra::base","",7,[[]]],[11,"relative_eq","","",7,[[["self"]],["bool"]]],[11,"default_max_relative","","",69,[[]]],[11,"relative_eq","","",69,[[["self"]],["bool"]]],[11,"default_max_relative","nalgebra::geometry","",77,[[]]],[11,"relative_eq","","",77,[[["self"]],["bool"]]],[11,"default_max_relative","","",82,[[]]],[11,"relative_eq","","",82,[[["self"]],["bool"]]],[11,"default_max_relative","","",78,[[]]],[11,"relative_eq","","",78,[[["self"]],["bool"]]],[11,"default_max_relative","nalgebra","",245,[[]]],[11,"relative_eq","","",245,[[["self"]],["bool"]]],[11,"default_max_relative","","",246,[[]]],[11,"relative_eq","","",246,[[["self"]],["bool"]]],[11,"default_max_relative","nalgebra::geometry","",79,[[]]],[11,"relative_eq","","",79,[[["self"]],["bool"]]],[11,"default_max_relative","","",80,[[]]],[11,"relative_eq","","",80,[[["self"]],["bool"]]],[11,"default_max_relative","","",81,[[]]],[11,"relative_eq","","",81,[[["self"]],["bool"]]],[11,"default_max_relative","","",83,[[]]],[11,"relative_eq","","",83,[[["self"]],["bool"]]],[11,"default_max_ulps","nalgebra::base","",7,[[],["u32"]]],[11,"ulps_eq","","",7,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",69,[[],["u32"]]],[11,"ulps_eq","","",69,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","nalgebra::geometry","",77,[[],["u32"]]],[11,"ulps_eq","","",77,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",82,[[],["u32"]]],[11,"ulps_eq","","",82,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",78,[[],["u32"]]],[11,"ulps_eq","","",78,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","nalgebra","",245,[[],["u32"]]],[11,"ulps_eq","","",245,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",246,[[],["u32"]]],[11,"ulps_eq","","",246,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","nalgebra::geometry","",79,[[],["u32"]]],[11,"ulps_eq","","",79,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",80,[[],["u32"]]],[11,"ulps_eq","","",80,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",81,[[],["u32"]]],[11,"ulps_eq","","",81,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",83,[[],["u32"]]],[11,"ulps_eq","","",83,[[["u32"],["self"]],["bool"]]],[11,"max_value","nalgebra","",244,[[],["self"]]],[11,"min_value","","",244,[[],["self"]]],[11,"max_value","nalgebra::geometry","",77,[[],["self"]]],[11,"min_value","","",77,[[],["self"]]],[11,"zero","nalgebra","",244,[[],["self"]]],[11,"is_zero","","",244,[[["self"]],["bool"]]],[11,"zero","nalgebra::geometry","",78,[[],["self"]]],[11,"is_zero","","",78,[[["self"]],["bool"]]],[11,"one","nalgebra","",257,[[],["self"]]],[11,"one","nalgebra::geometry","",82,[[],["self"]]],[11,"one","","",78,[[],["self"]]],[11,"one","nalgebra","",245,[[],["self"]]],[11,"one","","",246,[[],["self"]]],[11,"one","nalgebra::geometry","",79,[[],["self"]]],[11,"one","","Creates a new identity isometry.",80,[[],["self"]]],[11,"one","","Creates a new identity similarity.",81,[[],["self"]]],[11,"one","","Creates a new identity transform.",83,[[],["self"]]],[11,"to_superset","nalgebra","",244,[[["self"]],["matrixmn"]]],[11,"is_in_subset","","",244,[[["matrixmn"]],["bool"]]],[11,"from_superset_unchecked","","",244,[[["matrixmn"]],["self"]]],[11,"to_superset","nalgebra::geometry","",77,[[["self"]],["point"]]],[11,"is_in_subset","","",77,[[["point"]],["bool"]]],[11,"from_superset_unchecked","","",77,[[["point"]],["self"]]],[11,"to_superset","","",77,[[["self"]],[["vectorn",["dimnamesum"]],["dimnamesum",["u1"]]]]],[11,"is_in_subset","","",77,[[["vectorn"]],["bool"]]],[11,"from_superset_unchecked","","",77,[[["vectorn"]],["self"]]],[11,"to_superset","","",82,[[["self"]],["rotation"]]],[11,"is_in_subset","","",82,[[["rotation"]],["bool"]]],[11,"from_superset_unchecked","","",82,[[["rotation"]],["self"]]],[11,"to_superset","nalgebra","",255,[[["self"]],["unitquaternion"]]],[11,"is_in_subset","","",255,[[["unitquaternion"]],["bool"]]],[11,"from_superset_unchecked","","",255,[[["unitquaternion"]],["self"]]],[11,"to_superset","","",256,[[["self"]],["unitcomplex"]]],[11,"is_in_subset","","",256,[[["unitcomplex"]],["bool"]]],[11,"from_superset_unchecked","","",256,[[["unitcomplex"]],["self"]]],[11,"to_superset","nalgebra::geometry","",82,[[["self"]],["isometry"]]],[11,"is_in_subset","","",82,[[["isometry"]],["bool"]]],[11,"from_superset_unchecked","","",82,[[["isometry"]],["self"]]],[11,"to_superset","","",82,[[["self"]],["similarity"]]],[11,"is_in_subset","","",82,[[["similarity"]],["bool"]]],[11,"from_superset_unchecked","","",82,[[["similarity"]],["self"]]],[11,"to_superset","","",82,[[["self"]],["transform"]]],[11,"is_in_subset","","",82,[[["transform"]],["bool"]]],[11,"from_superset_unchecked","","",82,[[["transform"]],["self"]]],[11,"to_superset","","",82,[[["self"]],[["matrixn",["dimnamesum"]],["dimnamesum",["u1"]]]]],[11,"is_in_subset","","",82,[[["matrixn"]],["bool"]]],[11,"from_superset_unchecked","","",82,[[["matrixn"]],["self"]]],[11,"to_superset","","",78,[[["self"]],["quaternion"]]],[11,"is_in_subset","","",78,[[["quaternion"]],["bool"]]],[11,"from_superset_unchecked","","",78,[[["quaternion"]],["self"]]],[11,"to_superset","nalgebra","",245,[[["self"]],["unitquaternion"]]],[11,"is_in_subset","","",245,[[["unitquaternion"]],["bool"]]],[11,"from_superset_unchecked","","",245,[[["unitquaternion"]],["self"]]],[11,"to_superset","","",245,[[["self"]],["rotation3"]]],[11,"is_in_subset","","",245,[[["rotation3"]],["bool"]]],[11,"from_superset_unchecked","","",245,[[["rotation3"]],["self"]]],[11,"to_superset","","",245,[[["self"]],[["u3"],["isometry",["u3"]]]]],[11,"is_in_subset","","",245,[[["isometry"]],["bool"]]],[11,"from_superset_unchecked","","",245,[[["isometry"]],["self"]]],[11,"to_superset","","",245,[[["self"]],[["u3"],["similarity",["u3"]]]]],[11,"is_in_subset","","",245,[[["similarity"]],["bool"]]],[11,"from_superset_unchecked","","",245,[[["similarity"]],["self"]]],[11,"to_superset","","",245,[[["self"]],[["u3"],["transform",["u3"]]]]],[11,"is_in_subset","","",245,[[["transform"]],["bool"]]],[11,"from_superset_unchecked","","",245,[[["transform"]],["self"]]],[11,"to_superset","","",245,[[["self"]],["matrix4"]]],[11,"is_in_subset","","",245,[[["matrix4"]],["bool"]]],[11,"from_superset_unchecked","","",245,[[["matrix4"]],["self"]]],[11,"to_superset","","",246,[[["self"]],["unitcomplex"]]],[11,"is_in_subset","","",246,[[["unitcomplex"]],["bool"]]],[11,"from_superset_unchecked","","",246,[[["unitcomplex"]],["self"]]],[11,"to_superset","","",246,[[["self"]],["rotation2"]]],[11,"is_in_subset","","",246,[[["rotation2"]],["bool"]]],[11,"from_superset_unchecked","","",246,[[["rotation2"]],["self"]]],[11,"to_superset","","",246,[[["self"]],[["u2"],["isometry",["u2"]]]]],[11,"is_in_subset","","",246,[[["isometry"]],["bool"]]],[11,"from_superset_unchecked","","",246,[[["isometry"]],["self"]]],[11,"to_superset","","",246,[[["self"]],[["u2"],["similarity",["u2"]]]]],[11,"is_in_subset","","",246,[[["similarity"]],["bool"]]],[11,"from_superset_unchecked","","",246,[[["similarity"]],["self"]]],[11,"to_superset","","",246,[[["self"]],[["u2"],["transform",["u2"]]]]],[11,"is_in_subset","","",246,[[["transform"]],["bool"]]],[11,"from_superset_unchecked","","",246,[[["transform"]],["self"]]],[11,"to_superset","","",246,[[["self"]],["matrix3"]]],[11,"is_in_subset","","",246,[[["matrix3"]],["bool"]]],[11,"from_superset_unchecked","","",246,[[["matrix3"]],["self"]]],[11,"to_superset","nalgebra::geometry","",79,[[["self"]],["translation"]]],[11,"is_in_subset","","",79,[[["translation"]],["bool"]]],[11,"from_superset_unchecked","","",79,[[["translation"]],["self"]]],[11,"to_superset","","",79,[[["self"]],["isometry"]]],[11,"is_in_subset","","",79,[[["isometry"]],["bool"]]],[11,"from_superset_unchecked","","",79,[[["isometry"]],["self"]]],[11,"to_superset","","",79,[[["self"]],["similarity"]]],[11,"is_in_subset","","",79,[[["similarity"]],["bool"]]],[11,"from_superset_unchecked","","",79,[[["similarity"]],["self"]]],[11,"to_superset","","",79,[[["self"]],["transform"]]],[11,"is_in_subset","","",79,[[["transform"]],["bool"]]],[11,"from_superset_unchecked","","",79,[[["transform"]],["self"]]],[11,"to_superset","","",79,[[["self"]],[["matrixn",["dimnamesum"]],["dimnamesum",["u1"]]]]],[11,"is_in_subset","","",79,[[["matrixn"]],["bool"]]],[11,"from_superset_unchecked","","",79,[[["matrixn"]],["self"]]],[11,"to_superset","","",80,[[["self"]],["isometry"]]],[11,"is_in_subset","","",80,[[["isometry"]],["bool"]]],[11,"from_superset_unchecked","","",80,[[["isometry"]],["self"]]],[11,"to_superset","","",80,[[["self"]],["similarity"]]],[11,"is_in_subset","","",80,[[["similarity"]],["bool"]]],[11,"from_superset_unchecked","","",80,[[["similarity"]],["self"]]],[11,"to_superset","","",80,[[["self"]],["transform"]]],[11,"is_in_subset","","",80,[[["transform"]],["bool"]]],[11,"from_superset_unchecked","","",80,[[["transform"]],["self"]]],[11,"to_superset","","",80,[[["self"]],[["matrixn",["dimnamesum"]],["dimnamesum",["u1"]]]]],[11,"is_in_subset","","",80,[[["matrixn"]],["bool"]]],[11,"from_superset_unchecked","","",80,[[["matrixn"]],["self"]]],[11,"to_superset","","",81,[[["self"]],["similarity"]]],[11,"is_in_subset","","",81,[[["similarity"]],["bool"]]],[11,"from_superset_unchecked","","",81,[[["similarity"]],["self"]]],[11,"to_superset","","",81,[[["self"]],["transform"]]],[11,"is_in_subset","","",81,[[["transform"]],["bool"]]],[11,"from_superset_unchecked","","",81,[[["transform"]],["self"]]],[11,"to_superset","","",81,[[["self"]],[["matrixn",["dimnamesum"]],["dimnamesum",["u1"]]]]],[11,"is_in_subset","","",81,[[["matrixn"]],["bool"]]],[11,"from_superset_unchecked","","",81,[[["matrixn"]],["self"]]],[11,"to_superset","","",83,[[["self"]],["transform"]]],[11,"is_in_subset","","",83,[[["transform"]],["bool"]]],[11,"from_superset_unchecked","","",83,[[["transform"]],["self"]]],[11,"to_superset","","",83,[[["self"]],[["matrixn",["dimnamesum"]],["dimnamesum",["u1"]]]]],[11,"is_in_subset","","",83,[[["matrixn"]],["bool"]]],[11,"from_superset_unchecked","","",83,[[["matrixn"]],["self"]]],[11,"lanes","nalgebra","",244,[[],["usize"]]],[11,"splat","","",244,[[],["self"]]],[11,"extract","","",244,[[["self"],["usize"]]]],[11,"extract_unchecked","","",244,[[["self"],["usize"]]]],[11,"replace","","",244,[[["self"],["usize"]]]],[11,"replace_unchecked","","",244,[[["self"],["usize"]]]],[11,"select","","",244,[[],["self"]]],[11,"lanes","nalgebra::geometry","",77,[[],["usize"]]],[11,"splat","","",77,[[],["self"]]],[11,"extract","","",77,[[["self"],["usize"]]]],[11,"extract_unchecked","","",77,[[["self"],["usize"]]]],[11,"replace","","",77,[[["self"],["usize"]]]],[11,"replace_unchecked","","",77,[[["self"],["usize"]]]],[11,"select","","",77,[[],["self"]]],[11,"lanes","","",82,[[],["usize"]]],[11,"splat","","",82,[[],["self"]]],[11,"extract","","",82,[[["self"],["usize"]]]],[11,"extract_unchecked","","",82,[[["self"],["usize"]]]],[11,"replace","","",82,[[["self"],["usize"]]]],[11,"replace_unchecked","","",82,[[["self"],["usize"]]]],[11,"select","","",82,[[],["self"]]],[11,"lanes","","",78,[[],["usize"]]],[11,"splat","","",78,[[],["self"]]],[11,"extract","","",78,[[["self"],["usize"]]]],[11,"extract_unchecked","","",78,[[["self"],["usize"]]]],[11,"replace","","",78,[[["self"],["usize"]]]],[11,"replace_unchecked","","",78,[[["self"],["usize"]]]],[11,"select","","",78,[[],["self"]]],[11,"lanes","nalgebra","",245,[[],["usize"]]],[11,"splat","","",245,[[],["self"]]],[11,"extract","","",245,[[["self"],["usize"]]]],[11,"extract_unchecked","","",245,[[["self"],["usize"]]]],[11,"replace","","",245,[[["self"],["usize"]]]],[11,"replace_unchecked","","",245,[[["self"],["usize"]]]],[11,"select","","",245,[[],["self"]]],[11,"lanes","","",246,[[],["usize"]]],[11,"splat","","",246,[[],["self"]]],[11,"extract","","",246,[[["self"],["usize"]]]],[11,"extract_unchecked","","",246,[[["self"],["usize"]]]],[11,"replace","","",246,[[["self"],["usize"]]]],[11,"replace_unchecked","","",246,[[["self"],["usize"]]]],[11,"select","","",246,[[],["self"]]],[11,"lanes","nalgebra::geometry","",79,[[],["usize"]]],[11,"splat","","",79,[[],["self"]]],[11,"extract","","",79,[[["self"],["usize"]]]],[11,"extract_unchecked","","",79,[[["self"],["usize"]]]],[11,"replace","","",79,[[["self"],["usize"]]]],[11,"replace_unchecked","","",79,[[["self"],["usize"]]]],[11,"select","","",79,[[],["self"]]],[11,"lanes","","",80,[[],["usize"]]],[11,"splat","","",80,[[],["self"]]],[11,"extract","","",80,[[["self"],["usize"]]]],[11,"extract_unchecked","","",80,[[["self"],["usize"]]]],[11,"replace","","",80,[[["self"],["usize"]]]],[11,"replace_unchecked","","",80,[[["self"],["usize"]]]],[11,"select","","",80,[[],["self"]]],[11,"lanes","","",81,[[],["usize"]]],[11,"splat","","",81,[[],["self"]]],[11,"extract","","",81,[[["self"],["usize"]]]],[11,"extract_unchecked","","",81,[[["self"],["usize"]]]],[11,"replace","","",81,[[["self"],["usize"]]]],[11,"replace_unchecked","","",81,[[["self"],["usize"]]]],[11,"select","","",81,[[],["self"]]],[11,"lanes","","",83,[[],["usize"]]],[11,"splat","","",83,[[],["self"]]],[11,"extract","","",83,[[["self"],["usize"]]]],[11,"extract_unchecked","","",83,[[["self"],["usize"]]]],[11,"replace","","",83,[[["self"],["usize"]]]],[11,"replace_unchecked","","",83,[[["self"],["usize"]]]],[11,"select","","",83,[[],["self"]]],[11,"new","nalgebra","Create a new Complex",0,[[["t"]],["complex"]]],[11,"i","","Returns imaginary unit",0,[[],["complex"]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't…",0,[[["self"]],["t"]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[["self"],["t"]],["complex"]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[["self"],["t"]],["complex"]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[["u32"],["self"]],["complex"]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[["self"]],["complex"]]],[11,"inv","","Returns `1/self`",0,[[["self"]],["complex"]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[["self"],["i32"]],["complex"]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the [Manhattan…",0,[[["self"]],["t"]]],[11,"norm","","Calculate |self|",0,[[["self"]],["t"]]],[11,"arg","","Calculate the principal Arg of self.",0,[[["self"]],["t"]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,[[["self"]]]],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[["t"]],["complex"]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[["self"]],["complex"]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[["self"]],["complex"]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[["self"]],["complex"]]],[11,"cbrt","","Computes the principal value of the cube root of `self`.",0,[[["self"]],["complex"]]],[11,"powf","","Raises `self` to a floating point power.",0,[[["self"],["t"]],["complex"]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[["self"],["t"]],["complex"]]],[11,"powc","","Raises `self` to a complex power.",0,[[["self"],["complex"]],["complex"]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[["self"],["t"]],["complex"]]],[11,"sin","","Computes the sine of `self`.",0,[[["self"]],["complex"]]],[11,"cos","","Computes the cosine of `self`.",0,[[["self"]],["complex"]]],[11,"tan","","Computes the tangent of `self`.",0,[[["self"]],["complex"]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[["self"]],["complex"]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[["self"]],["complex"]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[["self"]],["complex"]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[["self"]],["complex"]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[["self"]],["complex"]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[["self"]],["complex"]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[["self"]],["complex"]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[["self"]],["complex"]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[["self"]],["complex"]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[["self"]],["complex"]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["self"],["complex"]],["complex"]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[],["bool"]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[],["bool"]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[],["bool"]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[],["bool"]]],[11,"icamax","nalgebra::base","Computes the index of the vector component with the…",95,[[["self"]],["usize"]]],[11,"argmax","","Computes the index and value of the vector component with…",95,[[["self"]]]],[11,"imax","","Computes the index of the vector component with the…",95,[[["self"]],["usize"]]],[11,"iamax","","Computes the index of the vector component with the…",95,[[["self"]],["usize"]]],[11,"argmin","","Computes the index and value of the vector component with…",95,[[["self"]]]],[11,"imin","","Computes the index of the vector component with the…",95,[[["self"]],["usize"]]],[11,"iamin","","Computes the index of the vector component with the…",95,[[["self"]],["usize"]]],[11,"axcpy","","Computes `self = a * x * c + b * self`.",95,[[["vector"],["self"],["n"]]]],[11,"axpy","","Computes `self = a * x + b * self`.",95,[[["vector"],["self"],["n"]]]],[11,"gemv","","Computes `self = alpha * a * x + beta * self`, where `a`…",95,[[["n"],["self"],["vector"],["matrix"]]]],[11,"gemv_symm","","Computes `self = alpha * a * x + beta * self`, where `a`…",95,[[["n"],["self"],["squarematrix"],["vector"]]]],[11,"sygemv","","Computes `self = alpha * a * x + beta * self`, where `a`…",95,[[["n"],["self"],["squarematrix"],["vector"]]]],[11,"hegemv","","Computes `self = alpha * a * x + beta * self`, where `a`…",95,[[["n"],["self"],["squarematrix"],["vector"]]]],[11,"gemv_tr","","Computes `self = alpha * a.transpose() * x + beta * self`,…",95,[[["n"],["self"],["vector"],["matrix"]]]],[11,"gemv_ad","","Computes `self = alpha * a.adjoint() * x + beta * self`,…",95,[[["n"],["self"],["vector"],["matrix"]]]],[11,"quadform_tr_with_workspace","","Computes the quadratic form `self = alpha * lhs * mid *…",94,[[["matrix"],["n"],["squarematrix"],["self"],["vector"]]]],[11,"quadform_tr","","Computes the quadratic form `self = alpha * lhs * mid *…",94,[[["matrix"],["n"],["squarematrix"],["self"]]]],[11,"quadform_with_workspace","","Computes the quadratic form `self = alpha *…",94,[[["n"],["squarematrix"],["self"],["vector"],["matrix"]]]],[11,"quadform","","Computes the quadratic form `self = alpha *…",94,[[["matrix"],["n"],["self"],["squarematrix"]]]],[11,"new_scaling","","Creates a new homogeneous matrix that applies the same…",257,[[["n"]],["self"]]],[11,"new_nonuniform_scaling","","Creates a new homogeneous matrix that applies a distinct…",257,[[["vector"]],["self"]]],[11,"new_translation","","Creates a new homogeneous matrix that applies a pure…",257,[[["vector"]],["self"]]],[11,"new_rotation","","Builds a 2 dimensional homogeneous rotation matrix from an…",252,[[["n"]],["self"]]],[11,"new_rotation","","Builds a 3D homogeneous rotation matrix from an axis and…",254,[[["vector3"]],["self"]]],[11,"new_rotation_wrt_point","","Builds a 3D homogeneous rotation matrix from an axis and…",254,[[["vector3"],["point3"]],["self"]]],[11,"from_scaled_axis","","Builds a 3D homogeneous rotation matrix from an axis and…",254,[[["vector3"]],["self"]]],[11,"from_euler_angles","","Creates a new rotation from Euler angles.",254,[[["n"]],["self"]]],[11,"from_axis_angle","","Builds a 3D homogeneous rotation matrix from an axis and a…",254,[[["unit"],["n"]],["self"]]],[11,"new_orthographic","","Creates a new homogeneous matrix for an orthographic…",254,[[["n"]],["self"]]],[11,"new_perspective","","Creates a new homogeneous matrix for a perspective…",254,[[["n"]],["self"]]],[11,"face_towards","","Creates an isometry that corresponds to the local frame of…",254,[[["vector3"],["point3"]],["self"]]],[11,"new_observer_frame","","Deprecated: Use [Matrix4::face_towards] instead.",254,[[["vector3"],["point3"]],["self"]]],[11,"look_at_rh","","Builds a right-handed look-at view matrix.",254,[[["vector3"],["point3"]],["self"]]],[11,"look_at_lh","","Builds a left-handed look-at view matrix.",254,[[["vector3"],["point3"]],["self"]]],[11,"append_scaling","","Computes the transformation equal to `self` followed by an…",94,[[["self"],["n"]],["matrixn"]]],[11,"prepend_scaling","","Computes the transformation equal to an uniform scaling…",94,[[["self"],["n"]],["matrixn"]]],[11,"append_nonuniform_scaling","","Computes the transformation equal to `self` followed by a…",94,[[["vector"],["self"]],["matrixn"]]],[11,"prepend_nonuniform_scaling","","Computes the transformation equal to a non-uniform scaling…",94,[[["vector"],["self"]],["matrixn"]]],[11,"append_translation","","Computes the transformation equal to `self` followed by a…",94,[[["vector"],["self"]],["matrixn"]]],[11,"prepend_translation","","Computes the transformation equal to a translation…",94,[[["vector"],["self"]],["matrixn"]]],[11,"append_scaling_mut","","Computes in-place the transformation equal to `self`…",94,[[["self"],["n"]]]],[11,"prepend_scaling_mut","","Computes in-place the transformation equal to an uniform…",94,[[["self"],["n"]]]],[11,"append_nonuniform_scaling_mut","","Computes in-place the transformation equal to `self`…",94,[[["self"],["vector"]]]],[11,"prepend_nonuniform_scaling_mut","","Computes in-place the transformation equal to a…",94,[[["self"],["vector"]]]],[11,"append_translation_mut","","Computes the transformation equal to `self` followed by a…",94,[[["self"],["vector"]]]],[11,"prepend_translation_mut","","Computes the transformation equal to a translation…",94,[[["self"],["vector"]]]],[11,"transform_vector","","Transforms the given vector, assuming the matrix `self`…",94,[[["vectorn"],["self"]],[["vectorn",["dimnamediff"]],["dimnamediff",["u1"]]]]],[11,"transform_point","","Transforms the given point, assuming the matrix `self`…",94,[[["point"],["self"]],[["point",["dimnamediff"]],["dimnamediff",["u1"]]]]],[11,"new_uninitialized_generic","","Creates a new uninitialized matrix. If the matrix has a…",244,[[["c"],["r"]],["self"]]],[11,"from_element_generic","","Creates a matrix with all its elements set to `elem`.",244,[[["c"],["n"],["r"]],["self"]]],[11,"repeat_generic","","Creates a matrix with all its elements set to `elem`.",244,[[["c"],["n"],["r"]],["self"]]],[11,"zeros_generic","","Creates a matrix with all its elements set to 0.",244,[[["c"],["r"]],["self"]]],[11,"from_iterator_generic","","Creates a matrix with all its elements filled by an…",244,[[["c"],["i"],["r"]],["self"]]],[11,"from_row_slice_generic","","Creates a matrix with its elements filled with the…",244,[[["c"],["r"]],["self"]]],[11,"from_column_slice_generic","","Creates a matrix with its elements filled with the…",244,[[["c"],["r"]],["self"]]],[11,"from_fn_generic","","Creates a matrix filled with the results of a function…",244,[[["c"],["f"],["r"]],["self"]]],[11,"identity_generic","","Creates a new identity matrix.",244,[[["c"],["r"]],["self"]]],[11,"from_diagonal_element_generic","","Creates a new matrix with its diagonal filled with copies…",244,[[["c"],["n"],["r"]],["self"]]],[11,"from_partial_diagonal_generic","","Creates a new matrix that may be rectangular. The first…",244,[[["c"],["r"]],["self"]]],[11,"from_rows","","Builds a new matrix from its rows.",244,[[],["self"]]],[11,"from_columns","","Builds a new matrix from its columns.",244,[[],["self"]]],[11,"new_random_generic","","Creates a matrix filled with random values.",244,[[["c"],["r"]],["self"]]],[11,"from_distribution_generic","","Creates a matrix filled with random values from the given…",244,[[["g"],["c"],["distr"],["r"]],["self"]]],[11,"from_vec_generic","","Creates a matrix backed by a given `Vec`.",244,[[["c"],["vec"],["r"]],["self"]]],[11,"from_diagonal","","Creates a square matrix with its diagonal set to `diag`…",257,[[["vector"]],["self"]]],[11,"new_uninitialized","","Creates a new uninitialized matrix or vector.",244,[[],["self"]]],[11,"from_element","","Creates a matrix or vector with all its elements set to…",244,[[["n"]],["self"]]],[11,"repeat","","Creates a matrix or vector with all its elements set to…",244,[[["n"]],["self"]]],[11,"zeros","","Creates a matrix or vector with all its elements set to `0`.",244,[[],["self"]]],[11,"from_iterator","","Creates a matrix or vector with all its elements filled by…",244,[[["i"]],["self"]]],[11,"from_fn","","Creates a matrix or vector filled with the results of a…",244,[[["f"]],["self"]]],[11,"identity","","Creates an identity matrix. If the matrix is not square,…",244,[[],["self"]]],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with…",244,[[["n"]],["self"]]],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first…",244,[[],["self"]]],[11,"from_distribution","","Creates a matrix or vector filled with random values from…",244,[[["distr"],["g"]],["self"]]],[11,"new_random","","Creates a matrix filled with random values.",244,[[],["self"]]],[11,"new_uninitialized","","Creates a new uninitialized matrix or vector.",244,[[["usize"]],["self"]]],[11,"from_element","","Creates a matrix or vector with all its elements set to…",244,[[["usize"],["n"]],["self"]]],[11,"repeat","","Creates a matrix or vector with all its elements set to…",244,[[["usize"],["n"]],["self"]]],[11,"zeros","","Creates a matrix or vector with all its elements set to `0`.",244,[[["usize"]],["self"]]],[11,"from_iterator","","Creates a matrix or vector with all its elements filled by…",244,[[["i"],["usize"]],["self"]]],[11,"from_fn","","Creates a matrix or vector filled with the results of a…",244,[[["usize"],["f"]],["self"]]],[11,"identity","","Creates an identity matrix. If the matrix is not square,…",244,[[["usize"]],["self"]]],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with…",244,[[["usize"],["n"]],["self"]]],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first…",244,[[["usize"]],["self"]]],[11,"from_distribution","","Creates a matrix or vector filled with random values from…",244,[[["distr"],["usize"],["g"]],["self"]]],[11,"new_random","","Creates a matrix filled with random values.",244,[[["usize"]],["self"]]],[11,"new_uninitialized","","Creates a new uninitialized matrix or vector.",244,[[["usize"]],["self"]]],[11,"from_element","","Creates a matrix or vector with all its elements set to…",244,[[["usize"],["n"]],["self"]]],[11,"repeat","","Creates a matrix or vector with all its elements set to…",244,[[["usize"],["n"]],["self"]]],[11,"zeros","","Creates a matrix or vector with all its elements set to `0`.",244,[[["usize"]],["self"]]],[11,"from_iterator","","Creates a matrix or vector with all its elements filled by…",244,[[["i"],["usize"]],["self"]]],[11,"from_fn","","Creates a matrix or vector filled with the results of a…",244,[[["usize"],["f"]],["self"]]],[11,"identity","","Creates an identity matrix. If the matrix is not square,…",244,[[["usize"]],["self"]]],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with…",244,[[["usize"],["n"]],["self"]]],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first…",244,[[["usize"]],["self"]]],[11,"from_distribution","","Creates a matrix or vector filled with random values from…",244,[[["distr"],["usize"],["g"]],["self"]]],[11,"new_random","","Creates a matrix filled with random values.",244,[[["usize"]],["self"]]],[11,"new_uninitialized","","Creates a new uninitialized matrix or vector.",244,[[["usize"]],["self"]]],[11,"from_element","","Creates a matrix or vector with all its elements set to…",244,[[["usize"],["n"]],["self"]]],[11,"repeat","","Creates a matrix or vector with all its elements set to…",244,[[["usize"],["n"]],["self"]]],[11,"zeros","","Creates a matrix or vector with all its elements set to `0`.",244,[[["usize"]],["self"]]],[11,"from_iterator","","Creates a matrix or vector with all its elements filled by…",244,[[["i"],["usize"]],["self"]]],[11,"from_fn","","Creates a matrix or vector filled with the results of a…",244,[[["usize"],["f"]],["self"]]],[11,"identity","","Creates an identity matrix. If the matrix is not square,…",244,[[["usize"]],["self"]]],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with…",244,[[["usize"],["n"]],["self"]]],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first…",244,[[["usize"]],["self"]]],[11,"from_distribution","","Creates a matrix or vector filled with random values from…",244,[[["distr"],["usize"],["g"]],["self"]]],[11,"new_random","","Creates a matrix filled with random values.",244,[[["usize"]],["self"]]],[11,"from_row_slice","","Creates a matrix with its elements filled with the…",244,[[],["self"]]],[11,"from_column_slice","","Creates a matrix with its elements filled with the…",244,[[],["self"]]],[11,"from_vec","","Creates a matrix backed by a given `Vec`.",244,[[["vec"]],["self"]]],[11,"from_row_slice","","Creates a matrix with its elements filled with the…",244,[[],["self"]]],[11,"from_column_slice","","Creates a matrix with its elements filled with the…",244,[[],["self"]]],[11,"from_vec","","Creates a matrix backed by a given `Vec`.",244,[[["vec"]],["self"]]],[11,"from_row_slice","","Creates a matrix with its elements filled with the…",244,[[],["self"]]],[11,"from_column_slice","","Creates a matrix with its elements filled with the…",244,[[],["self"]]],[11,"from_vec","","Creates a matrix backed by a given `Vec`.",244,[[["vec"]],["self"]]],[11,"from_row_slice","","Creates a matrix with its elements filled with the…",244,[[["usize"]],["self"]]],[11,"from_column_slice","","Creates a matrix with its elements filled with the…",244,[[["usize"]],["self"]]],[11,"from_vec","","Creates a matrix backed by a given `Vec`.",244,[[["vec"],["usize"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"new","","Initializes this matrix from its components.",244,[[["n"]],["self"]]],[11,"x","","The column vector with a 1 as its first component, and…",251,[[],["self"]]],[11,"y","","The column vector with a 1 as its second component, and…",251,[[],["self"]]],[11,"z","","The column vector with a 1 as its third component, and…",251,[[],["self"]]],[11,"w","","The column vector with a 1 as its fourth component, and…",251,[[],["self"]]],[11,"a","","The column vector with a 1 as its fifth component, and…",251,[[],["self"]]],[11,"b","","The column vector with a 1 as its sixth component, and…",251,[[],["self"]]],[11,"x_axis","","The unit column vector with a 1 as its first component,…",251,[[],["unit"]]],[11,"y_axis","","The unit column vector with a 1 as its second component,…",251,[[],["unit"]]],[11,"z_axis","","The unit column vector with a 1 as its third component,…",251,[[],["unit"]]],[11,"w_axis","","The unit column vector with a 1 as its fourth component,…",251,[[],["unit"]]],[11,"a_axis","","The unit column vector with a 1 as its fifth component,…",251,[[],["unit"]]],[11,"b_axis","","The unit column vector with a 1 as its sixth component,…",251,[[],["unit"]]],[11,"from_slice_with_strides_generic_unchecked","","Creates, without bound-checking, a matrix slice from an…",258,[[["cstride"],["usize"],["c"],["rstride"],["r"]],["self"]]],[11,"from_slice_with_strides_generic","","Creates a matrix slice from an array and with dimensions…",258,[[["cstride"],["c"],["rstride"],["r"]],["self"]]],[11,"from_slice_with_strides_generic_unchecked","","Creates, without bound-checking, a mutable matrix slice…",259,[[["cstride"],["usize"],["c"],["rstride"],["r"]],["self"]]],[11,"from_slice_with_strides_generic","","Creates a mutable matrix slice from an array and with…",259,[[["cstride"],["c"],["rstride"],["r"]],["self"]]],[11,"from_slice_generic_unchecked","","Creates, without bound-checking, a matrix slice from an…",258,[[["usize"],["c"],["r"]],["self"]]],[11,"from_slice_generic","","Creates a matrix slice from an array and with dimensions…",258,[[["c"],["r"]],["self"]]],[11,"from_slice_generic_unchecked","","Creates, without bound-checking, a mutable matrix slice…",259,[[["usize"],["c"],["r"]],["self"]]],[11,"from_slice_generic","","Creates a mutable matrix slice from an array and with…",259,[[["c"],["r"]],["self"]]],[11,"from_slice","","Creates a new matrix slice from the given data array.",258,[[],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new matrix slice from…",258,[[["usize"]],["self"]]],[11,"from_slice_with_strides","","Creates a new matrix slice with the specified strides from…",258,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with…",258,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new matrix slice from the given data array.",258,[[["usize"]],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new matrix slice from…",258,[[["usize"]],["self"]]],[11,"from_slice_with_strides","","Creates a new matrix slice with the specified strides from…",258,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with…",258,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new matrix slice from the given data array.",258,[[["usize"]],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new matrix slice from…",258,[[["usize"]],["self"]]],[11,"from_slice_with_strides","","Creates a new matrix slice with the specified strides from…",258,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with…",258,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new matrix slice from the given data array.",258,[[["usize"]],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new matrix slice from…",258,[[["usize"]],["self"]]],[11,"from_slice_with_strides","","Creates a new matrix slice with the specified strides from…",258,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with…",258,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new mutable matrix slice from the given data…",259,[[],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new mutable matrix…",259,[[["usize"]],["self"]]],[11,"from_slice_with_strides_mut","","Creates a new mutable matrix slice with the specified…",259,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix…",259,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new mutable matrix slice from the given data…",259,[[["usize"]],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new mutable matrix…",259,[[["usize"]],["self"]]],[11,"from_slice_with_strides_mut","","Creates a new mutable matrix slice with the specified…",259,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix…",259,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new mutable matrix slice from the given data…",259,[[["usize"]],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new mutable matrix…",259,[[["usize"]],["self"]]],[11,"from_slice_with_strides_mut","","Creates a new mutable matrix slice with the specified…",259,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix…",259,[[["usize"]],["self"]]],[11,"from_slice","","Creates a new mutable matrix slice from the given data…",259,[[["usize"]],["self"]]],[11,"from_slice_unchecked","","Creates, without bound checking, a new mutable matrix…",259,[[["usize"]],["self"]]],[11,"from_slice_with_strides_mut","","Creates a new mutable matrix slice with the specified…",259,[[["usize"]],["self"]]],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix…",259,[[["usize"]],["self"]]],[11,"resize_mut","","Resizes this matrix in-place.",260,[[["self"],["usize"],["n"]]]],[11,"resize_vertically_mut","","Changes the number of rows of this matrix in-place.",244,[[["self"],["usize"],["n"]]]],[11,"resize_horizontally_mut","","Changes the number of column of this matrix in-place.",244,[[["self"],["usize"],["n"]]]],[11,"vget_unchecked","","Gets a reference to the i-th element of this column vector…",95,[[["self"],["usize"]],["n"]]],[11,"vget_unchecked_mut","","Gets a mutable reference to the i-th element of this…",95,[[["self"],["usize"]],["n"]]],[11,"diagonal","","The diagonal of this matrix.",94,[[["self"]],["vectorn"]]],[11,"map_diagonal","","Apply the given function to this matrix's diagonal and…",94,[[["self"]],[["vectorn"],["scalar"]]]],[11,"trace","","Computes a trace of a square matrix, i.e., the sum of its…",94,[[["self"]],["n"]]],[11,"symmetric_part","","The symmetric part of `self`, i.e., `0.5 * (self +…",94,[[["self"]],["matrixmn"]]],[11,"hermitian_part","","The hermitian part of `self`, i.e., `0.5 * (self +…",94,[[["self"]],["matrixmn"]]],[11,"to_homogeneous","","Computes the coordinates in projective space of this…",95,[[["self"]],[["vectorn",["dimsum"]],["dimsum",["u1"]]]]],[11,"from_homogeneous","","Constructs a vector from coordinates in projective space,…",95,[[["vector",["dimsum"]],["dimsum",["u1"]]],[["vectorn"],["option",["vectorn"]]]]],[11,"push","","Constructs a new vector of higher dimension by appending…",95,[[["self"],["n"]],[["vectorn",["dimsum"]],["dimsum",["u1"]]]]],[11,"cross_matrix","","Computes the matrix `M` such that for all vector `v` we…",95,[[["self"]],[["u3"],["matrixn",["u3"]]]]],[11,"lerp","","Returns `self * (1.0 - t) + rhs * t`, i.e., the linear…",95,[[["n"],["self"],["vector"]],["vectorn"]]],[11,"orthonormalize","","Orthonormalizes the given family of vectors. The largest…",251,[[],["usize"]]],[11,"orthonormal_subspace_basis","","Applies the given closure to each element of the…",251,[[["f"]]]],[11,"is_special_orthogonal","","Checks that this matrix is orthogonal and has a…",94,[[["self"],["n"]],["bool"]]],[11,"is_invertible","","Returns `true` if this matrix is invertible.",94,[[["self"]],["bool"]]],[11,"is","","Tests if `Self` the same as the type `T`",74,[[],["bool"]]],[11,"inlined_clone","","Performance hack: Clone doesn't get inlined for Copy types…",74,[[["self"]],["self"]]],[11,"xx","","Builds a new vector from components of `self`.",95,[[["self"]],["vector2"]]],[11,"xxx","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"xy","","Builds a new vector from components of `self`.",95,[[["self"]],["vector2"]]],[11,"yx","","Builds a new vector from components of `self`.",95,[[["self"]],["vector2"]]],[11,"yy","","Builds a new vector from components of `self`.",95,[[["self"]],["vector2"]]],[11,"xxy","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"xyx","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"xyy","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"yxx","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"yxy","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"yyx","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"yyy","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"xz","","Builds a new vector from components of `self`.",95,[[["self"]],["vector2"]]],[11,"yz","","Builds a new vector from components of `self`.",95,[[["self"]],["vector2"]]],[11,"zx","","Builds a new vector from components of `self`.",95,[[["self"]],["vector2"]]],[11,"zy","","Builds a new vector from components of `self`.",95,[[["self"]],["vector2"]]],[11,"zz","","Builds a new vector from components of `self`.",95,[[["self"]],["vector2"]]],[11,"xxz","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"xyz","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"xzx","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"xzy","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"xzz","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"yxz","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"yyz","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"yzx","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"yzy","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"yzz","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"zxx","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"zxy","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"zxz","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"zyx","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"zyy","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"zyz","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"zzx","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"zzy","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"zzz","","Builds a new vector from components of `self`.",95,[[["self"]],["vector3"]]],[11,"new","nalgebra::geometry","Builds a 2 dimensional rotation matrix from an angle in…",256,[[["n"]],["self"]]],[11,"from_scaled_axis","","Builds a 2 dimensional rotation matrix from an angle in…",256,[[["u1"],["vector",["u1"]],["storage",["u1"]]],["self"]]],[11,"from_matrix","","Builds a rotation matrix by extracting the rotation part…",256,[[["matrix2"]],["self"]]],[11,"from_matrix_eps","","Builds a rotation matrix by extracting the rotation part…",256,[[["matrix2"],["usize"],["n"]],["self"]]],[11,"rotation_between","","The rotation matrix required to align `a` and `b` but with…",256,[[["vector"],["vector"]],["self"]]],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear…",256,[[["n"],["vector"],["vector"]],["self"]]],[11,"angle","","The rotation angle.",256,[[["self"]],["n"]]],[11,"angle_to","","The rotation angle needed to make `self` and `other`…",256,[[["self"]],["n"]]],[11,"rotation_to","","The rotation matrix needed to make `self` and `other`…",256,[[["self"]],["self"]]],[11,"renormalize","","Ensure this rotation is an orthonormal rotation matrix.…",256,[[["self"]]]],[11,"powf","","Raise the quaternion to a given floating power, i.e.,…",256,[[["self"],["n"]],["self"]]],[11,"scaled_axis","","The rotation angle returned as a 1-dimensional vector.",256,[[["self"]],[["u1"],["vectorn",["u1"]]]]],[11,"new","","Builds a 3 dimensional rotation matrix from an axis and an…",255,[[["u3"],["vector",["u3"]],["storage",["u3"]]],["self"]]],[11,"from_matrix","","Builds a rotation matrix by extracting the rotation part…",255,[[["matrix3"]],["self"]]],[11,"from_matrix_eps","","Builds a rotation matrix by extracting the rotation part…",255,[[["matrix3"],["usize"],["n"]],["self"]]],[11,"from_scaled_axis","","Builds a 3D rotation matrix from an axis scaled by the…",255,[[["u3"],["vector",["u3"]],["storage",["u3"]]],["self"]]],[11,"from_axis_angle","","Builds a 3D rotation matrix from an axis and a rotation…",255,[[["unit"],["n"]],["self"]]],[11,"from_euler_angles","","Creates a new rotation from Euler angles.",255,[[["n"]],["self"]]],[11,"to_euler_angles","","Creates Euler angles from a rotation.",255,[[["self"]]]],[11,"euler_angles","","Euler angles corresponding to this rotation from a rotation.",255,[[["self"]]]],[11,"renormalize","","Ensure this rotation is an orthonormal rotation matrix.…",255,[[["self"]]]],[11,"face_towards","","Creates a rotation that corresponds to the local frame of…",255,[[["vector"],["vector"]],["self"]]],[11,"new_observer_frames","","Deprecated: Use [Rotation3::face_towards] instead.",255,[[["vector"],["vector"]],["self"]]],[11,"look_at_rh","","Builds a right-handed look-at view matrix without…",255,[[["vector"],["vector"]],["self"]]],[11,"look_at_lh","","Builds a left-handed look-at view matrix without…",255,[[["vector"],["vector"]],["self"]]],[11,"rotation_between","","The rotation matrix required to align `a` and `b` but with…",255,[[["vector"],["vector"]],["option"]]],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear…",255,[[["vector"],["vector"],["n"]],["option"]]],[11,"angle","","The rotation angle in [0; pi].",255,[[["self"]],["n"]]],[11,"axis","","The rotation axis. Returns `None` if the rotation angle is…",255,[[["self"]],[["unit",["vector3"]],["option",["unit"]]]]],[11,"scaled_axis","","The rotation axis multiplied by the rotation angle.",255,[[["self"]],["vector3"]]],[11,"axis_angle","","The rotation axis and angle in ]0, pi] of this unit…",255,[[["self"]],["option"]]],[11,"angle_to","","The rotation angle needed to make `self` and `other`…",255,[[["self"]],["n"]]],[11,"rotation_to","","The rotation matrix needed to make `self` and `other`…",255,[[["self"]],["self"]]],[11,"powf","","Raise the quaternion to a given floating power, i.e.,…",255,[[["self"],["n"]],["self"]]],[11,"angle","","The rotation angle in [0; pi] of this unit quaternion.",245,[[["self"]],["n"]]],[11,"quaternion","","The underlying quaternion.",245,[[["self"]],["quaternion"]]],[11,"conjugate","","Compute the conjugate of this unit quaternion.",245,[[["self"]],["self"]]],[11,"inverse","","Inverts this quaternion if it is not zero.",245,[[["self"]],["self"]]],[11,"angle_to","","The rotation angle needed to make `self` and `other`…",245,[[["self"]],["n"]]],[11,"rotation_to","","The unit quaternion needed to make `self` and `other`…",245,[[["self"]],["self"]]],[11,"lerp","","Linear interpolation between two unit quaternions.",245,[[["self"],["n"]],["quaternion"]]],[11,"nlerp","","Normalized linear interpolation between two unit…",245,[[["self"],["n"]],["self"]]],[11,"slerp","","Spherical linear interpolation between two unit quaternions.",245,[[["self"],["n"]],["self"]]],[11,"try_slerp","","Computes the spherical linear interpolation between two…",245,[[["self"],["n"]],["option"]]],[11,"conjugate_mut","","Compute the conjugate of this unit quaternion in-place.",245,[[["self"]]]],[11,"inverse_mut","","Inverts this quaternion if it is not zero.",245,[[["self"]]]],[11,"axis","","The rotation axis of this unit quaternion or `None` if the…",245,[[["self"]],[["unit",["vector3"]],["option",["unit"]]]]],[11,"scaled_axis","","The rotation axis of this unit quaternion multiplied by…",245,[[["self"]],["vector3"]]],[11,"axis_angle","","The rotation axis and angle in ]0, pi] of this unit…",245,[[["self"]],["option"]]],[11,"exp","","Compute the exponential of a quaternion.",245,[[["self"]],["quaternion"]]],[11,"ln","","Compute the natural logarithm of a quaternion.",245,[[["self"]],["quaternion"]]],[11,"powf","","Raise the quaternion to a given floating power.",245,[[["self"],["n"]],["self"]]],[11,"to_rotation_matrix","","Builds a rotation matrix from this unit quaternion.",245,[[["self"]],[["rotation",["u3"]],["u3"]]]],[11,"to_euler_angles","","Converts this unit quaternion into its equivalent Euler…",245,[[["self"]]]],[11,"euler_angles","","Retrieves the euler angles corresponding to this unit…",245,[[["self"]]]],[11,"to_homogeneous","","Converts this unit quaternion into its equivalent…",245,[[["self"]],["matrix4"]]],[11,"transform_point","","Rotate a point by this unit quaternion.",245,[[["self"],["point3"]],["point3"]]],[11,"transform_vector","","Rotate a vector by this unit quaternion.",245,[[["self"],["vector3"]],["vector3"]]],[11,"inverse_transform_point","","Rotate a point by the inverse of this unit quaternion.…",245,[[["self"],["point3"]],["point3"]]],[11,"inverse_transform_vector","","Rotate a vector by the inverse of this unit quaternion.…",245,[[["self"],["vector3"]],["vector3"]]],[11,"identity","","The rotation identity.",245,[[],["self"]]],[11,"from_axis_angle","","Creates a new quaternion from a unit vector (the rotation…",245,[[["unit"],["n"]],["self"]]],[11,"from_quaternion","","Creates a new unit quaternion from a quaternion.",245,[[["quaternion"]],["self"]]],[11,"from_euler_angles","","Creates a new unit quaternion from Euler angles.",245,[[["n"]],["self"]]],[11,"from_rotation_matrix","","Builds an unit quaternion from a rotation matrix.",245,[[["rotation3"]],["self"]]],[11,"from_matrix","","Builds an unit quaternion by extracting the rotation part…",245,[[["matrix3"]],["self"]]],[11,"from_matrix_eps","","Builds an unit quaternion by extracting the rotation part…",245,[[["matrix3"],["usize"],["n"]],["self"]]],[11,"rotation_between","","The unit quaternion needed to make `a` and `b` be…",245,[[["vector"],["vector"]],["option"]]],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear…",245,[[["vector"],["vector"],["n"]],["option"]]],[11,"rotation_between_axis","","The unit quaternion needed to make `a` and `b` be…",245,[[["unit"],["unit"]],["option"]]],[11,"scaled_rotation_between_axis","","The smallest rotation needed to make `a` and `b` collinear…",245,[[["unit"],["unit"],["n"]],["option"]]],[11,"face_towards","","Creates an unit quaternion that corresponds to the local…",245,[[["vector"],["vector"]],["self"]]],[11,"new_observer_frames","","Deprecated: Use [UnitQuaternion::face_towards] instead.",245,[[["vector"],["vector"]],["self"]]],[11,"look_at_rh","","Builds a right-handed look-at view matrix without…",245,[[["vector"],["vector"]],["self"]]],[11,"look_at_lh","","Builds a left-handed look-at view matrix without…",245,[[["vector"],["vector"]],["self"]]],[11,"new","","Creates a new unit quaternion rotation from a rotation…",245,[[["u3"],["vector",["u3"]]],["self"]]],[11,"new_eps","","Creates a new unit quaternion rotation from a rotation…",245,[[["u3"],["n"],["vector",["u3"]]],["self"]]],[11,"from_scaled_axis","","Creates a new unit quaternion rotation from a rotation…",245,[[["u3"],["vector",["u3"]]],["self"]]],[11,"from_scaled_axis_eps","","Creates a new unit quaternion rotation from a rotation…",245,[[["u3"],["n"],["vector",["u3"]]],["self"]]],[11,"mean_of","","Create the mean unit quaternion from a data structure…",245,[[],["self"]]],[11,"angle","","The rotation angle in `]-pi; pi]` of this unit complex…",246,[[["self"]],["n"]]],[11,"sin_angle","","The sine of the rotation angle.",246,[[["self"]],["n"]]],[11,"cos_angle","","The cosine of the rotation angle.",246,[[["self"]],["n"]]],[11,"scaled_axis","","The rotation angle returned as a 1-dimensional vector.",246,[[["self"]],["vector1"]]],[11,"axis_angle","","The rotation axis and angle in ]0, pi] of this complex…",246,[[["self"]],["option"]]],[11,"complex","","The underlying complex number.",246,[[["self"]],["complex"]]],[11,"conjugate","","Compute the conjugate of this unit complex number.",246,[[["self"]],["self"]]],[11,"inverse","","Inverts this complex number if it is not zero.",246,[[["self"]],["self"]]],[11,"angle_to","","The rotation angle needed to make `self` and `other`…",246,[[["self"]],["n"]]],[11,"rotation_to","","The unit complex number needed to make `self` and `other`…",246,[[["self"]],["self"]]],[11,"conjugate_mut","","Compute in-place the conjugate of this unit complex number.",246,[[["self"]]]],[11,"inverse_mut","","Inverts in-place this unit complex number.",246,[[["self"]]]],[11,"powf","","Raise this unit complex number to a given floating power.",246,[[["self"],["n"]],["self"]]],[11,"to_rotation_matrix","","Builds the rotation matrix corresponding to this unit…",246,[[["self"]],["rotation2"]]],[11,"to_homogeneous","","Converts this unit complex number into its equivalent…",246,[[["self"]],["matrix3"]]],[11,"transform_point","","Rotate the given point by this unit complex number.",246,[[["self"],["point2"]],["point2"]]],[11,"transform_vector","","Rotate the given vector by this unit complex number.",246,[[["self"],["vector2"]],["vector2"]]],[11,"inverse_transform_point","","Rotate the given point by the inverse of this unit complex…",246,[[["self"],["point2"]],["point2"]]],[11,"inverse_transform_vector","","Rotate the given vector by the inverse of this unit…",246,[[["self"],["vector2"]],["vector2"]]],[11,"identity","","The unit complex number multiplicative identity.",246,[[],["self"]]],[11,"new","","Builds the unit complex number corresponding to the…",246,[[["n"]],["self"]]],[11,"from_angle","","Builds the unit complex number corresponding to the…",246,[[["n"]],["self"]]],[11,"from_cos_sin_unchecked","","Builds the unit complex number from the sinus and cosinus…",246,[[["n"]],["self"]]],[11,"from_scaled_axis","","Builds a unit complex rotation from an angle in radian…",246,[[["u1"],["vector",["u1"]],["storage",["u1"]]],["self"]]],[11,"from_complex","","Creates a new unit complex number from a complex number.",246,[[["complex"]],["self"]]],[11,"from_complex_and_get","","Creates a new unit complex number from a complex number.",246,[[["complex"]]]],[11,"from_rotation_matrix","","Builds the unit complex number from the corresponding 2D…",246,[[["rotation2"]],["self"]]],[11,"from_matrix","","Builds an unit complex by extracting the rotation part of…",246,[[["matrix2"]],["self"]]],[11,"from_matrix_eps","","Builds an unit complex by extracting the rotation part of…",246,[[["matrix2"],["usize"],["n"]],["self"]]],[11,"rotation_between","","The unit complex needed to make `a` and `b` be collinear…",246,[[["vector"],["vector"]],["self"]]],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear…",246,[[["n"],["vector"],["vector"]],["self"]]],[11,"rotation_between_axis","","The unit complex needed to make `a` and `b` be collinear…",246,[[["unit"],["unit"]],["self"]]],[11,"scaled_rotation_between_axis","","The smallest rotation needed to make `a` and `b` collinear…",246,[[["n"],["unit"],["unit"]],["self"]]],[11,"has_normalizer","","Indicates whether a `Transform` with the category `Self`…",88,[[],["bool"]]]],"p":[[3,"Complex"],[8,"ComplexField"],[8,"RealField"],[8,"SimdBool"],[8,"SimdComplexField"],[8,"SimdPartialOrd"],[8,"SimdRealField"],[3,"Matrix"],[3,"LpNorm"],[8,"Allocator"],[8,"Reallocator"],[8,"DimEq"],[8,"SameNumberOfRows"],[8,"SameNumberOfColumns"],[8,"SameDimension"],[3,"X"],[3,"XY"],[3,"XYZ"],[3,"XYZW"],[3,"XYZWA"],[3,"XYZWAB"],[3,"IJKW"],[3,"M2x2"],[3,"M2x3"],[3,"M2x4"],[3,"M2x5"],[3,"M2x6"],[3,"M3x2"],[3,"M3x3"],[3,"M3x4"],[3,"M3x5"],[3,"M3x6"],[3,"M4x2"],[3,"M4x3"],[3,"M4x4"],[3,"M4x5"],[3,"M4x6"],[3,"M5x2"],[3,"M5x3"],[3,"M5x4"],[3,"M5x5"],[3,"M5x6"],[3,"M6x2"],[3,"M6x3"],[3,"M6x4"],[3,"M6x5"],[3,"M6x6"],[8,"Dim"],[8,"DimAdd"],[8,"DimNameAdd"],[8,"DimMul"],[8,"DimNameMul"],[8,"DimSub"],[8,"DimNameSub"],[8,"DimDiv"],[8,"DimNameDiv"],[8,"DimMin"],[8,"DimNameMin"],[8,"DimMax"],[8,"DimNameMax"],[8,"DimName"],[8,"NamedDim"],[3,"Dynamic"],[3,"MatrixIter"],[3,"MatrixIterMut"],[8,"Storage"],[8,"StorageMut"],[8,"MatrixIndex"],[8,"MatrixIndexMut"],[3,"Unit"],[3,"SliceStorage"],[3,"SliceStorageMut"],[3,"VecStorage"],[8,"Norm"],[8,"Scalar"],[8,"Normed"],[8,"SliceRange"],[3,"Point"],[3,"Quaternion"],[3,"Translation"],[3,"Isometry"],[3,"Similarity"],[3,"Rotation"],[3,"Transform"],[3,"Reflection"],[3,"Orthographic3"],[3,"Perspective3"],[8,"AbstractRotation"],[8,"TCategory"],[8,"TCategoryMul"],[3,"SVD"],[3,"SymmetricEigen"],[3,"Bidiagonal"],[3,"Cholesky"],[6,"SquareMatrix"],[6,"Vector"],[3,"FullPivLU"],[3,"GivensRotation"],[3,"Hessenberg"],[3,"LU"],[3,"PermutationSequence"],[3,"QR"],[3,"Schur"],[3,"SymmetricTridiagonal"],[3,"EuclideanNorm"],[3,"UniformNorm"],[3,"ArrayStorage"],[3,"ShapeConstraint"],[3,"DefaultAllocator"],[3,"U1"],[3,"U0"],[3,"U2"],[3,"U3"],[3,"U4"],[3,"U5"],[3,"U6"],[3,"U7"],[3,"U8"],[3,"U9"],[3,"U10"],[3,"U11"],[3,"U12"],[3,"U13"],[3,"U14"],[3,"U15"],[3,"U16"],[3,"U17"],[3,"U18"],[3,"U19"],[3,"U20"],[3,"U21"],[3,"U22"],[3,"U23"],[3,"U24"],[3,"U25"],[3,"U26"],[3,"U27"],[3,"U28"],[3,"U29"],[3,"U30"],[3,"U31"],[3,"U32"],[3,"U33"],[3,"U34"],[3,"U35"],[3,"U36"],[3,"U37"],[3,"U38"],[3,"U39"],[3,"U40"],[3,"U41"],[3,"U42"],[3,"U43"],[3,"U44"],[3,"U45"],[3,"U46"],[3,"U47"],[3,"U48"],[3,"U49"],[3,"U50"],[3,"U51"],[3,"U52"],[3,"U53"],[3,"U54"],[3,"U55"],[3,"U56"],[3,"U57"],[3,"U58"],[3,"U59"],[3,"U60"],[3,"U61"],[3,"U62"],[3,"U63"],[3,"U64"],[3,"U65"],[3,"U66"],[3,"U67"],[3,"U68"],[3,"U69"],[3,"U70"],[3,"U71"],[3,"U72"],[3,"U73"],[3,"U74"],[3,"U75"],[3,"U76"],[3,"U77"],[3,"U78"],[3,"U79"],[3,"U80"],[3,"U81"],[3,"U82"],[3,"U83"],[3,"U84"],[3,"U85"],[3,"U86"],[3,"U87"],[3,"U88"],[3,"U89"],[3,"U90"],[3,"U91"],[3,"U92"],[3,"U93"],[3,"U94"],[3,"U95"],[3,"U96"],[3,"U97"],[3,"U98"],[3,"U99"],[3,"U100"],[3,"U101"],[3,"U102"],[3,"U103"],[3,"U104"],[3,"U105"],[3,"U106"],[3,"U107"],[3,"U108"],[3,"U109"],[3,"U110"],[3,"U111"],[3,"U112"],[3,"U113"],[3,"U114"],[3,"U115"],[3,"U116"],[3,"U117"],[3,"U118"],[3,"U119"],[3,"U120"],[3,"U121"],[3,"U122"],[3,"U123"],[3,"U124"],[3,"U125"],[3,"U126"],[3,"U127"],[3,"RowIter"],[3,"RowIterMut"],[3,"ColumnIter"],[3,"ColumnIterMut"],[4,"TGeneral"],[4,"TProjective"],[4,"TAffine"],[6,"MatrixMN"],[6,"UnitQuaternion"],[6,"UnitComplex"],[6,"MatrixSlice"],[6,"MatrixSliceMut"],[6,"DVectorSlice"],[6,"DVectorSliceMut"],[6,"VectorN"],[6,"Matrix3"],[6,"Matrix2"],[6,"Matrix4"],[6,"Rotation3"],[6,"Rotation2"],[6,"MatrixN"],[6,"MatrixSliceMN"],[6,"MatrixSliceMutMN"],[6,"DMatrix"]]};
searchIndex["ndarray"] = {"doc":"The `ndarray` crate provides an n-dimensional container…","i":[[3,"Dim","ndarray","Dimension description.",null,null],[3,"Axis","","An axis index.",null,null],[12,"0","","",0,null],[3,"AxisDescription","","Description of the axis, its length and its stride.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[12,"2","","",1,null],[3,"IxDynImpl","","Dynamic dimension or index type.",null,null],[3,"ShapeError","","An error related to array shape or layout.",null,null],[3,"Slice","","A slice (range with step size).",null,null],[12,"start","","",2,null],[12,"end","","",2,null],[12,"step","","",2,null],[3,"SliceInfo","","Represents all of the necessary information to perform a…",null,null],[3,"Zip","","Lock step function application across several arrays or…",null,null],[3,"ArrayBase","","An n-dimensional array.",null,null],[3,"OwnedRepr","","Array's representation.",null,null],[3,"OwnedArcRepr","","ArcArray's representation.",null,null],[3,"RawViewRepr","","Array pointer’s representation.",null,null],[3,"ViewRepr","","Array view’s representation.",null,null],[3,"Shape","","A contiguous array shape of n dimensions.",null,null],[3,"StrideShape","","An array shape of n dimensions in c-order, f-order or…",null,null],[4,"ErrorKind","","Error code for an error related to array shape or layout.",null,null],[13,"IncompatibleShape","","incompatible shape",3,null],[13,"IncompatibleLayout","","incompatible memory layout",3,null],[13,"RangeLimited","","the shape does not fit inside type limits",3,null],[13,"OutOfBounds","","out of bounds indexing",3,null],[13,"Unsupported","","aliasing array elements",3,null],[13,"Overflow","","overflow when computing offset, length, etc.",3,null],[4,"SliceOrIndex","","A slice (range with step) or an index.",null,null],[13,"Slice","","A range with step size. `end` is an exclusive index.…",4,null],[12,"start","ndarray::SliceOrIndex","",5,null],[12,"end","","",5,null],[12,"step","","",5,null],[13,"Index","ndarray","A single index.",4,null],[4,"FoldWhile","","Value controlling the execution of `.fold_while` on `Zip`.",null,null],[13,"Continue","","Continue folding with this value",6,null],[13,"Done","","Fold is complete and will return this value",6,null],[4,"CowRepr","","CowArray's representation.",null,null],[13,"View","","Borrowed data.",7,null],[13,"Owned","","Owned data.",7,null],[5,"Dim","","Create a new dimension value.",null,[[["t"]]]],[5,"indices","","Create an iterable of the array shape `shape`.",null,[[["e"]],["indices"]]],[5,"indices_of","","Return an iterable of the indices of the passed-in array.",null,[[["arraybase"]],["indices"]]],[5,"stack","","Stack arrays along the given axis.",null,[[["axis"]],[["result",["array","shapeerror"]],["array"],["shapeerror"]]]],[5,"Ix0","","Create a zero-dimensional index",null,[[],["ix0"]]],[5,"Ix1","","Create a one-dimensional index",null,[[["ix"]],["ix1"]]],[5,"Ix2","","Create a two-dimensional index",null,[[["ix"]],["ix2"]]],[5,"Ix3","","Create a three-dimensional index",null,[[["ix"]],["ix3"]]],[5,"Ix4","","Create a four-dimensional index",null,[[["ix"]],["ix4"]]],[5,"Ix5","","Create a five-dimensional index",null,[[["ix"]],["ix5"]]],[5,"Ix6","","Create a six-dimensional index",null,[[["ix"]],["ix6"]]],[5,"IxDyn","","Create a dynamic-dimensional index",null,[[],["ixdyn"]]],[5,"arr0","","Create a zero-dimensional array with the element `x`.",null,[[["a"]],["array0"]]],[5,"arr1","","Create a one-dimensional array with elements from `xs`.",null,[[],[["clone"],["array1"]]]],[5,"rcarr1","","Create a one-dimensional array with elements from `xs`.",null,[[],[["arcarray1"],["clone"]]]],[5,"aview0","","Create a zero-dimensional array view borrowing `x`.",null,[[["a"]],["arrayview0"]]],[5,"aview1","","Create a one-dimensional array view with elements…",null,[[],["arrayview1"]]],[5,"aview2","","Create a two-dimensional array view with elements…",null,[[],["arrayview2"]]],[5,"aview_mut1","","Create a one-dimensional read-write array view with…",null,[[],["arrayviewmut1"]]],[5,"aview_mut2","","Create a two-dimensional read-write array view with…",null,[[],["arrayviewmut2"]]],[5,"arr2","","Create a two-dimensional array with elements from `xs`.",null,[[],[["clone"],["array2"]]]],[5,"rcarr2","","Create a two-dimensional array with elements from `xs`.",null,[[],[["arcarray2"],["clone"]]]],[5,"arr3","","Create a three-dimensional array with elements from `xs`.",null,[[],[["array3"],["clone"]]]],[5,"rcarr3","","Create a three-dimensional array with elements from `xs`.",null,[[],[["arcarray",["ix3"]],["clone"],["ix3"]]]],[0,"iter","","Producers, iterables and iterators.",null,null],[3,"Axes","ndarray::iter","An iterator over the length and stride of each axis of an…",null,null],[3,"Indices","","Indices producer and iterable.",null,null],[3,"IndicesIter","","An iterator over the indexes of an array shape.",null,null],[3,"AxisChunksIter","","An iterator that traverses over the specified axis and…",null,null],[3,"AxisChunksIterMut","","An iterator that traverses over the specified axis and…",null,null],[3,"AxisIter","","An iterator that traverses over an axis and and yields…",null,null],[3,"AxisIterMut","","An iterator that traverses over an axis and and yields…",null,null],[3,"ExactChunks","","Exact chunks producer and iterable.",null,null],[3,"ExactChunksIter","","Exact chunks iterator.",null,null],[3,"ExactChunksIterMut","","Exact chunks iterator.",null,null],[3,"ExactChunksMut","","Exact chunks producer and iterable.",null,null],[3,"IndexedIter","","An iterator over the indexes and elements of an array.",null,null],[3,"IndexedIterMut","","An iterator over the indexes and elements of an array…",null,null],[3,"Iter","","An iterator over the elements of an array.",null,null],[3,"IterMut","","An iterator over the elements of an array (mutable).",null,null],[3,"Lanes","","See `.lanes()` for more information.",null,null],[3,"LanesIter","","An iterator that traverses over all axes but one, and…",null,null],[3,"LanesIterMut","","An iterator that traverses over all dimensions but the…",null,null],[3,"LanesMut","","See `.lanes_mut()` for more information.",null,null],[3,"Windows","","Window producer and iterable",null,null],[11,"kind","ndarray","Return the `ErrorKind` of this error.",8,[[["self"]],["errorkind"]]],[11,"from_kind","","Create a new `ShapeError`",8,[[["errorkind"]],["self"]]],[11,"split_at","ndarray::iter","Splits the iterator at `index`, yielding two disjoint…",9,[[["usize"]]]],[11,"split_at","","Splits the iterator at `index`, yielding two disjoint…",10,[[["usize"]]]],[11,"split_at","","Splits the iterator at index, yielding two disjoint…",11,[[["usize"]]]],[11,"split_at","","Splits the iterator at index, yielding two disjoint…",12,[[["usize"]]]],[11,"size","ndarray","Return the size of the shape in number of elements",13,[[["self"]],["usize"]]],[11,"new","","Create a new `Slice` with the given extents.",2,[[["isize"],["option",["isize"]]],["slice"]]],[11,"step_by","","Create a new `Slice` with the given step size (multiplied…",2,[[["isize"]],["self"]]],[11,"is_slice","","Returns `true` if `self` is a `Slice` value.",4,[[["self"]],["bool"]]],[11,"is_index","","Returns `true` if `self` is an `Index` value.",4,[[["self"]],["bool"]]],[11,"step_by","","Returns a new `SliceOrIndex` with the given step size…",4,[[["isize"]],["self"]]],[11,"new","","Returns a new `SliceInfo` instance.",14,[[["t"]],[["shapeerror"],["result",["sliceinfo","shapeerror"]],["sliceinfo"]]]],[11,"out_ndim","","Returns the number of dimensions after calling `.slice()`…",14,[[["self"]],["usize"]]],[11,"from","","Create a new `Zip` from the input array or other producer…",15,[[["ip"]],["self"]]],[11,"indexed","","Create a new `Zip` with an index producer and the producer…",15,[[["ip"]],["self"]]],[11,"size","","Return a the number of element tuples in the Zip",15,[[["self"]],["usize"]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[["f"]]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[["acc"],["f"]],["acc"]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[["acc"],["f"]],["foldwhile"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[["f"]],["bool"]]],[11,"and","","Include the producer `p` in the Zip.",15,[[["p"]],["zip"]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[["p"]],["zip"]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array"]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[["q"]]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[["f"]]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[["acc"],["f"]],["acc"]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[["acc"],["f"]],["foldwhile"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[["f"]],["bool"]]],[11,"and","","Include the producer `p` in the Zip.",15,[[["p"]],["zip"]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[["p"]],["zip"]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array"]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[["q"]]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[["f"]]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[["acc"],["f"]],["acc"]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[["acc"],["f"]],["foldwhile"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[["f"]],["bool"]]],[11,"and","","Include the producer `p` in the Zip.",15,[[["p"]],["zip"]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[["p"]],["zip"]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array"]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[["q"]]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[["f"]]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[["acc"],["f"]],["acc"]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[["acc"],["f"]],["foldwhile"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[["f"]],["bool"]]],[11,"and","","Include the producer `p` in the Zip.",15,[[["p"]],["zip"]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[["p"]],["zip"]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array"]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[["q"]]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[["f"]]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[["acc"],["f"]],["acc"]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[["acc"],["f"]],["foldwhile"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[["f"]],["bool"]]],[11,"and","","Include the producer `p` in the Zip.",15,[[["p"]],["zip"]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[["p"]],["zip"]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array"]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[["q"]]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[["f"]]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[["acc"],["f"]],["acc"]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[["acc"],["f"]],["foldwhile"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[["f"]],["bool"]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"into_inner","","Return the inner value",6,[[],["t"]]],[11,"is_done","","Return true if it is `Done`, false if `Continue`",6,[[["self"]],["bool"]]],[11,"axis","","Return axis",1,[[],["axis"]]],[11,"len","","Return length",1,[[],["ix"]]],[11,"stride","","Return stride",1,[[],["ixs"]]],[11,"index","","Return the index of the axis.",0,[[],["usize"]]],[11,"zeros","","Create a new dimension value with `n` axes, all zeros",16,[[["usize"]],["ixdyn"]]],[0,"prelude","","ndarray prelude.",null,null],[11,"from_vec","","Create a one-dimensional array from a vector (no copying…",17,[[["vec"]],["self"]]],[11,"linspace","","Create a one-dimensional array with `n` evenly spaced…",17,[[["a"],["usize"]],["self"]]],[11,"range","","Create a one-dimensional array with elements from `start`…",17,[[["a"]],["self"]]],[11,"logspace","","Create a one-dimensional array with `n` logarithmically…",17,[[["a"],["usize"]],["self"]]],[11,"geomspace","","Create a one-dimensional array with `n` geometrically…",17,[[["a"],["usize"]],["option"]]],[11,"eye","","Create an identity matrix of size `n` (square 2D array).",17,[[["ix"]],["self"]]],[11,"from_diag","","Create a 2D matrix from its diagonal",17,[[["arraybase"]],["self"]]],[11,"from_elem","","Create an array with copies of `elem`, shape `shape`.",17,[[["a"],["sh"]],["self"]]],[11,"zeros","","Create an array with zeros, shape `shape`.",17,[[["sh"]],["self"]]],[11,"ones","","Create an array with ones, shape `shape`.",17,[[["sh"]],["self"]]],[11,"default","","Create an array with default values, shape `shape`",17,[[["sh"]],["self"]]],[11,"from_shape_simple_fn","","Create an array with values created by the function `f`.",17,[[["f"],["sh"]],["self"]]],[11,"from_shape_fn","","Create an array with values created by the function `f`.",17,[[["f"],["sh"]],["self"]]],[11,"from_shape_vec","","Create an array with the given shape from a vector. (No…",17,[[["vec"],["sh"]],[["result",["shapeerror"]],["shapeerror"]]]],[11,"from_shape_vec_unchecked","","Creates an array from a vector and interpret it according…",17,[[["vec"],["sh"]],["self"]]],[11,"uninitialized","","Create an array with uninitalized elements, shape `shape`.",17,[[["sh"]],["self"]]],[11,"maybe_uninit","","Create an array with uninitalized elements, shape `shape`.",17,[[["sh"]],["self"]]],[11,"len","","Return the total number of elements in the array.",17,[[["self"]],["usize"]]],[11,"len_of","","Return the length of `axis`.",17,[[["axis"],["self"]],["usize"]]],[11,"is_empty","","Return whether the array has any elements",17,[[["self"]],["bool"]]],[11,"ndim","","Return the number of dimensions (axes) in the array",17,[[["self"]],["usize"]]],[11,"dim","","Return the shape of the array in its “pattern” form, an…",17,[[["self"]]]],[11,"raw_dim","","Return the shape of the array as it stored in the array.",17,[[["self"]],["d"]]],[11,"shape","","Return the shape of the array as a slice.",17,[[["self"]]]],[11,"strides","","Return the strides of the array as a slice.",17,[[["self"]]]],[11,"stride_of","","Return the stride of `axis`.",17,[[["axis"],["self"]],["isize"]]],[11,"view","","Return a read-only view of the array",17,[[["self"]],["arrayview"]]],[11,"view_mut","","Return a read-write view of the array",17,[[["self"]],["arrayviewmut"]]],[11,"to_owned","","Return an uniquely owned copy of the array.",17,[[["self"]],["array"]]],[11,"to_shared","","Return a shared ownership (copy on write) array.",17,[[["self"]],["arcarray"]]],[11,"into_owned","","Turn the array into a uniquely owned array, cloning the…",17,[[],["array"]]],[11,"into_shared","","Turn the array into a shared ownership (copy on write)…",17,[[],["arcarray"]]],[11,"first","","Returns a reference to the first element of the array, or…",17,[[["self"]],[["option"],["a"]]]],[11,"first_mut","","Returns a mutable reference to the first element of the…",17,[[["self"]],[["a"],["option"]]]],[11,"iter","","Return an iterator of references to the elements of the…",17,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator of mutable references to the elements…",17,[[["self"]],["itermut"]]],[11,"indexed_iter","","Return an iterator of indexes and references to the…",17,[[["self"]],["indexediter"]]],[11,"indexed_iter_mut","","Return an iterator of indexes and mutable references to…",17,[[["self"]],["indexeditermut"]]],[11,"slice","","Return a sliced view of the array.",17,[[["sliceinfo"],["self"]],["arrayview"]]],[11,"slice_mut","","Return a sliced read-write view of the array.",17,[[["self"],["sliceinfo"]],["arrayviewmut"]]],[11,"multi_slice_mut","","Return multiple disjoint, sliced, mutable views of the…",17,[[["self"],["m"]]]],[11,"slice_move","","Slice the array, possibly changing the number of dimensions.",17,[[["sliceinfo"]],["arraybase"]]],[11,"slice_collapse","","Slice the array in place without changing the number of…",17,[[["self"]]]],[11,"slice_inplace","","Slice the array in place without changing the number of…",17,[[["self"]]]],[11,"slice_axis","","Return a view of the array, sliced along the specified axis.",17,[[["axis"],["self"],["slice"]],["arrayview"]]],[11,"slice_axis_mut","","Return a mutable view of the array, sliced along the…",17,[[["self"],["axis"],["slice"]],["arrayviewmut"]]],[11,"slice_axis_inplace","","Slice the array in place along the specified axis.",17,[[["self"],["axis"],["slice"]]]],[11,"get","","Return a reference to the element at `index`, or return…",17,[[["i"],["self"]],[["option"],["a"]]]],[11,"get_mut","","Return a mutable reference to the element at `index`, or…",17,[[["self"],["i"]],[["a"],["option"]]]],[11,"uget","","Perform unchecked array indexing.",17,[[["i"],["self"]],["a"]]],[11,"uget_mut","","Perform unchecked array indexing.",17,[[["self"],["i"]],["a"]]],[11,"swap","","Swap elements at indices `index1` and `index2`.",17,[[["self"],["i"]]]],[11,"uswap","","Swap elements unchecked at indices `index1` and `index2`.",17,[[["self"],["i"]]]],[11,"index_axis","","Returns a view restricted to `index` along the axis, with…",17,[[["axis"],["self"],["usize"]],["arrayview"]]],[11,"index_axis_mut","","Returns a mutable view restricted to `index` along the…",17,[[["self"],["axis"],["usize"]],["arrayviewmut"]]],[11,"index_axis_move","","Collapses the array to `index` along the axis and removes…",17,[[["axis"],["usize"]],["arraybase"]]],[11,"collapse_axis","","Selects `index` along the axis, collapsing the axis into…",17,[[["self"],["axis"],["usize"]]]],[11,"subview","","Along `axis`, select the subview `index` and return a view…",17,[[["ix"],["axis"],["self"]],["arrayview"]]],[11,"subview_mut","","Along `axis`, select the subview `index` and return a…",17,[[["ix"],["self"],["axis"]],["arrayviewmut"]]],[11,"subview_inplace","","Collapse dimension `axis` into length one, and select the…",17,[[["ix"],["self"],["axis"]]]],[11,"into_subview","","Along `axis`, select the subview `index` and return `self`…",17,[[["ix"],["axis"]],["arraybase"]]],[11,"select","","Along `axis`, select arbitrary subviews corresponding to…",17,[[["axis"],["self"]],["array"]]],[11,"genrows","","Return a producer and iterable that traverses over the…",17,[[["self"]],["lanes"]]],[11,"genrows_mut","","Return a producer and iterable that traverses over the…",17,[[["self"]],["lanesmut"]]],[11,"gencolumns","","Return a producer and iterable that traverses over the…",17,[[["self"]],["lanes"]]],[11,"gencolumns_mut","","Return a producer and iterable that traverses over the…",17,[[["self"]],["lanesmut"]]],[11,"lanes","","Return a producer and iterable that traverses over all 1D…",17,[[["axis"],["self"]],["lanes"]]],[11,"lanes_mut","","Return a producer and iterable that traverses over all 1D…",17,[[["self"],["axis"]],["lanesmut"]]],[11,"outer_iter","","Return an iterator that traverses over the outermost…",17,[[["self"]],["axisiter"]]],[11,"outer_iter_mut","","Return an iterator that traverses over the outermost…",17,[[["self"]],["axisitermut"]]],[11,"axis_iter","","Return an iterator that traverses over `axis` and yields…",17,[[["axis"],["self"]],["axisiter"]]],[11,"axis_iter_mut","","Return an iterator that traverses over `axis` and yields…",17,[[["self"],["axis"]],["axisitermut"]]],[11,"axis_chunks_iter","","Return an iterator that traverses over `axis` by chunks of…",17,[[["axis"],["self"],["usize"]],["axischunksiter"]]],[11,"axis_chunks_iter_mut","","Return an iterator that traverses over `axis` by chunks of…",17,[[["self"],["axis"],["usize"]],["axischunksitermut"]]],[11,"exact_chunks","","Return an exact chunks producer (and iterable).",17,[[["self"],["e"]],["exactchunks"]]],[11,"exact_chunks_mut","","Return an exact chunks producer (and iterable).",17,[[["self"],["e"]],["exactchunksmut"]]],[11,"windows","","Return a window producer and iterable.",17,[[["self"],["e"]],["windows"]]],[11,"diag","","Return an view of the diagonal elements of the array.",17,[[["self"]],["arrayview1"]]],[11,"diag_mut","","Return a read-write view over the diagonal elements of the…",17,[[["self"]],["arrayviewmut1"]]],[11,"into_diag","","Return the diagonal as a one-dimensional array.",17,[[],[["arraybase",["ix1"]],["ix1"]]]],[11,"is_standard_layout","","Return `true` if the array data is laid out in contiguous…",17,[[["self"]],["bool"]]],[11,"as_standard_layout","","Return a standard-layout array containing the data,…",17,[[["self"]],["cowarray"]]],[11,"as_ptr","","Return a pointer to the first element in the array.",17,[[["self"]]]],[11,"as_mut_ptr","","Return a mutable pointer to the first element in the array.",17,[[["self"]]]],[11,"raw_view","","Return a raw view of the array.",17,[[["self"]],["rawarrayview"]]],[11,"raw_view_mut","","Return a raw mutable view of the array.",17,[[["self"]],["rawarrayviewmut"]]],[11,"as_slice","","Return the array’s data as a slice, if it is contiguous…",17,[[["self"]],["option"]]],[11,"as_slice_mut","","Return the array’s data as a slice, if it is contiguous…",17,[[["self"]],["option"]]],[11,"as_slice_memory_order","","Return the array’s data as a slice if it is contiguous,…",17,[[["self"]],["option"]]],[11,"as_slice_memory_order_mut","","Return the array’s data as a slice if it is contiguous,…",17,[[["self"]],["option"]]],[11,"into_shape","","Transform the array into `shape`; any shape with the same…",17,[[["e"]],[["shapeerror"],["result",["arraybase","shapeerror"]],["arraybase"]]]],[11,"reshape","","Note: Reshape is for `ArcArray` only. Use `.into_shape()`…",17,[[["self"],["e"]],["arraybase"]]],[11,"into_dyn","","Convert any array or array view to a dynamic dimensional…",17,[[],[["ixdyn"],["arraybase",["ixdyn"]]]]],[11,"into_dimensionality","","Convert an array or array view to another with the same…",17,[[],[["arraybase"],["result",["arraybase","shapeerror"]],["shapeerror"]]]],[11,"broadcast","","Act like a larger size and/or shape array by broadcasting…",17,[[["self"],["e"]],[["arrayview"],["option",["arrayview"]]]]],[11,"swap_axes","","Swap axes `ax` and `bx`.",17,[[["self"],["usize"]]]],[11,"permuted_axes","","Permute the axes.",17,[[["t"]],["arraybase"]]],[11,"reversed_axes","","Transpose the array by reversing axes.",17,[[],["arraybase"]]],[11,"t","","Return a transposed view of the array.",17,[[["self"]],["arrayview"]]],[11,"axes","","Return an iterator over the length and stride of each axis.",17,[[["self"]],["axes"]]],[11,"max_stride_axis","","Return the axis with the greatest stride (by absolute…",17,[[["self"]],["axis"]]],[11,"invert_axis","","Reverse the stride of `axis`.",17,[[["self"],["axis"]]]],[11,"merge_axes","","If possible, merge in the axis `take` to `into`.",17,[[["self"],["axis"]],["bool"]]],[11,"insert_axis","","Insert new array axis at `axis` and return the result.",17,[[["axis"]],["arraybase"]]],[11,"remove_axis","","Remove array axis `axis` and return the result.",17,[[["axis"]],["arraybase"]]],[11,"assign","","Perform an elementwise assigment to `self` from `rhs`.",17,[[["self"],["arraybase"]]]],[11,"fill","","Perform an elementwise assigment to `self` from element `x`.",17,[[["a"],["self"]]]],[11,"zip_mut_with","","Traverse two arrays in unspecified order, in lock step,…",17,[[["self"],["arraybase"],["f"]]]],[11,"fold","","Traverse the array elements and apply a fold, returning…",17,[[["f"],["self"],["b"]],["b"]]],[11,"map","","Call `f` by reference on each element and create a new…",17,[[["self"],["f"]],["array"]]],[11,"map_mut","","Call `f` on a mutable reference of each element and create…",17,[[["self"],["f"]],["array"]]],[11,"mapv","","Call `f` by value on each element and create a new array…",17,[[["self"],["f"]],["array"]]],[11,"mapv_into","","Call `f` by value on each element, update the array with…",17,[[["f"]],["self"]]],[11,"map_inplace","","Modify the array in place by calling `f` by mutable…",17,[[["self"],["f"]]]],[11,"mapv_inplace","","Modify the array in place by calling `f` by value on each…",17,[[["self"],["f"]]]],[11,"visit","","Visit each element in the array by calling `f` by…",17,[[["self"],["f"]]]],[11,"fold_axis","","Fold along an axis.",17,[[["f"],["axis"],["self"],["b"]],["array"]]],[11,"map_axis","","Reduce the values along an axis into just one value,…",17,[[["axis"],["self"],["f"]],["array"]]],[11,"map_axis_mut","","Reduce the values along an axis into just one value,…",17,[[["self"],["axis"],["f"]],["array"]]],[11,"accumulate_axis_inplace","","Iterates over pairs of consecutive elements along the axis.",17,[[["self"],["axis"],["f"]]]],[11,"into_scalar","","Returns the single element in the array without cloning it.",17,[[],["a"]]],[11,"into_raw_vec","","Return a vector of the elements in the array, in the way…",17,[[],["vec"]]],[11,"assume_init","","Promise that the array's elements are all fully…",17,[[],["arraybase"]]],[0,"parallel","","Parallelization features for ndarray.",null,null],[3,"Parallel","ndarray::parallel","Parallel iterator wrapper.",null,null],[0,"prelude","","Into- traits for creating parallelized iterators and/or…",null,null],[11,"par_map_inplace","ndarray","Parallel version of `map_inplace`.",17,[[["self"],["f"]]]],[11,"par_mapv_inplace","","Parallel version of `mapv_inplace`.",17,[[["self"],["f"]]]],[11,"par_apply","","The `par_apply` method for `Zip`.",15,[[["f"]]]],[11,"par_apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array"]]],[11,"par_apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[["q"]]]],[11,"par_apply","","The `par_apply` method for `Zip`.",15,[[["f"]]]],[11,"par_apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array"]]],[11,"par_apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[["q"]]]],[11,"par_apply","","The `par_apply` method for `Zip`.",15,[[["f"]]]],[11,"par_apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array"]]],[11,"par_apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[["q"]]]],[11,"par_apply","","The `par_apply` method for `Zip`.",15,[[["f"]]]],[11,"par_apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array"]]],[11,"par_apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[["q"]]]],[11,"par_apply","","The `par_apply` method for `Zip`.",15,[[["f"]]]],[11,"par_apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array"]]],[11,"par_apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[["q"]]]],[11,"par_apply","","The `par_apply` method for `Zip`.",15,[[["f"]]]],[11,"to_vec","","Return an vector with the elements of the one-dimensional…",17,[[["self"]],["vec"]]],[11,"row","","Return an array view of row `index`.",17,[[["ix"],["self"]],["arrayview1"]]],[11,"row_mut","","Return a mutable array view of row `index`.",17,[[["ix"],["self"]],["arrayviewmut1"]]],[11,"nrows","","Return the number of rows (length of `Axis(0)`) in the…",17,[[["self"]],["usize"]]],[11,"rows","","Return the number of rows (length of `Axis(0)`) in the…",17,[[["self"]],["usize"]]],[11,"column","","Return an array view of column `index`.",17,[[["ix"],["self"]],["arrayview1"]]],[11,"column_mut","","Return a mutable array view of column `index`.",17,[[["ix"],["self"]],["arrayviewmut1"]]],[11,"ncols","","Return the number of columns (length of `Axis(1)`) in the…",17,[[["self"]],["usize"]]],[11,"cols","","Return the number of columns (length of `Axis(1)`) in the…",17,[[["self"]],["usize"]]],[11,"is_square","","Return true if the array is square, false otherwise.",17,[[["self"]],["bool"]]],[11,"insert_axis_inplace","","Insert new array axis of length 1 at `axis`, modifying the…",17,[[["self"],["axis"]]]],[11,"index_axis_inplace","","Collapses the array to `index` along the axis and removes…",17,[[["self"],["axis"],["usize"]]]],[11,"sum","","Return the sum of all elements in the array.",17,[[["self"]],["a"]]],[11,"mean","","Returns the [arithmetic mean] x̅ of all elements in the…",17,[[["self"]],["option"]]],[11,"scalar_sum","","Return the sum of all elements in the array.",17,[[["self"]],["a"]]],[11,"product","","Return the product of all elements in the array.",17,[[["self"]],["a"]]],[11,"sum_axis","","Return sum along `axis`.",17,[[["axis"],["self"]],["array"]]],[11,"mean_axis","","Return mean along `axis`.",17,[[["axis"],["self"]],[["array"],["option",["array"]]]]],[11,"var_axis","","Return variance along `axis`.",17,[[["a"],["axis"],["self"]],["array"]]],[11,"std_axis","","Return standard deviation along `axis`.",17,[[["a"],["axis"],["self"]],["array"]]],[11,"all_close","","Return `true` if the arrays' elementwise differences are…",17,[[["a"],["self"],["arraybase"]],["bool"]]],[0,"linalg","","Linear algebra.",null,null],[5,"general_mat_mul","ndarray::linalg","General matrix-matrix multiplication.",null,[[["a"],["arraybase"],["arraybase"],["arraybase"]]]],[5,"general_mat_vec_mul","","General matrix-vector multiplication.",null,[[["a"],["arraybase"],["arraybase"],["arraybase"]]]],[11,"dot","ndarray","Perform dot product or matrix multiplication of arrays…",17,[[["rhs"],["self"]]]],[11,"dot","","Perform matrix multiplication of rectangular arrays `self`…",17,[[["rhs"],["self"]]]],[11,"scaled_add","","Perform the operation `self += alpha * rhs` efficiently,…",17,[[["a"],["self"],["arraybase"]]]],[8,"Dot","ndarray::linalg","Matrix Multiplication",null,null],[16,"Output","","The result of the operation.",18,null],[10,"dot","","",18,[[["rhs"],["self"]]]],[11,"from_shape","ndarray","Create a read-only array view borrowing its data from a…",17,[[["sh"]],[["result",["shapeerror"]],["shapeerror"]]]],[11,"from_shape_ptr","","Create an `ArrayView<A, D>` from shape information and a…",17,[[["sh"]],["self"]]],[11,"from_shape","","Create a read-write array view borrowing its data from a…",17,[[["sh"]],[["result",["shapeerror"]],["shapeerror"]]]],[11,"from_shape_ptr","","Create an `ArrayViewMut<A, D>` from shape information and…",17,[[["sh"]],["self"]]],[11,"reborrow","","Convert the view into an `ArrayViewMut<'b, A, D>` where…",17,[[],["arrayviewmut"]]],[11,"reborrow","","Convert the view into an `ArrayView<'b, A, D>` where `'b`…",17,[[],["arrayview"]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",17,[[["self"]],["option"]]],[11,"to_slice","","Return the array’s data as a slice, if it is contiguous…",17,[[["self"]],["option"]]],[11,"into_scalar","","Consume the view and return a reference to the single…",17,[[],["a"]]],[11,"into_scalar","","Consume the mutable view and return a mutable reference to…",17,[[],["a"]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",17,[[],["option"]]],[11,"split_at","","Split the array view along `axis` and return one view…",17,[[["ix"],["axis"]]]],[11,"split_at","","Split the array view along `axis` and return one mutable…",17,[[["ix"],["axis"]]]],[11,"multi_slice_move","","Split the view into multiple disjoint slices.",17,[[["m"]]]],[11,"from_shape_ptr","","Create an `RawArrayView<A, D>` from shape information and…",17,[[["sh"]],["self"]]],[11,"deref_into_view","","Converts to a read-only view of the array.",17,[[],["arrayview"]]],[11,"split_at","","Split the array view along `axis` and return one array…",17,[[["ix"],["axis"]]]],[11,"cast","","Cast the raw pointer of the raw array view to a different…",17,[[],["rawarrayview"]]],[11,"from_shape_ptr","","Create an `RawArrayViewMut<A, D>` from shape information…",17,[[["sh"]],["self"]]],[11,"deref_into_view","","Converts to a read-only view of the array.",17,[[],["arrayview"]]],[11,"deref_into_view_mut","","Converts to a mutable view of the array.",17,[[],["arrayviewmut"]]],[11,"split_at","","Split the array view along `axis` and return one array…",17,[[["ix"],["axis"]]]],[11,"cast","","Cast the raw pointer of the raw array view to a different…",17,[[],["rawarrayviewmut"]]],[11,"is_view","","Returns `true` iff the array is the view (borrowed) variant.",17,[[["self"]],["bool"]]],[11,"is_owned","","Returns `true` iff the array is the owned variant.",17,[[["self"]],["bool"]]],[6,"Ix0","","zero-dimensionial",null,null],[6,"Ix1","","one-dimensional",null,null],[6,"Ix2","","two-dimensional",null,null],[6,"Ix3","","three-dimensional",null,null],[6,"Ix4","","four-dimensional",null,null],[6,"Ix5","","five-dimensional",null,null],[6,"Ix6","","six-dimensional",null,null],[6,"IxDyn","","dynamic-dimensional",null,null],[6,"Array0","","zero-dimensional array",null,null],[6,"Array1","","one-dimensional array",null,null],[6,"Array2","","two-dimensional array",null,null],[6,"Array3","","three-dimensional array",null,null],[6,"Array4","","four-dimensional array",null,null],[6,"Array5","","five-dimensional array",null,null],[6,"Array6","","six-dimensional array",null,null],[6,"ArrayD","","dynamic-dimensional array",null,null],[6,"ArrayView0","","zero-dimensional array view",null,null],[6,"ArrayView1","","one-dimensional array view",null,null],[6,"ArrayView2","","two-dimensional array view",null,null],[6,"ArrayView3","","three-dimensional array view",null,null],[6,"ArrayView4","","four-dimensional array view",null,null],[6,"ArrayView5","","five-dimensional array view",null,null],[6,"ArrayView6","","six-dimensional array view",null,null],[6,"ArrayViewD","","dynamic-dimensional array view",null,null],[6,"ArrayViewMut0","","zero-dimensional read-write array view",null,null],[6,"ArrayViewMut1","","one-dimensional read-write array view",null,null],[6,"ArrayViewMut2","","two-dimensional read-write array view",null,null],[6,"ArrayViewMut3","","three-dimensional read-write array view",null,null],[6,"ArrayViewMut4","","four-dimensional read-write array view",null,null],[6,"ArrayViewMut5","","five-dimensional read-write array view",null,null],[6,"ArrayViewMut6","","six-dimensional read-write array view",null,null],[6,"ArrayViewMutD","","dynamic-dimensional read-write array view",null,null],[6,"RcArray1","","one-dimensional shared ownership array",null,null],[6,"RcArray2","","two-dimensional shared ownership array",null,null],[6,"ArcArray1","","one-dimensional shared ownership array",null,null],[6,"ArcArray2","","two-dimensional shared ownership array",null,null],[6,"Ix","","Array index type",null,null],[6,"Ixs","","Array index type (signed)",null,null],[6,"RcArray","","An array where the data has shared ownership and is copy…",null,null],[6,"ArcArray","","An array where the data has shared ownership and is copy…",null,null],[6,"Array","","An array that owns its data uniquely.",null,null],[6,"CowArray","","An array with copy-on-write behavior.",null,null],[6,"ArrayView","","A read-only array view.",null,null],[6,"ArrayViewMut","","A read-write array view.",null,null],[6,"RawArrayView","","A read-only array view without a lifetime.",null,null],[6,"RawArrayViewMut","","A mutable array view without a lifetime.",null,null],[8,"Dimension","","Array shape and index trait.",null,null],[18,"NDIM","","For fixed-size dimension representations (e.g. `Ix2`),…",19,null],[16,"SliceArg","","`SliceArg` is the type which is used to specify slicing…",19,null],[16,"Pattern","","Pattern matching friendly form of the dimension value.",19,null],[16,"Smaller","","Next smaller dimension (if applicable)",19,null],[16,"Larger","","Next larger dimension",19,null],[10,"ndim","","Returns the number of dimensions (number of axes).",19,[[["self"]],["usize"]]],[10,"into_pattern","","Convert the dimension into a pattern matching friendly…",19,[[]]],[11,"size","","Compute the size of the dimension (number of elements)",19,[[["self"]],["usize"]]],[11,"size_checked","","Compute the size while checking for overflow.",19,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"as_array_view","","Borrow as a read-only array view.",19,[[["self"]],[["ix"],["arrayview1",["ix"]]]]],[11,"as_array_view_mut","","Borrow as a read-write array view.",19,[[["self"]],[["ix"],["arrayviewmut1",["ix"]]]]],[10,"zeros","","Creates a dimension of all zeros with the specified ndim.",19,[[["usize"]],["self"]]],[11,"into_dyn","","Convert the dimensional into a dynamic dimensional (IxDyn).",19,[[],["ixdyn"]]],[10,"__private__","","This trait is private to implement; this method exists to…",19,[[["self"]],["privatemarker"]]],[8,"IntoDimension","","Argument conversion a dimension.",null,null],[16,"Dim","","",20,null],[10,"into_dimension","","",20,[[]]],[8,"RemoveAxis","","Array shape with a next smaller dimension.",null,null],[10,"remove_axis","","",21,[[["axis"],["self"]]]],[8,"NdIndex","","Tuple or fixed size arrays that can be used to index an…",null,null],[8,"AsArray","","Argument conversion into an array view",null,null],[8,"LinalgScalar","","Elements that support linear algebra operations.",null,null],[8,"NdFloat","","Floating-point element types `f32` and `f64`.",null,null],[8,"IndexLonger","","Extra indexing methods for array views",null,null],[16,"Output","","The type of the reference to the element that is produced,…",22,null],[10,"index","","Get a reference of a element through the view.",22,[[["i"]]]],[10,"get","","Get a reference of a element through the view.",22,[[["i"]],["option"]]],[10,"uget","","Get a reference of a element through the view without…",22,[[["i"]]]],[8,"ShapeBuilder","","A trait for `Shape` and `D where D: Dimension` that allows…",null,null],[16,"Dim","","",23,null],[16,"Strides","","",23,null],[10,"into_shape","","",23,[[],["shape"]]],[10,"f","","",23,[[],["shape"]]],[10,"set_f","","",23,[[["bool"]],["shape"]]],[10,"strides","","",23,[[],["strideshape"]]],[8,"AssignElem","","A producer element that can be assigned to once",null,null],[10,"assign_elem","","Assign the value `input` to the element that self…",24,[[["t"]]]],[8,"Data","","Array representation trait.",null,null],[8,"DataClone","","Array representation trait.",null,null],[8,"DataMut","","Array representation trait.",null,null],[8,"DataOwned","","Array representation trait.",null,null],[8,"DataShared","","Array representation trait.",null,null],[8,"RawData","","Array representation trait.",null,null],[16,"Elem","","The array element type.",25,null],[10,"__private__","","This trait is private to implement; this method exists to…",25,[[["self"]],["privatemarker"]]],[8,"RawDataClone","","Array representation trait.",null,null],[8,"RawDataMut","","Array representation trait.",null,null],[8,"RawDataSubst","","Array representation trait.",null,null],[16,"Output","","The resulting array storage of the same kind but…",26,null],[8,"FixedInitializer","","Fixed-size array used for array initialization",null,null],[16,"Elem","","",27,null],[10,"as_init_slice","","",27,[[["self"]]]],[10,"len","","",27,[[],["usize"]]],[8,"IntoNdProducer","","Argument conversion into a producer.",null,null],[16,"Item","","The element produced per iteration.",28,null],[16,"Dim","","Dimension type of the producer",28,null],[16,"Output","","",28,null],[10,"into_producer","","Convert the value into an `NdProducer`.",28,[[]]],[8,"NdProducer","","A producer of an n-dimensional set of elements; for…",null,null],[16,"Item","","The element produced per iteration.",29,null],[16,"Dim","","Dimension type",29,null],[10,"__private__","","This trait is private to implement; this method exists to…",29,[[["self"]],["privatemarker"]]],[8,"ScalarOperand","","Elements that can be used as direct operands in arithmetic…",null,null],[11,"is_view","","Returns `true` iff the data is the `View` variant.",7,[[["self"]],["bool"]]],[11,"is_owned","","Returns `true` iff the data is the `Owned` variant.",7,[[["self"]],["bool"]]],[14,"array","","Create an `Array` with one, two or three dimensions.",null,null],[14,"s","","Slice argument constructor.",null,null],[14,"stack","","Stack arrays along the given axis.",null,null],[14,"azip","","Array zip macro: lock step function application across…",null,null],[14,"par_azip","","Parallelized array zip macro: lock step function…",null,null],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"into_par_iter","","",15,[[],["t"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"into_par_iter","","",17,[[],["t"]]],[11,"par_iter","","",17,[[["self"]]]],[11,"par_iter_mut","","",17,[[["self"]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","ndarray::iter","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"into_iter","","",36,[[],["i"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"par_bridge","","",36,[[],["iterbridge"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"par_bridge","","",38,[[],["iterbridge"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"par_bridge","","",11,[[],["iterbridge"]]],[11,"into_par_iter","","",11,[[],["t"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"par_bridge","","",12,[[],["iterbridge"]]],[11,"into_par_iter","","",12,[[],["t"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"par_bridge","","",9,[[],["iterbridge"]]],[11,"into_par_iter","","",9,[[],["t"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"par_bridge","","",10,[[],["iterbridge"]]],[11,"into_par_iter","","",10,[[],["t"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"into_iter","","",39,[[],["i"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"into_iter","","",40,[[],["i"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"par_bridge","","",40,[[],["iterbridge"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"par_bridge","","",41,[[],["iterbridge"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"into_iter","","",42,[[],["i"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"into_iter","","",43,[[],["i"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"par_bridge","","",43,[[],["iterbridge"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"into_iter","","",44,[[],["i"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"par_bridge","","",44,[[],["iterbridge"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"par_bridge","","",45,[[],["iterbridge"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"into_iter","","",46,[[],["i"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"par_bridge","","",46,[[],["iterbridge"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"into_iter","","",47,[[],["i"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"into_iter","","",48,[[],["i"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"par_bridge","","",48,[[],["iterbridge"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"into_iter","","",49,[[],["i"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"par_bridge","","",49,[[],["iterbridge"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"into_iter","","",50,[[],["i"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"into_iter","","",51,[[],["i"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","ndarray::parallel","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"into_par_iter","","",52,[[],["t"]]],[11,"_data_slice","ndarray","",33,[[["self"]],["option"]]],[11,"_data_slice","","",33,[[["self"]],["option"]]],[11,"_data_slice","","",32,[[["self"]],["option"]]],[11,"_data_slice","","",31,[[["self"]],["option"]]],[11,"_data_slice","","",34,[[["self"]],["option"]]],[11,"_data_slice","","",34,[[["self"]],["option"]]],[11,"_data_slice","","",7,[[["self"]],["option"]]],[11,"try_ensure_unique","","",33,[[["arraybase"]]]],[11,"try_is_unique","","",33,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"try_ensure_unique","","",32,[[["arraybase"]]]],[11,"try_is_unique","","",32,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"try_ensure_unique","","",31,[[["arraybase"]]]],[11,"try_is_unique","","",31,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"try_ensure_unique","","",34,[[["arraybase"]]]],[11,"try_is_unique","","",34,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"try_ensure_unique","","",7,[[["arraybase"]]]],[11,"try_is_unique","","",7,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"clone_with_ptr","","",33,[[["nonnull"],["self"]]]],[11,"clone_with_ptr","","",33,[[["nonnull"],["self"]]]],[11,"clone_with_ptr","","",32,[[["nonnull"],["self"]]]],[11,"clone_with_ptr","","",31,[[["nonnull"],["self"]]]],[11,"clone_from_with_ptr","","",31,[[["nonnull"],["self"],["self"]],["nonnull"]]],[11,"clone_with_ptr","","",34,[[["nonnull"],["self"]]]],[11,"clone_with_ptr","","",7,[[["nonnull"],["self"]]]],[11,"into_owned","","",32,[[["arraybase"]],[["ownedrepr"],["arraybase",["ownedrepr"]]]]],[11,"into_owned","","",31,[[["arraybase"]],[["ownedrepr"],["arraybase",["ownedrepr"]]]]],[11,"into_owned","","",34,[[["arraybase"]],[["ownedrepr"],["arraybase",["ownedrepr"]]]]],[11,"into_owned","","",34,[[["arraybase"]],[["ownedrepr"],["arraybase",["ownedrepr"]]]]],[11,"into_owned","","",7,[[["arraybase",["cowrepr"]],["cowrepr"]],[["ownedrepr"],["arraybase",["ownedrepr"]]]]],[11,"new","","",31,[[["vec"]],["self"]]],[11,"into_shared","","",31,[[],["ownedrcrepr"]]],[11,"new","","",32,[[["vec"]],["self"]]],[11,"into_shared","","",32,[[],["ownedrcrepr"]]],[11,"into_shape","","",13,[[],["shape"]]],[11,"f","","",13,[[],["self"]]],[11,"set_f","","",13,[[["bool"]],["self"]]],[11,"strides","","",13,[[["d"]],["strideshape"]]],[11,"contiguous_stride","ndarray::iter","",37,[[["self"]]]],[11,"contiguous_stride","","",9,[[["self"]],["isize"]]],[11,"contiguous_stride","","",10,[[["self"]],["isize"]]],[11,"contiguous_stride","ndarray","",53,[[["self"]]]],[11,"contiguous_stride","","",54,[[["self"]]]],[11,"contiguous_stride","","",55,[[["self"]]]],[11,"contiguous_stride","","",56,[[["self"]]]],[11,"into_dimension","","",57,[[],["ix1"]]],[11,"into_dimension","","",30,[[]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"_fastest_varying_stride_order","","",16,[[["self"]],["self"]]],[11,"into_pattern","","",16,[[]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"next_for","","",16,[[["self"]],["option"]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"into_pattern","","",16,[[]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"next_for","","",16,[[["self"]],["option"]]],[11,"equal","","",16,[[["self"]],["bool"]]],[11,"size","","",16,[[["self"]],["usize"]]],[11,"size_checked","","",16,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"default_strides","","",16,[[["self"]],["self"]]],[11,"_fastest_varying_stride_order","","",16,[[["self"]],["self"]]],[11,"min_stride_axis","","",16,[[["self"]],["axis"]]],[11,"max_stride_axis","","",16,[[["self"]],["axis"]]],[11,"first_index","","",16,[[["self"]],["option"]]],[11,"stride_offset","","Self is an index, return the stride offset",16,[[["self"]],["isize"]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",16,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"next_for","","",16,[[["self"]],["option"]]],[11,"equal","","",16,[[["self"]],["bool"]]],[11,"size","","",16,[[["self"]],["usize"]]],[11,"size_checked","","",16,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"last_elem","","",16,[[["self"]],["usize"]]],[11,"set_last_elem","","",16,[[["self"],["usize"]]]],[11,"default_strides","","",16,[[["self"]],["self"]]],[11,"fortran_strides","","",16,[[["self"]],["self"]]],[11,"_fastest_varying_stride_order","","",16,[[["self"]],["self"]]],[11,"min_stride_axis","","",16,[[["self"]],["axis"]]],[11,"first_index","","",16,[[["self"]],["option"]]],[11,"stride_offset","","Self is an index, return the stride offset",16,[[["self"]],["isize"]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",16,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"size","","",16,[[["self"]],["usize"]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"next_for","","",16,[[["self"]],["option"]]],[11,"stride_offset","","Self is an index, return the stride offset",16,[[["self"]],["isize"]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",16,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"_fastest_varying_stride_order","","",16,[[["self"]],["self"]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",58,[[["self"]],["usize"]]],[11,"slice","","",58,[[["self"]]]],[11,"slice_mut","","",58,[[["self"]]]],[11,"into_pattern","","",58,[[]]],[11,"zeros","","",58,[[["usize"]],["self"]]],[11,"insert_axis","","",58,[[["axis"],["self"]]]],[11,"try_remove_axis","","",58,[[["axis"],["self"]]]],[11,"from_dimension","","",58,[[["d2"]],["option"]]],[11,"index_checked","","",57,[[["self"],["ix1"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",57,[[["self"],["ix1"]],["isize"]]],[11,"index_checked","","",57,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",57,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"remove_axis","","",16,[[["axis"],["self"]],["self"]]],[11,"remove_axis","","",16,[[["axis"],["self"]],["ix0"]]],[11,"remove_axis","","",16,[[["axis"],["self"]],["ix1"]]],[11,"remove_axis","","",16,[[["axis"],["self"]]]],[11,"remove_axis","","",16,[[["axis"],["self"]]]],[11,"remove_axis","","",16,[[["axis"],["self"]]]],[11,"remove_axis","","",16,[[["axis"],["self"]]]],[11,"dot","","Compute the dot product of one-dimensional arrays.",17,[[["arraybase"],["self"]],["a"]]],[11,"dot","","Perform the matrix multiplication of the row vector `self`…",17,[[["arraybase"],["self"]],[["ix1"],["array",["ix1"]]]]],[11,"dot","","",17,[[["arraybase"],["self"]],["array2"]]],[11,"dot","","",17,[[["arraybase"],["self"]],[["ix1"],["array",["ix1"]]]]],[11,"index","","Convert a mutable array view to a mutable reference of a…",54,[[["i"]],["a"]]],[11,"get","","Convert a mutable array view to a mutable reference of a…",54,[[["i"]],[["option"],["a"]]]],[11,"uget","","Convert a mutable array view to a mutable reference of a…",54,[[["i"]],["a"]]],[11,"drop","","",31,[[["self"]]]],[11,"as_ref","","",14,[[["self"]]]],[11,"as_ref","","",14,[[["self"]],["sliceinfo"]]],[11,"from","","Create a one-dimensional array from a vector (no copying…",17,[[["vec"]],["self"]]],[11,"from","","Create a one-dimensional read-only array view of the data…",53,[[["slice"]],["self"]]],[11,"from","","Create a read-only array view of the array.",53,[[["arraybase"]],["self"]]],[11,"from","","Create a one-dimensional read-write array view of the data…",54,[[["slice"]],["self"]]],[11,"from","","Create a read-write array view of the array.",54,[[["arraybase"]],["self"]]],[11,"from","","Converts the `Vec` of arrays to an owned 2-D array.",59,[[["vec"]],["self"]]],[11,"from","","Converts the `Vec` of arrays to an owned 3-D array.",60,[[["vec"]],["self"]]],[11,"from","","Create a `Shape` from `dimension`, using the default…",13,[[["d"]],["shape"]]],[11,"from","","",35,[[["t"]],["self"]]],[11,"from","","",2,[[["range",["isize"]],["isize"]],["slice"]]],[11,"from","","",2,[[["isize"],["rangeinclusive",["isize"]]],["slice"]]],[11,"from","","",2,[[["isize"],["rangefrom",["isize"]]],["slice"]]],[11,"from","","",2,[[["isize"],["rangeto",["isize"]]],["slice"]]],[11,"from","","",2,[[["isize"],["rangetoinclusive",["isize"]]],["slice"]]],[11,"from","","",2,[[["range",["usize"]],["usize"]],["slice"]]],[11,"from","","",2,[[["rangeinclusive",["usize"]],["usize"]],["slice"]]],[11,"from","","",2,[[["rangefrom",["usize"]],["usize"]],["slice"]]],[11,"from","","",2,[[["rangeto",["usize"]],["usize"]],["slice"]]],[11,"from","","",2,[[["rangetoinclusive",["usize"]],["usize"]],["slice"]]],[11,"from","","",2,[[["range",["i32"]],["i32"]],["slice"]]],[11,"from","","",2,[[["rangeinclusive",["i32"]],["i32"]],["slice"]]],[11,"from","","",2,[[["rangefrom",["i32"]],["i32"]],["slice"]]],[11,"from","","",2,[[["rangeto",["i32"]],["i32"]],["slice"]]],[11,"from","","",2,[[["rangetoinclusive",["i32"]],["i32"]],["slice"]]],[11,"from","","",4,[[["range",["isize"]],["isize"]],["sliceorindex"]]],[11,"from","","",4,[[["isize"],["rangeinclusive",["isize"]]],["sliceorindex"]]],[11,"from","","",4,[[["isize"],["rangefrom",["isize"]]],["sliceorindex"]]],[11,"from","","",4,[[["isize"],["rangeto",["isize"]]],["sliceorindex"]]],[11,"from","","",4,[[["isize"],["rangetoinclusive",["isize"]]],["sliceorindex"]]],[11,"from","","",4,[[["range",["usize"]],["usize"]],["sliceorindex"]]],[11,"from","","",4,[[["rangeinclusive",["usize"]],["usize"]],["sliceorindex"]]],[11,"from","","",4,[[["rangefrom",["usize"]],["usize"]],["sliceorindex"]]],[11,"from","","",4,[[["rangeto",["usize"]],["usize"]],["sliceorindex"]]],[11,"from","","",4,[[["rangetoinclusive",["usize"]],["usize"]],["sliceorindex"]]],[11,"from","","",4,[[["range",["i32"]],["i32"]],["sliceorindex"]]],[11,"from","","",4,[[["rangeinclusive",["i32"]],["i32"]],["sliceorindex"]]],[11,"from","","",4,[[["rangefrom",["i32"]],["i32"]],["sliceorindex"]]],[11,"from","","",4,[[["rangeto",["i32"]],["i32"]],["sliceorindex"]]],[11,"from","","",4,[[["rangetoinclusive",["i32"]],["i32"]],["sliceorindex"]]],[11,"from","","",2,[[["rangefull"]],["slice"]]],[11,"from","","",4,[[["rangefull"]],["sliceorindex"]]],[11,"from","","",4,[[["slice"]],["sliceorindex"]]],[11,"from","","",4,[[["isize"]],["sliceorindex"]]],[11,"from","","",4,[[["usize"]],["sliceorindex"]]],[11,"from","","",4,[[["i32"]],["sliceorindex"]]],[11,"from","","",30,[[],["self"]]],[11,"from","","",30,[[["vec",["ix"]],["ix"]],["self"]]],[11,"from","","",61,[[["arrayview"]],["cowarray"]]],[11,"from","","",61,[[["array"]],["cowarray"]]],[11,"next_back","ndarray::iter","",45,[[["self"]],[["option"],["a"]]]],[11,"nth_back","","",45,[[["self"],["usize"]],[["option"],["a"]]]],[11,"rfold","","",45,[[["acc"],["g"]],["acc"]]],[11,"next_back","","",46,[[["self"]],[["option"],["a"]]]],[11,"nth_back","","",46,[[["self"],["usize"]],[["option"],["a"]]]],[11,"rfold","","",46,[[["acc"],["g"]],["acc"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",36,[[["self"]],["option"]]],[11,"len","","",45,[[["self"]],["usize"]]],[11,"len","","",43,[[["self"]],["usize"]]],[11,"len","","",46,[[["self"]],["usize"]]],[11,"len","","",44,[[["self"]],["usize"]]],[11,"len","","",48,[[["self"]],["usize"]]],[11,"len","","",49,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"into_iter","ndarray","",53,[[]]],[11,"into_iter","","",54,[[]]],[11,"into_iter","ndarray::iter","",37,[[]]],[11,"into_iter","","",39,[[]]],[11,"into_iter","","",42,[[]]],[11,"into_iter","","",47,[[]]],[11,"into_iter","","",50,[[]]],[11,"into_iter","","",51,[[]]],[11,"next","","",38,[[["self"]],["option"]]],[11,"size_hint","","",38,[[["self"]]]],[11,"fold","","",38,[[["b"],["f"]],["b"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"size_hint","","",40,[[["self"]]]],[11,"next","","",41,[[["self"]],["option"]]],[11,"size_hint","","",41,[[["self"]]]],[11,"next","","",45,[[["self"]],[["option"],["a"]]]],[11,"size_hint","","",45,[[["self"]]]],[11,"fold","","",45,[[["acc"],["g"]],["acc"]]],[11,"nth","","",45,[[["self"],["usize"]],["option"]]],[11,"collect","","",45,[[],["b"]]],[11,"all","","",45,[[["self"],["f"]],["bool"]]],[11,"any","","",45,[[["self"],["f"]],["bool"]]],[11,"find","","",45,[[["self"],["p"]],["option"]]],[11,"find_map","","",45,[[["self"],["f"]],["option"]]],[11,"count","","",45,[[],["usize"]]],[11,"last","","",45,[[],["option"]]],[11,"position","","",45,[[["self"],["p"]],[["usize"],["option",["usize"]]]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next","","",46,[[["self"]],[["option"],["a"]]]],[11,"size_hint","","",46,[[["self"]]]],[11,"fold","","",46,[[["acc"],["g"]],["acc"]]],[11,"nth","","",46,[[["self"],["usize"]],["option"]]],[11,"collect","","",46,[[],["b"]]],[11,"all","","",46,[[["self"],["f"]],["bool"]]],[11,"any","","",46,[[["self"],["f"]],["bool"]]],[11,"find","","",46,[[["self"],["p"]],["option"]]],[11,"find_map","","",46,[[["self"],["f"]],["option"]]],[11,"count","","",46,[[],["usize"]]],[11,"last","","",46,[[],["option"]]],[11,"position","","",46,[[["self"],["p"]],[["usize"],["option",["usize"]]]]],[11,"next","","",44,[[["self"]],["option"]]],[11,"size_hint","","",44,[[["self"]]]],[11,"next","","",48,[[["self"]],["option"]]],[11,"size_hint","","",48,[[["self"]]]],[11,"next","","",49,[[["self"]],["option"]]],[11,"size_hint","","",49,[[["self"]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,[[["self"]]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,[[["self"]]]],[11,"next","","",36,[[["self"]],["option"]]],[11,"fold","","",36,[[["b"],["f"]],["b"]]],[11,"size_hint","","",36,[[["self"]]]],[11,"clone","ndarray","",31,[[["self"]],["self"]]],[11,"clone_from","","",31,[[["self"],["self"]]]],[11,"clone","","",8,[[["self"]],["shapeerror"]]],[11,"clone","","",3,[[["self"]],["errorkind"]]],[11,"clone","ndarray::iter","",38,[[["self"]],["indicesiter"]]],[11,"clone","","",37,[[["self"]],["indices"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",51,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["indexediter"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"clone","","",11,[[["self"]],["self"]]],[11,"clone","ndarray","",2,[[["self"]],["slice"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone","","",14,[[["self"]],["self"]]],[11,"clone","","",15,[[["self"]],["zip"]]],[11,"clone","","",6,[[["self"]],["foldwhile"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","ndarray::iter","",36,[[["self"]],["self"]]],[11,"clone","ndarray","",0,[[["self"]],["axis"]]],[11,"clone","","",16,[[["self"]],["dim"]]],[11,"clone","","",30,[[["self"]],["ixdynimpl"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["rawviewrepr"]]],[11,"clone","","",34,[[["self"]],["viewrepr"]]],[11,"clone","","",17,[[["self"]],["arraybase"]]],[11,"clone_from","","`Array` implements `.clone_from()` to reuse an array's…",17,[[["self"],["self"]]]],[11,"clone","ndarray::parallel","",52,[[["self"]],["parallel"]]],[11,"clone","ndarray","",13,[[["self"]],["shape"]]],[11,"clone","","",35,[[["self"]],["strideshape"]]],[11,"default","","",17,[[],["self"]]],[11,"default","","",16,[[],["dim"]]],[11,"default","","",30,[[],["ixdynimpl"]]],[11,"cmp","","",0,[[["axis"],["self"]],["ordering"]]],[11,"eq","","",17,[[["arraybase"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","",8,[[["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["slice"]],["bool"]]],[11,"ne","","",2,[[["self"],["slice"]],["bool"]]],[11,"eq","","",4,[[["self"],["sliceorindex"]],["bool"]]],[11,"ne","","",4,[[["self"],["sliceorindex"]],["bool"]]],[11,"eq","","",0,[[["axis"],["self"]],["bool"]]],[11,"ne","","",0,[[["axis"],["self"]],["bool"]]],[11,"eq","","",16,[[["dim"],["self"]],["bool"]]],[11,"ne","","",16,[[["dim"],["self"]],["bool"]]],[11,"eq","","",16,[[["i"],["self"]],["bool"]]],[11,"eq","","",30,[[["self"],["ixdynimpl"]],["bool"]]],[11,"ne","","",30,[[["self"],["ixdynimpl"]],["bool"]]],[11,"partial_cmp","","",0,[[["axis"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["axis"],["self"]],["bool"]]],[11,"le","","",0,[[["axis"],["self"]],["bool"]]],[11,"gt","","",0,[[["axis"],["self"]],["bool"]]],[11,"ge","","",0,[[["axis"],["self"]],["bool"]]],[11,"deref","","",14,[[["self"]]]],[11,"deref","","",30,[[["self"]]]],[11,"deref_mut","","",30,[[["self"]]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","ndarray::iter","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","ndarray","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","ndarray::iter","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","ndarray","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","ndarray::parallel","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","ndarray","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"div","","",17,[[["arraybase"]],["arraybase"]]],[11,"div","","",17,[[["arraybase"]],["arraybase"]]],[11,"div","","",17,[[["b"]],["arraybase"]]],[11,"rem","","",17,[[["arraybase"]],["arraybase"]]],[11,"rem","","",17,[[["arraybase"]],["arraybase"]]],[11,"rem","","",17,[[["b"]],["arraybase"]]],[11,"sub","","",16,[[],["self"]]],[11,"sub","","",16,[[["ix"]],["self"]]],[11,"sub","","",17,[[["arraybase"]],["arraybase"]]],[11,"sub","","",17,[[["arraybase"]],["arraybase"]]],[11,"sub","","",17,[[["b"]],["arraybase"]]],[11,"add","","",16,[[],["self"]]],[11,"add","","",16,[[["ix"]],["self"]]],[11,"add","","",17,[[["arraybase"]],["arraybase"]]],[11,"add","","",17,[[["arraybase"]],["arraybase"]]],[11,"add","","",17,[[["b"]],["arraybase"]]],[11,"mul","","",16,[[],["self"]]],[11,"mul","","",16,[[["ix"]],["self"]]],[11,"mul","","",17,[[["arraybase"]],["arraybase"]]],[11,"mul","","",17,[[["arraybase"]],["arraybase"]]],[11,"mul","","",17,[[["b"]],["arraybase"]]],[11,"neg","","Perform an elementwise negation of `self` and return the…",17,[[],["self"]]],[11,"add_assign","","",16,[[["self"]]]],[11,"add_assign","","",16,[[["self"],["self"]]]],[11,"add_assign","","",16,[[["ix"],["self"]]]],[11,"add_assign","","",17,[[["self"],["arraybase"]]]],[11,"add_assign","","",17,[[["a"],["self"]]]],[11,"sub_assign","","",16,[[["self"]]]],[11,"sub_assign","","",16,[[["self"],["self"]]]],[11,"sub_assign","","",16,[[["ix"],["self"]]]],[11,"sub_assign","","",17,[[["self"],["arraybase"]]]],[11,"sub_assign","","",17,[[["a"],["self"]]]],[11,"mul_assign","","",16,[[["self"]]]],[11,"mul_assign","","",16,[[["self"],["self"]]]],[11,"mul_assign","","",16,[[["ix"],["self"]]]],[11,"mul_assign","","",17,[[["self"],["arraybase"]]]],[11,"mul_assign","","",17,[[["a"],["self"]]]],[11,"div_assign","","",17,[[["self"],["arraybase"]]]],[11,"div_assign","","",17,[[["a"],["self"]]]],[11,"rem_assign","","",17,[[["self"],["arraybase"]]]],[11,"rem_assign","","",17,[[["a"],["self"]]]],[11,"not","","Perform an elementwise unary not of `self` and return the…",17,[[],["self"]]],[11,"bitand","","",17,[[["arraybase"]],["arraybase"]]],[11,"bitand","","",17,[[["arraybase"]],["arraybase"]]],[11,"bitand","","",17,[[["b"]],["arraybase"]]],[11,"bitor","","",17,[[["arraybase"]],["arraybase"]]],[11,"bitor","","",17,[[["arraybase"]],["arraybase"]]],[11,"bitor","","",17,[[["b"]],["arraybase"]]],[11,"bitxor","","",17,[[["arraybase"]],["arraybase"]]],[11,"bitxor","","",17,[[["arraybase"]],["arraybase"]]],[11,"bitxor","","",17,[[["b"]],["arraybase"]]],[11,"shl","","",17,[[["arraybase"]],["arraybase"]]],[11,"shl","","",17,[[["arraybase"]],["arraybase"]]],[11,"shl","","",17,[[["b"]],["arraybase"]]],[11,"shr","","",17,[[["arraybase"]],["arraybase"]]],[11,"shr","","",17,[[["arraybase"]],["arraybase"]]],[11,"shr","","",17,[[["b"]],["arraybase"]]],[11,"bitand_assign","","",17,[[["self"],["arraybase"]]]],[11,"bitand_assign","","",17,[[["a"],["self"]]]],[11,"bitor_assign","","",17,[[["self"],["arraybase"]]]],[11,"bitor_assign","","",17,[[["a"],["self"]]]],[11,"bitxor_assign","","",17,[[["self"],["arraybase"]]]],[11,"bitxor_assign","","",17,[[["a"],["self"]]]],[11,"shl_assign","","",17,[[["self"],["arraybase"]]]],[11,"shl_assign","","",17,[[["a"],["self"]]]],[11,"shr_assign","","",17,[[["self"],["arraybase"]]]],[11,"shr_assign","","",17,[[["a"],["self"]]]],[11,"index","","",17,[[["i"],["self"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",30,[[["j"],["self"]]]],[11,"index_mut","","",17,[[["self"],["i"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",30,[[["j"],["self"]]]],[11,"hash","","",17,[[["self"],["h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"from_iter","","Create a one-dimensional array from an iterable.",17,[[["i"]],[["arraybase",["ix1"]],["ix1"]]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"serialize","","",16,[[["self"],["se"]],["result"]]],[11,"serialize","","",58,[[["self"],["se"]],["result"]]],[11,"serialize","","",17,[[["self"],["se"]],["result"]]],[11,"deserialize","","",16,[[["d"]],["result"]]],[11,"deserialize","","",58,[[["d"]],["result"]]],[11,"deserialize","","",17,[[["d"]],[["arraybase"],["result",["arraybase"]]]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"with_producer","ndarray::parallel","",52,[[["cb"]]]],[11,"len","","",52,[[["self"]],["usize"]]],[11,"drive","","",52,[[["c"]]]],[11,"with_producer","","",52,[[["cb"]]]],[11,"len","","",52,[[["self"]],["usize"]]],[11,"drive","","",52,[[["c"]]]],[11,"with_producer","","",52,[[["cb"]]]],[11,"len","","",52,[[["self"]],["usize"]]],[11,"drive","","",52,[[["c"]]]],[11,"with_producer","","",52,[[["cb"]]]],[11,"len","","",52,[[["self"]],["usize"]]],[11,"drive","","",52,[[["c"]]]],[11,"into_par_iter","ndarray::iter","",9,[[]]],[11,"into_par_iter","","",10,[[]]],[11,"into_par_iter","","",11,[[]]],[11,"into_par_iter","","",12,[[]]],[11,"into_par_iter","ndarray","",53,[[]]],[11,"into_par_iter","","",54,[[]]],[11,"into_par_iter","","",15,[[]]],[11,"into_par_iter","","",15,[[]]],[11,"into_par_iter","","",15,[[]]],[11,"into_par_iter","","",15,[[]]],[11,"into_par_iter","","",15,[[]]],[11,"into_par_iter","","",15,[[]]],[11,"drive_unindexed","ndarray::parallel","",52,[[["c"]]]],[11,"opt_len","","",52,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",52,[[["c"]]]],[11,"opt_len","","",52,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",52,[[["c"]]]],[11,"opt_len","","",52,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",52,[[["c"]]]],[11,"opt_len","","",52,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",52,[[["c"]]]],[11,"opt_len","","",52,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",52,[[["c"]]]],[11,"opt_len","","",52,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",52,[[["cons"]]]],[11,"opt_len","","",52,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",52,[[["cons"]]]],[11,"opt_len","","",52,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",52,[[["cons"]]]],[11,"opt_len","","",52,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",52,[[["cons"]]]],[11,"opt_len","","",52,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",52,[[["cons"]]]],[11,"opt_len","","",52,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",52,[[["cons"]]]],[11,"opt_len","","",52,[[["self"]],[["usize"],["option",["usize"]]]]],[18,"NDIM","ndarray","For fixed-size dimension representations (e.g. `Ix2`),…",19,null],[11,"size","","Compute the size of the dimension (number of elements)",19,[[["self"]],["usize"]]],[11,"size_checked","","Compute the size while checking for overflow.",19,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"as_array_view","","Borrow as a read-only array view.",19,[[["self"]],[["ix"],["arrayview1",["ix"]]]]],[11,"as_array_view_mut","","Borrow as a read-write array view.",19,[[["self"]],[["ix"],["arrayviewmut1",["ix"]]]]],[11,"into_dyn","","Convert the dimensional into a dynamic dimensional (IxDyn).",19,[[],["ixdyn"]]],[11,"zeros","","Create a new dimension value with `n` axes, all zeros",58,[[["usize"]],["ixdyn"]]],[11,"into_scalar","","Returns the single element in the array without cloning it.",62,[[],["a"]]],[11,"into_raw_vec","","Return a vector of the elements in the array, in the way…",62,[[],["vec"]]],[11,"from_shape","","Create a read-only array view borrowing its data from a…",53,[[["sh"]],[["result",["shapeerror"]],["shapeerror"]]]],[11,"from_shape_ptr","","Create an `ArrayView<A, D>` from shape information and a…",53,[[["sh"]],["self"]]],[11,"from_shape","","Create a read-write array view borrowing its data from a…",54,[[["sh"]],[["result",["shapeerror"]],["shapeerror"]]]],[11,"from_shape_ptr","","Create an `ArrayViewMut<A, D>` from shape information and…",54,[[["sh"]],["self"]]],[11,"reborrow","","Convert the view into an `ArrayViewMut<'b, A, D>` where…",54,[[],["arrayviewmut"]]],[11,"reborrow","","Convert the view into an `ArrayView<'b, A, D>` where `'b`…",53,[[],["arrayview"]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",53,[[["self"]],["option"]]],[11,"to_slice","","Return the array’s data as a slice, if it is contiguous…",53,[[["self"]],["option"]]],[11,"into_scalar","","Consume the view and return a reference to the single…",53,[[],["a"]]],[11,"into_scalar","","Consume the mutable view and return a mutable reference to…",54,[[],["a"]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",54,[[],["option"]]],[11,"split_at","","Split the array view along `axis` and return one view…",53,[[["ix"],["axis"]]]],[11,"split_at","","Split the array view along `axis` and return one mutable…",54,[[["ix"],["axis"]]]],[11,"multi_slice_move","","Split the view into multiple disjoint slices.",54,[[["m"]]]],[11,"from_shape_ptr","","Create an `RawArrayView<A, D>` from shape information and…",55,[[["sh"]],["self"]]],[11,"deref_into_view","","Converts to a read-only view of the array.",55,[[],["arrayview"]]],[11,"split_at","","Split the array view along `axis` and return one array…",55,[[["ix"],["axis"]]]],[11,"cast","","Cast the raw pointer of the raw array view to a different…",55,[[],["rawarrayview"]]],[11,"from_shape_ptr","","Create an `RawArrayViewMut<A, D>` from shape information…",56,[[["sh"]],["self"]]],[11,"deref_into_view","","Converts to a read-only view of the array.",56,[[],["arrayview"]]],[11,"deref_into_view_mut","","Converts to a mutable view of the array.",56,[[],["arrayviewmut"]]],[11,"split_at","","Split the array view along `axis` and return one array…",56,[[["ix"],["axis"]]]],[11,"cast","","Cast the raw pointer of the raw array view to a different…",56,[[],["rawarrayviewmut"]]],[11,"is_view","","Returns `true` iff the array is the view (borrowed) variant.",61,[[["self"]],["bool"]]],[11,"is_owned","","Returns `true` iff the array is the owned variant.",61,[[["self"]],["bool"]]]],"p":[[3,"Axis"],[3,"AxisDescription"],[3,"Slice"],[4,"ErrorKind"],[4,"SliceOrIndex"],[13,"Slice"],[4,"FoldWhile"],[4,"CowRepr"],[3,"ShapeError"],[3,"AxisIter"],[3,"AxisIterMut"],[3,"AxisChunksIter"],[3,"AxisChunksIterMut"],[3,"Shape"],[3,"SliceInfo"],[3,"Zip"],[3,"Dim"],[3,"ArrayBase"],[8,"Dot"],[8,"Dimension"],[8,"IntoDimension"],[8,"RemoveAxis"],[8,"IndexLonger"],[8,"ShapeBuilder"],[8,"AssignElem"],[8,"RawData"],[8,"RawDataSubst"],[8,"FixedInitializer"],[8,"IntoNdProducer"],[8,"NdProducer"],[3,"IxDynImpl"],[3,"OwnedRepr"],[3,"OwnedArcRepr"],[3,"RawViewRepr"],[3,"ViewRepr"],[3,"StrideShape"],[3,"Axes"],[3,"Indices"],[3,"IndicesIter"],[3,"ExactChunks"],[3,"ExactChunksIter"],[3,"ExactChunksIterMut"],[3,"ExactChunksMut"],[3,"IndexedIter"],[3,"IndexedIterMut"],[3,"Iter"],[3,"IterMut"],[3,"Lanes"],[3,"LanesIter"],[3,"LanesIterMut"],[3,"LanesMut"],[3,"Windows"],[3,"Parallel"],[6,"ArrayView"],[6,"ArrayViewMut"],[6,"RawArrayView"],[6,"RawArrayViewMut"],[6,"Ix"],[6,"IxDyn"],[6,"Array2"],[6,"Array3"],[6,"CowArray"],[6,"Array"]]};
searchIndex["ndarray_parallel"] = {"doc":"Parallelization features for ndarray.","i":[[3,"Parallel","ndarray_parallel","Parallel iterator wrapper.",null,null],[0,"prelude","","Into- traits for creating parallelized iterators.",null,null],[8,"NdarrayIntoParallelIterator","ndarray_parallel::prelude","",null,null],[16,"Iter","","",0,null],[16,"Item","","",0,null],[10,"into_par_iter","","",0,[[]]],[8,"NdarrayIntoParallelRefIterator","","",null,null],[16,"Iter","","",1,null],[16,"Item","","",1,null],[10,"par_iter","","",1,[[["self"]]]],[8,"NdarrayIntoParallelRefMutIterator","","",null,null],[16,"Iter","","",2,null],[16,"Item","","",2,null],[10,"par_iter_mut","","",2,[[["self"]]]],[8,"ParApply1","","The `par_apply` method for `Zip`.",null,null],[10,"par_apply","","",3,[[["f"]]]],[8,"ParApply2","","The `par_apply` method for `Zip`.",null,null],[10,"par_apply","","",4,[[["f"]]]],[8,"ParApply3","","The `par_apply` method for `Zip`.",null,null],[10,"par_apply","","",5,[[["f"]]]],[8,"ParApply4","","The `par_apply` method for `Zip`.",null,null],[10,"par_apply","","",6,[[["f"]]]],[8,"ParApply5","","The `par_apply` method for `Zip`.",null,null],[10,"par_apply","","",7,[[["f"]]]],[8,"ParApply6","","The `par_apply` method for `Zip`.",null,null],[10,"par_apply","","",8,[[["f"]]]],[8,"ParMap","","Parallel versions of `map_inplace` and `mapv_inplace`.",null,null],[16,"Item","","",9,null],[10,"par_map_inplace","","",9,[[["self"],["f"]]]],[10,"par_mapv_inplace","","",9,[[["self"],["f"]]]],[8,"NdarrayIntoParallelIterator","ndarray_parallel","",null,null],[16,"Iter","","",0,null],[16,"Item","","",0,null],[10,"into_par_iter","","",0,[[]]],[8,"NdarrayIntoParallelRefIterator","","",null,null],[16,"Iter","","",1,null],[16,"Item","","",1,null],[10,"par_iter","","",1,[[["self"]]]],[8,"NdarrayIntoParallelRefMutIterator","","",null,null],[16,"Iter","","",2,null],[16,"Item","","",2,null],[10,"par_iter_mut","","",2,[[["self"]]]],[14,"par_azip","","Parallel version of the `azip!` macro.",null,null],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"into_par_iter","","",10,[[],["t"]]],[11,"clone","","",10,[[["self"]],["parallel"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"with_producer","","",10,[[["cb"]]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"drive","","",10,[[["c"]]]],[11,"with_producer","","",10,[[["cb"]]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"drive","","",10,[[["c"]]]],[11,"drive_unindexed","","",10,[[["c"]]]],[11,"opt_len","","",10,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",10,[[["c"]]]],[11,"opt_len","","",10,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",10,[[["c"]]]],[11,"opt_len","","",10,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",10,[[["c"]]]],[11,"opt_len","","",10,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",10,[[["cons"]]]],[11,"opt_len","","",10,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",10,[[["cons"]]]],[11,"opt_len","","",10,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",10,[[["cons"]]]],[11,"opt_len","","",10,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",10,[[["cons"]]]],[11,"opt_len","","",10,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",10,[[["cons"]]]],[11,"opt_len","","",10,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",10,[[["cons"]]]],[11,"opt_len","","",10,[[["self"]],[["usize"],["option",["usize"]]]]]],"p":[[8,"NdarrayIntoParallelIterator"],[8,"NdarrayIntoParallelRefIterator"],[8,"NdarrayIntoParallelRefMutIterator"],[8,"ParApply1"],[8,"ParApply2"],[8,"ParApply3"],[8,"ParApply4"],[8,"ParApply5"],[8,"ParApply6"],[8,"ParMap"],[3,"Parallel"]]};
searchIndex["netcdf"] = {"doc":"Rust bindings for Unidata's libnetcdf","i":[[5,"create","netcdf","Open a netcdf file in create mode",null,[[["p"]],[["mutablefile"],["result",["mutablefile"]]]]],[5,"append","","Open a netcdf file in append mode",null,[[["p"]],[["mutablefile"],["result",["mutablefile"]]]]],[5,"open","","Open a netcdf file in read mode",null,[[["p"]],[["result",["file"]],["file"]]]],[0,"attribute","","Add and read attributes from netcdf groups and variables",null,null],[3,"Attribute","netcdf::attribute","Extra properties of a variable or a group can be…",null,null],[4,"AttrValue","","Holds the attribute value which can be inserted and…",null,null],[13,"Uchar","","",0,null],[13,"Uchars","","",0,null],[13,"Schar","","",0,null],[13,"Schars","","",0,null],[13,"Ushort","","",0,null],[13,"Ushorts","","",0,null],[13,"Short","","",0,null],[13,"Shorts","","",0,null],[13,"Uint","","",0,null],[13,"Uints","","",0,null],[13,"Int","","",0,null],[13,"Ints","","",0,null],[13,"Ulonglong","","",0,null],[13,"Ulonglongs","","",0,null],[13,"Longlong","","",0,null],[13,"Longlongs","","",0,null],[13,"Float","","",0,null],[13,"Floats","","",0,null],[13,"Double","","",0,null],[13,"Doubles","","",0,null],[13,"Str","","",0,null],[11,"name","","Get the name of the attribute",1,[[["self"]],["str"]]],[11,"value","","Get the value of the attribute",1,[[["self"]],[["result",["attrvalue"]],["attrvalue"]]]],[0,"dimension","netcdf","Interact with netcdf dimensions",null,null],[3,"Dimension","netcdf::dimension","Represents a netcdf dimension",null,null],[3,"Identifier","","Unique identifier for a dimensions in a file. Used when…",null,null],[11,"len","","Get current length of this dimension",2,[[["self"]],["usize"]]],[11,"is_unlimited","","Checks whether the dimension is growable",2,[[["self"]],["bool"]]],[11,"name","","Gets the name of the dimension",2,[[["self"]],["string"]]],[11,"identifier","","Grabs the unique identifier for this dimension, which can…",2,[[["self"]],["identifier"]]],[0,"error","netcdf","Errors that can appear when interacting with netcdf files.…",null,null],[4,"Error","netcdf::error","Various error types that can occur in this crate",null,null],[13,"Netcdf","","Errors from the wrapped netcdf library",3,null],[13,"Str","","Misc errors",3,null],[13,"IndexLen","","Length of the request indices is inconsistent",3,null],[13,"SliceLen","","Length of the slice indices is inconsistent",3,null],[13,"BufferLen","","Supplied the wrong length of the buffer",3,null],[13,"IndexMismatch","","Some index is greater than expected",3,null],[13,"SliceMismatch","","Requested a mismatched total slice",3,null],[13,"ZeroSlice","","Requested a zero slice",3,null],[13,"Stride","","Zero stride or matched with length != 1",3,null],[13,"TypeMismatch","","Supplied the wrong type of parameter",3,null],[13,"TypeUnknown","","Does not know the type (probably library error...)",3,null],[13,"AlreadyExists","","Variable/dimension already exists",3,null],[13,"NotFound","","Could not find variable/attribute/etc",3,null],[13,"Ambiguous","","Slice lengths are ambiguous",3,null],[13,"Overflow","","Overflows possible lengths",3,null],[13,"Conversion","","Conversion error",3,null],[13,"WrongDataset","","Identifier belongs to another dataset",3,null],[13,"Utf8Conversion","","Name is not valid utf-8",3,null],[6,"Result","","Result type used in this crate",null,null],[11,"is_ambigous","","Was the error due to ambiguity of the indices or lengths?",3,[[["self"]],["bool"]]],[0,"file","netcdf","Open, create, and append netcdf files",null,null],[3,"File","netcdf::file","Read only accessible file",null,null],[3,"MutableFile","","Mutable access to file",null,null],[11,"path","","path used to open/create the file",4,[[["self"]],[["string"],["result",["string"]]]]],[11,"root","","Main entrypoint for interacting with the netcdf file.",4,[[["self"]],[["option",["group"]],["group"]]]],[11,"variable","","Get a variable from the group",4,[[["str"],["self"]],[["option",["variable"]],["variable"]]]],[11,"variables","","Iterate over all variables in a group",4,[[["self"]]]],[11,"attribute","","Get a single attribute",4,[[["str"],["self"]],[["option",["attribute"]],["attribute"]]]],[11,"attributes","","Get all attributes in the root group",4,[[["self"]]]],[11,"dimension","","Get a single dimension",4,[[["str"],["self"]],[["option",["dimension"]],["dimension"]]]],[11,"dimensions","","Iterator over all dimensions in the root group",4,[[["self"]]]],[11,"group","","Get a group",4,[[["str"],["self"]],[["option",["group"]],["result",["option"]]]]],[11,"groups","","Iterator over all subgroups in the root group",4,[[["self"]],["result"]]],[11,"root_mut","","Mutable access to the root group",5,[[["self"]],[["option",["groupmut"]],["groupmut"]]]],[11,"variable_mut","","Get a mutable variable from the group",5,[[["str"],["self"]],[["variablemut"],["option",["variablemut"]]]]],[11,"variables_mut","","Iterate over all variables in the root group, with mutable…",5,[[["self"]]]],[11,"group_mut","","Mutable access to subgroup",5,[[["str"],["self"]],[["option",["groupmut"]],["result",["option"]]]]],[11,"groups_mut","","Iterator over all groups (mutable access)",5,[[["self"]],["result"]]],[11,"add_attribute","","Add an attribute to the root group",5,[[["str"],["self"],["t"]],[["result",["attribute"]],["attribute"]]]],[11,"add_dimension","","Adds a dimension with the given name and size. A size of…",5,[[["str"],["self"],["usize"]],[["result",["dimension"]],["dimension"]]]],[11,"add_unlimited_dimension","","Adds a dimension with unbounded size",5,[[["str"],["self"]],[["dimension"],["result",["dimension"]]]]],[11,"add_group","","Add an empty group to the dataset",5,[[["str"],["self"]],[["groupmut"],["result",["groupmut"]]]]],[11,"add_variable","","Create a Variable into the dataset, with no data written…",5,[[["str"],["self"]],[["variablemut"],["result",["variablemut"]]]]],[11,"add_string_variable","","Adds a variable with a basic type of string",5,[[["str"],["self"]],[["variablemut"],["result",["variablemut"]]]]],[11,"add_variable_from_identifiers","","Adds a variable from a set of unique identifiers,…",5,[[["str"],["self"]],[["variablemut"],["result",["variablemut"]]]]],[0,"group","netcdf","All netcdf items belong in the root group, which can be…",null,null],[3,"Group","netcdf::group","Main component of the netcdf format. Holds all variables,…",null,null],[3,"GroupMut","","Mutable access to a group",null,null],[11,"name","","Name of the current group",6,[[["self"]],["string"]]],[11,"variable","","Get a variable from the group",6,[[["str"],["self"]],[["variable"],["option",["variable"]]]]],[11,"variables","","Iterate over all variables in a group",6,[[["self"]]]],[11,"attribute","","Get a single attribute",6,[[["str"],["self"]],[["attribute"],["option",["attribute"]]]]],[11,"attributes","","Get all attributes in the group",6,[[["self"]]]],[11,"dimension","","Get a single dimension",6,[[["str"],["self"]],[["option",["dimension"]],["dimension"]]]],[11,"dimensions","","Iterator over all dimensions",6,[[["self"]]]],[11,"group","","Get a group",6,[[["str"],["self"]],[["option",["group"]],["group"]]]],[11,"groups","","Iterator over all subgroups in this group",6,[[["self"]]]],[11,"variable_mut","","Get a mutable variable from the group",7,[[["str"],["self"]],[["option",["variablemut"]],["variablemut"]]]],[11,"variables_mut","","Iterate over all variables in a group, with mutable access",7,[[["self"]]]],[11,"group_mut","","Mutable access to subgroup",7,[[["str"],["self"]],[["groupmut"],["option",["groupmut"]]]]],[11,"groups_mut","","Iterator over all groups (mutable access)",7,[[["self"]]]],[11,"add_attribute","","Add an attribute to the group",7,[[["str"],["self"],["t"]],[["result",["attribute"]],["attribute"]]]],[11,"add_dimension","","Adds a dimension with the given name and size. A size of…",7,[[["str"],["usize"],["self"]],[["dimension"],["result",["dimension"]]]]],[11,"add_unlimited_dimension","","Adds a dimension with unbounded size",7,[[["str"],["self"]],[["dimension"],["result",["dimension"]]]]],[11,"add_group","","Add an empty group to the dataset",7,[[["str"],["self"]],[["groupmut"],["result",["groupmut"]]]]],[11,"add_variable","","Create a Variable into the dataset, with no data written…",7,[[["str"],["self"]],[["variablemut"],["result",["variablemut"]]]]],[11,"add_string_variable","","Adds a variable with a basic type of string",7,[[["str"],["self"]],[["variablemut"],["result",["variablemut"]]]]],[11,"add_variable_from_identifiers","","Adds a variable from a set of unique identifiers,…",7,[[["str"],["self"]],[["variablemut"],["result",["variablemut"]]]]],[0,"variable","netcdf","Variables in the netcdf file",null,null],[3,"Variable","netcdf::variable","This struct defines a `netCDF` variable.",null,null],[3,"VariableMut","","Mutable access to a variable.",null,null],[4,"Endianness","","Enum for variables endianness",null,null],[13,"Native","","Native endianness, depends on machine architecture (x86_64…",8,null],[13,"Little","","Lille endian",8,null],[13,"Big","","Big endian",8,null],[8,"Numeric","","This trait allow an implicit cast when fetching a netCDF…",null,null],[18,"NCTYPE","","Constant corresponding to a netcdf type",9,null],[10,"single_value_from_variable","","Returns a single indexed value of the variable as Self",9,[[["variable"]],["result"]]],[10,"variable_to_ptr","","Get multiple values at once, without checking the validity…",9,[[["variable"]],["result"]]],[10,"put_value_at","","Put a single value into a netCDF variable",9,[[["variablemut"]],["result"]]],[10,"put_values_at","","put a SLICE of values into a netCDF variable at the given…",9,[[["variablemut"]],["result"]]],[10,"get_values_strided","","get a SLICE of values into the variable, with the source…",9,[[["variable"]],["result"]]],[10,"put_values_strided","","put a SLICE of values into the variable, with the…",9,[[["variablemut"]],["result"]]],[11,"name","","Get name of variable",10,[[["self"]],["string"]]],[11,"attribute","","Get an attribute of this variable",10,[[["str"],["self"]],[["attribute"],["option",["attribute"]]]]],[11,"attributes","","Iterator over all the attributes of this variable",10,[[["self"]]]],[11,"dimensions","","Dimensions for a variable",10,[[["self"]]]],[11,"vartype","","Get the type of this variable. This will be an integer…",10,[[["self"]],["nc_type"]]],[11,"len","","Get current length of the variable",10,[[["self"]],["usize"]]],[11,"endian_value","","Get endianness of the variable.",10,[[["self"]],[["endianness"],["result",["endianness"]]]]],[11,"compression","","Sets compression on the variable. Must be set before…",11,[[["self"],["nc_type"]],["result"]]],[11,"chunking","","Set chunking for variable. Must be set before inserting data",11,[[["self"]],["result"]]],[11,"add_attribute","","Adds an attribute to the variable",11,[[["str"],["self"],["t"]],[["result",["attribute"]],["attribute"]]]],[11,"value","","Fetches one specific value at specific indices indices…",10,[[["option"],["self"]],[["result"],["numeric"]]]],[11,"string_value","","Reads a string variable. This involves two copies per…",10,[[["option"],["self"]],[["string"],["result",["string"]]]]],[11,"values","","Fetches variable",10,[[["option"],["self"]],[["result",["arrayd"]],["arrayd"]]]],[11,"fill_value","","Get the fill value of a variable",10,[[["self"]],[["result",["option"]],["option"]]]],[11,"values_to","","Fetches variable into slice buffer must be able to hold…",10,[[["option"],["self"]],["result"]]],[11,"values_strided_to","","Fetches variable into slice buffer must be able to hold…",10,[[["option"],["self"]],[["result",["usize"]],["usize"]]]],[11,"put_value","","Put a single value at `indices`",11,[[["numeric"],["self"],["option"]],["result"]]],[11,"put_string","","Internally converts to a `CString`, avoid using this…",11,[[["str"],["self"],["option"]],["result"]]],[11,"put_values","","Put a slice of values at `indices`",11,[[["self"],["option"]],["result"]]],[11,"put_values_strided","","Put a slice of values at `indices`, with destination strided",11,[[["self"],["option"]],[["result",["usize"]],["usize"]]]],[11,"set_fill_value","","Set a Fill Value",11,[[["self"],["t"]],["result"]]],[11,"set_nofill","","Set the fill value to no value. Use this when wanting to…",11,[[["self"]],["result"]]],[11,"endian","","Set endianness of the variable. Must be set before…",11,[[["self"],["endianness"]],["result"]]],[11,"from","netcdf::attribute","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","netcdf::dimension","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","netcdf::error","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","netcdf::file","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","netcdf::group","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","netcdf::variable","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","netcdf::attribute","",0,[[["u8"]],["self"]]],[11,"from","","",0,[[["vec",["u8"]],["u8"]],["self"]]],[11,"from","","",0,[[["i8"]],["self"]]],[11,"from","","",0,[[["i8"],["vec",["i8"]]],["self"]]],[11,"from","","",0,[[["u16"]],["self"]]],[11,"from","","",0,[[["u16"],["vec",["u16"]]],["self"]]],[11,"from","","",0,[[["i16"]],["self"]]],[11,"from","","",0,[[["vec",["i16"]],["i16"]],["self"]]],[11,"from","","",0,[[["u32"]],["self"]]],[11,"from","","",0,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from","","",0,[[["i32"]],["self"]]],[11,"from","","",0,[[["vec",["i32"]],["i32"]],["self"]]],[11,"from","","",0,[[["u64"]],["self"]]],[11,"from","","",0,[[["u64"],["vec",["u64"]]],["self"]]],[11,"from","","",0,[[["i64"]],["self"]]],[11,"from","","",0,[[["vec",["i64"]],["i64"]],["self"]]],[11,"from","","",0,[[["f32"]],["self"]]],[11,"from","","",0,[[["f32"],["vec",["f32"]]],["self"]]],[11,"from","","",0,[[["f64"]],["self"]]],[11,"from","","",0,[[["f64"],["vec",["f64"]]],["self"]]],[11,"from","","",0,[[["str"]],["self"]]],[11,"from","","",0,[[["string"]],["self"]]],[11,"from","netcdf::error","",3,[[["str"]],["self"]]],[11,"from","","",3,[[["string"]],["self"]]],[11,"from","","",3,[[["nc_type"]],["self"]]],[11,"from","","",3,[[["tryfrominterror"]],["self"]]],[11,"from","","",3,[[["fromutf8error"]],["self"]]],[11,"clone","netcdf::attribute","",1,[[["self"]],["attribute"]]],[11,"clone","","",0,[[["self"]],["attrvalue"]]],[11,"clone","netcdf::dimension","",2,[[["self"]],["dimension"]]],[11,"clone","","",12,[[["self"]],["identifier"]]],[11,"clone","netcdf::group","",6,[[["self"]],["group"]]],[11,"clone","netcdf::variable","",10,[[["self"]],["variable"]]],[11,"clone","","",8,[[["self"]],["endianness"]]],[11,"eq","netcdf::attribute","",0,[[["self"],["attrvalue"]],["bool"]]],[11,"ne","","",0,[[["self"],["attrvalue"]],["bool"]]],[11,"eq","netcdf::variable","",8,[[["endianness"],["self"]],["bool"]]],[11,"deref","netcdf::file","",5,[[["self"]]]],[11,"deref","netcdf::group","",7,[[["self"]]]],[11,"deref","netcdf::variable","",11,[[["self"]]]],[11,"fmt","netcdf::attribute","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","netcdf::dimension","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","netcdf::error","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","netcdf::file","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","netcdf::group","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","netcdf::variable","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","netcdf::error","",3,[[["formatter"],["self"]],["result"]]],[11,"source","","",3,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[4,"AttrValue"],[3,"Attribute"],[3,"Dimension"],[4,"Error"],[3,"File"],[3,"MutableFile"],[3,"Group"],[3,"GroupMut"],[4,"Endianness"],[8,"Numeric"],[3,"Variable"],[3,"VariableMut"],[3,"Identifier"]]};
searchIndex["netcdf_sys"] = {"doc":"","i":[[3,"nc_vlen_t","netcdf_sys","",null,null],[12,"len","","",0,null],[12,"p","","",0,null],[7,"ncerr","","",null,null],[7,"ncopts","","",null,null],[5,"nc_inq_libvers","","",null,null],[5,"nc_strerror","","",null,null],[5,"nc__create","","",null,null],[5,"nc_create","","",null,null],[5,"nc__open","","",null,null],[5,"nc_open","","",null,null],[5,"nc_inq_path","","",null,null],[5,"nc_inq_ncid","","",null,null],[5,"nc_inq_grps","","",null,null],[5,"nc_inq_grpname","","",null,null],[5,"nc_inq_grpname_full","","",null,null],[5,"nc_inq_grpname_len","","",null,null],[5,"nc_inq_grp_parent","","",null,null],[5,"nc_inq_grp_ncid","","",null,null],[5,"nc_inq_grp_full_ncid","","",null,null],[5,"nc_inq_varids","","",null,null],[5,"nc_inq_dimids","","",null,null],[5,"nc_inq_typeids","","",null,null],[5,"nc_inq_type_equal","","",null,null],[5,"nc_def_grp","","",null,null],[5,"nc_rename_grp","","",null,null],[5,"nc_def_compound","","",null,null],[5,"nc_insert_compound","","",null,null],[5,"nc_insert_array_compound","","",null,null],[5,"nc_inq_type","","",null,null],[5,"nc_inq_typeid","","",null,null],[5,"nc_inq_compound","","",null,null],[5,"nc_inq_compound_name","","",null,null],[5,"nc_inq_compound_size","","",null,null],[5,"nc_inq_compound_nfields","","",null,null],[5,"nc_inq_compound_field","","",null,null],[5,"nc_inq_compound_fieldname","","",null,null],[5,"nc_inq_compound_fieldindex","","",null,null],[5,"nc_inq_compound_fieldoffset","","",null,null],[5,"nc_inq_compound_fieldtype","","",null,null],[5,"nc_inq_compound_fieldndims","","",null,null],[5,"nc_inq_compound_fielddim_sizes","","",null,null],[5,"nc_def_vlen","","",null,null],[5,"nc_inq_vlen","","",null,null],[5,"nc_free_vlen","","",null,null],[5,"nc_free_vlens","","",null,null],[5,"nc_put_vlen_element","","",null,null],[5,"nc_get_vlen_element","","",null,null],[5,"nc_free_string","","",null,null],[5,"nc_inq_user_type","","",null,null],[5,"nc_put_att","","",null,null],[5,"nc_get_att","","",null,null],[5,"nc_def_enum","","",null,null],[5,"nc_insert_enum","","",null,null],[5,"nc_inq_enum","","",null,null],[5,"nc_inq_enum_member","","",null,null],[5,"nc_inq_enum_ident","","",null,null],[5,"nc_def_opaque","","",null,null],[5,"nc_inq_opaque","","",null,null],[5,"nc_put_var","","",null,null],[5,"nc_get_var","","",null,null],[5,"nc_put_var1","","",null,null],[5,"nc_get_var1","","",null,null],[5,"nc_put_vara","","",null,null],[5,"nc_get_vara","","",null,null],[5,"nc_put_vars","","",null,null],[5,"nc_get_vars","","",null,null],[5,"nc_put_varm","","",null,null],[5,"nc_get_varm","","",null,null],[5,"nc_def_var_deflate","","",null,null],[5,"nc_inq_var_deflate","","",null,null],[5,"nc_inq_var_szip","","",null,null],[5,"nc_def_var_fletcher32","","",null,null],[5,"nc_inq_var_fletcher32","","",null,null],[5,"nc_def_var_chunking","","",null,null],[5,"nc_inq_var_chunking","","",null,null],[5,"nc_def_var_fill","","",null,null],[5,"nc_inq_var_fill","","",null,null],[5,"nc_def_var_endian","","",null,null],[5,"nc_inq_var_endian","","",null,null],[5,"nc_set_fill","","",null,null],[5,"nc_set_default_format","","",null,null],[5,"nc_set_chunk_cache","","",null,null],[5,"nc_get_chunk_cache","","",null,null],[5,"nc_set_var_chunk_cache","","",null,null],[5,"nc_get_var_chunk_cache","","",null,null],[5,"nc_redef","","",null,null],[5,"nc__enddef","","",null,null],[5,"nc_enddef","","",null,null],[5,"nc_sync","","",null,null],[5,"nc_abort","","",null,null],[5,"nc_close","","",null,null],[5,"nc_inq","","",null,null],[5,"nc_inq_ndims","","",null,null],[5,"nc_inq_nvars","","",null,null],[5,"nc_inq_natts","","",null,null],[5,"nc_inq_unlimdim","","",null,null],[5,"nc_inq_unlimdims","","",null,null],[5,"nc_inq_format","","",null,null],[5,"nc_inq_format_extended","","",null,null],[5,"nc_def_dim","","",null,null],[5,"nc_inq_dimid","","",null,null],[5,"nc_inq_dim","","",null,null],[5,"nc_inq_dimname","","",null,null],[5,"nc_inq_dimlen","","",null,null],[5,"nc_rename_dim","","",null,null],[5,"nc_inq_att","","",null,null],[5,"nc_inq_attid","","",null,null],[5,"nc_inq_atttype","","",null,null],[5,"nc_inq_attlen","","",null,null],[5,"nc_inq_attname","","",null,null],[5,"nc_copy_att","","",null,null],[5,"nc_rename_att","","",null,null],[5,"nc_del_att","","",null,null],[5,"nc_put_att_text","","",null,null],[5,"nc_get_att_text","","",null,null],[5,"nc_put_att_uchar","","",null,null],[5,"nc_get_att_uchar","","",null,null],[5,"nc_put_att_schar","","",null,null],[5,"nc_get_att_schar","","",null,null],[5,"nc_put_att_short","","",null,null],[5,"nc_get_att_short","","",null,null],[5,"nc_put_att_int","","",null,null],[5,"nc_get_att_int","","",null,null],[5,"nc_put_att_long","","",null,null],[5,"nc_get_att_long","","",null,null],[5,"nc_put_att_float","","",null,null],[5,"nc_get_att_float","","",null,null],[5,"nc_put_att_double","","",null,null],[5,"nc_get_att_double","","",null,null],[5,"nc_put_att_ushort","","",null,null],[5,"nc_get_att_ushort","","",null,null],[5,"nc_put_att_uint","","",null,null],[5,"nc_get_att_uint","","",null,null],[5,"nc_put_att_longlong","","",null,null],[5,"nc_get_att_longlong","","",null,null],[5,"nc_put_att_ulonglong","","",null,null],[5,"nc_get_att_ulonglong","","",null,null],[5,"nc_put_att_string","","",null,null],[5,"nc_get_att_string","","",null,null],[5,"nc_def_var","","",null,null],[5,"nc_inq_var","","",null,null],[5,"nc_inq_varid","","",null,null],[5,"nc_inq_varname","","",null,null],[5,"nc_inq_vartype","","",null,null],[5,"nc_inq_varndims","","",null,null],[5,"nc_inq_vardimid","","",null,null],[5,"nc_inq_varnatts","","",null,null],[5,"nc_rename_var","","",null,null],[5,"nc_copy_var","","",null,null],[5,"nc_put_var1_text","","",null,null],[5,"nc_get_var1_text","","",null,null],[5,"nc_put_var1_uchar","","",null,null],[5,"nc_get_var1_uchar","","",null,null],[5,"nc_put_var1_schar","","",null,null],[5,"nc_get_var1_schar","","",null,null],[5,"nc_put_var1_short","","",null,null],[5,"nc_get_var1_short","","",null,null],[5,"nc_put_var1_int","","",null,null],[5,"nc_get_var1_int","","",null,null],[5,"nc_put_var1_long","","",null,null],[5,"nc_get_var1_long","","",null,null],[5,"nc_put_var1_float","","",null,null],[5,"nc_get_var1_float","","",null,null],[5,"nc_put_var1_double","","",null,null],[5,"nc_get_var1_double","","",null,null],[5,"nc_put_var1_ushort","","",null,null],[5,"nc_get_var1_ushort","","",null,null],[5,"nc_put_var1_uint","","",null,null],[5,"nc_get_var1_uint","","",null,null],[5,"nc_put_var1_longlong","","",null,null],[5,"nc_get_var1_longlong","","",null,null],[5,"nc_put_var1_ulonglong","","",null,null],[5,"nc_get_var1_ulonglong","","",null,null],[5,"nc_put_var1_string","","",null,null],[5,"nc_get_var1_string","","",null,null],[5,"nc_put_vara_text","","",null,null],[5,"nc_get_vara_text","","",null,null],[5,"nc_put_vara_uchar","","",null,null],[5,"nc_get_vara_uchar","","",null,null],[5,"nc_put_vara_schar","","",null,null],[5,"nc_get_vara_schar","","",null,null],[5,"nc_put_vara_short","","",null,null],[5,"nc_get_vara_short","","",null,null],[5,"nc_put_vara_int","","",null,null],[5,"nc_get_vara_int","","",null,null],[5,"nc_put_vara_long","","",null,null],[5,"nc_get_vara_long","","",null,null],[5,"nc_put_vara_float","","",null,null],[5,"nc_get_vara_float","","",null,null],[5,"nc_put_vara_double","","",null,null],[5,"nc_get_vara_double","","",null,null],[5,"nc_put_vara_ushort","","",null,null],[5,"nc_get_vara_ushort","","",null,null],[5,"nc_put_vara_uint","","",null,null],[5,"nc_get_vara_uint","","",null,null],[5,"nc_put_vara_longlong","","",null,null],[5,"nc_get_vara_longlong","","",null,null],[5,"nc_put_vara_ulonglong","","",null,null],[5,"nc_get_vara_ulonglong","","",null,null],[5,"nc_put_vara_string","","",null,null],[5,"nc_get_vara_string","","",null,null],[5,"nc_put_vars_text","","",null,null],[5,"nc_get_vars_text","","",null,null],[5,"nc_put_vars_uchar","","",null,null],[5,"nc_get_vars_uchar","","",null,null],[5,"nc_put_vars_schar","","",null,null],[5,"nc_get_vars_schar","","",null,null],[5,"nc_put_vars_short","","",null,null],[5,"nc_get_vars_short","","",null,null],[5,"nc_put_vars_int","","",null,null],[5,"nc_get_vars_int","","",null,null],[5,"nc_put_vars_long","","",null,null],[5,"nc_get_vars_long","","",null,null],[5,"nc_put_vars_float","","",null,null],[5,"nc_get_vars_float","","",null,null],[5,"nc_put_vars_double","","",null,null],[5,"nc_get_vars_double","","",null,null],[5,"nc_put_vars_ushort","","",null,null],[5,"nc_get_vars_ushort","","",null,null],[5,"nc_put_vars_uint","","",null,null],[5,"nc_get_vars_uint","","",null,null],[5,"nc_put_vars_longlong","","",null,null],[5,"nc_get_vars_longlong","","",null,null],[5,"nc_put_vars_ulonglong","","",null,null],[5,"nc_get_vars_ulonglong","","",null,null],[5,"nc_put_vars_string","","",null,null],[5,"nc_get_vars_string","","",null,null],[5,"nc_put_varm_text","","",null,null],[5,"nc_get_varm_text","","",null,null],[5,"nc_put_varm_uchar","","",null,null],[5,"nc_get_varm_uchar","","",null,null],[5,"nc_put_varm_schar","","",null,null],[5,"nc_get_varm_schar","","",null,null],[5,"nc_put_varm_short","","",null,null],[5,"nc_get_varm_short","","",null,null],[5,"nc_put_varm_int","","",null,null],[5,"nc_get_varm_int","","",null,null],[5,"nc_put_varm_long","","",null,null],[5,"nc_get_varm_long","","",null,null],[5,"nc_put_varm_float","","",null,null],[5,"nc_get_varm_float","","",null,null],[5,"nc_put_varm_double","","",null,null],[5,"nc_get_varm_double","","",null,null],[5,"nc_put_varm_ushort","","",null,null],[5,"nc_get_varm_ushort","","",null,null],[5,"nc_put_varm_uint","","",null,null],[5,"nc_get_varm_uint","","",null,null],[5,"nc_put_varm_longlong","","",null,null],[5,"nc_get_varm_longlong","","",null,null],[5,"nc_put_varm_ulonglong","","",null,null],[5,"nc_get_varm_ulonglong","","",null,null],[5,"nc_put_varm_string","","",null,null],[5,"nc_get_varm_string","","",null,null],[5,"nc_put_var_text","","",null,null],[5,"nc_get_var_text","","",null,null],[5,"nc_put_var_uchar","","",null,null],[5,"nc_get_var_uchar","","",null,null],[5,"nc_put_var_schar","","",null,null],[5,"nc_get_var_schar","","",null,null],[5,"nc_put_var_short","","",null,null],[5,"nc_get_var_short","","",null,null],[5,"nc_put_var_int","","",null,null],[5,"nc_get_var_int","","",null,null],[5,"nc_put_var_long","","",null,null],[5,"nc_get_var_long","","",null,null],[5,"nc_put_var_float","","",null,null],[5,"nc_get_var_float","","",null,null],[5,"nc_put_var_double","","",null,null],[5,"nc_get_var_double","","",null,null],[5,"nc_put_var_ushort","","",null,null],[5,"nc_get_var_ushort","","",null,null],[5,"nc_put_var_uint","","",null,null],[5,"nc_get_var_uint","","",null,null],[5,"nc_put_var_longlong","","",null,null],[5,"nc_get_var_longlong","","",null,null],[5,"nc_put_var_ulonglong","","",null,null],[5,"nc_get_var_ulonglong","","",null,null],[5,"nc_put_var_string","","",null,null],[5,"nc_get_var_string","","",null,null],[5,"nc_put_att_ubyte","","",null,null],[5,"nc_get_att_ubyte","","",null,null],[5,"nc_put_var1_ubyte","","",null,null],[5,"nc_get_var1_ubyte","","",null,null],[5,"nc_put_vara_ubyte","","",null,null],[5,"nc_get_vara_ubyte","","",null,null],[5,"nc_put_vars_ubyte","","",null,null],[5,"nc_get_vars_ubyte","","",null,null],[5,"nc_put_varm_ubyte","","",null,null],[5,"nc_get_varm_ubyte","","",null,null],[5,"nc_put_var_ubyte","","",null,null],[5,"nc_get_var_ubyte","","",null,null],[5,"nc_show_metadata","","",null,null],[5,"nc__create_mp","","",null,null],[5,"nc__open_mp","","",null,null],[5,"nc_delete","","",null,null],[5,"nc_delete_mp","","",null,null],[5,"nc_set_base_pe","","",null,null],[5,"nc_inq_base_pe","","",null,null],[5,"nctypelen","","",null,null],[5,"nc_advise","","",null,null],[5,"nccreate","","",null,null],[5,"ncopen","","",null,null],[5,"ncsetfill","","",null,null],[5,"ncredef","","",null,null],[5,"ncendef","","",null,null],[5,"ncsync","","",null,null],[5,"ncabort","","",null,null],[5,"ncclose","","",null,null],[5,"ncinquire","","",null,null],[5,"ncdimdef","","",null,null],[5,"ncdimid","","",null,null],[5,"ncdiminq","","",null,null],[5,"ncdimrename","","",null,null],[5,"ncattput","","",null,null],[5,"ncattinq","","",null,null],[5,"ncattget","","",null,null],[5,"ncattcopy","","",null,null],[5,"ncattname","","",null,null],[5,"ncattrename","","",null,null],[5,"ncattdel","","",null,null],[5,"ncvardef","","",null,null],[5,"ncvarid","","",null,null],[5,"ncvarinq","","",null,null],[5,"ncvarput1","","",null,null],[5,"ncvarget1","","",null,null],[5,"ncvarput","","",null,null],[5,"ncvarget","","",null,null],[5,"ncvarputs","","",null,null],[5,"ncvargets","","",null,null],[5,"ncvarputg","","",null,null],[5,"ncvargetg","","",null,null],[5,"ncvarrename","","",null,null],[5,"ncrecinq","","",null,null],[5,"ncrecget","","",null,null],[5,"ncrecput","","",null,null],[6,"nc_type","","",null,null],[6,"nclong","","",null,null],[17,"NC_NAT","","",null,null],[17,"NC_BYTE","","",null,null],[17,"NC_CHAR","","",null,null],[17,"NC_SHORT","","",null,null],[17,"NC_INT","","",null,null],[17,"NC_LONG","","",null,null],[17,"NC_FLOAT","","",null,null],[17,"NC_DOUBLE","","",null,null],[17,"NC_UBYTE","","",null,null],[17,"NC_USHORT","","",null,null],[17,"NC_UINT","","",null,null],[17,"NC_INT64","","",null,null],[17,"NC_UINT64","","",null,null],[17,"NC_STRING","","",null,null],[17,"NC_MAX_ATOMIC_TYPE","","",null,null],[17,"NC_VLEN","","",null,null],[17,"NC_OPAQUE","","",null,null],[17,"NC_ENUM","","",null,null],[17,"NC_COMPOUND","","",null,null],[17,"NC_FIRSTUSERTYPEID","","",null,null],[17,"NC_FILL_INT","","",null,null],[17,"NC_FILL_UBYTE","","",null,null],[17,"NC_FILL_USHORT","","",null,null],[17,"NC_FILL_UINT","","",null,null],[17,"NC_MAX_BYTE","","",null,null],[17,"NC_MIN_BYTE","","",null,null],[17,"NC_MAX_CHAR","","",null,null],[17,"NC_MAX_SHORT","","",null,null],[17,"NC_MIN_SHORT","","",null,null],[17,"NC_MAX_INT","","",null,null],[17,"NC_MIN_INT","","",null,null],[17,"NC_MAX_UBYTE","","",null,null],[17,"NC_MAX_USHORT","","",null,null],[17,"NC_MAX_UINT","","",null,null],[17,"NC_MAX_INT64","","",null,null],[17,"NC_MIN_INT64","","",null,null],[17,"NC_MAX_UINT64","","",null,null],[17,"X_INT64_MAX","","",null,null],[17,"X_INT64_MIN","","",null,null],[17,"X_UINT64_MAX","","",null,null],[17,"_FillValue","","",null,null],[17,"NC_FILL","","",null,null],[17,"NC_NOFILL","","",null,null],[17,"NC_NOWRITE","","",null,null],[17,"NC_WRITE","","",null,null],[17,"NC_CLOBBER","","",null,null],[17,"NC_NOCLOBBER","","",null,null],[17,"NC_DISKLESS","","",null,null],[17,"NC_MMAP","","",null,null],[17,"NC_CLASSIC_MODEL","","",null,null],[17,"NC_64BIT_OFFSET","","",null,null],[17,"NC_LOCK","","",null,null],[17,"NC_SHARE","","",null,null],[17,"NC_NETCDF4","","",null,null],[17,"NC_MPIIO","","",null,null],[17,"NC_MPIPOSIX","","",null,null],[17,"NC_PNETCDF","","",null,null],[17,"NC_FORMAT_CLASSIC","","",null,null],[17,"NC_FORMAT_64BIT","","",null,null],[17,"NC_FORMAT_NETCDF4","","",null,null],[17,"NC_FORMAT_NETCDF4_CLASSIC","","",null,null],[17,"NC_FORMAT_NC3","","",null,null],[17,"NC_FORMAT_NC_HDF5","","",null,null],[17,"NC_FORMAT_NC_HDF4","","",null,null],[17,"NC_FORMAT_PNETCDF","","",null,null],[17,"NC_FORMAT_DAP2","","",null,null],[17,"NC_FORMAT_DAP4","","",null,null],[17,"NC_FORMAT_UNDEFINED","","",null,null],[17,"NC_SIZEHINT_DEFAULT","","",null,null],[17,"NC_UNLIMITED","","",null,null],[17,"NC_GLOBAL","","",null,null],[17,"NC_MAX_DIMS","","",null,null],[17,"NC_MAX_ATTRS","","",null,null],[17,"NC_MAX_VARS","","",null,null],[17,"NC_MAX_NAME","","",null,null],[17,"NC_MAX_VAR_DIMS","","",null,null],[17,"NC_MAX_HDF4_NAME","","",null,null],[17,"NC_ENDIAN_NATIVE","","",null,null],[17,"NC_ENDIAN_LITTLE","","",null,null],[17,"NC_ENDIAN_BIG","","",null,null],[17,"NC_CHUNKED","","",null,null],[17,"NC_CONTIGUOUS","","",null,null],[17,"NC_NOCHECKSUM","","",null,null],[17,"NC_FLETCHER32","","",null,null],[17,"NC_NOSHUFFLE","","",null,null],[17,"NC_SHUFFLE","","",null,null],[17,"NC_MIN_DEFLATE_LEVEL","","",null,null],[17,"NC_MAX_DEFLATE_LEVEL","","",null,null],[17,"NC_NOERR","","",null,null],[17,"NC2_ERR","","",null,null],[17,"NC_EBADID","","",null,null],[17,"NC_ENFILE","","",null,null],[17,"NC_EEXIST","","",null,null],[17,"NC_EINVAL","","",null,null],[17,"NC_EPERM","","",null,null],[17,"NC_ENOTINDEFINE","","",null,null],[17,"NC_EINDEFINE","","",null,null],[17,"NC_EINVALCOORDS","","",null,null],[17,"NC_EMAXDIMS","","",null,null],[17,"NC_ENAMEINUSE","","",null,null],[17,"NC_ENOTATT","","",null,null],[17,"NC_EMAXATTS","","",null,null],[17,"NC_EBADTYPE","","",null,null],[17,"NC_EBADDIM","","",null,null],[17,"NC_EUNLIMPOS","","",null,null],[17,"NC_EMAXVARS","","",null,null],[17,"NC_ENOTVAR","","",null,null],[17,"NC_EGLOBAL","","",null,null],[17,"NC_ENOTNC","","",null,null],[17,"NC_ESTS","","",null,null],[17,"NC_EMAXNAME","","",null,null],[17,"NC_EUNLIMIT","","",null,null],[17,"NC_ENORECVARS","","",null,null],[17,"NC_ECHAR","","",null,null],[17,"NC_EEDGE","","",null,null],[17,"NC_ESTRIDE","","",null,null],[17,"NC_EBADNAME","","",null,null],[17,"NC_ERANGE","","",null,null],[17,"NC_ENOMEM","","",null,null],[17,"NC_EVARSIZE","","",null,null],[17,"NC_EDIMSIZE","","",null,null],[17,"NC_ETRUNC","","",null,null],[17,"NC_EAXISTYPE","","",null,null],[17,"NC_EDAP","","",null,null],[17,"NC_ECURL","","",null,null],[17,"NC_EIO","","",null,null],[17,"NC_ENODATA","","",null,null],[17,"NC_EDAPSVC","","",null,null],[17,"NC_EDAS","","",null,null],[17,"NC_EDDS","","",null,null],[17,"NC_EDATADDS","","",null,null],[17,"NC_EDAPURL","","",null,null],[17,"NC_EDAPCONSTRAINT","","",null,null],[17,"NC_ETRANSLATION","","",null,null],[17,"NC_EACCESS","","",null,null],[17,"NC_EAUTH","","",null,null],[17,"NC_ENOTFOUND","","",null,null],[17,"NC_ECANTREMOVE","","",null,null],[17,"NC4_FIRST_ERROR","","",null,null],[17,"NC_EHDFERR","","",null,null],[17,"NC_ECANTREAD","","",null,null],[17,"NC_ECANTWRITE","","",null,null],[17,"NC_ECANTCREATE","","",null,null],[17,"NC_EFILEMETA","","",null,null],[17,"NC_EDIMMETA","","",null,null],[17,"NC_EATTMETA","","",null,null],[17,"NC_EVARMETA","","",null,null],[17,"NC_ENOCOMPOUND","","",null,null],[17,"NC_EATTEXISTS","","",null,null],[17,"NC_ENOTNC4","","",null,null],[17,"NC_ESTRICTNC3","","",null,null],[17,"NC_ENOTNC3","","",null,null],[17,"NC_ENOPAR","","",null,null],[17,"NC_EPARINIT","","",null,null],[17,"NC_EBADGRPID","","",null,null],[17,"NC_EBADTYPID","","",null,null],[17,"NC_ETYPDEFINED","","",null,null],[17,"NC_EBADFIELD","","",null,null],[17,"NC_EBADCLASS","","",null,null],[17,"NC_EMAPTYPE","","",null,null],[17,"NC_ELATEFILL","","",null,null],[17,"NC_ELATEDEF","","",null,null],[17,"NC_EDIMSCALE","","",null,null],[17,"NC_ENOGRP","","",null,null],[17,"NC_ESTORAGE","","",null,null],[17,"NC_EBADCHUNK","","",null,null],[17,"NC_ENOTBUILT","","",null,null],[17,"NC_EDISKLESS","","",null,null],[17,"NC_ECANTEXTEND","","",null,null],[17,"NC_EMPI","","",null,null],[17,"NC4_LAST_ERROR","","",null,null],[17,"DIM_WITHOUT_VARIABLE","","",null,null],[17,"NC_HAVE_NEW_CHUNKING_API","","",null,null],[17,"NC_EURL","","",null,null],[17,"NC_ECONSTRAINT","","",null,null],[17,"FILL_LONG","","",null,null],[17,"MAX_NC_DIMS","","",null,null],[17,"MAX_NC_ATTRS","","",null,null],[17,"MAX_NC_VARS","","",null,null],[17,"MAX_NC_NAME","","",null,null],[17,"MAX_VAR_DIMS","","",null,null],[17,"NC_ENTOOL","","",null,null],[17,"NC_EXDR","","",null,null],[17,"NC_SYSERR","","",null,null],[17,"NC_FATAL","","",null,null],[17,"NC_VERBOSE","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]]],"p":[[3,"nc_vlen_t"]]};
searchIndex["num_complex"] = {"doc":"Complex numbers.","i":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[3,"ParseComplexError","","",null,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"new","","Create a new Complex",0,[[["t"]],["self"]]],[11,"i","","Returns imaginary unit",0,[[],["self"]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't…",0,[[["self"]],["t"]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[["self"],["t"]],["self"]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[["self"],["t"]],["self"]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[["u32"],["self"]],["self"]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[["self"]],["self"]]],[11,"inv","","Returns `1/self`",0,[[["self"]],["self"]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[["self"],["i32"]],["self"]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the [Manhattan…",0,[[["self"]],["t"]]],[11,"norm","","Calculate |self|",0,[[["self"]],["t"]]],[11,"arg","","Calculate the principal Arg of self.",0,[[["self"]],["t"]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,[[["self"]]]],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[["t"]],["self"]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[["self"]],["self"]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[["self"]],["self"]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[["self"]],["self"]]],[11,"cbrt","","Computes the principal value of the cube root of `self`.",0,[[["self"]],["self"]]],[11,"powf","","Raises `self` to a floating point power.",0,[[["self"],["t"]],["self"]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[["self"],["t"]],["self"]]],[11,"powc","","Raises `self` to a complex power.",0,[[["self"]],["self"]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[["self"],["t"]],["self"]]],[11,"sin","","Computes the sine of `self`.",0,[[["self"]],["self"]]],[11,"cos","","Computes the cosine of `self`.",0,[[["self"]],["self"]]],[11,"tan","","Computes the tangent of `self`.",0,[[["self"]],["self"]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[["self"]],["self"]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[["self"]],["self"]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[["self"]],["self"]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[["self"]],["self"]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[["self"]],["self"]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[["self"]],["self"]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[["self"]],["self"]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[["self"]],["self"]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[["self"]],["self"]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[["self"]],["complex"]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["self"],["complex"]],["complex"]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[],["bool"]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[],["bool"]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[],["bool"]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"div","","",0,[[["complex"]]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[["t"]]]],[11,"div","","",0,[[["t"]]]],[11,"rem","","",0,[[["complex"]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[["t"]]]],[11,"rem","","",0,[[["t"]]]],[11,"sub","","",0,[[["complex"]]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[["t"]]]],[11,"sub","","",0,[[["t"]]]],[11,"eq","","",0,[[["complex"],["self"]],["bool"]]],[11,"ne","","",0,[[["complex"],["self"]],["bool"]]],[11,"eq","","",1,[[["parsecomplexerror"],["self"]],["bool"]]],[11,"ne","","",1,[[["parsecomplexerror"],["self"]],["bool"]]],[11,"add","","",0,[[["complex"]]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[["t"]]]],[11,"add","","",0,[[["t"]]]],[11,"mul","","",0,[[["complex"]]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[["t"]]]],[11,"mul","","",0,[[["t"]]]],[11,"neg","","",0,[[]]],[11,"add_assign","","",0,[[["self"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["self"],["self"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["self"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["self"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["self"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["self"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["complex"]]],[11,"default","","",0,[[],["complex"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"to_usize","","",0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_isize","","",0,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_u8","","",0,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","",0,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"to_u32","","",0,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"to_u64","","",0,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_i8","","",0,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","",0,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","",0,[[["self"]],[["i32"],["option",["i32"]]]]],[11,"to_i64","","",0,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_u128","","",0,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_i128","","",0,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_f32","","",0,[[["self"]],[["option",["f32"]],["f32"]]]],[11,"to_f64","","",0,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"from_usize","","",0,[[["usize"]],["option"]]],[11,"from_isize","","",0,[[["isize"]],["option"]]],[11,"from_u8","","",0,[[["u8"]],["option"]]],[11,"from_u16","","",0,[[["u16"]],["option"]]],[11,"from_u32","","",0,[[["u32"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_i8","","",0,[[["i8"]],["option"]]],[11,"from_i16","","",0,[[["i16"]],["option"]]],[11,"from_i32","","",0,[[["i32"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from","","",0,[[["toprimitive"]],["option"]]],[11,"as_","","",0,[[],["u"]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"],["u32"]],["result"]]],[11,"zero","","",0,[[],["self"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"set_zero","","",0,[[["self"]]]],[11,"one","","",0,[[],["self"]]],[11,"is_one","","",0,[[["self"]],["bool"]]],[11,"set_one","","",0,[[["self"]]]],[11,"inv","","",0,[[]]],[11,"mul_add","","",0,[[["complex"]],["complex"]]],[11,"mul_add_assign","","",0,[[["self"],["complex"]]]],[11,"mul_add_assign","","",0,[[["complex"],["self"]]]],[11,"pow","","",0,[[["f32"]]]],[11,"pow","","",0,[[["f32"]]]],[11,"pow","","",0,[[["f64"]]]],[11,"pow","","",0,[[["f64"]]]],[11,"pow","","",0,[[["complex"]]]],[11,"pow","","",0,[[["complex"]]]],[11,"serialize","","",0,[[["s"],["self"]],["result"]]],[11,"deserialize","","",0,[[["d"]],["result"]]]],"p":[[3,"Complex"],[3,"ParseComplexError"]]};
searchIndex["num_cpus"] = {"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",null,[[],["usize"]]]],"p":[]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","i":[[3,"ExtendedGcd","num_integer","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",0,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots"]],["roots"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[["roots"],["u32"]],["roots"]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[["roots"]],["roots"]]],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer"]]]],[5,"div_floor","","Floored integer division",null,[[["integer"]],["integer"]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer"]],["integer"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer"]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer"]],["integer"]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[["integer"]],["integer"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[["integer"]],["integer"]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[["integer"]]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["integer"],["clone"]],[["integer"],["clone"]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["integer"],["clone"]]]],[8,"Roots","","Provides methods to compute an integer's square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",1,[[["u32"],["self"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",2,[[["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",2,[[["self"]],["self"]]],[11,"div_ceil","","Ceiled integer division.",2,[[["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",2,[[["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",2,[[["self"]],["self"]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,[[["self"]]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",2,[[["self"]],["extendedgcd"]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",2,[[["self"]]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",2,[[["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",2,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",2,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",2,[[["self"]]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",2,[[["self"]]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"new","","For a given n, iterate over all binomial coefficients…",3,[[["t"]],["iterbinomial"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"ne","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["extendedgcd"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]]],"p":[[3,"ExtendedGcd"],[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_rational"] = {"doc":"Rational numbers","i":[[3,"Ratio","num_rational","Represents the ratio between two numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",null,null],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or…",0,[[["t"]],["ratio"]]],[11,"numer","","Gets an immutable reference to the numerator.",0,[[["self"]],["t"]]],[11,"denom","","Gets an immutable reference to the denominator.",0,[[["self"]],["t"]]],[11,"new","","Creates a new `Ratio`. Fails if `denom` is zero.",0,[[["t"]],["ratio"]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",0,[[["t"]],["ratio"]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,[[["self"]],["t"]]],[11,"is_integer","","Returns true if the rational number is an integer…",0,[[["self"]],["bool"]]],[11,"reduced","","Returns a reduced copy of self.",0,[[["self"]],["ratio"]]],[11,"recip","","Returns the reciprocal.",0,[[["self"]],["ratio"]]],[11,"floor","","Rounds towards minus infinity.",0,[[["self"]],["ratio"]]],[11,"ceil","","Rounds towards plus infinity.",0,[[["self"]],["ratio"]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",0,[[["self"]],["ratio"]]],[11,"trunc","","Rounds towards zero.",0,[[["self"]],["ratio"]]],[11,"fract","","Returns the fractional part of a number, with division…",0,[[["self"]],["ratio"]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",0,[[["self"],["i32"]],["ratio"]]],[11,"approximate_float","","",0,[[["numcast"],["floatcore"]],[["option",["ratio"]],["ratio"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["ratio"]]],[11,"from","","",0,[[],["ratio"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"div","","",0,[[["ratio"]],["ratio"]]],[11,"div","","",0,[[["t"]],["ratio"]]],[11,"div","","",0,[[["ratio"]],["ratio"]]],[11,"div","","",0,[[["t"]],["ratio"]]],[11,"rem","","",0,[[["ratio"]],["ratio"]]],[11,"rem","","",0,[[["t"]],["ratio"]]],[11,"rem","","",0,[[["ratio"]],["ratio"]]],[11,"rem","","",0,[[["t"]],["ratio"]]],[11,"sub","","",0,[[["ratio"]],["ratio"]]],[11,"sub","","",0,[[["t"]],["ratio"]]],[11,"sub","","",0,[[["ratio"]],["ratio"]]],[11,"sub","","",0,[[["t"]],["ratio"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["parseratioerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["parseratioerror"]],["bool"]]],[11,"cmp","","",0,[[["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"add","","",0,[[["ratio"]],["ratio"]]],[11,"add","","",0,[[["t"]],["ratio"]]],[11,"add","","",0,[[["ratio"]],["ratio"]]],[11,"add","","",0,[[["t"]],["ratio"]]],[11,"mul","","",0,[[["ratio"]],["ratio"]]],[11,"mul","","",0,[[["t"]],["ratio"]]],[11,"mul","","",0,[[["ratio"]],["ratio"]]],[11,"mul","","",0,[[["t"]],["ratio"]]],[11,"neg","","",0,[[],["ratio"]]],[11,"add_assign","","",0,[[["self"],["ratio"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["ratio"],["self"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["ratio"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["ratio"],["self"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["ratio"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["ratio"],["self"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["ratio"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["ratio"],["self"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["ratio"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["ratio"],["self"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,[[["str"]],[["ratio"],["parseratioerror"],["result",["ratio","parseratioerror"]]]]],[11,"into","","",0,[[]]],[11,"clone","","",0,[[["self"]],["ratio"]]],[11,"clone","","",1,[[["self"]],["parseratioerror"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,[[["str"],["u32"]],[["ratio"],["parseratioerror"],["result",["ratio","parseratioerror"]]]]],[11,"zero","","",0,[[],["ratio"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"set_zero","","",0,[[["self"]]]],[11,"one","","",0,[[],["ratio"]]],[11,"is_one","","",0,[[["self"]],["bool"]]],[11,"set_one","","",0,[[["self"]]]],[11,"checked_add","","",0,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,"checked_sub","","",0,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,"checked_mul","","",0,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,"checked_div","","",0,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,"inv","","",0,[[],["ratio"]]],[11,"pow","","",0,[[["i8"]],["ratio"]]],[11,"pow","","",0,[[["i8"]],["ratio"]]],[11,"pow","","",0,[[["i16"]],["ratio"]]],[11,"pow","","",0,[[["i16"]],["ratio"]]],[11,"pow","","",0,[[["i32"]],["ratio"]]],[11,"pow","","",0,[[["i32"]],["ratio"]]],[11,"pow","","",0,[[["i64"]],["ratio"]]],[11,"pow","","",0,[[["i64"]],["ratio"]]],[11,"pow","","",0,[[["isize"]],["ratio"]]],[11,"pow","","",0,[[["isize"]],["ratio"]]],[11,"pow","","",0,[[["u8"]],["ratio"]]],[11,"pow","","",0,[[["u8"]],["ratio"]]],[11,"pow","","",0,[[["u16"]],["ratio"]]],[11,"pow","","",0,[[["u16"]],["ratio"]]],[11,"pow","","",0,[[["u32"]],["ratio"]]],[11,"pow","","",0,[[["u32"]],["ratio"]]],[11,"pow","","",0,[[["u64"]],["ratio"]]],[11,"pow","","",0,[[["u64"]],["ratio"]]],[11,"pow","","",0,[[["usize"]],["ratio"]]],[11,"pow","","",0,[[["usize"]],["ratio"]]],[11,"abs","","",0,[[["self"]],["ratio"]]],[11,"abs_sub","","",0,[[["ratio"],["self"]],["ratio"]]],[11,"signum","","",0,[[["self"]],["ratio"]]],[11,"is_positive","","",0,[[["self"]],["bool"]]],[11,"is_negative","","",0,[[["self"]],["bool"]]]],"p":[[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord"]],["partialord"]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord"]],["partialord"]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord"]],["partialord"]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast"]],[["option"],["numcast"]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["i32"],["option",["i32"]]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["option",["f32"]],["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["option",["f64"]],["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[],["t"]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",8,[[],["self"]]],[10,"infinity","","Returns the infinite value.",8,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",8,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",8,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",8,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",8,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",8,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",8,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",8,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[],["self"]]],[11,"to_degrees","","Converts radians to degrees.",8,[[],["self"]]],[11,"to_radians","","Converts degrees to radians.",8,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",8,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",8,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",8,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",8,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",8,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",8,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",9,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[],["self"]]],[10,"PI","","Return Archimedes’ constant `π`.",9,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[],["self"]]],[11,"TAU","","Return the full circle constant `τ`.",9,[[],["self"]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero"]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one"]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",10,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",10,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[["self"]],["bool"]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",12,[[],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",12,[[],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",12,[[],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[["u32"]],["self"]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",18,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",19,[[["u32"],["self"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",20,[[["u32"],["self"]],["option"]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",21,null],[10,"inv","","Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",22,null],[10,"mul_add","","Performs the fused multiply-add operation.",22,[[["a"],["b"]]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[["a"],["self"],["b"]]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",24,[[],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",24,[[],["self"]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",25,[[["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",26,[[["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",27,[[["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",28,[[["u32"],["self"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",29,[[["u32"],["self"]],["self"]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["one"],["usize"],["clone"],["mul"]],[["one"],["clone"],["mul"]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["one"],["usize"],["clone"],["checkedmul"]],[["one"],["clone"],["checkedmul"],["option"]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",30,null],[10,"pow","","Returns `self` to the power `rhs`.",30,[[["rhs"]]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",31,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",31,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",31,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",31,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",31,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",31,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",31,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",31,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",31,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",31,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",31,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",31,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",31,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",31,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",31,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",31,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",31,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",31,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",31,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",31,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",31,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[],["self"]]],[10,"to_degrees","","Converts radians to degrees.",31,[[],["self"]]],[10,"to_radians","","Converts degrees to radians.",31,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",31,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",31,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",31,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",31,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",31,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",31,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",31,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",31,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",31,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",31,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",31,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",31,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",31,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",31,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[],["self"]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed"]],["signed"]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed"]],["signed"]]],[5,"signum","","Returns the sign of the number.",null,[[["signed"]],["signed"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",32,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",32,[[["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",32,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",32,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",32,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",33,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",33,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["number_prefix"] = {"doc":"This is a library for formatting numbers with numeric…","i":[[4,"Prefix","number_prefix","A numeric prefix, either binary or decimal.",null,null],[13,"Kilo","","",0,null],[13,"Mega","","",0,null],[13,"Giga","","",0,null],[13,"Tera","","",0,null],[13,"Peta","","",0,null],[13,"Exa","","",0,null],[13,"Zetta","","",0,null],[13,"Yotta","","",0,null],[13,"Kibi","","",0,null],[13,"Mibi","","",0,null],[13,"Gibi","","",0,null],[13,"Tebi","","",0,null],[13,"Pebi","","",0,null],[13,"Exbi","","",0,null],[13,"Zebi","","",0,null],[13,"Yobi","","",0,null],[4,"NumberPrefix","","The result of trying to apply a prefix to a floating-point…",null,null],[13,"Standalone","","A standalone value is returned when the number is too…",1,null],[13,"Prefixed","","A prefixed value is large enough for prefixes. This holds…",1,null],[8,"PrefixNames","","Formatting methods for prefix, for when you want to output…",null,null],[10,"upper","","Returns the name in uppercase, such as “KILO”.",2,[[["self"]],["str"]]],[10,"caps","","Returns the name with the first letter capitalised, such…",2,[[["self"]],["str"]]],[10,"lower","","Returns the name in lowercase, such as “giga”.",2,[[["self"]],["str"]]],[10,"symbol","","Returns the short-hand symbol, such as “T” (for “tera”).",2,[[["self"]],["str"]]],[8,"Amounts","","Traits for floating-point values for both the possible…",null,null],[18,"NUM_1000","","The constant representing 1000, for decimal prefixes.",3,null],[18,"NUM_1024","","The constant representing 1024, for binary prefixes.",3,null],[10,"is_negative","","Whether this number is negative. This is used internally.",3,[[],["bool"]]],[11,"decimal","","Formats the given floating-point number using decimal…",1,[[["f"]],["self"]]],[11,"binary","","Formats the given floating-point number using binary…",1,[[["f"]],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"upper","","",0,[[["self"]],["str"]]],[11,"caps","","",0,[[["self"]],["str"]]],[11,"lower","","",0,[[["self"]],["str"]]],[11,"symbol","","",0,[[["self"]],["str"]]],[11,"clone","","",0,[[["self"]],["prefix"]]],[11,"clone","","",1,[[["self"]],["numberprefix"]]],[11,"eq","","",0,[[["self"],["prefix"]],["bool"]]],[11,"eq","","",1,[[["self"],["numberprefix"]],["bool"]]],[11,"ne","","",1,[[["self"],["numberprefix"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"Prefix"],[4,"NumberPrefix"],[8,"PrefixNames"],[8,"Amounts"]]};
searchIndex["object"] = {"doc":"`object`","i":[[4,"Architecture","object","A CPU architecture.",null,null],[13,"Unknown","","",0,null],[13,"Aarch64","","",0,null],[13,"Arm","","",0,null],[13,"I386","","",0,null],[13,"Mips","","",0,null],[13,"Wasm32","","",0,null],[13,"X86_64","","",0,null],[4,"AddressSize","","The size of an address value for an architecture.",null,null],[13,"U32","","",1,null],[13,"U64","","",1,null],[4,"BinaryFormat","","A binary file format.",null,null],[13,"Coff","","",2,null],[13,"Elf","","",2,null],[13,"MachO","","",2,null],[13,"Pe","","",2,null],[13,"Wasm","","",2,null],[4,"SectionKind","","The kind of a section.",null,null],[13,"Unknown","","The section kind is unknown.",3,null],[13,"Text","","An executable code section.",3,null],[13,"Data","","A data section.",3,null],[13,"ReadOnlyData","","A read only data section.",3,null],[13,"ReadOnlyString","","A loadable string section.",3,null],[13,"UninitializedData","","An uninitialized data section.",3,null],[13,"Common","","An uninitialized common data section.",3,null],[13,"Tls","","A TLS data section.",3,null],[13,"UninitializedTls","","An uninitialized TLS data section.",3,null],[13,"TlsVariables","","A TLS variables section.",3,null],[13,"OtherString","","A non-loadable string section.",3,null],[13,"Other","","Some other non-loadable section.",3,null],[13,"Debug","","Debug information.",3,null],[13,"Linker","","Information for the linker.",3,null],[13,"Metadata","","Metadata such as symbols or relocations.",3,null],[4,"SymbolKind","","The kind of a symbol.",null,null],[13,"Unknown","","The symbol kind is unknown.",4,null],[13,"Null","","The symbol is a null placeholder.",4,null],[13,"Text","","The symbol is for executable code.",4,null],[13,"Data","","The symbol is for a data object.",4,null],[13,"Section","","The symbol is for a section.",4,null],[13,"File","","The symbol is the name of a file. It precedes symbols…",4,null],[13,"Label","","The symbol is for a code label.",4,null],[13,"Tls","","The symbol is for a thread local storage entity.",4,null],[4,"SymbolScope","","A symbol scope.",null,null],[13,"Unknown","","Unknown scope.",5,null],[13,"Compilation","","Symbol is visible to the compilation unit.",5,null],[13,"Linkage","","Symbol is visible to the static linkage unit.",5,null],[13,"Dynamic","","Symbol is visible to dynamically linked objects.",5,null],[4,"RelocationKind","","The operation used to calculate the result of the…",null,null],[13,"Absolute","","S + A",6,null],[13,"Relative","","S + A - P",6,null],[13,"Got","","G + A - GotBase",6,null],[13,"GotRelative","","G + A - P",6,null],[13,"GotBaseRelative","","GotBase + A - P",6,null],[13,"GotBaseOffset","","S + A - GotBase",6,null],[13,"PltRelative","","L + A - P",6,null],[13,"ImageOffset","","S + A - Image",6,null],[13,"SectionOffset","","S + A - Section",6,null],[13,"SectionIndex","","The index of the section containing the symbol.",6,null],[13,"Elf","","Some other ELF relocation. The value is dependent on the…",6,null],[13,"MachO","","Some other Mach-O relocation. The value is dependent on…",6,null],[12,"value","object::RelocationKind","The relocation type.",7,null],[12,"relative","","Whether the relocation is relative to the place.",7,null],[13,"Coff","object","Some other COFF relocation. The value is dependent on the…",6,null],[4,"RelocationEncoding","","Information about how the result of the relocation…",null,null],[13,"Generic","","Generic encoding.",8,null],[13,"X86Signed","","x86 sign extension at runtime.",8,null],[13,"X86RipRelative","","x86 rip-relative addressing.",8,null],[13,"X86RipRelativeMovq","","x86 rip-relative addressing in movq instruction.",8,null],[13,"X86Branch","","x86 branch instruction.",8,null],[4,"FileFlags","","File flags that are specific to each file format.",null,null],[13,"None","","No file flags.",9,null],[13,"Elf","","ELF file flags.",9,null],[12,"e_flags","object::FileFlags","`e_flags` field in the ELF file header.",10,null],[13,"MachO","object","Mach-O file flags.",9,null],[12,"flags","object::FileFlags","`flags` field in the Mach-O file header.",11,null],[13,"Coff","object","COFF file flags.",9,null],[12,"characteristics","object::FileFlags","`Characteristics` field in the COFF file header.",12,null],[4,"SectionFlags","object","Section flags that are specific to each file format.",null,null],[13,"None","","No section flags.",13,null],[13,"Elf","","ELF section flags.",13,null],[12,"sh_flags","object::SectionFlags","`sh_flags` field in the section header.",14,null],[13,"MachO","object","Mach-O section flags.",13,null],[12,"flags","object::SectionFlags","`flags` field in the section header.",15,null],[13,"Coff","object","COFF section flags.",13,null],[12,"characteristics","object::SectionFlags","`Characteristics` field in the section header.",16,null],[4,"SymbolFlags","object","Symbol flags that are specific to each file format.",null,null],[13,"None","","No symbol flags.",17,null],[13,"Elf","","ELF symbol flags.",17,null],[12,"st_info","object::SymbolFlags","`st_info` field in the ELF symbol.",18,null],[12,"st_other","","`st_other` field in the ELF symbol.",18,null],[13,"MachO","object","Mach-O symbol flags.",17,null],[12,"n_desc","object::SymbolFlags","`n_desc` field in the Mach-O symbol.",19,null],[13,"CoffSection","object","COFF flags for a section symbol.",17,null],[12,"selection","object::SymbolFlags","`Selection` field in the auxiliary symbol for the section.",20,null],[12,"associative_section","","`Number` field in the auxiliary symbol for the section.",20,null],[11,"address_size","object","The size of an address value for this architecture.",0,[[],[["addresssize"],["option",["addresssize"]]]]],[11,"bytes","","The size in bytes of an address value.",1,[[],["u8"]]],[11,"is_bss","","Return true if this section contains zerofill data.",3,[[],["bool"]]],[0,"endian","","Types for compile-time and run-time endianness.",null,null],[3,"LittleEndian","object::endian","Compile-time little endian byte order.",null,null],[3,"BigEndian","","Compile-time big endian byte order.",null,null],[3,"U16","","A `u16` value with an externally specified endianness of…",null,null],[3,"U32","","A `u32` value with an externally specified endianness of…",null,null],[3,"U64","","A `u64` value with an externally specified endianness of…",null,null],[3,"I16","","An `i16` value with an externally specified endianness of…",null,null],[3,"I32","","An `i32` value with an externally specified endianness of…",null,null],[3,"I64","","An `i64` value with an externally specified endianness of…",null,null],[3,"U16Bytes","","An unaligned `u16` value with an externally specified…",null,null],[3,"U32Bytes","","An unaligned `u32` value with an externally specified…",null,null],[3,"U64Bytes","","An unaligned `u64` value with an externally specified…",null,null],[4,"Endianness","","An endianness that is selectable at run-time.",null,null],[13,"Little","","Little endian byte order.",21,null],[13,"Big","","Big endian byte order.",21,null],[6,"NativeEndian","","The native endianness for the target platform.",null,null],[8,"Endian","","A trait for using an endianness specification.",null,null],[10,"from_big_endian","","Construct a specification for the endianness of some values.",22,[[["bool"]],["option"]]],[11,"from_little_endian","","Construct a specification for the endianness of some values.",22,[[["bool"]],["option"]]],[10,"is_big_endian","","Return true for big endian byte order.",22,[[],["bool"]]],[11,"is_little_endian","","Return true for little endian byte order.",22,[[],["bool"]]],[11,"read_u16","","Converts an unsigned 16 bit integer to native endian.",22,[[["u16"]],["u16"]]],[11,"read_u32","","Converts an unsigned 32 bit integer to native endian.",22,[[["u32"]],["u32"]]],[11,"read_u64","","Converts an unsigned 64 bit integer to native endian.",22,[[["u64"]],["u64"]]],[11,"read_i16","","Converts a signed 16 bit integer to native endian.",22,[[["i16"]],["i16"]]],[11,"read_i32","","Converts a signed 32 bit integer to native endian.",22,[[["i32"]],["i32"]]],[11,"read_i64","","Converts a signed 64 bit integer to native endian.",22,[[["i64"]],["i64"]]],[11,"read_u16_bytes","","Converts an unaligned unsigned 16 bit integer to native…",22,[[],["u16"]]],[11,"read_u32_bytes","","Converts an unaligned unsigned 32 bit integer to native…",22,[[],["u32"]]],[11,"read_u64_bytes","","Converts an unaligned unsigned 64 bit integer to native…",22,[[],["u64"]]],[11,"write_u16","","Converts an unsigned 16 bit integer from native endian.",22,[[["u16"]],["u16"]]],[11,"write_u32","","Converts an unsigned 32 bit integer from native endian.",22,[[["u32"]],["u32"]]],[11,"write_u64","","Converts an unsigned 64 bit integer from native endian.",22,[[["u64"]],["u64"]]],[11,"write_i16","","Converts a signed 16 bit integer from native endian.",22,[[["i16"]],["i16"]]],[11,"write_i32","","Converts a signed 32 bit integer from native endian.",22,[[["i32"]],["i32"]]],[11,"write_i64","","Converts a signed 64 bit integer from native endian.",22,[[["i64"]],["i64"]]],[11,"write_u16_bytes","","Converts an unaligned unsigned 16 bit integer from native…",22,[[["u16"]]]],[11,"write_u32_bytes","","Converts an unaligned unsigned 32 bit integer from native…",22,[[["u32"]]]],[11,"write_u64_bytes","","Converts an unaligned unsigned 64 bit integer from native…",22,[[["u64"]]]],[11,"new","","Construct a new value given a native endian value.",23,[[["u16"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",23,[[["e"]],["u16"]]],[11,"set","","Set the value given a native endian value.",23,[[["u16"],["self"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",24,[[["u32"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",24,[[["e"]],["u32"]]],[11,"set","","Set the value given a native endian value.",24,[[["self"],["u32"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",25,[[["u64"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",25,[[["e"]],["u64"]]],[11,"set","","Set the value given a native endian value.",25,[[["self"],["u64"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",26,[[["i16"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",26,[[["e"]],["i16"]]],[11,"set","","Set the value given a native endian value.",26,[[["self"],["i16"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",27,[[["i32"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",27,[[["e"]],["i32"]]],[11,"set","","Set the value given a native endian value.",27,[[["i32"],["self"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",28,[[["i64"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",28,[[["e"]],["i64"]]],[11,"set","","Set the value given a native endian value.",28,[[["i64"],["self"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",29,[[["u16"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",29,[[["e"]],["u16"]]],[11,"set","","Set the value given a native endian value.",29,[[["u16"],["self"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",30,[[["u32"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",30,[[["e"]],["u32"]]],[11,"set","","Set the value given a native endian value.",30,[[["self"],["u32"],["e"]]]],[11,"new","","Construct a new value given a native endian value.",31,[[["u64"],["e"]],["self"]]],[11,"get","","Return the value as a native endian value.",31,[[["e"]],["u64"]]],[11,"set","","Set the value given a native endian value.",31,[[["self"],["u64"],["e"]]]],[0,"pod","object","Tools for converting file format structures to and from…",null,null],[3,"Bytes","object::pod","A newtype for byte slices.",null,null],[12,"0","","",32,null],[5,"from_bytes","","Cast a byte slice to a `Pod` type.",null,[[],["result"]]],[5,"slice_from_bytes","","Cast a byte slice to a slice of a `Pod` type.",null,[[["usize"]],["result"]]],[5,"bytes_of","","Cast a `Pod` type to a byte slice.",null,[[["t"]]]],[8,"Pod","","A trait for types that can safely be converted from and to…",null,null],[11,"len","","Return the length of the byte slice.",32,[[["self"]],["usize"]]],[11,"is_empty","","Return true if the byte slice is empty.",32,[[["self"]],["bool"]]],[11,"skip","","Skip over the given number of bytes at the start of the…",32,[[["self"],["usize"]],["result"]]],[11,"read_bytes","","Return a reference to the given number of bytes at the…",32,[[["self"],["usize"]],[["result",["bytes"]],["bytes"]]]],[11,"read_bytes_at","","Return a reference to the given number of bytes at the…",32,[[["usize"]],[["result",["bytes"]],["bytes"]]]],[11,"read","","Return a reference to a `Pod` struct at the start of the…",32,[[["self"]],[["result"],["t"]]]],[11,"read_at","","Return a reference to a `Pod` struct at the given offset…",32,[[["usize"]],[["result"],["t"]]]],[11,"read_slice","","Return a reference to a slice of `Pod` structs at the…",32,[[["self"],["usize"]],["result"]]],[11,"read_slice_at","","Return a reference to a slice of `Pod` structs at the…",32,[[["usize"]],["result"]]],[11,"read_string","","Read a null terminated string.",32,[[["self"]],["result"]]],[11,"read_string_at","","Read a null terminated string at an offset.",32,[[["usize"]],["result"]]],[0,"read","object","Interface for reading object files.",null,null],[3,"StringTable","object::read","A table of zero-terminated strings.",null,null],[3,"File","","An object file.",null,null],[3,"SegmentIterator","","An iterator over the segments of a `File`.",null,null],[3,"Segment","","A segment of a `File`.",null,null],[3,"SectionIterator","","An iterator of the sections of a `File`.",null,null],[3,"Section","","A Section of a File",null,null],[3,"SymbolIterator","","An iterator over symbol table entries.",null,null],[3,"RelocationIterator","","An iterator over relocation entries",null,null],[3,"Error","","The error type used within the read module.",null,null],[3,"SectionIndex","","The index used to identify a section of a file.",null,null],[12,"0","","",33,null],[3,"SymbolIndex","","The index used to identify a symbol of a file.",null,null],[12,"0","","",34,null],[3,"Symbol","","A symbol table entry.",null,null],[3,"SymbolMap","","A map from addresses to symbols.",null,null],[3,"Relocation","","A relocation entry.",null,null],[3,"CompressedData","","Data that may be compressed.",null,null],[12,"format","","The data compression format.",35,null],[12,"data","","The compressed data.",35,null],[12,"uncompressed_size","","The uncompressed data size.",35,null],[4,"SymbolSection","","The section where a symbol is defined.",null,null],[13,"Unknown","","The section is unknown.",36,null],[13,"None","","The section is not applicable for this symbol (such as…",36,null],[13,"Undefined","","The symbol is undefined.",36,null],[13,"Absolute","","The symbol has an absolute value.",36,null],[13,"Common","","The symbol is a zero-initialized symbol that will be…",36,null],[13,"Section","","The symbol is defined in the given section.",36,null],[4,"RelocationTarget","","The target referenced by a relocation.",null,null],[13,"Symbol","","The target is a symbol.",37,null],[13,"Section","","The target is a section.",37,null],[4,"CompressionFormat","","A data compression format.",null,null],[13,"None","","The data is uncompressed.",38,null],[13,"Unknown","","The data is compressed, but the compression format is…",38,null],[13,"Zlib","","ZLIB/DEFLATE.",38,null],[11,"new","","Interpret the given data as a string table.",39,[[["bytes"]],["self"]]],[11,"get","","Return the string at the given offset.",39,[[["u32"],["self"]],["result"]]],[11,"parse","","Parse the raw file data.",40,[[],["result"]]],[11,"format","","Return the file format.",40,[[["self"]],["binaryformat"]]],[0,"coff","","Support for reading Windows COFF files.",null,null],[3,"CoffFile","object::read::coff","A COFF object file.",null,null],[3,"SectionTable","","The table of section headers in a COFF or PE file.",null,null],[3,"CoffSegmentIterator","","An iterator over the loadable sections of a `CoffFile`.",null,null],[3,"CoffSegment","","A loadable section of a `CoffFile`.",null,null],[3,"CoffSectionIterator","","An iterator over the sections of a `CoffFile`.",null,null],[3,"CoffSection","","A section of a `CoffFile`.",null,null],[3,"SymbolTable","","A table of symbol entries in a COFF or PE file.",null,null],[3,"CoffSymbolIterator","","An iterator over the symbols of a `CoffFile`.",null,null],[3,"CoffRelocationIterator","","An iterator over the relocations in a `CoffSection`.",null,null],[11,"parse","","Parse the raw COFF file data.",41,[[],["result"]]],[11,"parse","","Parse the section table.",42,[[["imagefileheader"],["bytes"]],["result"]]],[11,"iter","","Iterate over the section headers.",42,[[["self"]],[["imagesectionheader"],["iter",["imagesectionheader"]]]]],[11,"is_empty","","Return true if the section table is empty.",42,[[["self"]],["bool"]]],[11,"len","","The number of section headers.",42,[[["self"]],["usize"]]],[11,"section","","Return the section header at the given index.",42,[[["self"],["usize"]],[["result",["imagesectionheader"]],["imagesectionheader"]]]],[11,"section_by_name","","Return the section header with the given name.",42,[[["self"],["stringtable"]],["option"]]],[11,"parse","","Read the symbol table.",43,[[["imagefileheader"],["bytes"]],["result"]]],[11,"strings","","Return the string table used for the symbol names.",43,[[["self"]],["stringtable"]]],[11,"is_empty","","Return true if the symbol table is empty.",43,[[["self"]],["bool"]]],[11,"len","","The number of symbols.",43,[[["self"]],["usize"]]],[11,"symbol","","Return the symbol table entry at the given index.",43,[[["self"],["usize"]],[["option",["imagesymbol"]],["imagesymbol"]]]],[11,"get","","Return the symbol table entry or auxilliary record at the…",43,[[["self"],["usize"]],[["t"],["option"]]]],[0,"elf","object::read","Support for reading ELF files.",null,null],[3,"ElfFile","object::read::elf","A partially parsed ELF file.",null,null],[3,"ElfSegmentIterator","","An iterator over the segments of an `ElfFile`.",null,null],[3,"ElfSegment","","A segment of an `ElfFile`.",null,null],[3,"SectionTable","","The table of section headers in an ELF file.",null,null],[3,"ElfSectionIterator","","An iterator over the sections of an `ElfFile`.",null,null],[3,"ElfSection","","A section of an `ElfFile`.",null,null],[3,"SymbolTable","","A table of symbol entries in an ELF file.",null,null],[3,"ElfSymbolIterator","","An iterator over the symbols of an `ElfFile`.",null,null],[3,"RelocationSections","","A mapping from section index to associated relocation…",null,null],[3,"ElfRelocationIterator","","An iterator over the relocations for an `ElfSection`.",null,null],[3,"ElfNoteIterator","","An iterator over the notes in an `ElfSegment` or…",null,null],[3,"ElfNote","","A parsed `NoteHeader`.",null,null],[11,"parse","","Parse the raw ELF file data.",44,[[],["result"]]],[11,"new","","Create a new section table.",45,[[["stringtable"]],["self"]]],[11,"iter","","Iterate over the section headers.",45,[[["self"]],["iter"]]],[11,"is_empty","","Return true if the section table is empty.",45,[[["self"]],["bool"]]],[11,"len","","The number of section headers.",45,[[["self"]],["usize"]]],[11,"section","","Return the section header at the given index.",45,[[["self"],["usize"]],["result"]]],[11,"section_by_name","","Return the section header with the given name.",45,[[["self"]],["option"]]],[11,"section_name","","Return the section name for the given section header.",45,[[["self"]],["result"]]],[11,"symbols","","Return the symbol table of the given section type.",45,[[["bytes"],["u32"],["self"]],[["result",["symboltable"]],["symboltable"]]]],[11,"relocation_sections","","Create a mapping from section index to associated…",45,[[["self"],["usize"]],[["relocationsections"],["result",["relocationsections"]]]]],[11,"parse","","Parse the symbol table of the given section type.",46,[[["bytes"],["u32"],["sectiontable"]],[["result",["symboltable"]],["symboltable"]]]],[11,"section","","Return the section index of this symbol table.",46,[[["self"]],["usize"]]],[11,"strings","","Return the string table used for the symbol names.",46,[[["self"]],["stringtable"]]],[11,"iter","","Iterate over the symbols.",46,[[["self"]],["iter"]]],[11,"is_empty","","Return true if the symbol table is empty.",46,[[["self"]],["bool"]]],[11,"symbol","","Return the symbol at the given index.",46,[[["self"],["usize"]],["result"]]],[11,"shndx","","Return the extended section index for the given symbol if…",46,[[["self"],["usize"]],[["u32"],["option",["u32"]]]]],[11,"parse","","Create a new mapping using the section table.",47,[[["sectiontable"],["usize"]],["result"]]],[11,"get","","Given a section index, return the section index of the…",47,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"n_type","","Return the `n_type` field of the `NoteHeader`.",48,[[["self"]],["u32"]]],[11,"n_namesz","","Return the `n_namesz` field of the `NoteHeader`.",48,[[["self"]],["u32"]]],[11,"n_descsz","","Return the `n_descsz` field of the `NoteHeader`.",48,[[["self"]],["u32"]]],[11,"name","","Return the bytes for the name field following the…",48,[[["self"]]]],[11,"desc","","Return the bytes for the desc field following the…",48,[[["self"]]]],[6,"ElfFile32","","A 32-bit ELF object file.",null,null],[6,"ElfFile64","","A 64-bit ELF object file.",null,null],[6,"ElfSegmentIterator32","","An iterator over the segments of an `ElfFile32`.",null,null],[6,"ElfSegmentIterator64","","An iterator over the segments of an `ElfFile64`.",null,null],[6,"ElfSegment32","","A segment of an `ElfFile32`.",null,null],[6,"ElfSegment64","","A segment of an `ElfFile64`.",null,null],[6,"ElfSectionIterator32","","An iterator over the sections of an `ElfFile32`.",null,null],[6,"ElfSectionIterator64","","An iterator over the sections of an `ElfFile64`.",null,null],[6,"ElfSection32","","A section of an `ElfFile32`.",null,null],[6,"ElfSection64","","A section of an `ElfFile64`.",null,null],[6,"ElfSymbolIterator32","","An iterator over the symbols of an `ElfFile32`.",null,null],[6,"ElfSymbolIterator64","","An iterator over the symbols of an `ElfFile64`.",null,null],[6,"ElfRelocationIterator32","","An iterator over the relocations for an `ElfSection32`.",null,null],[6,"ElfRelocationIterator64","","An iterator over the relocations for an `ElfSection64`.",null,null],[6,"ElfNote32","","A parsed `NoteHeader32`.",null,null],[6,"ElfNote64","","A parsed `NoteHeader64`.",null,null],[8,"FileHeader","","A trait for generic access to `FileHeader32` and…",null,null],[16,"Word","","",49,null],[16,"Sword","","",49,null],[16,"Endian","","",49,null],[16,"ProgramHeader","","",49,null],[16,"SectionHeader","","",49,null],[16,"CompressionHeader","","",49,null],[16,"NoteHeader","","",49,null],[16,"Sym","","",49,null],[16,"Rel","","",49,null],[16,"Rela","","",49,null],[10,"is_type_64","","Return true if this type is a 64-bit header.",49,[[["self"]],["bool"]]],[10,"e_ident","","",49,[[["self"]],["ident"]]],[10,"e_type","","",49,[[["self"]],["u16"]]],[10,"e_machine","","",49,[[["self"]],["u16"]]],[10,"e_version","","",49,[[["self"]],["u32"]]],[10,"e_entry","","",49,[[["self"]]]],[10,"e_phoff","","",49,[[["self"]]]],[10,"e_shoff","","",49,[[["self"]]]],[10,"e_flags","","",49,[[["self"]],["u32"]]],[10,"e_ehsize","","",49,[[["self"]],["u16"]]],[10,"e_phentsize","","",49,[[["self"]],["u16"]]],[10,"e_phnum","","",49,[[["self"]],["u16"]]],[10,"e_shentsize","","",49,[[["self"]],["u16"]]],[10,"e_shnum","","",49,[[["self"]],["u16"]]],[10,"e_shstrndx","","",49,[[["self"]],["u16"]]],[11,"parse","","Read the file header.",49,[[["bytes"]],[["result"],["self"]]]],[11,"is_supported","","Check that the ident field in the file header is a…",49,[[["self"]],["bool"]]],[11,"is_class_32","","",49,[[["self"]],["bool"]]],[11,"is_class_64","","",49,[[["self"]],["bool"]]],[11,"is_little_endian","","",49,[[["self"]],["bool"]]],[11,"is_big_endian","","",49,[[["self"]],["bool"]]],[11,"endian","","",49,[[["self"]],["result"]]],[11,"section_0","","Return the first section header, if present.",49,[[["bytes"],["self"]],[["result",["option"]],["option"]]]],[11,"phnum","","Return the `e_phnum` field of the header. Handles extended…",49,[[["bytes"],["self"]],[["usize"],["result",["usize"]]]]],[11,"shnum","","Return the `e_shnum` field of the header. Handles extended…",49,[[["bytes"],["self"]],[["usize"],["result",["usize"]]]]],[11,"shstrndx","","Return the `e_shstrndx` field of the header. Handles…",49,[[["bytes"],["self"]],[["result",["u32"]],["u32"]]]],[11,"program_headers","","Return the slice of program headers.",49,[[["bytes"],["self"]],["result"]]],[11,"section_headers","","Return the slice of section headers.",49,[[["bytes"],["self"]],["result"]]],[11,"section_strings","","Return the string table for the section headers.",49,[[["bytes"],["self"]],[["result",["stringtable"]],["stringtable"]]]],[11,"sections","","Return the section table.",49,[[["bytes"],["self"]],[["sectiontable"],["result",["sectiontable"]]]]],[8,"ProgramHeader","","A trait for generic access to `ProgramHeader32` and…",null,null],[16,"Word","","",50,null],[16,"Endian","","",50,null],[16,"Elf","","",50,null],[10,"p_type","","",50,[[["self"]],["u32"]]],[10,"p_flags","","",50,[[["self"]],["u32"]]],[10,"p_offset","","",50,[[["self"]]]],[10,"p_vaddr","","",50,[[["self"]]]],[10,"p_paddr","","",50,[[["self"]]]],[10,"p_filesz","","",50,[[["self"]]]],[10,"p_memsz","","",50,[[["self"]]]],[10,"p_align","","",50,[[["self"]]]],[11,"file_range","","Return the offset and size of the segment in the file.",50,[[["self"]]]],[11,"data","","Return the segment data.",50,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"notes","","Return a note iterator for the segment data.",50,[[["bytes"],["self"]],[["option",["elfnoteiterator"]],["result",["option"]]]]],[8,"SectionHeader","","A trait for generic access to `SectionHeader32` and…",null,null],[16,"Word","","",51,null],[16,"Endian","","",51,null],[16,"Elf","","",51,null],[10,"sh_name","","",51,[[["self"]],["u32"]]],[10,"sh_type","","",51,[[["self"]],["u32"]]],[10,"sh_flags","","",51,[[["self"]]]],[10,"sh_addr","","",51,[[["self"]]]],[10,"sh_offset","","",51,[[["self"]]]],[10,"sh_size","","",51,[[["self"]]]],[10,"sh_link","","",51,[[["self"]],["u32"]]],[10,"sh_info","","",51,[[["self"]],["u32"]]],[10,"sh_addralign","","",51,[[["self"]]]],[10,"sh_entsize","","",51,[[["self"]]]],[11,"file_range","","Return the offset and size of the section in the file.",51,[[["self"]],["option"]]],[11,"data","","Return the section data.",51,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"data_as_array","","Return the section data as a slice of the given type.",51,[[["bytes"],["self"]],["result"]]],[11,"notes","","Return a note iterator for the section data.",51,[[["bytes"],["self"]],[["option",["elfnoteiterator"]],["result",["option"]]]]],[8,"Sym","","A trait for generic access to `Sym32` and `Sym64`.",null,null],[16,"Word","","",52,null],[16,"Endian","","",52,null],[10,"st_name","","",52,[[["self"]],["u32"]]],[10,"st_info","","",52,[[["self"]],["u8"]]],[10,"st_bind","","",52,[[["self"]],["u8"]]],[10,"st_type","","",52,[[["self"]],["u8"]]],[10,"st_other","","",52,[[["self"]],["u8"]]],[10,"st_visibility","","",52,[[["self"]],["u8"]]],[10,"st_shndx","","",52,[[["self"]],["u16"]]],[10,"st_value","","",52,[[["self"]]]],[10,"st_size","","",52,[[["self"]]]],[11,"name","","Parse the symbol name from the string table.",52,[[["self"],["stringtable"]],["result"]]],[8,"Rela","","A trait for generic access to `Rela32` and `Rela64`.",null,null],[16,"Word","","",53,null],[16,"Sword","","",53,null],[16,"Endian","","",53,null],[10,"r_offset","","",53,[[["self"]]]],[10,"r_info","","",53,[[["self"]]]],[10,"r_addend","","",53,[[["self"]]]],[10,"r_sym","","",53,[[["self"]],["u32"]]],[10,"r_type","","",53,[[["self"]],["u32"]]],[8,"CompressionHeader","","A trait for generic access to `CompressionHeader32` and…",null,null],[16,"Word","","",54,null],[16,"Endian","","",54,null],[10,"ch_type","","",54,[[["self"]],["u32"]]],[10,"ch_size","","",54,[[["self"]]]],[10,"ch_addralign","","",54,[[["self"]]]],[8,"NoteHeader","","A trait for generic access to `NoteHeader32` and…",null,null],[16,"Endian","","",55,null],[10,"n_namesz","","",55,[[["self"]],["u32"]]],[10,"n_descsz","","",55,[[["self"]],["u32"]]],[10,"n_type","","",55,[[["self"]],["u32"]]],[0,"macho","object::read","Support for reading Mach-O files.",null,null],[3,"MachOFile","object::read::macho","A partially parsed Mach-O file.",null,null],[3,"MachOSegmentIterator","","An iterator over the segments of a `MachOFile`.",null,null],[3,"MachOSegment","","A segment of a `MachOFile`.",null,null],[3,"MachOSectionIterator","","An iterator over the sections of a `MachOFile`.",null,null],[3,"MachOSection","","A section of a `MachOFile`.",null,null],[3,"SymbolTable","","A table of symbol entries in a Mach-O file.",null,null],[3,"MachOSymbolIterator","","An iterator over the symbols of a `MachOFile`.",null,null],[3,"MachORelocationIterator","","An iterator over the relocations in a `MachOSection`.",null,null],[11,"parse","","Parse the raw Mach-O file data.",56,[[],["result"]]],[11,"strings","","Return the string table used for the symbol names.",57,[[["self"]],["stringtable"]]],[11,"iter","","Iterate over the symbols.",57,[[["self"]],["iter"]]],[11,"is_empty","","Return true if the symbol table is empty.",57,[[["self"]],["bool"]]],[11,"symbol","","Return the symbol at the given index.",57,[[["self"],["usize"]],["result"]]],[6,"MachOFile32","","A 32-bit Mach-O object file.",null,null],[6,"MachOFile64","","A 64-bit Mach-O object file.",null,null],[6,"MachOSegmentIterator32","","An iterator over the segments of a `MachOFile32`.",null,null],[6,"MachOSegmentIterator64","","An iterator over the segments of a `MachOFile64`.",null,null],[6,"MachOSegment32","","A segment of a `MachOFile32`.",null,null],[6,"MachOSegment64","","A segment of a `MachOFile64`.",null,null],[6,"MachOSectionIterator32","","An iterator over the sections of a `MachOFile32`.",null,null],[6,"MachOSectionIterator64","","An iterator over the sections of a `MachOFile64`.",null,null],[6,"MachOSection32","","A section of a `MachOFile32`.",null,null],[6,"MachOSection64","","A section of a `MachOFile64`.",null,null],[6,"MachOSymbolIterator32","","An iterator over the symbols of a `MachOFile32`.",null,null],[6,"MachOSymbolIterator64","","An iterator over the symbols of a `MachOFile64`.",null,null],[6,"MachORelocationIterator32","","An iterator over the relocations in a `MachOSection32`.",null,null],[6,"MachORelocationIterator64","","An iterator over the relocations in a `MachOSection64`.",null,null],[8,"MachHeader","","A trait for generic access to `MachHeader32` and…",null,null],[16,"Word","","",58,null],[16,"Endian","","",58,null],[16,"Segment","","",58,null],[16,"Section","","",58,null],[16,"Nlist","","",58,null],[10,"is_type_64","","Return true if this type is a 64-bit header.",58,[[["self"]],["bool"]]],[10,"is_big_endian","","Return true if the `magic` field signifies big-endian.",58,[[["self"]],["bool"]]],[10,"is_little_endian","","Return true if the `magic` field signifies little-endian.",58,[[["self"]],["bool"]]],[10,"magic","","",58,[[["self"]],["u32"]]],[10,"cputype","","",58,[[["self"]],["u32"]]],[10,"cpusubtype","","",58,[[["self"]],["u32"]]],[10,"filetype","","",58,[[["self"]],["u32"]]],[10,"ncmds","","",58,[[["self"]],["u32"]]],[10,"sizeofcmds","","",58,[[["self"]],["u32"]]],[10,"flags","","",58,[[["self"]],["u32"]]],[11,"parse","","Read the file header.",58,[[["bytes"]],[["result"],["self"]]]],[11,"is_supported","","",58,[[["self"]],["bool"]]],[11,"endian","","",58,[[["self"]],["result"]]],[11,"load_commands","","",58,[[["bytes"],["self"]],[["result",["macholoadcommanditerator"]],["macholoadcommanditerator"]]]],[11,"uuid","","Return the UUID from the `LC_UUID` load command, if one is…",58,[[["bytes"],["self"]],[["result",["option"]],["option"]]]],[8,"Segment","","A trait for generic access to `SegmentCommand32` and…",null,null],[16,"Word","","",59,null],[16,"Endian","","",59,null],[16,"Section","","",59,null],[10,"from_command","","",59,[[["macholoadcommand"]],[["result",["option"]],["option"]]]],[10,"cmd","","",59,[[["self"]],["u32"]]],[10,"cmdsize","","",59,[[["self"]],["u32"]]],[10,"segname","","",59,[[["self"]]]],[10,"vmaddr","","",59,[[["self"]]]],[10,"vmsize","","",59,[[["self"]]]],[10,"fileoff","","",59,[[["self"]]]],[10,"filesize","","",59,[[["self"]]]],[10,"maxprot","","",59,[[["self"]],["u32"]]],[10,"initprot","","",59,[[["self"]],["u32"]]],[10,"nsects","","",59,[[["self"]],["u32"]]],[10,"flags","","",59,[[["self"]],["u32"]]],[11,"name","","Return the `segname` bytes up until the null terminator.",59,[[["self"]]]],[11,"file_range","","Return the offset and size of the segment in the file.",59,[[["self"]]]],[11,"data","","Get the segment data from the file data.",59,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"sections","","Get the array of sections from the data following the…",59,[[["bytes"],["self"]],["result"]]],[8,"Section","","A trait for generic access to `Section32` and `Section64`.",null,null],[16,"Word","","",60,null],[16,"Endian","","",60,null],[10,"sectname","","",60,[[["self"]]]],[10,"segname","","",60,[[["self"]]]],[10,"addr","","",60,[[["self"]]]],[10,"size","","",60,[[["self"]]]],[10,"offset","","",60,[[["self"]],["u32"]]],[10,"align","","",60,[[["self"]],["u32"]]],[10,"reloff","","",60,[[["self"]],["u32"]]],[10,"nreloc","","",60,[[["self"]],["u32"]]],[10,"flags","","",60,[[["self"]],["u32"]]],[11,"name","","Return the `sectname` bytes up until the null terminator.",60,[[["self"]]]],[11,"segment_name","","Return the `segname` bytes up until the null terminator.",60,[[["self"]]]],[11,"file_range","","Return the offset and size of the section in the file.",60,[[["self"]],["option"]]],[11,"data","","Return the section data.",60,[[["self"],["bytes"]],[["result",["bytes"]],["bytes"]]]],[11,"relocations","","Return the relocation array.",60,[[["self"],["bytes"]],["result"]]],[8,"Nlist","","A trait for generic access to `Nlist32` and `Nlist64`.",null,null],[16,"Word","","",61,null],[16,"Endian","","",61,null],[10,"n_strx","","",61,[[["self"]],["u32"]]],[10,"n_type","","",61,[[["self"]],["u8"]]],[10,"n_sect","","",61,[[["self"]],["u8"]]],[10,"n_desc","","",61,[[["self"]],["u16"]]],[10,"n_value","","",61,[[["self"]]]],[11,"name","","",61,[[["stringtable"],["self"]],["result"]]],[11,"is_undefined","","",61,[[["self"]],["bool"]]],[0,"pe","object::read","Support for reading ELF files.",null,null],[3,"PeFile","object::read::pe","A PE object file.",null,null],[3,"PeSegmentIterator","","An iterator over the loadable sections of a `PeFile`.",null,null],[3,"PeSegment","","A loadable section of a `PeFile`.",null,null],[3,"PeSectionIterator","","An iterator over the sections of a `PeFile`.",null,null],[3,"PeSection","","A section of a `PeFile`.",null,null],[3,"PeRelocationIterator","","An iterator over the relocations in an `PeSection`.",null,null],[3,"SectionTable","","The table of section headers in a COFF or PE file.",null,null],[3,"SymbolTable","","A table of symbol entries in a COFF or PE file.",null,null],[11,"optional_header_magic","","Find the optional header and read the…",62,[[],[["result",["u16"]],["u16"]]]],[11,"parse","","Parse the raw PE file data.",62,[[],["result"]]],[6,"PeFile32","","A PE32 (32-bit) image file.",null,null],[6,"PeFile64","","A PE32+ (64-bit) image file.",null,null],[6,"PeSegmentIterator32","","An iterator over the loadable sections of a `PeFile32`.",null,null],[6,"PeSegmentIterator64","","An iterator over the loadable sections of a `PeFile64`.",null,null],[6,"PeSegment32","","A loadable section of a `PeFile32`.",null,null],[6,"PeSegment64","","A loadable section of a `PeFile64`.",null,null],[6,"PeSectionIterator32","","An iterator over the sections of a `PeFile32`.",null,null],[6,"PeSectionIterator64","","An iterator over the sections of a `PeFile64`.",null,null],[6,"PeSection32","","A section of a `PeFile32`.",null,null],[6,"PeSection64","","A section of a `PeFile64`.",null,null],[8,"ImageNtHeaders","","A trait for generic access to `ImageNtHeaders32` and…",null,null],[16,"ImageOptionalHeader","","",63,null],[10,"is_type_64","","Return true if this type is a 64-bit header.",63,[[["self"]],["bool"]]],[10,"is_valid_optional_magic","","Return true if the magic field in the optional header is…",63,[[["self"]],["bool"]]],[10,"signature","","Return the signature",63,[[["self"]],["u32"]]],[10,"file_header","","Return the file header.",63,[[["self"]],["imagefileheader"]]],[10,"optional_header","","Return the optional header.",63,[[["self"]]]],[11,"parse","","Read the NT headers, including the data directories.",63,[[["imagedosheader"],["bytes"]],["result"]]],[11,"sections","","Read the section table.",63,[[["bytes"],["self"]],[["sectiontable"],["result",["sectiontable"]]]]],[11,"symbols","","Read the symbol table and string table.",63,[[["bytes"],["self"]],[["result",["symboltable"]],["symboltable"]]]],[8,"ImageOptionalHeader","","A trait for generic access to `ImageOptionalHeader32` and…",null,null],[10,"magic","","",64,[[["self"]],["u16"]]],[10,"major_linker_version","","",64,[[["self"]],["u8"]]],[10,"minor_linker_version","","",64,[[["self"]],["u8"]]],[10,"size_of_code","","",64,[[["self"]],["u32"]]],[10,"size_of_initialized_data","","",64,[[["self"]],["u32"]]],[10,"size_of_uninitialized_data","","",64,[[["self"]],["u32"]]],[10,"address_of_entry_point","","",64,[[["self"]],["u32"]]],[10,"base_of_code","","",64,[[["self"]],["u32"]]],[10,"image_base","","",64,[[["self"]],["u64"]]],[10,"section_alignment","","",64,[[["self"]],["u32"]]],[10,"file_alignment","","",64,[[["self"]],["u32"]]],[10,"major_operating_system_version","","",64,[[["self"]],["u16"]]],[10,"minor_operating_system_version","","",64,[[["self"]],["u16"]]],[10,"major_image_version","","",64,[[["self"]],["u16"]]],[10,"minor_image_version","","",64,[[["self"]],["u16"]]],[10,"major_subsystem_version","","",64,[[["self"]],["u16"]]],[10,"minor_subsystem_version","","",64,[[["self"]],["u16"]]],[10,"win32_version_value","","",64,[[["self"]],["u32"]]],[10,"size_of_image","","",64,[[["self"]],["u32"]]],[10,"size_of_headers","","",64,[[["self"]],["u32"]]],[10,"check_sum","","",64,[[["self"]],["u32"]]],[10,"subsystem","","",64,[[["self"]],["u16"]]],[10,"dll_characteristics","","",64,[[["self"]],["u16"]]],[10,"size_of_stack_reserve","","",64,[[["self"]],["u64"]]],[10,"size_of_stack_commit","","",64,[[["self"]],["u64"]]],[10,"size_of_heap_reserve","","",64,[[["self"]],["u64"]]],[10,"size_of_heap_commit","","",64,[[["self"]],["u64"]]],[10,"loader_flags","","",64,[[["self"]],["u32"]]],[10,"number_of_rva_and_sizes","","",64,[[["self"]],["u32"]]],[6,"Result","object::read","The result type used within the read module.",null,null],[6,"NativeFile","","The native executable file for the target platform.",null,null],[8,"Object","","An object file.",null,null],[16,"Segment","","A segment in the object file.",65,null],[16,"SegmentIterator","","An iterator over the segments in the object file.",65,null],[16,"Section","","A section in the object file.",65,null],[16,"SectionIterator","","An iterator over the sections in the object file.",65,null],[16,"SymbolIterator","","An iterator over the symbols in the object file.",65,null],[10,"architecture","","Get the architecture type of the file.",65,[[["self"]],["architecture"]]],[11,"endianness","","Get the endianness of the file.",65,[[["self"]],["endianness"]]],[10,"is_little_endian","","Return true if the file is little endian, false if it is…",65,[[["self"]],["bool"]]],[10,"is_64","","Return true if the file can contain 64-bit addresses.",65,[[["self"]],["bool"]]],[10,"segments","","Get an iterator over the segments in the file.",65,[[["self"]]]],[10,"entry","","Get the entry point address of the binary",65,[[["self"]],["u64"]]],[10,"section_by_name","","Get the section named `section_name`, if such a section…",65,[[["str"],["self"]],["option"]]],[10,"section_by_index","","Get the section at the given index.",65,[[["sectionindex"],["self"]],["result"]]],[10,"sections","","Get an iterator over the sections in the file.",65,[[["self"]]]],[10,"symbol_by_index","","Get the debugging symbol at the given index.",65,[[["self"],["symbolindex"]],[["result",["symbol"]],["symbol"]]]],[10,"symbols","","Get an iterator over the debugging symbols in the file.",65,[[["self"]]]],[11,"symbol_data","","Get the data for the given symbol.",65,[[["symbol"],["self"]],[["result",["option"]],["option"]]]],[10,"dynamic_symbols","","Get an iterator over the dynamic linking symbols in the…",65,[[["self"]]]],[10,"symbol_map","","Construct a map from addresses to symbols.",65,[[["self"]],["symbolmap"]]],[10,"has_debug_symbols","","Return true if the file contains debug information…",65,[[["self"]],["bool"]]],[11,"mach_uuid","","The UUID from a Mach-O `LC_UUID` load command.",65,[[["self"]],[["result",["option"]],["option"]]]],[11,"build_id","","The build ID from an ELF `NT_GNU_BUILD_ID` note.",65,[[["self"]],[["result",["option"]],["option"]]]],[11,"gnu_debuglink","","The filename and CRC from a `.gnu_debuglink` section.",65,[[["self"]],[["result",["option"]],["option"]]]],[10,"flags","","File flags that are specific to each file format.",65,[[["self"]],["fileflags"]]],[8,"ObjectSegment","","A loadable segment defined in an object file.",null,null],[10,"address","","Returns the virtual address of the segment.",66,[[["self"]],["u64"]]],[10,"size","","Returns the size of the segment in memory.",66,[[["self"]],["u64"]]],[10,"align","","Returns the alignment of the segment in memory.",66,[[["self"]],["u64"]]],[10,"file_range","","Returns the offset and size of the segment in the file.",66,[[["self"]]]],[10,"data","","Returns a reference to the file contents of the segment.",66,[[["self"]],["result"]]],[10,"data_range","","Return the segment data in the given range.",66,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[10,"name","","Returns the name of the segment.",66,[[["self"]],[["result",["option"]],["option",["str"]]]]],[8,"ObjectSection","","A section defined in an object file.",null,null],[16,"RelocationIterator","","An iterator over the relocations for a section.",67,null],[10,"index","","Returns the section index.",67,[[["self"]],["sectionindex"]]],[10,"address","","Returns the address of the section.",67,[[["self"]],["u64"]]],[10,"size","","Returns the size of the section in memory.",67,[[["self"]],["u64"]]],[10,"align","","Returns the alignment of the section in memory.",67,[[["self"]],["u64"]]],[10,"file_range","","Returns offset and size of on-disk segment (if any).",67,[[["self"]],["option"]]],[10,"data","","Returns the raw contents of the section.",67,[[["self"]],["result"]]],[10,"data_range","","Return the raw contents of the section data in the given…",67,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[10,"compressed_data","","Returns the potentially compressed contents of the…",67,[[["self"]],[["compresseddata"],["result",["compresseddata"]]]]],[11,"uncompressed_data","","Returns the uncompressed contents of the section.",67,[[["self"]],[["result",["cow"]],["cow"]]]],[10,"name","","Returns the name of the section.",67,[[["self"]],[["str"],["result",["str"]]]]],[10,"segment_name","","Returns the name of the segment for this section.",67,[[["self"]],[["result",["option"]],["option",["str"]]]]],[10,"kind","","Return the kind of this section.",67,[[["self"]],["sectionkind"]]],[10,"relocations","","Get the relocations for this section.",67,[[["self"]]]],[10,"flags","","Section flags that are specific to each file format.",67,[[["self"]],["sectionflags"]]],[11,"index","","Returns the section index for the section where the symbol…",36,[[],[["sectionindex"],["option",["sectionindex"]]]]],[11,"kind","","Return the kind of this symbol.",68,[[["self"]],["symbolkind"]]],[11,"section","","Returns the section where the symbol is defined.",68,[[["self"]],["symbolsection"]]],[11,"section_index","","Returns the section index for the section containing this…",68,[[["self"]],[["sectionindex"],["option",["sectionindex"]]]]],[11,"is_undefined","","Return true if the symbol is undefined.",68,[[["self"]],["bool"]]],[11,"is_weak","","Return true if the symbol is weak.",68,[[["self"]],["bool"]]],[11,"is_global","","Return true if the symbol visible outside of the…",68,[[["self"]],["bool"]]],[11,"is_local","","Return true if the symbol is only visible within the…",68,[[["self"]],["bool"]]],[11,"scope","","Returns the symbol scope.",68,[[["self"]],["symbolscope"]]],[11,"flags","","Symbol flags that are specific to each file format.",68,[[["self"]],[["sectionindex"],["symbolflags",["sectionindex"]]]]],[11,"name","","The name of the symbol.",68,[[["self"]],[["str"],["option",["str"]]]]],[11,"address","","The address of the symbol. May be zero if the address is…",68,[[["self"]],["u64"]]],[11,"size","","The size of the symbol. May be zero if the size is unknown.",68,[[["self"]],["u64"]]],[11,"get","","Get the symbol containing the given address.",69,[[["self"],["u64"]],[["symbol"],["option",["symbol"]]]]],[11,"symbols","","Get all symbols in the map.",69,[[["self"]]]],[11,"kind","","The operation used to calculate the result of the…",70,[[["self"]],["relocationkind"]]],[11,"encoding","","Information about how the result of the relocation…",70,[[["self"]],["relocationencoding"]]],[11,"size","","The size in bits of the place of the relocation.",70,[[["self"]],["u8"]]],[11,"target","","The target of the relocation.",70,[[["self"]],["relocationtarget"]]],[11,"addend","","The addend to use in the relocation calculation.",70,[[["self"]],["i64"]]],[11,"set_addend","","Set the addend to use in the relocation calculation.",70,[[["i64"],["self"]]]],[11,"has_implicit_addend","","Returns true if there is an implicit addend stored in the…",70,[[["self"]],["bool"]]],[11,"none","","Data that is uncompressed.",35,[[],["self"]]],[11,"decompress","","Return the uncompressed data.",35,[[],[["result",["cow"]],["cow"]]]],[0,"elf","object","ELF definitions.",null,null],[3,"FileHeader32","object::elf","The header at the start of every 32-bit ELF file.",null,null],[12,"e_ident","","Magic number and other information.",71,null],[12,"e_type","","Object file type. One of the `ET_*` constants.",71,null],[12,"e_machine","","Architecture. One of the `EM_*` constants.",71,null],[12,"e_version","","Object file version. Must be `EV_CURRENT`.",71,null],[12,"e_entry","","Entry point virtual address.",71,null],[12,"e_phoff","","Program header table file offset.",71,null],[12,"e_shoff","","Section header table file offset.",71,null],[12,"e_flags","","Processor-specific flags.",71,null],[12,"e_ehsize","","Size in bytes of this header.",71,null],[12,"e_phentsize","","Program header table entry size.",71,null],[12,"e_phnum","","Program header table entry count.",71,null],[12,"e_shentsize","","Section header table entry size.",71,null],[12,"e_shnum","","Section header table entry count.",71,null],[12,"e_shstrndx","","Section header string table index.",71,null],[3,"FileHeader64","","The header at the start of every 64-bit ELF file.",null,null],[12,"e_ident","","Magic number and other information.",72,null],[12,"e_type","","Object file type. One of the `ET_*` constants.",72,null],[12,"e_machine","","Architecture. One of the `EM_*` constants.",72,null],[12,"e_version","","Object file version. Must be `EV_CURRENT`.",72,null],[12,"e_entry","","Entry point virtual address.",72,null],[12,"e_phoff","","Program header table file offset.",72,null],[12,"e_shoff","","Section header table file offset.",72,null],[12,"e_flags","","Processor-specific flags.",72,null],[12,"e_ehsize","","Size in bytes of this header.",72,null],[12,"e_phentsize","","Program header table entry size.",72,null],[12,"e_phnum","","Program header table entry count.",72,null],[12,"e_shentsize","","Section header table entry size.",72,null],[12,"e_shnum","","Section header table entry count.",72,null],[12,"e_shstrndx","","Section header string table index.",72,null],[3,"Ident","","Magic number and other information.",null,null],[12,"magic","","Magic number. Must be `ELFMAG`.",73,null],[12,"class","","File class. One of the `ELFCLASS*` constants.",73,null],[12,"data","","Data encoding. One of the `ELFDATA*` constants.",73,null],[12,"version","","ELF version. Must be `EV_CURRENT`.",73,null],[12,"os_abi","","OS ABI identification. One of the `ELFOSABI*` constants.",73,null],[12,"abi_version","","ABI version.",73,null],[12,"padding","","Padding bytes.",73,null],[3,"SectionHeader32","","Section header.",null,null],[12,"sh_name","","Section name.",74,null],[12,"sh_type","","Section type. One of the `SHT_*` constants.",74,null],[12,"sh_flags","","Section flags. A combination of the `SHF_*` constants.",74,null],[12,"sh_addr","","Section virtual address at execution.",74,null],[12,"sh_offset","","Section file offset.",74,null],[12,"sh_size","","Section size in bytes.",74,null],[12,"sh_link","","Link to another section.",74,null],[12,"sh_info","","Additional section information.",74,null],[12,"sh_addralign","","Section alignment.",74,null],[12,"sh_entsize","","Entry size if the section holds a table.",74,null],[3,"SectionHeader64","","Section header.",null,null],[12,"sh_name","","Section name.",75,null],[12,"sh_type","","Section type. One of the `SHT_*` constants.",75,null],[12,"sh_flags","","Section flags. A combination of the `SHF_*` constants.",75,null],[12,"sh_addr","","Section virtual address at execution.",75,null],[12,"sh_offset","","Section file offset.",75,null],[12,"sh_size","","Section size in bytes.",75,null],[12,"sh_link","","Link to another section.",75,null],[12,"sh_info","","Additional section information.",75,null],[12,"sh_addralign","","Section alignment.",75,null],[12,"sh_entsize","","Entry size if the section holds a table.",75,null],[3,"CompressionHeader32","","Section compression header.",null,null],[12,"ch_type","","Compression format. One of the `ELFCOMPRESS_*` values.",76,null],[12,"ch_size","","Uncompressed data size.",76,null],[12,"ch_addralign","","Uncompressed data alignment.",76,null],[3,"CompressionHeader64","","Section compression header.",null,null],[12,"ch_type","","Compression format. One of the `ELFCOMPRESS_*` values.",77,null],[12,"ch_reserved","","Reserved.",77,null],[12,"ch_size","","Uncompressed data size.",77,null],[12,"ch_addralign","","Uncompressed data alignment.",77,null],[3,"Sym32","","Symbol table entry.",null,null],[12,"st_name","","Symbol name.",78,null],[12,"st_value","","Symbol value.",78,null],[12,"st_size","","Symbol size.",78,null],[12,"st_info","","Symbol type and binding.",78,null],[12,"st_other","","Symbol visibility.",78,null],[12,"st_shndx","","Section index or one of the `SHN_*` values.",78,null],[3,"Sym64","","Symbol table entry.",null,null],[12,"st_name","","Symbol name.",79,null],[12,"st_info","","Symbol type and binding.",79,null],[12,"st_other","","Symbol visibility.",79,null],[12,"st_shndx","","Section index or one of the `SHN_*` values.",79,null],[12,"st_value","","Symbol value.",79,null],[12,"st_size","","Symbol size.",79,null],[3,"Syminfo32","","Additional information about a `Sym32`.",null,null],[3,"Syminfo64","","Additional information about a `Sym64`.",null,null],[3,"Rel32","","Relocation table entry without explicit addend.",null,null],[12,"r_offset","","Relocation address.",80,null],[12,"r_info","","Relocation type and symbol index.",80,null],[3,"Rela32","","Relocation table entry with explicit addend.",null,null],[12,"r_offset","","Relocation address.",81,null],[12,"r_info","","Relocation type and symbol index.",81,null],[12,"r_addend","","Explicit addend.",81,null],[3,"Rel64","","Relocation table entry without explicit addend.",null,null],[12,"r_offset","","Relocation address.",82,null],[12,"r_info","","Relocation type and symbol index.",82,null],[3,"Rela64","","Relocation table entry with explicit addend.",null,null],[12,"r_offset","","Relocation address.",83,null],[12,"r_info","","Relocation type and symbol index.",83,null],[12,"r_addend","","Explicit addend.",83,null],[3,"ProgramHeader32","","Program segment header.",null,null],[12,"p_type","","Segment type. One of the `PT_*` constants.",84,null],[12,"p_offset","","Segment file offset.",84,null],[12,"p_vaddr","","Segment virtual address.",84,null],[12,"p_paddr","","Segment physical address.",84,null],[12,"p_filesz","","Segment size in the file.",84,null],[12,"p_memsz","","Segment size in memory.",84,null],[12,"p_flags","","Segment flags. A combination of the `PF_*` constants.",84,null],[12,"p_align","","Segment alignment.",84,null],[3,"ProgramHeader64","","Program segment header.",null,null],[12,"p_type","","Segment type. One of the `PT_*` constants.",85,null],[12,"p_flags","","Segment flags. A combination of the `PF_*` constants.",85,null],[12,"p_offset","","Segment file offset.",85,null],[12,"p_vaddr","","Segment virtual address.",85,null],[12,"p_paddr","","Segment physical address.",85,null],[12,"p_filesz","","Segment size in the file.",85,null],[12,"p_memsz","","Segment size in memory.",85,null],[12,"p_align","","Segment alignment.",85,null],[3,"Dyn32","","Dynamic section entry.",null,null],[3,"Dyn64","","Dynamic section entry.",null,null],[3,"NoteHeader32","","Note section entry header.",null,null],[12,"n_namesz","","Length of the note's name.",86,null],[12,"n_descsz","","Length of the note's descriptor.",86,null],[12,"n_type","","Type of the note.",86,null],[3,"NoteHeader64","","Note section entry header.",null,null],[12,"n_namesz","","Length of the note's name.",87,null],[12,"n_descsz","","Length of the note's descriptor.",87,null],[12,"n_type","","Type of the note.",87,null],[7,"ELF_NOTE_CORE","","Note name for core files.",null,null],[7,"ELF_NOTE_LINUX","","Note name for linux core files.",null,null],[7,"ELF_NOTE_SOLARIS","","Solaris entries in the note section have this name.",null,null],[7,"ELF_NOTE_GNU","","GNU entries in the note section have this name.",null,null],[17,"ELFMAG","","File identification bytes stored in `Ident::magic`.",null,null],[17,"ELFCLASS32","","32-bit object.",null,null],[17,"ELFCLASS64","","64-bit object.",null,null],[17,"ELFDATANONE","","Invalid data encoding.",null,null],[17,"ELFDATA2LSB","","2's complement, little endian.",null,null],[17,"ELFDATA2MSB","","2's complement, big endian.",null,null],[17,"ELFOSABI_NONE","","UNIX System V ABI.",null,null],[17,"ELFOSABI_SYSV","","UNIX System V ABI.",null,null],[17,"ELFOSABI_HPUX","","HP-UX.",null,null],[17,"ELFOSABI_NETBSD","","NetBSD.",null,null],[17,"ELFOSABI_GNU","","Object uses GNU ELF extensions.",null,null],[17,"ELFOSABI_LINUX","","Object uses GNU ELF extensions.",null,null],[17,"ELFOSABI_SOLARIS","","Sun Solaris.",null,null],[17,"ELFOSABI_AIX","","IBM AIX.",null,null],[17,"ELFOSABI_IRIX","","SGI Irix.",null,null],[17,"ELFOSABI_FREEBSD","","FreeBSD.",null,null],[17,"ELFOSABI_TRU64","","Compaq TRU64 UNIX.",null,null],[17,"ELFOSABI_MODESTO","","Novell Modesto.",null,null],[17,"ELFOSABI_OPENBSD","","OpenBSD.",null,null],[17,"ELFOSABI_ARM_AEABI","","ARM EABI.",null,null],[17,"ELFOSABI_ARM","","ARM.",null,null],[17,"ELFOSABI_STANDALONE","","Standalone (embedded) application.",null,null],[17,"ET_NONE","","No file type.",null,null],[17,"ET_REL","","Relocatable file.",null,null],[17,"ET_EXEC","","Executable file.",null,null],[17,"ET_DYN","","Shared object file.",null,null],[17,"ET_CORE","","Core file.",null,null],[17,"ET_LOOS","","OS-specific range start.",null,null],[17,"ET_HIOS","","OS-specific range end.",null,null],[17,"ET_LOPROC","","Processor-specific range start.",null,null],[17,"ET_HIPROC","","Processor-specific range end.",null,null],[17,"EM_NONE","","No machine",null,null],[17,"EM_M32","","AT&T WE 32100",null,null],[17,"EM_SPARC","","SUN SPARC",null,null],[17,"EM_386","","Intel 80386",null,null],[17,"EM_68K","","Motorola m68k family",null,null],[17,"EM_88K","","Motorola m88k family",null,null],[17,"EM_IAMCU","","Intel MCU",null,null],[17,"EM_860","","Intel 80860",null,null],[17,"EM_MIPS","","MIPS R3000 big-endian",null,null],[17,"EM_S370","","IBM System/370",null,null],[17,"EM_MIPS_RS3_LE","","MIPS R3000 little-endian",null,null],[17,"EM_PARISC","","HPPA",null,null],[17,"EM_VPP500","","Fujitsu VPP500",null,null],[17,"EM_SPARC32PLUS","","Sun's \"v8plus\"",null,null],[17,"EM_960","","Intel 80960",null,null],[17,"EM_PPC","","PowerPC",null,null],[17,"EM_PPC64","","PowerPC 64-bit",null,null],[17,"EM_S390","","IBM S390",null,null],[17,"EM_SPU","","IBM SPU/SPC",null,null],[17,"EM_V800","","NEC V800 series",null,null],[17,"EM_FR20","","Fujitsu FR20",null,null],[17,"EM_RH32","","TRW RH-32",null,null],[17,"EM_RCE","","Motorola RCE",null,null],[17,"EM_ARM","","ARM",null,null],[17,"EM_FAKE_ALPHA","","Digital Alpha",null,null],[17,"EM_SH","","Hitachi SH",null,null],[17,"EM_SPARCV9","","SPARC v9 64-bit",null,null],[17,"EM_TRICORE","","Siemens Tricore",null,null],[17,"EM_ARC","","Argonaut RISC Core",null,null],[17,"EM_H8_300","","Hitachi H8/300",null,null],[17,"EM_H8_300H","","Hitachi H8/300H",null,null],[17,"EM_H8S","","Hitachi H8S",null,null],[17,"EM_H8_500","","Hitachi H8/500",null,null],[17,"EM_IA_64","","Intel Merced",null,null],[17,"EM_MIPS_X","","Stanford MIPS-X",null,null],[17,"EM_COLDFIRE","","Motorola Coldfire",null,null],[17,"EM_68HC12","","Motorola M68HC12",null,null],[17,"EM_MMA","","Fujitsu MMA Multimedia Accelerator",null,null],[17,"EM_PCP","","Siemens PCP",null,null],[17,"EM_NCPU","","Sony nCPU embeeded RISC",null,null],[17,"EM_NDR1","","Denso NDR1 microprocessor",null,null],[17,"EM_STARCORE","","Motorola Start*Core processor",null,null],[17,"EM_ME16","","Toyota ME16 processor",null,null],[17,"EM_ST100","","STMicroelectronic ST100 processor",null,null],[17,"EM_TINYJ","","Advanced Logic Corp. Tinyj emb.fam",null,null],[17,"EM_X86_64","","AMD x86-64 architecture",null,null],[17,"EM_PDSP","","Sony DSP Processor",null,null],[17,"EM_PDP10","","Digital PDP-10",null,null],[17,"EM_PDP11","","Digital PDP-11",null,null],[17,"EM_FX66","","Siemens FX66 microcontroller",null,null],[17,"EM_ST9PLUS","","STMicroelectronics ST9+ 8/16 mc",null,null],[17,"EM_ST7","","STmicroelectronics ST7 8 bit mc",null,null],[17,"EM_68HC16","","Motorola MC68HC16 microcontroller",null,null],[17,"EM_68HC11","","Motorola MC68HC11 microcontroller",null,null],[17,"EM_68HC08","","Motorola MC68HC08 microcontroller",null,null],[17,"EM_68HC05","","Motorola MC68HC05 microcontroller",null,null],[17,"EM_SVX","","Silicon Graphics SVx",null,null],[17,"EM_ST19","","STMicroelectronics ST19 8 bit mc",null,null],[17,"EM_VAX","","Digital VAX",null,null],[17,"EM_CRIS","","Axis Communications 32-bit emb.proc",null,null],[17,"EM_JAVELIN","","Infineon Technologies 32-bit emb.proc",null,null],[17,"EM_FIREPATH","","Element 14 64-bit DSP Processor",null,null],[17,"EM_ZSP","","LSI Logic 16-bit DSP Processor",null,null],[17,"EM_MMIX","","Donald Knuth's educational 64-bit proc",null,null],[17,"EM_HUANY","","Harvard University machine-independent object files",null,null],[17,"EM_PRISM","","SiTera Prism",null,null],[17,"EM_AVR","","Atmel AVR 8-bit microcontroller",null,null],[17,"EM_FR30","","Fujitsu FR30",null,null],[17,"EM_D10V","","Mitsubishi D10V",null,null],[17,"EM_D30V","","Mitsubishi D30V",null,null],[17,"EM_V850","","NEC v850",null,null],[17,"EM_M32R","","Mitsubishi M32R",null,null],[17,"EM_MN10300","","Matsushita MN10300",null,null],[17,"EM_MN10200","","Matsushita MN10200",null,null],[17,"EM_PJ","","picoJava",null,null],[17,"EM_OPENRISC","","OpenRISC 32-bit embedded processor",null,null],[17,"EM_ARC_COMPACT","","ARC International ARCompact",null,null],[17,"EM_XTENSA","","Tensilica Xtensa Architecture",null,null],[17,"EM_VIDEOCORE","","Alphamosaic VideoCore",null,null],[17,"EM_TMM_GPP","","Thompson Multimedia General Purpose Proc",null,null],[17,"EM_NS32K","","National Semi. 32000",null,null],[17,"EM_TPC","","Tenor Network TPC",null,null],[17,"EM_SNP1K","","Trebia SNP 1000",null,null],[17,"EM_ST200","","STMicroelectronics ST200",null,null],[17,"EM_IP2K","","Ubicom IP2xxx",null,null],[17,"EM_MAX","","MAX processor",null,null],[17,"EM_CR","","National Semi. CompactRISC",null,null],[17,"EM_F2MC16","","Fujitsu F2MC16",null,null],[17,"EM_MSP430","","Texas Instruments msp430",null,null],[17,"EM_BLACKFIN","","Analog Devices Blackfin DSP",null,null],[17,"EM_SE_C33","","Seiko Epson S1C33 family",null,null],[17,"EM_SEP","","Sharp embedded microprocessor",null,null],[17,"EM_ARCA","","Arca RISC",null,null],[17,"EM_UNICORE","","PKU-Unity & MPRC Peking Uni. mc series",null,null],[17,"EM_EXCESS","","eXcess configurable cpu",null,null],[17,"EM_DXP","","Icera Semi. Deep Execution Processor",null,null],[17,"EM_ALTERA_NIOS2","","Altera Nios II",null,null],[17,"EM_CRX","","National Semi. CompactRISC CRX",null,null],[17,"EM_XGATE","","Motorola XGATE",null,null],[17,"EM_C166","","Infineon C16x/XC16x",null,null],[17,"EM_M16C","","Renesas M16C",null,null],[17,"EM_DSPIC30F","","Microchip Technology dsPIC30F",null,null],[17,"EM_CE","","Freescale Communication Engine RISC",null,null],[17,"EM_M32C","","Renesas M32C",null,null],[17,"EM_TSK3000","","Altium TSK3000",null,null],[17,"EM_RS08","","Freescale RS08",null,null],[17,"EM_SHARC","","Analog Devices SHARC family",null,null],[17,"EM_ECOG2","","Cyan Technology eCOG2",null,null],[17,"EM_SCORE7","","Sunplus S+core7 RISC",null,null],[17,"EM_DSP24","","New Japan Radio (NJR) 24-bit DSP",null,null],[17,"EM_VIDEOCORE3","","Broadcom VideoCore III",null,null],[17,"EM_LATTICEMICO32","","RISC for Lattice FPGA",null,null],[17,"EM_SE_C17","","Seiko Epson C17",null,null],[17,"EM_TI_C6000","","Texas Instruments TMS320C6000 DSP",null,null],[17,"EM_TI_C2000","","Texas Instruments TMS320C2000 DSP",null,null],[17,"EM_TI_C5500","","Texas Instruments TMS320C55x DSP",null,null],[17,"EM_TI_ARP32","","Texas Instruments App. Specific RISC",null,null],[17,"EM_TI_PRU","","Texas Instruments Prog. Realtime Unit",null,null],[17,"EM_MMDSP_PLUS","","STMicroelectronics 64bit VLIW DSP",null,null],[17,"EM_CYPRESS_M8C","","Cypress M8C",null,null],[17,"EM_R32C","","Renesas R32C",null,null],[17,"EM_TRIMEDIA","","NXP Semi. TriMedia",null,null],[17,"EM_QDSP6","","QUALCOMM DSP6",null,null],[17,"EM_8051","","Intel 8051 and variants",null,null],[17,"EM_STXP7X","","STMicroelectronics STxP7x",null,null],[17,"EM_NDS32","","Andes Tech. compact code emb. RISC",null,null],[17,"EM_ECOG1X","","Cyan Technology eCOG1X",null,null],[17,"EM_MAXQ30","","Dallas Semi. MAXQ30 mc",null,null],[17,"EM_XIMO16","","New Japan Radio (NJR) 16-bit DSP",null,null],[17,"EM_MANIK","","M2000 Reconfigurable RISC",null,null],[17,"EM_CRAYNV2","","Cray NV2 vector architecture",null,null],[17,"EM_RX","","Renesas RX",null,null],[17,"EM_METAG","","Imagination Tech. META",null,null],[17,"EM_MCST_ELBRUS","","MCST Elbrus",null,null],[17,"EM_ECOG16","","Cyan Technology eCOG16",null,null],[17,"EM_CR16","","National Semi. CompactRISC CR16",null,null],[17,"EM_ETPU","","Freescale Extended Time Processing Unit",null,null],[17,"EM_SLE9X","","Infineon Tech. SLE9X",null,null],[17,"EM_L10M","","Intel L10M",null,null],[17,"EM_K10M","","Intel K10M",null,null],[17,"EM_AARCH64","","ARM AARCH64",null,null],[17,"EM_AVR32","","Amtel 32-bit microprocessor",null,null],[17,"EM_STM8","","STMicroelectronics STM8",null,null],[17,"EM_TILE64","","Tileta TILE64",null,null],[17,"EM_TILEPRO","","Tilera TILEPro",null,null],[17,"EM_MICROBLAZE","","Xilinx MicroBlaze",null,null],[17,"EM_CUDA","","NVIDIA CUDA",null,null],[17,"EM_TILEGX","","Tilera TILE-Gx",null,null],[17,"EM_CLOUDSHIELD","","CloudShield",null,null],[17,"EM_COREA_1ST","","KIPO-KAIST Core-A 1st gen.",null,null],[17,"EM_COREA_2ND","","KIPO-KAIST Core-A 2nd gen.",null,null],[17,"EM_ARC_COMPACT2","","Synopsys ARCompact V2",null,null],[17,"EM_OPEN8","","Open8 RISC",null,null],[17,"EM_RL78","","Renesas RL78",null,null],[17,"EM_VIDEOCORE5","","Broadcom VideoCore V",null,null],[17,"EM_78KOR","","Renesas 78KOR",null,null],[17,"EM_56800EX","","Freescale 56800EX DSC",null,null],[17,"EM_BA1","","Beyond BA1",null,null],[17,"EM_BA2","","Beyond BA2",null,null],[17,"EM_XCORE","","XMOS xCORE",null,null],[17,"EM_MCHP_PIC","","Microchip 8-bit PIC(r)",null,null],[17,"EM_KM32","","KM211 KM32",null,null],[17,"EM_KMX32","","KM211 KMX32",null,null],[17,"EM_EMX16","","KM211 KMX16",null,null],[17,"EM_EMX8","","KM211 KMX8",null,null],[17,"EM_KVARC","","KM211 KVARC",null,null],[17,"EM_CDP","","Paneve CDP",null,null],[17,"EM_COGE","","Cognitive Smart Memory Processor",null,null],[17,"EM_COOL","","Bluechip CoolEngine",null,null],[17,"EM_NORC","","Nanoradio Optimized RISC",null,null],[17,"EM_CSR_KALIMBA","","CSR Kalimba",null,null],[17,"EM_Z80","","Zilog Z80",null,null],[17,"EM_VISIUM","","Controls and Data Services VISIUMcore",null,null],[17,"EM_FT32","","FTDI Chip FT32",null,null],[17,"EM_MOXIE","","Moxie processor",null,null],[17,"EM_AMDGPU","","AMD GPU",null,null],[17,"EM_RISCV","","RISC-V",null,null],[17,"EM_BPF","","Linux BPF -- in-kernel virtual machine",null,null],[17,"EM_CSKY","","C-SKY",null,null],[17,"EM_ALPHA","","Digital Alpha",null,null],[17,"EV_NONE","","Invalid ELF version.",null,null],[17,"EV_CURRENT","","Current ELF version.",null,null],[17,"SHN_UNDEF","","Undefined section.",null,null],[17,"SHN_LORESERVE","","OS-specific range start. Start of reserved section indices.",null,null],[17,"SHN_LOPROC","","Start of processor-specific section indices.",null,null],[17,"SHN_HIPROC","","End of processor-specific section indices.",null,null],[17,"SHN_LOOS","","Start of OS-specific section indices.",null,null],[17,"SHN_HIOS","","End of OS-specific section indices.",null,null],[17,"SHN_ABS","","Associated symbol is absolute.",null,null],[17,"SHN_COMMON","","Associated symbol is common.",null,null],[17,"SHN_XINDEX","","Section index is in the `SHT_SYMTAB_SHNDX` section.",null,null],[17,"SHN_HIRESERVE","","End of reserved section indices.",null,null],[17,"SHT_NULL","","Section header table entry is unused.",null,null],[17,"SHT_PROGBITS","","Program data.",null,null],[17,"SHT_SYMTAB","","Symbol table.",null,null],[17,"SHT_STRTAB","","String table.",null,null],[17,"SHT_RELA","","Relocation entries with explicit addends.",null,null],[17,"SHT_HASH","","Symbol hash table.",null,null],[17,"SHT_DYNAMIC","","Dynamic linking information.",null,null],[17,"SHT_NOTE","","Notes.",null,null],[17,"SHT_NOBITS","","Program space with no data (bss).",null,null],[17,"SHT_REL","","Relocation entries without explicit addends.",null,null],[17,"SHT_SHLIB","","Reserved section type.",null,null],[17,"SHT_DYNSYM","","Dynamic linker symbol table.",null,null],[17,"SHT_INIT_ARRAY","","Array of constructors.",null,null],[17,"SHT_FINI_ARRAY","","Array of destructors.",null,null],[17,"SHT_PREINIT_ARRAY","","Array of pre-constructors.",null,null],[17,"SHT_GROUP","","Section group.",null,null],[17,"SHT_SYMTAB_SHNDX","","Extended section indices for a symbol table.",null,null],[17,"SHT_LOOS","","Start of OS-specific section types.",null,null],[17,"SHT_HIOS","","End of OS-specific section types.",null,null],[17,"SHT_LOPROC","","Start of processor-specific section types.",null,null],[17,"SHT_HIPROC","","End of processor-specific section types.",null,null],[17,"SHT_LOUSER","","Start of application-specific section types.",null,null],[17,"SHT_HIUSER","","End of application-specific section types.",null,null],[17,"SHF_WRITE","","Section is writable.",null,null],[17,"SHF_ALLOC","","Section occupies memory during execution.",null,null],[17,"SHF_EXECINSTR","","Section is executable.",null,null],[17,"SHF_MERGE","","Section may be be merged to eliminate duplication.",null,null],[17,"SHF_STRINGS","","Section contains nul-terminated strings.",null,null],[17,"SHF_INFO_LINK","","The `sh_info` field contains a section header table index.",null,null],[17,"SHF_LINK_ORDER","","Section has special ordering requirements when combining…",null,null],[17,"SHF_OS_NONCONFORMING","","Section requires special OS-specific handling.",null,null],[17,"SHF_GROUP","","Section is a member of a group.",null,null],[17,"SHF_TLS","","Section holds thread-local storage.",null,null],[17,"SHF_COMPRESSED","","Section is compressed.",null,null],[17,"SHF_MASKOS","","OS-specific section flags.",null,null],[17,"SHF_MASKPROC","","Processor-specific section flags.",null,null],[17,"ELFCOMPRESS_ZLIB","","ZLIB/DEFLATE algorithm.",null,null],[17,"ELFCOMPRESS_LOOS","","Start of OS-specific compression types.",null,null],[17,"ELFCOMPRESS_HIOS","","End of OS-specific compression types.",null,null],[17,"ELFCOMPRESS_LOPROC","","Start of processor-specific compression types.",null,null],[17,"ELFCOMPRESS_HIPROC","","End of processor-specific compression types.",null,null],[17,"GRP_COMDAT","","Mark group as COMDAT.",null,null],[17,"SYMINFO_BT_SELF","","Symbol bound to self",null,null],[17,"SYMINFO_BT_PARENT","","Symbol bound to parent",null,null],[17,"SYMINFO_BT_LOWRESERVE","","Beginning of reserved entries",null,null],[17,"SYMINFO_FLG_DIRECT","","Direct bound symbol",null,null],[17,"SYMINFO_FLG_PASSTHRU","","Pass-thru symbol for translator",null,null],[17,"SYMINFO_FLG_COPY","","Symbol is a copy-reloc",null,null],[17,"SYMINFO_FLG_LAZYLOAD","","Symbol bound to object to be lazy loaded",null,null],[17,"SYMINFO_NONE","","",null,null],[17,"SYMINFO_CURRENT","","",null,null],[17,"SYMINFO_NUM","","",null,null],[17,"STB_LOCAL","","Local symbol.",null,null],[17,"STB_GLOBAL","","Global symbol.",null,null],[17,"STB_WEAK","","Weak symbol.",null,null],[17,"STB_LOOS","","Start of OS-specific symbol binding.",null,null],[17,"STB_GNU_UNIQUE","","Unique symbol.",null,null],[17,"STB_HIOS","","End of OS-specific symbol binding.",null,null],[17,"STB_LOPROC","","Start of processor-specific symbol binding.",null,null],[17,"STB_HIPROC","","End of processor-specific symbol binding.",null,null],[17,"STT_NOTYPE","","Symbol type is unspecified.",null,null],[17,"STT_OBJECT","","Symbol is a data object.",null,null],[17,"STT_FUNC","","Symbol is a code object.",null,null],[17,"STT_SECTION","","Symbol is associated with a section.",null,null],[17,"STT_FILE","","Symbol's name is a file name.",null,null],[17,"STT_COMMON","","Symbol is a common data object.",null,null],[17,"STT_TLS","","Symbol is a thread-local storage object.",null,null],[17,"STT_LOOS","","Start of OS-specific symbol types.",null,null],[17,"STT_GNU_IFUNC","","Symbol is an indirect code object.",null,null],[17,"STT_HIOS","","End of OS-specific symbol types.",null,null],[17,"STT_LOPROC","","Start of processor-specific symbol types.",null,null],[17,"STT_HIPROC","","End of processor-specific symbol types.",null,null],[17,"STV_DEFAULT","","Default symbol visibility rules.",null,null],[17,"STV_INTERNAL","","Processor specific hidden class.",null,null],[17,"STV_HIDDEN","","Symbol is not visible to other components.",null,null],[17,"STV_PROTECTED","","Symbol is visible to other components, but is not…",null,null],[17,"PN_XNUM","","Special value for `FileHeader*::e_phnum`.",null,null],[17,"PT_NULL","","Program header table entry is unused.",null,null],[17,"PT_LOAD","","Loadable program segment.",null,null],[17,"PT_DYNAMIC","","Dynamic linking information.",null,null],[17,"PT_INTERP","","Program interpreter.",null,null],[17,"PT_NOTE","","Auxiliary information.",null,null],[17,"PT_SHLIB","","Reserved.",null,null],[17,"PT_PHDR","","Segment contains the program header table.",null,null],[17,"PT_TLS","","Thread-local storage segment.",null,null],[17,"PT_LOOS","","Start of OS-specific segment types.",null,null],[17,"PT_GNU_EH_FRAME","","GCC `.eh_frame_hdr` segment.",null,null],[17,"PT_GNU_STACK","","Indicates stack executability.",null,null],[17,"PT_GNU_RELRO","","Read-only after relocation.",null,null],[17,"PT_HIOS","","End of OS-specific segment types.",null,null],[17,"PT_LOPROC","","Start of processor-specific segment types.",null,null],[17,"PT_HIPROC","","End of processor-specific segment types.",null,null],[17,"PF_X","","Segment is executable.",null,null],[17,"PF_W","","Segment is writable.",null,null],[17,"PF_R","","Segment is readable.",null,null],[17,"PF_MASKOS","","OS-specific segment flags.",null,null],[17,"PF_MASKPROC","","Processor-specific segment flags.",null,null],[17,"NT_PRSTATUS","","Contains copy of prstatus struct.",null,null],[17,"NT_PRFPREG","","Contains copy of fpregset struct.",null,null],[17,"NT_FPREGSET","","Contains copy of fpregset struct.",null,null],[17,"NT_PRPSINFO","","Contains copy of prpsinfo struct.",null,null],[17,"NT_PRXREG","","Contains copy of prxregset struct.",null,null],[17,"NT_TASKSTRUCT","","Contains copy of task structure.",null,null],[17,"NT_PLATFORM","","String from sysinfo(SI_PLATFORM).",null,null],[17,"NT_AUXV","","Contains copy of auxv array.",null,null],[17,"NT_GWINDOWS","","Contains copy of gwindows struct.",null,null],[17,"NT_ASRS","","Contains copy of asrset struct.",null,null],[17,"NT_PSTATUS","","Contains copy of pstatus struct.",null,null],[17,"NT_PSINFO","","Contains copy of psinfo struct.",null,null],[17,"NT_PRCRED","","Contains copy of prcred struct.",null,null],[17,"NT_UTSNAME","","Contains copy of utsname struct.",null,null],[17,"NT_LWPSTATUS","","Contains copy of lwpstatus struct.",null,null],[17,"NT_LWPSINFO","","Contains copy of lwpinfo struct.",null,null],[17,"NT_PRFPXREG","","Contains copy of fprxregset struct.",null,null],[17,"NT_SIGINFO","","Contains copy of siginfo_t, size might increase.",null,null],[17,"NT_FILE","","Contains information about mapped files.",null,null],[17,"NT_PRXFPREG","","Contains copy of user_fxsr_struct.",null,null],[17,"NT_PPC_VMX","","PowerPC Altivec/VMX registers.",null,null],[17,"NT_PPC_SPE","","PowerPC SPE/EVR registers.",null,null],[17,"NT_PPC_VSX","","PowerPC VSX registers.",null,null],[17,"NT_PPC_TAR","","Target Address Register.",null,null],[17,"NT_PPC_PPR","","Program Priority Register.",null,null],[17,"NT_PPC_DSCR","","Data Stream Control Register.",null,null],[17,"NT_PPC_EBB","","Event Based Branch Registers.",null,null],[17,"NT_PPC_PMU","","Performance Monitor Registers.",null,null],[17,"NT_PPC_TM_CGPR","","TM checkpointed GPR Registers.",null,null],[17,"NT_PPC_TM_CFPR","","TM checkpointed FPR Registers.",null,null],[17,"NT_PPC_TM_CVMX","","TM checkpointed VMX Registers.",null,null],[17,"NT_PPC_TM_CVSX","","TM checkpointed VSX Registers.",null,null],[17,"NT_PPC_TM_SPR","","TM Special Purpose Registers.",null,null],[17,"NT_PPC_TM_CTAR","","TM checkpointed Target Address Register.",null,null],[17,"NT_PPC_TM_CPPR","","TM checkpointed Program Priority Register.",null,null],[17,"NT_PPC_TM_CDSCR","","TM checkpointed Data Stream Control Register.",null,null],[17,"NT_PPC_PKEY","","Memory Protection Keys registers.",null,null],[17,"NT_386_TLS","","i386 TLS slots (struct user_desc).",null,null],[17,"NT_386_IOPERM","","x86 io permission bitmap (1=deny).",null,null],[17,"NT_X86_XSTATE","","x86 extended state using xsave.",null,null],[17,"NT_S390_HIGH_GPRS","","s390 upper register halves.",null,null],[17,"NT_S390_TIMER","","s390 timer register.",null,null],[17,"NT_S390_TODCMP","","s390 TOD clock comparator register.",null,null],[17,"NT_S390_TODPREG","","s390 TOD programmable register.",null,null],[17,"NT_S390_CTRS","","s390 control registers.",null,null],[17,"NT_S390_PREFIX","","s390 prefix register.",null,null],[17,"NT_S390_LAST_BREAK","","s390 breaking event address.",null,null],[17,"NT_S390_SYSTEM_CALL","","s390 system call restart data.",null,null],[17,"NT_S390_TDB","","s390 transaction diagnostic block.",null,null],[17,"NT_S390_VXRS_LOW","","s390 vector registers 0-15 upper half.",null,null],[17,"NT_S390_VXRS_HIGH","","s390 vector registers 16-31.",null,null],[17,"NT_S390_GS_CB","","s390 guarded storage registers.",null,null],[17,"NT_S390_GS_BC","","s390 guarded storage broadcast control block.",null,null],[17,"NT_S390_RI_CB","","s390 runtime instrumentation.",null,null],[17,"NT_ARM_VFP","","ARM VFP/NEON registers.",null,null],[17,"NT_ARM_TLS","","ARM TLS register.",null,null],[17,"NT_ARM_HW_BREAK","","ARM hardware breakpoint registers.",null,null],[17,"NT_ARM_HW_WATCH","","ARM hardware watchpoint registers.",null,null],[17,"NT_ARM_SYSTEM_CALL","","ARM system call number.",null,null],[17,"NT_ARM_SVE","","ARM Scalable Vector Extension registers.",null,null],[17,"NT_VMCOREDD","","Vmcore Device Dump Note.",null,null],[17,"NT_MIPS_DSP","","MIPS DSP ASE registers.",null,null],[17,"NT_MIPS_FP_MODE","","MIPS floating-point mode.",null,null],[17,"NT_VERSION","","Note type for version string.",null,null],[17,"DT_NULL","","Marks end of dynamic section",null,null],[17,"DT_NEEDED","","Name of needed library",null,null],[17,"DT_PLTRELSZ","","Size in bytes of PLT relocs",null,null],[17,"DT_PLTGOT","","Processor defined value",null,null],[17,"DT_HASH","","Address of symbol hash table",null,null],[17,"DT_STRTAB","","Address of string table",null,null],[17,"DT_SYMTAB","","Address of symbol table",null,null],[17,"DT_RELA","","Address of Rela relocs",null,null],[17,"DT_RELASZ","","Total size of Rela relocs",null,null],[17,"DT_RELAENT","","Size of one Rela reloc",null,null],[17,"DT_STRSZ","","Size of string table",null,null],[17,"DT_SYMENT","","Size of one symbol table entry",null,null],[17,"DT_INIT","","Address of init function",null,null],[17,"DT_FINI","","Address of termination function",null,null],[17,"DT_SONAME","","Name of shared object",null,null],[17,"DT_RPATH","","Library search path (deprecated)",null,null],[17,"DT_SYMBOLIC","","Start symbol search here",null,null],[17,"DT_REL","","Address of Rel relocs",null,null],[17,"DT_RELSZ","","Total size of Rel relocs",null,null],[17,"DT_RELENT","","Size of one Rel reloc",null,null],[17,"DT_PLTREL","","Type of reloc in PLT",null,null],[17,"DT_DEBUG","","For debugging; unspecified",null,null],[17,"DT_TEXTREL","","Reloc might modify .text",null,null],[17,"DT_JMPREL","","Address of PLT relocs",null,null],[17,"DT_BIND_NOW","","Process relocations of object",null,null],[17,"DT_INIT_ARRAY","","Array with addresses of init fct",null,null],[17,"DT_FINI_ARRAY","","Array with addresses of fini fct",null,null],[17,"DT_INIT_ARRAYSZ","","Size in bytes of DT_INIT_ARRAY",null,null],[17,"DT_FINI_ARRAYSZ","","Size in bytes of DT_FINI_ARRAY",null,null],[17,"DT_RUNPATH","","Library search path",null,null],[17,"DT_FLAGS","","Flags for the object being loaded",null,null],[17,"DT_ENCODING","","Start of encoded range",null,null],[17,"DT_PREINIT_ARRAY","","Array with addresses of preinit fct",null,null],[17,"DT_PREINIT_ARRAYSZ","","size in bytes of DT_PREINIT_ARRAY",null,null],[17,"DT_SYMTAB_SHNDX","","Address of SYMTAB_SHNDX section",null,null],[17,"DT_LOOS","","Start of OS-specific",null,null],[17,"DT_HIOS","","End of OS-specific",null,null],[17,"DT_LOPROC","","Start of processor-specific",null,null],[17,"DT_HIPROC","","End of processor-specific",null,null],[17,"DT_VALRNGLO","","",null,null],[17,"DT_GNU_PRELINKED","","Prelinking timestamp",null,null],[17,"DT_GNU_CONFLICTSZ","","Size of conflict section",null,null],[17,"DT_GNU_LIBLISTSZ","","Size of library list",null,null],[17,"DT_CHECKSUM","","",null,null],[17,"DT_PLTPADSZ","","",null,null],[17,"DT_MOVEENT","","",null,null],[17,"DT_MOVESZ","","",null,null],[17,"DT_FEATURE_1","","Feature selection (DTF_*).",null,null],[17,"DT_POSFLAG_1","","Flags for DT_* entries, affecting the following DT_* entry.",null,null],[17,"DT_SYMINSZ","","Size of syminfo table (in bytes)",null,null],[17,"DT_SYMINENT","","Entry size of syminfo",null,null],[17,"DT_VALRNGHI","","",null,null],[17,"DT_ADDRRNGLO","","",null,null],[17,"DT_GNU_HASH","","GNU-style hash table.",null,null],[17,"DT_TLSDESC_PLT","","",null,null],[17,"DT_TLSDESC_GOT","","",null,null],[17,"DT_GNU_CONFLICT","","Start of conflict section",null,null],[17,"DT_GNU_LIBLIST","","Library list",null,null],[17,"DT_CONFIG","","Configuration information.",null,null],[17,"DT_DEPAUDIT","","Dependency auditing.",null,null],[17,"DT_AUDIT","","Object auditing.",null,null],[17,"DT_PLTPAD","","PLT padding.",null,null],[17,"DT_MOVETAB","","Move table.",null,null],[17,"DT_SYMINFO","","Syminfo table.",null,null],[17,"DT_ADDRRNGHI","","",null,null],[17,"DT_VERSYM","","",null,null],[17,"DT_RELACOUNT","","",null,null],[17,"DT_RELCOUNT","","",null,null],[17,"DT_FLAGS_1","","State flags, see DF_1_* below.",null,null],[17,"DT_VERDEF","","Address of version definition table",null,null],[17,"DT_VERDEFNUM","","Number of version definitions",null,null],[17,"DT_VERNEED","","Address of table with needed versions",null,null],[17,"DT_VERNEEDNUM","","Number of needed versions",null,null],[17,"DT_AUXILIARY","","Shared object to load before self",null,null],[17,"DT_FILTER","","Shared object to get values from",null,null],[17,"DF_ORIGIN","","Object may use DF_ORIGIN",null,null],[17,"DF_SYMBOLIC","","Symbol resolutions starts here",null,null],[17,"DF_TEXTREL","","Object contains text relocations",null,null],[17,"DF_BIND_NOW","","No lazy binding for this object",null,null],[17,"DF_STATIC_TLS","","Module uses the static TLS model",null,null],[17,"DF_1_NOW","","Set RTLD_NOW for this object.",null,null],[17,"DF_1_GLOBAL","","Set RTLD_GLOBAL for this object.",null,null],[17,"DF_1_GROUP","","Set RTLD_GROUP for this object.",null,null],[17,"DF_1_NODELETE","","Set RTLD_NODELETE for this object.",null,null],[17,"DF_1_LOADFLTR","","Trigger filtee loading at runtime.",null,null],[17,"DF_1_INITFIRST","","Set RTLD_INITFIRST for this object.",null,null],[17,"DF_1_NOOPEN","","Set RTLD_NOOPEN for this object.",null,null],[17,"DF_1_ORIGIN","","$ORIGIN must be handled.",null,null],[17,"DF_1_DIRECT","","Direct binding enabled.",null,null],[17,"DF_1_TRANS","","",null,null],[17,"DF_1_INTERPOSE","","Object is used to interpose.",null,null],[17,"DF_1_NODEFLIB","","Ignore default lib search path.",null,null],[17,"DF_1_NODUMP","","Object can't be dldump'ed.",null,null],[17,"DF_1_CONFALT","","Configuration alternative created.",null,null],[17,"DF_1_ENDFILTEE","","Filtee terminates filters search.",null,null],[17,"DF_1_DISPRELDNE","","Disp reloc applied at build time.",null,null],[17,"DF_1_DISPRELPND","","Disp reloc applied at run-time.",null,null],[17,"DF_1_NODIRECT","","Object has no-direct binding.",null,null],[17,"DF_1_IGNMULDEF","","",null,null],[17,"DF_1_NOKSYMS","","",null,null],[17,"DF_1_NOHDR","","",null,null],[17,"DF_1_EDITED","","Object is modified after built.",null,null],[17,"DF_1_NORELOC","","",null,null],[17,"DF_1_SYMINTPOSE","","Object has individual interposers.",null,null],[17,"DF_1_GLOBAUDIT","","Global auditing required.",null,null],[17,"DF_1_SINGLETON","","Singleton symbols are used.",null,null],[17,"DF_1_STUB","","",null,null],[17,"DF_1_PIE","","",null,null],[17,"NT_SOLARIS_PAGESIZE_HINT","","Desired pagesize for the binary.",null,null],[17,"NT_GNU_ABI_TAG","","ABI information.",null,null],[17,"ELF_NOTE_OS_LINUX","","OS descriptor for `NT_GNU_ABI_TAG`.",null,null],[17,"ELF_NOTE_OS_GNU","","OS descriptor for `NT_GNU_ABI_TAG`.",null,null],[17,"ELF_NOTE_OS_SOLARIS2","","OS descriptor for `NT_GNU_ABI_TAG`.",null,null],[17,"ELF_NOTE_OS_FREEBSD","","OS descriptor for `NT_GNU_ABI_TAG`.",null,null],[17,"NT_GNU_HWCAP","","Synthetic hwcap information.",null,null],[17,"NT_GNU_BUILD_ID","","Build ID bits as generated by `ld --build-id`.",null,null],[17,"NT_GNU_GOLD_VERSION","","Version note generated by GNU gold containing a version…",null,null],[17,"NT_GNU_PROPERTY_TYPE_0","","Program property.",null,null],[17,"R_68K_NONE","","No reloc",null,null],[17,"R_68K_32","","Direct 32 bit",null,null],[17,"R_68K_16","","Direct 16 bit",null,null],[17,"R_68K_8","","Direct 8 bit",null,null],[17,"R_68K_PC32","","PC relative 32 bit",null,null],[17,"R_68K_PC16","","PC relative 16 bit",null,null],[17,"R_68K_PC8","","PC relative 8 bit",null,null],[17,"R_68K_GOT32","","32 bit PC relative GOT entry",null,null],[17,"R_68K_GOT16","","16 bit PC relative GOT entry",null,null],[17,"R_68K_GOT8","","8 bit PC relative GOT entry",null,null],[17,"R_68K_GOT32O","","32 bit GOT offset",null,null],[17,"R_68K_GOT16O","","16 bit GOT offset",null,null],[17,"R_68K_GOT8O","","8 bit GOT offset",null,null],[17,"R_68K_PLT32","","32 bit PC relative PLT address",null,null],[17,"R_68K_PLT16","","16 bit PC relative PLT address",null,null],[17,"R_68K_PLT8","","8 bit PC relative PLT address",null,null],[17,"R_68K_PLT32O","","32 bit PLT offset",null,null],[17,"R_68K_PLT16O","","16 bit PLT offset",null,null],[17,"R_68K_PLT8O","","8 bit PLT offset",null,null],[17,"R_68K_COPY","","Copy symbol at runtime",null,null],[17,"R_68K_GLOB_DAT","","Create GOT entry",null,null],[17,"R_68K_JMP_SLOT","","Create PLT entry",null,null],[17,"R_68K_RELATIVE","","Adjust by program base",null,null],[17,"R_68K_TLS_GD32","","32 bit GOT offset for GD",null,null],[17,"R_68K_TLS_GD16","","16 bit GOT offset for GD",null,null],[17,"R_68K_TLS_GD8","","8 bit GOT offset for GD",null,null],[17,"R_68K_TLS_LDM32","","32 bit GOT offset for LDM",null,null],[17,"R_68K_TLS_LDM16","","16 bit GOT offset for LDM",null,null],[17,"R_68K_TLS_LDM8","","8 bit GOT offset for LDM",null,null],[17,"R_68K_TLS_LDO32","","32 bit module-relative offset",null,null],[17,"R_68K_TLS_LDO16","","16 bit module-relative offset",null,null],[17,"R_68K_TLS_LDO8","","8 bit module-relative offset",null,null],[17,"R_68K_TLS_IE32","","32 bit GOT offset for IE",null,null],[17,"R_68K_TLS_IE16","","16 bit GOT offset for IE",null,null],[17,"R_68K_TLS_IE8","","8 bit GOT offset for IE",null,null],[17,"R_68K_TLS_LE32","","32 bit offset relative to static TLS block",null,null],[17,"R_68K_TLS_LE16","","16 bit offset relative to static TLS block",null,null],[17,"R_68K_TLS_LE8","","8 bit offset relative to static TLS block",null,null],[17,"R_68K_TLS_DTPMOD32","","32 bit module number",null,null],[17,"R_68K_TLS_DTPREL32","","32 bit module-relative offset",null,null],[17,"R_68K_TLS_TPREL32","","32 bit TP-relative offset",null,null],[17,"R_386_NONE","","No reloc",null,null],[17,"R_386_32","","Direct 32 bit",null,null],[17,"R_386_PC32","","PC relative 32 bit",null,null],[17,"R_386_GOT32","","32 bit GOT entry",null,null],[17,"R_386_PLT32","","32 bit PLT address",null,null],[17,"R_386_COPY","","Copy symbol at runtime",null,null],[17,"R_386_GLOB_DAT","","Create GOT entry",null,null],[17,"R_386_JMP_SLOT","","Create PLT entry",null,null],[17,"R_386_RELATIVE","","Adjust by program base",null,null],[17,"R_386_GOTOFF","","32 bit offset to GOT",null,null],[17,"R_386_GOTPC","","32 bit PC relative offset to GOT",null,null],[17,"R_386_32PLT","","Direct 32 bit PLT address",null,null],[17,"R_386_TLS_TPOFF","","Offset in static TLS block",null,null],[17,"R_386_TLS_IE","","Address of GOT entry for static TLS block offset",null,null],[17,"R_386_TLS_GOTIE","","GOT entry for static TLS block offset",null,null],[17,"R_386_TLS_LE","","Offset relative to static TLS block",null,null],[17,"R_386_TLS_GD","","Direct 32 bit for GNU version of general dynamic thread…",null,null],[17,"R_386_TLS_LDM","","Direct 32 bit for GNU version of local dynamic thread…",null,null],[17,"R_386_16","","Direct 16 bit",null,null],[17,"R_386_PC16","","PC relative 16 bit",null,null],[17,"R_386_8","","Direct 8 bit",null,null],[17,"R_386_PC8","","PC relative 8 bit",null,null],[17,"R_386_TLS_GD_32","","Direct 32 bit for general dynamic thread local data",null,null],[17,"R_386_TLS_GD_PUSH","","Tag for pushl in GD TLS code",null,null],[17,"R_386_TLS_GD_CALL","","Relocation for call to __tls_get_addr()",null,null],[17,"R_386_TLS_GD_POP","","Tag for popl in GD TLS code",null,null],[17,"R_386_TLS_LDM_32","","Direct 32 bit for local dynamic thread local data in LE code",null,null],[17,"R_386_TLS_LDM_PUSH","","Tag for pushl in LDM TLS code",null,null],[17,"R_386_TLS_LDM_CALL","","Relocation for call to __tls_get_addr() in LDM code",null,null],[17,"R_386_TLS_LDM_POP","","Tag for popl in LDM TLS code",null,null],[17,"R_386_TLS_LDO_32","","Offset relative to TLS block",null,null],[17,"R_386_TLS_IE_32","","GOT entry for negated static TLS block offset",null,null],[17,"R_386_TLS_LE_32","","Negated offset relative to static TLS block",null,null],[17,"R_386_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_386_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_386_TLS_TPOFF32","","Negated offset in static TLS block",null,null],[17,"R_386_SIZE32","","32-bit symbol size",null,null],[17,"R_386_TLS_GOTDESC","","GOT offset for TLS descriptor.",null,null],[17,"R_386_TLS_DESC_CALL","","Marker of call through TLS descriptor for relaxation.",null,null],[17,"R_386_TLS_DESC","","TLS descriptor containing pointer to code and to argument,…",null,null],[17,"R_386_IRELATIVE","","Adjust indirectly by program base",null,null],[17,"R_386_GOT32X","","Load from 32 bit GOT entry, relaxable.",null,null],[17,"STT_SPARC_REGISTER","","Global register reserved to app.",null,null],[17,"EF_SPARCV9_MM","","",null,null],[17,"EF_SPARCV9_TSO","","",null,null],[17,"EF_SPARCV9_PSO","","",null,null],[17,"EF_SPARCV9_RMO","","",null,null],[17,"EF_SPARC_LEDATA","","little endian data",null,null],[17,"EF_SPARC_EXT_MASK","","",null,null],[17,"EF_SPARC_32PLUS","","generic V8+ features",null,null],[17,"EF_SPARC_SUN_US1","","Sun UltraSPARC1 extensions",null,null],[17,"EF_SPARC_HAL_R1","","HAL R1 extensions",null,null],[17,"EF_SPARC_SUN_US3","","Sun UltraSPARCIII extensions",null,null],[17,"R_SPARC_NONE","","No reloc",null,null],[17,"R_SPARC_8","","Direct 8 bit",null,null],[17,"R_SPARC_16","","Direct 16 bit",null,null],[17,"R_SPARC_32","","Direct 32 bit",null,null],[17,"R_SPARC_DISP8","","PC relative 8 bit",null,null],[17,"R_SPARC_DISP16","","PC relative 16 bit",null,null],[17,"R_SPARC_DISP32","","PC relative 32 bit",null,null],[17,"R_SPARC_WDISP30","","PC relative 30 bit shifted",null,null],[17,"R_SPARC_WDISP22","","PC relative 22 bit shifted",null,null],[17,"R_SPARC_HI22","","High 22 bit",null,null],[17,"R_SPARC_22","","Direct 22 bit",null,null],[17,"R_SPARC_13","","Direct 13 bit",null,null],[17,"R_SPARC_LO10","","Truncated 10 bit",null,null],[17,"R_SPARC_GOT10","","Truncated 10 bit GOT entry",null,null],[17,"R_SPARC_GOT13","","13 bit GOT entry",null,null],[17,"R_SPARC_GOT22","","22 bit GOT entry shifted",null,null],[17,"R_SPARC_PC10","","PC relative 10 bit truncated",null,null],[17,"R_SPARC_PC22","","PC relative 22 bit shifted",null,null],[17,"R_SPARC_WPLT30","","30 bit PC relative PLT address",null,null],[17,"R_SPARC_COPY","","Copy symbol at runtime",null,null],[17,"R_SPARC_GLOB_DAT","","Create GOT entry",null,null],[17,"R_SPARC_JMP_SLOT","","Create PLT entry",null,null],[17,"R_SPARC_RELATIVE","","Adjust by program base",null,null],[17,"R_SPARC_UA32","","Direct 32 bit unaligned",null,null],[17,"R_SPARC_PLT32","","Direct 32 bit ref to PLT entry",null,null],[17,"R_SPARC_HIPLT22","","High 22 bit PLT entry",null,null],[17,"R_SPARC_LOPLT10","","Truncated 10 bit PLT entry",null,null],[17,"R_SPARC_PCPLT32","","PC rel 32 bit ref to PLT entry",null,null],[17,"R_SPARC_PCPLT22","","PC rel high 22 bit PLT entry",null,null],[17,"R_SPARC_PCPLT10","","PC rel trunc 10 bit PLT entry",null,null],[17,"R_SPARC_10","","Direct 10 bit",null,null],[17,"R_SPARC_11","","Direct 11 bit",null,null],[17,"R_SPARC_64","","Direct 64 bit",null,null],[17,"R_SPARC_OLO10","","10bit with secondary 13bit addend",null,null],[17,"R_SPARC_HH22","","Top 22 bits of direct 64 bit",null,null],[17,"R_SPARC_HM10","","High middle 10 bits of ...",null,null],[17,"R_SPARC_LM22","","Low middle 22 bits of ...",null,null],[17,"R_SPARC_PC_HH22","","Top 22 bits of pc rel 64 bit",null,null],[17,"R_SPARC_PC_HM10","","High middle 10 bit of ...",null,null],[17,"R_SPARC_PC_LM22","","Low miggle 22 bits of ...",null,null],[17,"R_SPARC_WDISP16","","PC relative 16 bit shifted",null,null],[17,"R_SPARC_WDISP19","","PC relative 19 bit shifted",null,null],[17,"R_SPARC_GLOB_JMP","","was part of v9 ABI but was removed",null,null],[17,"R_SPARC_7","","Direct 7 bit",null,null],[17,"R_SPARC_5","","Direct 5 bit",null,null],[17,"R_SPARC_6","","Direct 6 bit",null,null],[17,"R_SPARC_DISP64","","PC relative 64 bit",null,null],[17,"R_SPARC_PLT64","","Direct 64 bit ref to PLT entry",null,null],[17,"R_SPARC_HIX22","","High 22 bit complemented",null,null],[17,"R_SPARC_LOX10","","Truncated 11 bit complemented",null,null],[17,"R_SPARC_H44","","Direct high 12 of 44 bit",null,null],[17,"R_SPARC_M44","","Direct mid 22 of 44 bit",null,null],[17,"R_SPARC_L44","","Direct low 10 of 44 bit",null,null],[17,"R_SPARC_REGISTER","","Global register usage",null,null],[17,"R_SPARC_UA64","","Direct 64 bit unaligned",null,null],[17,"R_SPARC_UA16","","Direct 16 bit unaligned",null,null],[17,"R_SPARC_TLS_GD_HI22","","",null,null],[17,"R_SPARC_TLS_GD_LO10","","",null,null],[17,"R_SPARC_TLS_GD_ADD","","",null,null],[17,"R_SPARC_TLS_GD_CALL","","",null,null],[17,"R_SPARC_TLS_LDM_HI22","","",null,null],[17,"R_SPARC_TLS_LDM_LO10","","",null,null],[17,"R_SPARC_TLS_LDM_ADD","","",null,null],[17,"R_SPARC_TLS_LDM_CALL","","",null,null],[17,"R_SPARC_TLS_LDO_HIX22","","",null,null],[17,"R_SPARC_TLS_LDO_LOX10","","",null,null],[17,"R_SPARC_TLS_LDO_ADD","","",null,null],[17,"R_SPARC_TLS_IE_HI22","","",null,null],[17,"R_SPARC_TLS_IE_LO10","","",null,null],[17,"R_SPARC_TLS_IE_LD","","",null,null],[17,"R_SPARC_TLS_IE_LDX","","",null,null],[17,"R_SPARC_TLS_IE_ADD","","",null,null],[17,"R_SPARC_TLS_LE_HIX22","","",null,null],[17,"R_SPARC_TLS_LE_LOX10","","",null,null],[17,"R_SPARC_TLS_DTPMOD32","","",null,null],[17,"R_SPARC_TLS_DTPMOD64","","",null,null],[17,"R_SPARC_TLS_DTPOFF32","","",null,null],[17,"R_SPARC_TLS_DTPOFF64","","",null,null],[17,"R_SPARC_TLS_TPOFF32","","",null,null],[17,"R_SPARC_TLS_TPOFF64","","",null,null],[17,"R_SPARC_GOTDATA_HIX22","","",null,null],[17,"R_SPARC_GOTDATA_LOX10","","",null,null],[17,"R_SPARC_GOTDATA_OP_HIX22","","",null,null],[17,"R_SPARC_GOTDATA_OP_LOX10","","",null,null],[17,"R_SPARC_GOTDATA_OP","","",null,null],[17,"R_SPARC_H34","","",null,null],[17,"R_SPARC_SIZE32","","",null,null],[17,"R_SPARC_SIZE64","","",null,null],[17,"R_SPARC_WDISP10","","",null,null],[17,"R_SPARC_JMP_IREL","","",null,null],[17,"R_SPARC_IRELATIVE","","",null,null],[17,"R_SPARC_GNU_VTINHERIT","","",null,null],[17,"R_SPARC_GNU_VTENTRY","","",null,null],[17,"R_SPARC_REV32","","",null,null],[17,"DT_SPARC_REGISTER","","",null,null],[17,"EF_MIPS_NOREORDER","","A .noreorder directive was used.",null,null],[17,"EF_MIPS_PIC","","Contains PIC code.",null,null],[17,"EF_MIPS_CPIC","","Uses PIC calling sequence.",null,null],[17,"EF_MIPS_XGOT","","",null,null],[17,"EF_MIPS_64BIT_WHIRL","","",null,null],[17,"EF_MIPS_ABI2","","",null,null],[17,"EF_MIPS_ABI_ON32","","",null,null],[17,"EF_MIPS_FP64","","Uses FP64 (12 callee-saved).",null,null],[17,"EF_MIPS_NAN2008","","Uses IEEE 754-2008 NaN encoding.",null,null],[17,"EF_MIPS_ARCH","","MIPS architecture level.",null,null],[17,"EF_MIPS_ARCH_1","","-mips1 code.",null,null],[17,"EF_MIPS_ARCH_2","","-mips2 code.",null,null],[17,"EF_MIPS_ARCH_3","","-mips3 code.",null,null],[17,"EF_MIPS_ARCH_4","","-mips4 code.",null,null],[17,"EF_MIPS_ARCH_5","","-mips5 code.",null,null],[17,"EF_MIPS_ARCH_32","","MIPS32 code.",null,null],[17,"EF_MIPS_ARCH_64","","MIPS64 code.",null,null],[17,"EF_MIPS_ARCH_32R2","","MIPS32r2 code.",null,null],[17,"EF_MIPS_ARCH_64R2","","MIPS64r2 code.",null,null],[17,"SHN_MIPS_ACOMMON","","Allocated common symbols.",null,null],[17,"SHN_MIPS_TEXT","","Allocated test symbols.",null,null],[17,"SHN_MIPS_DATA","","Allocated data symbols.",null,null],[17,"SHN_MIPS_SCOMMON","","Small common symbols.",null,null],[17,"SHN_MIPS_SUNDEFINED","","Small undefined symbols.",null,null],[17,"SHT_MIPS_LIBLIST","","Shared objects used in link.",null,null],[17,"SHT_MIPS_MSYM","","",null,null],[17,"SHT_MIPS_CONFLICT","","Conflicting symbols.",null,null],[17,"SHT_MIPS_GPTAB","","Global data area sizes.",null,null],[17,"SHT_MIPS_UCODE","","Reserved for SGI/MIPS compilers",null,null],[17,"SHT_MIPS_DEBUG","","MIPS ECOFF debugging info.",null,null],[17,"SHT_MIPS_REGINFO","","Register usage information.",null,null],[17,"SHT_MIPS_PACKAGE","","",null,null],[17,"SHT_MIPS_PACKSYM","","",null,null],[17,"SHT_MIPS_RELD","","",null,null],[17,"SHT_MIPS_IFACE","","",null,null],[17,"SHT_MIPS_CONTENT","","",null,null],[17,"SHT_MIPS_OPTIONS","","Miscellaneous options.",null,null],[17,"SHT_MIPS_SHDR","","",null,null],[17,"SHT_MIPS_FDESC","","",null,null],[17,"SHT_MIPS_EXTSYM","","",null,null],[17,"SHT_MIPS_DENSE","","",null,null],[17,"SHT_MIPS_PDESC","","",null,null],[17,"SHT_MIPS_LOCSYM","","",null,null],[17,"SHT_MIPS_AUXSYM","","",null,null],[17,"SHT_MIPS_OPTSYM","","",null,null],[17,"SHT_MIPS_LOCSTR","","",null,null],[17,"SHT_MIPS_LINE","","",null,null],[17,"SHT_MIPS_RFDESC","","",null,null],[17,"SHT_MIPS_DELTASYM","","",null,null],[17,"SHT_MIPS_DELTAINST","","",null,null],[17,"SHT_MIPS_DELTACLASS","","",null,null],[17,"SHT_MIPS_DWARF","","DWARF debugging information.",null,null],[17,"SHT_MIPS_DELTADECL","","",null,null],[17,"SHT_MIPS_SYMBOL_LIB","","",null,null],[17,"SHT_MIPS_EVENTS","","Event section.",null,null],[17,"SHT_MIPS_TRANSLATE","","",null,null],[17,"SHT_MIPS_PIXIE","","",null,null],[17,"SHT_MIPS_XLATE","","",null,null],[17,"SHT_MIPS_XLATE_DEBUG","","",null,null],[17,"SHT_MIPS_WHIRL","","",null,null],[17,"SHT_MIPS_EH_REGION","","",null,null],[17,"SHT_MIPS_XLATE_OLD","","",null,null],[17,"SHT_MIPS_PDR_EXCEPTION","","",null,null],[17,"SHF_MIPS_GPREL","","Must be in global data area.",null,null],[17,"SHF_MIPS_MERGE","","",null,null],[17,"SHF_MIPS_ADDR","","",null,null],[17,"SHF_MIPS_STRINGS","","",null,null],[17,"SHF_MIPS_NOSTRIP","","",null,null],[17,"SHF_MIPS_LOCAL","","",null,null],[17,"SHF_MIPS_NAMES","","",null,null],[17,"SHF_MIPS_NODUPE","","",null,null],[17,"STO_MIPS_DEFAULT","","",null,null],[17,"STO_MIPS_INTERNAL","","",null,null],[17,"STO_MIPS_HIDDEN","","",null,null],[17,"STO_MIPS_PROTECTED","","",null,null],[17,"STO_MIPS_PLT","","",null,null],[17,"STO_MIPS_SC_ALIGN_UNUSED","","",null,null],[17,"STB_MIPS_SPLIT_COMMON","","",null,null],[17,"ODK_NULL","","Undefined.",null,null],[17,"ODK_REGINFO","","Register usage information.",null,null],[17,"ODK_EXCEPTIONS","","Exception processing options.",null,null],[17,"ODK_PAD","","Section padding options.",null,null],[17,"ODK_HWPATCH","","Hardware workarounds performed",null,null],[17,"ODK_FILL","","record the fill value used by the linker.",null,null],[17,"ODK_TAGS","","reserve space for desktop tools to write.",null,null],[17,"ODK_HWAND","","HW workarounds.  'AND' bits when merging.",null,null],[17,"ODK_HWOR","","HW workarounds.  'OR' bits when merging.",null,null],[17,"OEX_FPU_MIN","","FPE's which MUST be enabled.",null,null],[17,"OEX_FPU_MAX","","FPE's which MAY be enabled.",null,null],[17,"OEX_PAGE0","","page zero must be mapped.",null,null],[17,"OEX_SMM","","Force sequential memory mode?",null,null],[17,"OEX_FPDBUG","","Force floating point debug mode?",null,null],[17,"OEX_PRECISEFP","","",null,null],[17,"OEX_DISMISS","","Dismiss invalid address faults?",null,null],[17,"OEX_FPU_INVAL","","",null,null],[17,"OEX_FPU_DIV0","","",null,null],[17,"OEX_FPU_OFLO","","",null,null],[17,"OEX_FPU_UFLO","","",null,null],[17,"OEX_FPU_INEX","","",null,null],[17,"OHW_R4KEOP","","R4000 end-of-page patch.",null,null],[17,"OHW_R8KPFETCH","","may need R8000 prefetch patch.",null,null],[17,"OHW_R5KEOP","","R5000 end-of-page patch.",null,null],[17,"OHW_R5KCVTL","","R5000 cvt.[ds].l bug.  clean=1.",null,null],[17,"OPAD_PREFIX","","",null,null],[17,"OPAD_POSTFIX","","",null,null],[17,"OPAD_SYMBOL","","",null,null],[17,"OHWA0_R4KEOP_CHECKED","","",null,null],[17,"OHWA1_R4KEOP_CLEAN","","",null,null],[17,"R_MIPS_NONE","","No reloc",null,null],[17,"R_MIPS_16","","Direct 16 bit",null,null],[17,"R_MIPS_32","","Direct 32 bit",null,null],[17,"R_MIPS_REL32","","PC relative 32 bit",null,null],[17,"R_MIPS_26","","Direct 26 bit shifted",null,null],[17,"R_MIPS_HI16","","High 16 bit",null,null],[17,"R_MIPS_LO16","","Low 16 bit",null,null],[17,"R_MIPS_GPREL16","","GP relative 16 bit",null,null],[17,"R_MIPS_LITERAL","","16 bit literal entry",null,null],[17,"R_MIPS_GOT16","","16 bit GOT entry",null,null],[17,"R_MIPS_PC16","","PC relative 16 bit",null,null],[17,"R_MIPS_CALL16","","16 bit GOT entry for function",null,null],[17,"R_MIPS_GPREL32","","GP relative 32 bit",null,null],[17,"R_MIPS_SHIFT5","","",null,null],[17,"R_MIPS_SHIFT6","","",null,null],[17,"R_MIPS_64","","",null,null],[17,"R_MIPS_GOT_DISP","","",null,null],[17,"R_MIPS_GOT_PAGE","","",null,null],[17,"R_MIPS_GOT_OFST","","",null,null],[17,"R_MIPS_GOT_HI16","","",null,null],[17,"R_MIPS_GOT_LO16","","",null,null],[17,"R_MIPS_SUB","","",null,null],[17,"R_MIPS_INSERT_A","","",null,null],[17,"R_MIPS_INSERT_B","","",null,null],[17,"R_MIPS_DELETE","","",null,null],[17,"R_MIPS_HIGHER","","",null,null],[17,"R_MIPS_HIGHEST","","",null,null],[17,"R_MIPS_CALL_HI16","","",null,null],[17,"R_MIPS_CALL_LO16","","",null,null],[17,"R_MIPS_SCN_DISP","","",null,null],[17,"R_MIPS_REL16","","",null,null],[17,"R_MIPS_ADD_IMMEDIATE","","",null,null],[17,"R_MIPS_PJUMP","","",null,null],[17,"R_MIPS_RELGOT","","",null,null],[17,"R_MIPS_JALR","","",null,null],[17,"R_MIPS_TLS_DTPMOD32","","Module number 32 bit",null,null],[17,"R_MIPS_TLS_DTPREL32","","Module-relative offset 32 bit",null,null],[17,"R_MIPS_TLS_DTPMOD64","","Module number 64 bit",null,null],[17,"R_MIPS_TLS_DTPREL64","","Module-relative offset 64 bit",null,null],[17,"R_MIPS_TLS_GD","","16 bit GOT offset for GD",null,null],[17,"R_MIPS_TLS_LDM","","16 bit GOT offset for LDM",null,null],[17,"R_MIPS_TLS_DTPREL_HI16","","Module-relative offset, high 16 bits",null,null],[17,"R_MIPS_TLS_DTPREL_LO16","","Module-relative offset, low 16 bits",null,null],[17,"R_MIPS_TLS_GOTTPREL","","16 bit GOT offset for IE",null,null],[17,"R_MIPS_TLS_TPREL32","","TP-relative offset, 32 bit",null,null],[17,"R_MIPS_TLS_TPREL64","","TP-relative offset, 64 bit",null,null],[17,"R_MIPS_TLS_TPREL_HI16","","TP-relative offset, high 16 bits",null,null],[17,"R_MIPS_TLS_TPREL_LO16","","TP-relative offset, low 16 bits",null,null],[17,"R_MIPS_GLOB_DAT","","",null,null],[17,"R_MIPS_COPY","","",null,null],[17,"R_MIPS_JUMP_SLOT","","",null,null],[17,"PT_MIPS_REGINFO","","Register usage information.",null,null],[17,"PT_MIPS_RTPROC","","Runtime procedure table.",null,null],[17,"PT_MIPS_OPTIONS","","",null,null],[17,"PT_MIPS_ABIFLAGS","","FP mode requirement.",null,null],[17,"PF_MIPS_LOCAL","","",null,null],[17,"DT_MIPS_RLD_VERSION","","Runtime linker interface version",null,null],[17,"DT_MIPS_TIME_STAMP","","Timestamp",null,null],[17,"DT_MIPS_ICHECKSUM","","Checksum",null,null],[17,"DT_MIPS_IVERSION","","Version string (string tbl index)",null,null],[17,"DT_MIPS_FLAGS","","Flags",null,null],[17,"DT_MIPS_BASE_ADDRESS","","Base address",null,null],[17,"DT_MIPS_MSYM","","",null,null],[17,"DT_MIPS_CONFLICT","","Address of CONFLICT section",null,null],[17,"DT_MIPS_LIBLIST","","Address of LIBLIST section",null,null],[17,"DT_MIPS_LOCAL_GOTNO","","Number of local GOT entries",null,null],[17,"DT_MIPS_CONFLICTNO","","Number of CONFLICT entries",null,null],[17,"DT_MIPS_LIBLISTNO","","Number of LIBLIST entries",null,null],[17,"DT_MIPS_SYMTABNO","","Number of DYNSYM entries",null,null],[17,"DT_MIPS_UNREFEXTNO","","First external DYNSYM",null,null],[17,"DT_MIPS_GOTSYM","","First GOT entry in DYNSYM",null,null],[17,"DT_MIPS_HIPAGENO","","Number of GOT page table entries",null,null],[17,"DT_MIPS_RLD_MAP","","Address of run time loader map.",null,null],[17,"DT_MIPS_DELTA_CLASS","","Delta C++ class definition.",null,null],[17,"DT_MIPS_DELTA_CLASS_NO","","Number of entries in DT_MIPS_DELTA_CLASS.",null,null],[17,"DT_MIPS_DELTA_INSTANCE","","Delta C++ class instances.",null,null],[17,"DT_MIPS_DELTA_INSTANCE_NO","","Number of entries in DT_MIPS_DELTA_INSTANCE.",null,null],[17,"DT_MIPS_DELTA_RELOC","","Delta relocations.",null,null],[17,"DT_MIPS_DELTA_RELOC_NO","","Number of entries in DT_MIPS_DELTA_RELOC.",null,null],[17,"DT_MIPS_DELTA_SYM","","Delta symbols that Delta relocations refer to.",null,null],[17,"DT_MIPS_DELTA_SYM_NO","","Number of entries in DT_MIPS_DELTA_SYM.",null,null],[17,"DT_MIPS_DELTA_CLASSSYM","","Delta symbols that hold the class declaration.",null,null],[17,"DT_MIPS_DELTA_CLASSSYM_NO","","Number of entries in DT_MIPS_DELTA_CLASSSYM.",null,null],[17,"DT_MIPS_CXX_FLAGS","","Flags indicating for C++ flavor.",null,null],[17,"DT_MIPS_PIXIE_INIT","","",null,null],[17,"DT_MIPS_SYMBOL_LIB","","",null,null],[17,"DT_MIPS_LOCALPAGE_GOTIDX","","",null,null],[17,"DT_MIPS_LOCAL_GOTIDX","","",null,null],[17,"DT_MIPS_HIDDEN_GOTIDX","","",null,null],[17,"DT_MIPS_PROTECTED_GOTIDX","","",null,null],[17,"DT_MIPS_OPTIONS","","Address of .options.",null,null],[17,"DT_MIPS_INTERFACE","","Address of .interface.",null,null],[17,"DT_MIPS_DYNSTR_ALIGN","","",null,null],[17,"DT_MIPS_INTERFACE_SIZE","","Size of the .interface section.",null,null],[17,"DT_MIPS_RLD_TEXT_RESOLVE_ADDR","","Address of rld_text_rsolve function stored in GOT.",null,null],[17,"DT_MIPS_PERF_SUFFIX","","Default suffix of dso to be added by rld on dlopen() calls.",null,null],[17,"DT_MIPS_COMPACT_SIZE","","(O32)Size of compact rel section.",null,null],[17,"DT_MIPS_GP_VALUE","","GP value for aux GOTs.",null,null],[17,"DT_MIPS_AUX_DYNAMIC","","Address of aux .dynamic.",null,null],[17,"DT_MIPS_PLTGOT","","The address of .got.plt in an executable using the new…",null,null],[17,"DT_MIPS_RWPLT","","The base of the PLT in an executable using the new non-PIC…",null,null],[17,"DT_MIPS_RLD_MAP_REL","","An alternative description of the classic MIPS RLD_MAP…",null,null],[17,"RHF_NONE","","No flags",null,null],[17,"RHF_QUICKSTART","","Use quickstart",null,null],[17,"RHF_NOTPOT","","Hash size not power of 2",null,null],[17,"RHF_NO_LIBRARY_REPLACEMENT","","Ignore LD_LIBRARY_PATH",null,null],[17,"RHF_NO_MOVE","","",null,null],[17,"RHF_SGI_ONLY","","",null,null],[17,"RHF_GUARANTEE_INIT","","",null,null],[17,"RHF_DELTA_C_PLUS_PLUS","","",null,null],[17,"RHF_GUARANTEE_START_INIT","","",null,null],[17,"RHF_PIXIE","","",null,null],[17,"RHF_DEFAULT_DELAY_LOAD","","",null,null],[17,"RHF_REQUICKSTART","","",null,null],[17,"RHF_REQUICKSTARTED","","",null,null],[17,"RHF_CORD","","",null,null],[17,"RHF_NO_UNRES_UNDEF","","",null,null],[17,"RHF_RLD_ORDER_SAFE","","",null,null],[17,"LL_NONE","","",null,null],[17,"LL_EXACT_MATCH","","Require exact match",null,null],[17,"LL_IGNORE_INT_VER","","Ignore interface version",null,null],[17,"LL_REQUIRE_MINOR","","",null,null],[17,"LL_EXPORTS","","",null,null],[17,"LL_DELAY_LOAD","","",null,null],[17,"LL_DELTA","","",null,null],[17,"EF_PARISC_TRAPNIL","","Trap nil pointer dereference.",null,null],[17,"EF_PARISC_EXT","","Program uses arch. extensions.",null,null],[17,"EF_PARISC_LSB","","Program expects little endian.",null,null],[17,"EF_PARISC_WIDE","","Program expects wide mode.",null,null],[17,"EF_PARISC_NO_KABP","","No kernel assisted branch prediction.",null,null],[17,"EF_PARISC_LAZYSWAP","","Allow lazy swapping.",null,null],[17,"EF_PARISC_ARCH","","Architecture version.",null,null],[17,"EFA_PARISC_1_0","","PA-RISC 1.0 big-endian.",null,null],[17,"EFA_PARISC_1_1","","PA-RISC 1.1 big-endian.",null,null],[17,"EFA_PARISC_2_0","","PA-RISC 2.0 big-endian.",null,null],[17,"SHN_PARISC_ANSI_COMMON","","Section for tenatively declared symbols in ANSI C.",null,null],[17,"SHN_PARISC_HUGE_COMMON","","Common blocks in huge model.",null,null],[17,"SHT_PARISC_EXT","","Contains product specific ext.",null,null],[17,"SHT_PARISC_UNWIND","","Unwind information.",null,null],[17,"SHT_PARISC_DOC","","Debug info for optimized code.",null,null],[17,"SHF_PARISC_SHORT","","Section with short addressing.",null,null],[17,"SHF_PARISC_HUGE","","Section far from gp.",null,null],[17,"SHF_PARISC_SBP","","Static branch prediction code.",null,null],[17,"STT_PARISC_MILLICODE","","Millicode function entry point.",null,null],[17,"STT_HP_OPAQUE","","",null,null],[17,"STT_HP_STUB","","",null,null],[17,"R_PARISC_NONE","","No reloc.",null,null],[17,"R_PARISC_DIR32","","Direct 32-bit reference.",null,null],[17,"R_PARISC_DIR21L","","Left 21 bits of eff. address.",null,null],[17,"R_PARISC_DIR17R","","Right 17 bits of eff. address.",null,null],[17,"R_PARISC_DIR17F","","17 bits of eff. address.",null,null],[17,"R_PARISC_DIR14R","","Right 14 bits of eff. address.",null,null],[17,"R_PARISC_PCREL32","","32-bit rel. address.",null,null],[17,"R_PARISC_PCREL21L","","Left 21 bits of rel. address.",null,null],[17,"R_PARISC_PCREL17R","","Right 17 bits of rel. address.",null,null],[17,"R_PARISC_PCREL17F","","17 bits of rel. address.",null,null],[17,"R_PARISC_PCREL14R","","Right 14 bits of rel. address.",null,null],[17,"R_PARISC_DPREL21L","","Left 21 bits of rel. address.",null,null],[17,"R_PARISC_DPREL14R","","Right 14 bits of rel. address.",null,null],[17,"R_PARISC_GPREL21L","","GP-relative, left 21 bits.",null,null],[17,"R_PARISC_GPREL14R","","GP-relative, right 14 bits.",null,null],[17,"R_PARISC_LTOFF21L","","LT-relative, left 21 bits.",null,null],[17,"R_PARISC_LTOFF14R","","LT-relative, right 14 bits.",null,null],[17,"R_PARISC_SECREL32","","32 bits section rel. address.",null,null],[17,"R_PARISC_SEGBASE","","No relocation, set segment base.",null,null],[17,"R_PARISC_SEGREL32","","32 bits segment rel. address.",null,null],[17,"R_PARISC_PLTOFF21L","","PLT rel. address, left 21 bits.",null,null],[17,"R_PARISC_PLTOFF14R","","PLT rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR32","","32 bits LT-rel. function pointer.",null,null],[17,"R_PARISC_LTOFF_FPTR21L","","LT-rel. fct ptr, left 21 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR14R","","LT-rel. fct ptr, right 14 bits.",null,null],[17,"R_PARISC_FPTR64","","64 bits function address.",null,null],[17,"R_PARISC_PLABEL32","","32 bits function address.",null,null],[17,"R_PARISC_PLABEL21L","","Left 21 bits of fdesc address.",null,null],[17,"R_PARISC_PLABEL14R","","Right 14 bits of fdesc address.",null,null],[17,"R_PARISC_PCREL64","","64 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL22F","","22 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL14WR","","PC-rel. address, right 14 bits.",null,null],[17,"R_PARISC_PCREL14DR","","PC rel. address, right 14 bits.",null,null],[17,"R_PARISC_PCREL16F","","16 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL16WF","","16 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL16DF","","16 bits PC-rel. address.",null,null],[17,"R_PARISC_DIR64","","64 bits of eff. address.",null,null],[17,"R_PARISC_DIR14WR","","14 bits of eff. address.",null,null],[17,"R_PARISC_DIR14DR","","14 bits of eff. address.",null,null],[17,"R_PARISC_DIR16F","","16 bits of eff. address.",null,null],[17,"R_PARISC_DIR16WF","","16 bits of eff. address.",null,null],[17,"R_PARISC_DIR16DF","","16 bits of eff. address.",null,null],[17,"R_PARISC_GPREL64","","64 bits of GP-rel. address.",null,null],[17,"R_PARISC_GPREL14WR","","GP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_GPREL14DR","","GP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_GPREL16F","","16 bits GP-rel. address.",null,null],[17,"R_PARISC_GPREL16WF","","16 bits GP-rel. address.",null,null],[17,"R_PARISC_GPREL16DF","","16 bits GP-rel. address.",null,null],[17,"R_PARISC_LTOFF64","","64 bits LT-rel. address.",null,null],[17,"R_PARISC_LTOFF14WR","","LT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF14DR","","LT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF16F","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_LTOFF16WF","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_LTOFF16DF","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_SECREL64","","64 bits section rel. address.",null,null],[17,"R_PARISC_SEGREL64","","64 bits segment rel. address.",null,null],[17,"R_PARISC_PLTOFF14WR","","PLT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_PLTOFF14DR","","PLT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_PLTOFF16F","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_PLTOFF16WF","","16 bits PLT-rel. address.",null,null],[17,"R_PARISC_PLTOFF16DF","","16 bits PLT-rel. address.",null,null],[17,"R_PARISC_LTOFF_FPTR64","","64 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LTOFF_FPTR14WR","","LT-rel. fct. ptr., right 14 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR14DR","","LT-rel. fct. ptr., right 14 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR16F","","16 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LTOFF_FPTR16WF","","16 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LTOFF_FPTR16DF","","16 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LORESERVE","","",null,null],[17,"R_PARISC_COPY","","Copy relocation.",null,null],[17,"R_PARISC_IPLT","","Dynamic reloc, imported PLT",null,null],[17,"R_PARISC_EPLT","","Dynamic reloc, exported PLT",null,null],[17,"R_PARISC_TPREL32","","32 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL21L","","TP-rel. address, left 21 bits.",null,null],[17,"R_PARISC_TPREL14R","","TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP21L","","LT-TP-rel. address, left 21 bits.",null,null],[17,"R_PARISC_LTOFF_TP14R","","LT-TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP14F","","14 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_TPREL64","","64 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL14WR","","TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_TPREL14DR","","TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_TPREL16F","","16 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL16WF","","16 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL16DF","","16 bits TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP64","","64 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP14WR","","LT-TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP14DR","","LT-TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP16F","","16 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP16WF","","16 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP16DF","","16 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_GNU_VTENTRY","","",null,null],[17,"R_PARISC_GNU_VTINHERIT","","",null,null],[17,"R_PARISC_TLS_GD21L","","GD 21-bit left.",null,null],[17,"R_PARISC_TLS_GD14R","","GD 14-bit right.",null,null],[17,"R_PARISC_TLS_GDCALL","","GD call to __t_g_a.",null,null],[17,"R_PARISC_TLS_LDM21L","","LD module 21-bit left.",null,null],[17,"R_PARISC_TLS_LDM14R","","LD module 14-bit right.",null,null],[17,"R_PARISC_TLS_LDMCALL","","LD module call to __t_g_a.",null,null],[17,"R_PARISC_TLS_LDO21L","","LD offset 21-bit left.",null,null],[17,"R_PARISC_TLS_LDO14R","","LD offset 14-bit right.",null,null],[17,"R_PARISC_TLS_DTPMOD32","","DTP module 32-bit.",null,null],[17,"R_PARISC_TLS_DTPMOD64","","DTP module 64-bit.",null,null],[17,"R_PARISC_TLS_DTPOFF32","","DTP offset 32-bit.",null,null],[17,"R_PARISC_TLS_DTPOFF64","","DTP offset 32-bit.",null,null],[17,"R_PARISC_TLS_LE21L","","",null,null],[17,"R_PARISC_TLS_LE14R","","",null,null],[17,"R_PARISC_TLS_IE21L","","",null,null],[17,"R_PARISC_TLS_IE14R","","",null,null],[17,"R_PARISC_TLS_TPREL32","","",null,null],[17,"R_PARISC_TLS_TPREL64","","",null,null],[17,"R_PARISC_HIRESERVE","","",null,null],[17,"PT_HP_TLS","","",null,null],[17,"PT_HP_CORE_NONE","","",null,null],[17,"PT_HP_CORE_VERSION","","",null,null],[17,"PT_HP_CORE_KERNEL","","",null,null],[17,"PT_HP_CORE_COMM","","",null,null],[17,"PT_HP_CORE_PROC","","",null,null],[17,"PT_HP_CORE_LOADABLE","","",null,null],[17,"PT_HP_CORE_STACK","","",null,null],[17,"PT_HP_CORE_SHM","","",null,null],[17,"PT_HP_CORE_MMF","","",null,null],[17,"PT_HP_PARALLEL","","",null,null],[17,"PT_HP_FASTBIND","","",null,null],[17,"PT_HP_OPT_ANNOT","","",null,null],[17,"PT_HP_HSL_ANNOT","","",null,null],[17,"PT_HP_STACK","","",null,null],[17,"PT_PARISC_ARCHEXT","","",null,null],[17,"PT_PARISC_UNWIND","","",null,null],[17,"PF_PARISC_SBP","","",null,null],[17,"PF_HP_PAGE_SIZE","","",null,null],[17,"PF_HP_FAR_SHARED","","",null,null],[17,"PF_HP_NEAR_SHARED","","",null,null],[17,"PF_HP_CODE","","",null,null],[17,"PF_HP_MODIFY","","",null,null],[17,"PF_HP_LAZYSWAP","","",null,null],[17,"PF_HP_SBP","","",null,null],[17,"EF_ALPHA_32BIT","","All addresses must be < 2GB.",null,null],[17,"EF_ALPHA_CANRELAX","","Relocations for relaxing exist.",null,null],[17,"SHT_ALPHA_DEBUG","","",null,null],[17,"SHT_ALPHA_REGINFO","","",null,null],[17,"SHF_ALPHA_GPREL","","",null,null],[17,"STO_ALPHA_NOPV","","No PV required.",null,null],[17,"STO_ALPHA_STD_GPLOAD","","PV only used for initial ldgp.",null,null],[17,"R_ALPHA_NONE","","No reloc",null,null],[17,"R_ALPHA_REFLONG","","Direct 32 bit",null,null],[17,"R_ALPHA_REFQUAD","","Direct 64 bit",null,null],[17,"R_ALPHA_GPREL32","","GP relative 32 bit",null,null],[17,"R_ALPHA_LITERAL","","GP relative 16 bit w/optimization",null,null],[17,"R_ALPHA_LITUSE","","Optimization hint for LITERAL",null,null],[17,"R_ALPHA_GPDISP","","Add displacement to GP",null,null],[17,"R_ALPHA_BRADDR","","PC+4 relative 23 bit shifted",null,null],[17,"R_ALPHA_HINT","","PC+4 relative 16 bit shifted",null,null],[17,"R_ALPHA_SREL16","","PC relative 16 bit",null,null],[17,"R_ALPHA_SREL32","","PC relative 32 bit",null,null],[17,"R_ALPHA_SREL64","","PC relative 64 bit",null,null],[17,"R_ALPHA_GPRELHIGH","","GP relative 32 bit, high 16 bits",null,null],[17,"R_ALPHA_GPRELLOW","","GP relative 32 bit, low 16 bits",null,null],[17,"R_ALPHA_GPREL16","","GP relative 16 bit",null,null],[17,"R_ALPHA_COPY","","Copy symbol at runtime",null,null],[17,"R_ALPHA_GLOB_DAT","","Create GOT entry",null,null],[17,"R_ALPHA_JMP_SLOT","","Create PLT entry",null,null],[17,"R_ALPHA_RELATIVE","","Adjust by program base",null,null],[17,"R_ALPHA_TLS_GD_HI","","",null,null],[17,"R_ALPHA_TLSGD","","",null,null],[17,"R_ALPHA_TLS_LDM","","",null,null],[17,"R_ALPHA_DTPMOD64","","",null,null],[17,"R_ALPHA_GOTDTPREL","","",null,null],[17,"R_ALPHA_DTPREL64","","",null,null],[17,"R_ALPHA_DTPRELHI","","",null,null],[17,"R_ALPHA_DTPRELLO","","",null,null],[17,"R_ALPHA_DTPREL16","","",null,null],[17,"R_ALPHA_GOTTPREL","","",null,null],[17,"R_ALPHA_TPREL64","","",null,null],[17,"R_ALPHA_TPRELHI","","",null,null],[17,"R_ALPHA_TPRELLO","","",null,null],[17,"R_ALPHA_TPREL16","","",null,null],[17,"LITUSE_ALPHA_ADDR","","",null,null],[17,"LITUSE_ALPHA_BASE","","",null,null],[17,"LITUSE_ALPHA_BYTOFF","","",null,null],[17,"LITUSE_ALPHA_JSR","","",null,null],[17,"LITUSE_ALPHA_TLS_GD","","",null,null],[17,"LITUSE_ALPHA_TLS_LDM","","",null,null],[17,"DT_ALPHA_PLTRO","","",null,null],[17,"EF_PPC_EMB","","PowerPC embedded flag",null,null],[17,"EF_PPC_RELOCATABLE","","PowerPC -mrelocatable flag",null,null],[17,"EF_PPC_RELOCATABLE_LIB","","PowerPC -mrelocatable-lib flag",null,null],[17,"R_PPC_NONE","","",null,null],[17,"R_PPC_ADDR32","","32bit absolute address",null,null],[17,"R_PPC_ADDR24","","26bit address, 2 bits ignored.",null,null],[17,"R_PPC_ADDR16","","16bit absolute address",null,null],[17,"R_PPC_ADDR16_LO","","lower 16bit of absolute address",null,null],[17,"R_PPC_ADDR16_HI","","high 16bit of absolute address",null,null],[17,"R_PPC_ADDR16_HA","","adjusted high 16bit",null,null],[17,"R_PPC_ADDR14","","16bit address, 2 bits ignored",null,null],[17,"R_PPC_ADDR14_BRTAKEN","","",null,null],[17,"R_PPC_ADDR14_BRNTAKEN","","",null,null],[17,"R_PPC_REL24","","PC relative 26 bit",null,null],[17,"R_PPC_REL14","","PC relative 16 bit",null,null],[17,"R_PPC_REL14_BRTAKEN","","",null,null],[17,"R_PPC_REL14_BRNTAKEN","","",null,null],[17,"R_PPC_GOT16","","",null,null],[17,"R_PPC_GOT16_LO","","",null,null],[17,"R_PPC_GOT16_HI","","",null,null],[17,"R_PPC_GOT16_HA","","",null,null],[17,"R_PPC_PLTREL24","","",null,null],[17,"R_PPC_COPY","","",null,null],[17,"R_PPC_GLOB_DAT","","",null,null],[17,"R_PPC_JMP_SLOT","","",null,null],[17,"R_PPC_RELATIVE","","",null,null],[17,"R_PPC_LOCAL24PC","","",null,null],[17,"R_PPC_UADDR32","","",null,null],[17,"R_PPC_UADDR16","","",null,null],[17,"R_PPC_REL32","","",null,null],[17,"R_PPC_PLT32","","",null,null],[17,"R_PPC_PLTREL32","","",null,null],[17,"R_PPC_PLT16_LO","","",null,null],[17,"R_PPC_PLT16_HI","","",null,null],[17,"R_PPC_PLT16_HA","","",null,null],[17,"R_PPC_SDAREL16","","",null,null],[17,"R_PPC_SECTOFF","","",null,null],[17,"R_PPC_SECTOFF_LO","","",null,null],[17,"R_PPC_SECTOFF_HI","","",null,null],[17,"R_PPC_SECTOFF_HA","","",null,null],[17,"R_PPC_TLS","","none    (sym+add)@tls",null,null],[17,"R_PPC_DTPMOD32","","word32  (sym+add)@dtpmod",null,null],[17,"R_PPC_TPREL16","","half16* (sym+add)@tprel",null,null],[17,"R_PPC_TPREL16_LO","","half16  (sym+add)@tprel@l",null,null],[17,"R_PPC_TPREL16_HI","","half16  (sym+add)@tprel@h",null,null],[17,"R_PPC_TPREL16_HA","","half16  (sym+add)@tprel@ha",null,null],[17,"R_PPC_TPREL32","","word32  (sym+add)@tprel",null,null],[17,"R_PPC_DTPREL16","","half16*(sym+add)@dtprel",null,null],[17,"R_PPC_DTPREL16_LO","","half16  (sym+add)@dtprel@l",null,null],[17,"R_PPC_DTPREL16_HI","","half16  (sym+add)@dtprel@h",null,null],[17,"R_PPC_DTPREL16_HA","","half16  (sym+add)@dtprel@ha",null,null],[17,"R_PPC_DTPREL32","","word32  (sym+add)@dtprel",null,null],[17,"R_PPC_GOT_TLSGD16","","half16* (sym+add)@got@tlsgd",null,null],[17,"R_PPC_GOT_TLSGD16_LO","","half16  (sym+add)@got@tlsgd@l",null,null],[17,"R_PPC_GOT_TLSGD16_HI","","half16  (sym+add)@got@tlsgd@h",null,null],[17,"R_PPC_GOT_TLSGD16_HA","","half16  (sym+add)@got@tlsgd@ha",null,null],[17,"R_PPC_GOT_TLSLD16","","half16* (sym+add)@got@tlsld",null,null],[17,"R_PPC_GOT_TLSLD16_LO","","half16  (sym+add)@got@tlsld@l",null,null],[17,"R_PPC_GOT_TLSLD16_HI","","half16  (sym+add)@got@tlsld@h",null,null],[17,"R_PPC_GOT_TLSLD16_HA","","half16  (sym+add)@got@tlsld@ha",null,null],[17,"R_PPC_GOT_TPREL16","","half16* (sym+add)@got@tprel",null,null],[17,"R_PPC_GOT_TPREL16_LO","","half16  (sym+add)@got@tprel@l",null,null],[17,"R_PPC_GOT_TPREL16_HI","","half16  (sym+add)@got@tprel@h",null,null],[17,"R_PPC_GOT_TPREL16_HA","","half16  (sym+add)@got@tprel@ha",null,null],[17,"R_PPC_GOT_DTPREL16","","half16* (sym+add)@got@dtprel",null,null],[17,"R_PPC_GOT_DTPREL16_LO","","half16* (sym+add)@got@dtprel@l",null,null],[17,"R_PPC_GOT_DTPREL16_HI","","half16* (sym+add)@got@dtprel@h",null,null],[17,"R_PPC_GOT_DTPREL16_HA","","half16* (sym+add)@got@dtprel@ha",null,null],[17,"R_PPC_TLSGD","","none    (sym+add)@tlsgd",null,null],[17,"R_PPC_TLSLD","","none    (sym+add)@tlsld",null,null],[17,"R_PPC_EMB_NADDR32","","",null,null],[17,"R_PPC_EMB_NADDR16","","",null,null],[17,"R_PPC_EMB_NADDR16_LO","","",null,null],[17,"R_PPC_EMB_NADDR16_HI","","",null,null],[17,"R_PPC_EMB_NADDR16_HA","","",null,null],[17,"R_PPC_EMB_SDAI16","","",null,null],[17,"R_PPC_EMB_SDA2I16","","",null,null],[17,"R_PPC_EMB_SDA2REL","","",null,null],[17,"R_PPC_EMB_SDA21","","16 bit offset in SDA",null,null],[17,"R_PPC_EMB_MRKREF","","",null,null],[17,"R_PPC_EMB_RELSEC16","","",null,null],[17,"R_PPC_EMB_RELST_LO","","",null,null],[17,"R_PPC_EMB_RELST_HI","","",null,null],[17,"R_PPC_EMB_RELST_HA","","",null,null],[17,"R_PPC_EMB_BIT_FLD","","",null,null],[17,"R_PPC_EMB_RELSDA","","16 bit relative offset in SDA",null,null],[17,"R_PPC_DIAB_SDA21_LO","","like EMB_SDA21, but lower 16 bit",null,null],[17,"R_PPC_DIAB_SDA21_HI","","like EMB_SDA21, but high 16 bit",null,null],[17,"R_PPC_DIAB_SDA21_HA","","like EMB_SDA21, adjusted high 16",null,null],[17,"R_PPC_DIAB_RELSDA_LO","","like EMB_RELSDA, but lower 16 bit",null,null],[17,"R_PPC_DIAB_RELSDA_HI","","like EMB_RELSDA, but high 16 bit",null,null],[17,"R_PPC_DIAB_RELSDA_HA","","like EMB_RELSDA, adjusted high 16",null,null],[17,"R_PPC_IRELATIVE","","GNU extension to support local ifunc.",null,null],[17,"R_PPC_REL16","","half16   (sym+add-.)",null,null],[17,"R_PPC_REL16_LO","","half16   (sym+add-.)@l",null,null],[17,"R_PPC_REL16_HI","","half16   (sym+add-.)@h",null,null],[17,"R_PPC_REL16_HA","","half16   (sym+add-.)@ha",null,null],[17,"R_PPC_TOC16","","This is a phony reloc to handle any old fashioned TOC16…",null,null],[17,"DT_PPC_GOT","","",null,null],[17,"DT_PPC_OPT","","",null,null],[17,"PPC_OPT_TLS","","",null,null],[17,"R_PPC64_NONE","","",null,null],[17,"R_PPC64_ADDR32","","32bit absolute address",null,null],[17,"R_PPC64_ADDR24","","26bit address, word aligned",null,null],[17,"R_PPC64_ADDR16","","16bit absolute address",null,null],[17,"R_PPC64_ADDR16_LO","","lower 16bits of address",null,null],[17,"R_PPC64_ADDR16_HI","","high 16bits of address.",null,null],[17,"R_PPC64_ADDR16_HA","","adjusted high 16bits.",null,null],[17,"R_PPC64_ADDR14","","16bit address, word aligned",null,null],[17,"R_PPC64_ADDR14_BRTAKEN","","",null,null],[17,"R_PPC64_ADDR14_BRNTAKEN","","",null,null],[17,"R_PPC64_REL24","","PC-rel. 26 bit, word aligned",null,null],[17,"R_PPC64_REL14","","PC relative 16 bit",null,null],[17,"R_PPC64_REL14_BRTAKEN","","",null,null],[17,"R_PPC64_REL14_BRNTAKEN","","",null,null],[17,"R_PPC64_GOT16","","",null,null],[17,"R_PPC64_GOT16_LO","","",null,null],[17,"R_PPC64_GOT16_HI","","",null,null],[17,"R_PPC64_GOT16_HA","","",null,null],[17,"R_PPC64_COPY","","",null,null],[17,"R_PPC64_GLOB_DAT","","",null,null],[17,"R_PPC64_JMP_SLOT","","",null,null],[17,"R_PPC64_RELATIVE","","",null,null],[17,"R_PPC64_UADDR32","","",null,null],[17,"R_PPC64_UADDR16","","",null,null],[17,"R_PPC64_REL32","","",null,null],[17,"R_PPC64_PLT32","","",null,null],[17,"R_PPC64_PLTREL32","","",null,null],[17,"R_PPC64_PLT16_LO","","",null,null],[17,"R_PPC64_PLT16_HI","","",null,null],[17,"R_PPC64_PLT16_HA","","",null,null],[17,"R_PPC64_SECTOFF","","",null,null],[17,"R_PPC64_SECTOFF_LO","","",null,null],[17,"R_PPC64_SECTOFF_HI","","",null,null],[17,"R_PPC64_SECTOFF_HA","","",null,null],[17,"R_PPC64_ADDR30","","word30 (S + A - P) >> 2",null,null],[17,"R_PPC64_ADDR64","","doubleword64 S + A",null,null],[17,"R_PPC64_ADDR16_HIGHER","","half16 #higher(S + A)",null,null],[17,"R_PPC64_ADDR16_HIGHERA","","half16 #highera(S + A)",null,null],[17,"R_PPC64_ADDR16_HIGHEST","","half16 #highest(S + A)",null,null],[17,"R_PPC64_ADDR16_HIGHESTA","","half16 #highesta(S + A)",null,null],[17,"R_PPC64_UADDR64","","doubleword64 S + A",null,null],[17,"R_PPC64_REL64","","doubleword64 S + A - P",null,null],[17,"R_PPC64_PLT64","","doubleword64 L + A",null,null],[17,"R_PPC64_PLTREL64","","doubleword64 L + A - P",null,null],[17,"R_PPC64_TOC16","","half16* S + A - .TOC",null,null],[17,"R_PPC64_TOC16_LO","","half16 #lo(S + A - .TOC.)",null,null],[17,"R_PPC64_TOC16_HI","","half16 #hi(S + A - .TOC.)",null,null],[17,"R_PPC64_TOC16_HA","","half16 #ha(S + A - .TOC.)",null,null],[17,"R_PPC64_TOC","","doubleword64 .TOC",null,null],[17,"R_PPC64_PLTGOT16","","half16* M + A",null,null],[17,"R_PPC64_PLTGOT16_LO","","half16 #lo(M + A)",null,null],[17,"R_PPC64_PLTGOT16_HI","","half16 #hi(M + A)",null,null],[17,"R_PPC64_PLTGOT16_HA","","half16 #ha(M + A)",null,null],[17,"R_PPC64_ADDR16_DS","","half16ds* (S + A) >> 2",null,null],[17,"R_PPC64_ADDR16_LO_DS","","half16ds  #lo(S + A) >> 2",null,null],[17,"R_PPC64_GOT16_DS","","half16ds* (G + A) >> 2",null,null],[17,"R_PPC64_GOT16_LO_DS","","half16ds  #lo(G + A) >> 2",null,null],[17,"R_PPC64_PLT16_LO_DS","","half16ds  #lo(L + A) >> 2",null,null],[17,"R_PPC64_SECTOFF_DS","","half16ds* (R + A) >> 2",null,null],[17,"R_PPC64_SECTOFF_LO_DS","","half16ds  #lo(R + A) >> 2",null,null],[17,"R_PPC64_TOC16_DS","","half16ds* (S + A - .TOC.) >> 2",null,null],[17,"R_PPC64_TOC16_LO_DS","","half16ds  #lo(S + A - .TOC.) >> 2",null,null],[17,"R_PPC64_PLTGOT16_DS","","half16ds* (M + A) >> 2",null,null],[17,"R_PPC64_PLTGOT16_LO_DS","","half16ds  #lo(M + A) >> 2",null,null],[17,"R_PPC64_TLS","","none    (sym+add)@tls",null,null],[17,"R_PPC64_DTPMOD64","","doubleword64 (sym+add)@dtpmod",null,null],[17,"R_PPC64_TPREL16","","half16* (sym+add)@tprel",null,null],[17,"R_PPC64_TPREL16_LO","","half16  (sym+add)@tprel@l",null,null],[17,"R_PPC64_TPREL16_HI","","half16  (sym+add)@tprel@h",null,null],[17,"R_PPC64_TPREL16_HA","","half16  (sym+add)@tprel@ha",null,null],[17,"R_PPC64_TPREL64","","doubleword64 (sym+add)@tprel",null,null],[17,"R_PPC64_DTPREL16","","half16* (sym+add)@dtprel",null,null],[17,"R_PPC64_DTPREL16_LO","","half16  (sym+add)@dtprel@l",null,null],[17,"R_PPC64_DTPREL16_HI","","half16  (sym+add)@dtprel@h",null,null],[17,"R_PPC64_DTPREL16_HA","","half16  (sym+add)@dtprel@ha",null,null],[17,"R_PPC64_DTPREL64","","doubleword64 (sym+add)@dtprel",null,null],[17,"R_PPC64_GOT_TLSGD16","","half16* (sym+add)@got@tlsgd",null,null],[17,"R_PPC64_GOT_TLSGD16_LO","","half16  (sym+add)@got@tlsgd@l",null,null],[17,"R_PPC64_GOT_TLSGD16_HI","","half16  (sym+add)@got@tlsgd@h",null,null],[17,"R_PPC64_GOT_TLSGD16_HA","","half16  (sym+add)@got@tlsgd@ha",null,null],[17,"R_PPC64_GOT_TLSLD16","","half16* (sym+add)@got@tlsld",null,null],[17,"R_PPC64_GOT_TLSLD16_LO","","half16  (sym+add)@got@tlsld@l",null,null],[17,"R_PPC64_GOT_TLSLD16_HI","","half16  (sym+add)@got@tlsld@h",null,null],[17,"R_PPC64_GOT_TLSLD16_HA","","half16  (sym+add)@got@tlsld@ha",null,null],[17,"R_PPC64_GOT_TPREL16_DS","","half16ds* (sym+add)@got@tprel",null,null],[17,"R_PPC64_GOT_TPREL16_LO_DS","","half16ds (sym+add)@got@tprel@l",null,null],[17,"R_PPC64_GOT_TPREL16_HI","","half16  (sym+add)@got@tprel@h",null,null],[17,"R_PPC64_GOT_TPREL16_HA","","half16  (sym+add)@got@tprel@ha",null,null],[17,"R_PPC64_GOT_DTPREL16_DS","","half16ds* (sym+add)@got@dtprel",null,null],[17,"R_PPC64_GOT_DTPREL16_LO_DS","","half16ds (sym+add)@got@dtprel@l",null,null],[17,"R_PPC64_GOT_DTPREL16_HI","","half16  (sym+add)@got@dtprel@h",null,null],[17,"R_PPC64_GOT_DTPREL16_HA","","half16  (sym+add)@got@dtprel@ha",null,null],[17,"R_PPC64_TPREL16_DS","","half16ds* (sym+add)@tprel",null,null],[17,"R_PPC64_TPREL16_LO_DS","","half16ds (sym+add)@tprel@l",null,null],[17,"R_PPC64_TPREL16_HIGHER","","half16  (sym+add)@tprel@higher",null,null],[17,"R_PPC64_TPREL16_HIGHERA","","half16  (sym+add)@tprel@highera",null,null],[17,"R_PPC64_TPREL16_HIGHEST","","half16  (sym+add)@tprel@highest",null,null],[17,"R_PPC64_TPREL16_HIGHESTA","","half16  (sym+add)@tprel@highesta",null,null],[17,"R_PPC64_DTPREL16_DS","","half16ds* (sym+add)@dtprel",null,null],[17,"R_PPC64_DTPREL16_LO_DS","","half16ds (sym+add)@dtprel@l",null,null],[17,"R_PPC64_DTPREL16_HIGHER","","half16  (sym+add)@dtprel@higher",null,null],[17,"R_PPC64_DTPREL16_HIGHERA","","half16  (sym+add)@dtprel@highera",null,null],[17,"R_PPC64_DTPREL16_HIGHEST","","half16  (sym+add)@dtprel@highest",null,null],[17,"R_PPC64_DTPREL16_HIGHESTA","","half16  (sym+add)@dtprel@highesta",null,null],[17,"R_PPC64_TLSGD","","none    (sym+add)@tlsgd",null,null],[17,"R_PPC64_TLSLD","","none    (sym+add)@tlsld",null,null],[17,"R_PPC64_TOCSAVE","","none",null,null],[17,"R_PPC64_ADDR16_HIGH","","",null,null],[17,"R_PPC64_ADDR16_HIGHA","","",null,null],[17,"R_PPC64_TPREL16_HIGH","","",null,null],[17,"R_PPC64_TPREL16_HIGHA","","",null,null],[17,"R_PPC64_DTPREL16_HIGH","","",null,null],[17,"R_PPC64_DTPREL16_HIGHA","","",null,null],[17,"R_PPC64_JMP_IREL","","GNU extension to support local ifunc.",null,null],[17,"R_PPC64_IRELATIVE","","GNU extension to support local ifunc.",null,null],[17,"R_PPC64_REL16","","half16   (sym+add-.)",null,null],[17,"R_PPC64_REL16_LO","","half16   (sym+add-.)@l",null,null],[17,"R_PPC64_REL16_HI","","half16   (sym+add-.)@h",null,null],[17,"R_PPC64_REL16_HA","","half16   (sym+add-.)@ha",null,null],[17,"EF_PPC64_ABI","","PowerPC64 bits specifying ABI.",null,null],[17,"DT_PPC64_GLINK","","",null,null],[17,"DT_PPC64_OPD","","",null,null],[17,"DT_PPC64_OPDSZ","","",null,null],[17,"DT_PPC64_OPT","","",null,null],[17,"PPC64_OPT_TLS","","",null,null],[17,"PPC64_OPT_MULTI_TOC","","",null,null],[17,"PPC64_OPT_LOCALENTRY","","",null,null],[17,"STO_PPC64_LOCAL_BIT","","",null,null],[17,"STO_PPC64_LOCAL_MASK","","",null,null],[17,"EF_ARM_RELEXEC","","",null,null],[17,"EF_ARM_HASENTRY","","",null,null],[17,"EF_ARM_INTERWORK","","",null,null],[17,"EF_ARM_APCS_26","","",null,null],[17,"EF_ARM_APCS_FLOAT","","",null,null],[17,"EF_ARM_PIC","","",null,null],[17,"EF_ARM_ALIGN8","","8-bit structure alignment is in use",null,null],[17,"EF_ARM_NEW_ABI","","",null,null],[17,"EF_ARM_OLD_ABI","","",null,null],[17,"EF_ARM_SOFT_FLOAT","","",null,null],[17,"EF_ARM_VFP_FLOAT","","",null,null],[17,"EF_ARM_MAVERICK_FLOAT","","",null,null],[17,"EF_ARM_ABI_FLOAT_SOFT","","NB conflicts with EF_ARM_SOFT_FLOAT",null,null],[17,"EF_ARM_ABI_FLOAT_HARD","","NB conflicts with EF_ARM_VFP_FLOAT",null,null],[17,"EF_ARM_SYMSARESORTED","","",null,null],[17,"EF_ARM_DYNSYMSUSESEGIDX","","",null,null],[17,"EF_ARM_MAPSYMSFIRST","","",null,null],[17,"EF_ARM_BE8","","",null,null],[17,"EF_ARM_LE8","","",null,null],[17,"EF_ARM_EABIMASK","","",null,null],[17,"EF_ARM_EABI_UNKNOWN","","",null,null],[17,"EF_ARM_EABI_VER1","","",null,null],[17,"EF_ARM_EABI_VER2","","",null,null],[17,"EF_ARM_EABI_VER3","","",null,null],[17,"EF_ARM_EABI_VER4","","",null,null],[17,"EF_ARM_EABI_VER5","","",null,null],[17,"STT_ARM_TFUNC","","A Thumb function.",null,null],[17,"STT_ARM_16BIT","","A Thumb label.",null,null],[17,"SHF_ARM_ENTRYSECT","","Section contains an entry point",null,null],[17,"SHF_ARM_COMDEF","","Section may be multiply defined in the input to a link step.",null,null],[17,"PF_ARM_SB","","Segment contains the location addressed by the static base.",null,null],[17,"PF_ARM_PI","","Position-independent segment.",null,null],[17,"PF_ARM_ABS","","Absolute segment.",null,null],[17,"PT_ARM_EXIDX","","ARM unwind segment.",null,null],[17,"SHT_ARM_EXIDX","","ARM unwind section.",null,null],[17,"SHT_ARM_PREEMPTMAP","","Preemption details.",null,null],[17,"SHT_ARM_ATTRIBUTES","","ARM attributes section.",null,null],[17,"R_AARCH64_NONE","","No relocation.",null,null],[17,"R_AARCH64_P32_ABS32","","Direct 32 bit.",null,null],[17,"R_AARCH64_P32_COPY","","Copy symbol at runtime.",null,null],[17,"R_AARCH64_P32_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_AARCH64_P32_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_AARCH64_P32_RELATIVE","","Adjust by program base.",null,null],[17,"R_AARCH64_P32_TLS_DTPMOD","","Module number, 32 bit.",null,null],[17,"R_AARCH64_P32_TLS_DTPREL","","Module-relative offset, 32 bit.",null,null],[17,"R_AARCH64_P32_TLS_TPREL","","TP-relative offset, 32 bit.",null,null],[17,"R_AARCH64_P32_TLSDESC","","TLS Descriptor.",null,null],[17,"R_AARCH64_P32_IRELATIVE","","STT_GNU_IFUNC relocation.",null,null],[17,"R_AARCH64_ABS64","","Direct 64 bit.",null,null],[17,"R_AARCH64_ABS32","","Direct 32 bit.",null,null],[17,"R_AARCH64_ABS16","","Direct 16-bit.",null,null],[17,"R_AARCH64_PREL64","","PC-relative 64-bit.",null,null],[17,"R_AARCH64_PREL32","","PC-relative 32-bit.",null,null],[17,"R_AARCH64_PREL16","","PC-relative 16-bit.",null,null],[17,"R_AARCH64_MOVW_UABS_G0","","Dir. MOVZ imm. from bits 15:0.",null,null],[17,"R_AARCH64_MOVW_UABS_G0_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_UABS_G1","","Dir. MOVZ imm. from bits 31:16.",null,null],[17,"R_AARCH64_MOVW_UABS_G1_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_UABS_G2","","Dir. MOVZ imm. from bits 47:32.",null,null],[17,"R_AARCH64_MOVW_UABS_G2_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_UABS_G3","","Dir. MOV{K,Z} imm. from 63:48.",null,null],[17,"R_AARCH64_MOVW_SABS_G0","","Dir. MOV{N,Z} imm. from 15:0.",null,null],[17,"R_AARCH64_MOVW_SABS_G1","","Dir. MOV{N,Z} imm. from 31:16.",null,null],[17,"R_AARCH64_MOVW_SABS_G2","","Dir. MOV{N,Z} imm. from 47:32.",null,null],[17,"R_AARCH64_LD_PREL_LO19","","PC-rel. LD imm. from bits 20:2.",null,null],[17,"R_AARCH64_ADR_PREL_LO21","","PC-rel. ADR imm. from bits 20:0.",null,null],[17,"R_AARCH64_ADR_PREL_PG_HI21","","Page-rel. ADRP imm. from 32:12.",null,null],[17,"R_AARCH64_ADR_PREL_PG_HI21_NC","","Likewise; no overflow check.",null,null],[17,"R_AARCH64_ADD_ABS_LO12_NC","","Dir. ADD imm. from bits 11:0.",null,null],[17,"R_AARCH64_LDST8_ABS_LO12_NC","","Likewise for LD/ST; no check.",null,null],[17,"R_AARCH64_TSTBR14","","PC-rel. TBZ/TBNZ imm. from 15:2.",null,null],[17,"R_AARCH64_CONDBR19","","PC-rel. cond. br. imm. from 20:2.",null,null],[17,"R_AARCH64_JUMP26","","PC-rel. B imm. from bits 27:2.",null,null],[17,"R_AARCH64_CALL26","","Likewise for CALL.",null,null],[17,"R_AARCH64_LDST16_ABS_LO12_NC","","Dir. ADD imm. from bits 11:1.",null,null],[17,"R_AARCH64_LDST32_ABS_LO12_NC","","Likewise for bits 11:2.",null,null],[17,"R_AARCH64_LDST64_ABS_LO12_NC","","Likewise for bits 11:3.",null,null],[17,"R_AARCH64_MOVW_PREL_G0","","PC-rel. MOV{N,Z} imm. from 15:0.",null,null],[17,"R_AARCH64_MOVW_PREL_G0_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_PREL_G1","","PC-rel. MOV{N,Z} imm. from 31:16.",null,null],[17,"R_AARCH64_MOVW_PREL_G1_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_PREL_G2","","PC-rel. MOV{N,Z} imm. from 47:32.",null,null],[17,"R_AARCH64_MOVW_PREL_G2_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_PREL_G3","","PC-rel. MOV{N,Z} imm. from 63:48.",null,null],[17,"R_AARCH64_LDST128_ABS_LO12_NC","","Dir. ADD imm. from bits 11:4.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G0","","GOT-rel. off. MOV{N,Z} imm. 15:0.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G0_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G1","","GOT-rel. o. MOV{N,Z} imm. 31:16.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G1_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G2","","GOT-rel. o. MOV{N,Z} imm. 47:32.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G2_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G3","","GOT-rel. o. MOV{N,Z} imm. 63:48.",null,null],[17,"R_AARCH64_GOTREL64","","GOT-relative 64-bit.",null,null],[17,"R_AARCH64_GOTREL32","","GOT-relative 32-bit.",null,null],[17,"R_AARCH64_GOT_LD_PREL19","","PC-rel. GOT off. load imm. 20:2.",null,null],[17,"R_AARCH64_LD64_GOTOFF_LO15","","GOT-rel. off. LD/ST imm. 14:3.",null,null],[17,"R_AARCH64_ADR_GOT_PAGE","","P-page-rel. GOT off. ADRP 32:12.",null,null],[17,"R_AARCH64_LD64_GOT_LO12_NC","","Dir. GOT off. LD/ST imm. 11:3.",null,null],[17,"R_AARCH64_LD64_GOTPAGE_LO15","","GOT-page-rel. GOT off. LD/ST 14:3",null,null],[17,"R_AARCH64_TLSGD_ADR_PREL21","","PC-relative ADR imm. 20:0.",null,null],[17,"R_AARCH64_TLSGD_ADR_PAGE21","","page-rel. ADRP imm. 32:12.",null,null],[17,"R_AARCH64_TLSGD_ADD_LO12_NC","","direct ADD imm. from 11:0.",null,null],[17,"R_AARCH64_TLSGD_MOVW_G1","","GOT-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSGD_MOVW_G0_NC","","GOT-rel. MOVK imm. 15:0.",null,null],[17,"R_AARCH64_TLSLD_ADR_PREL21","","Like 512; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_ADR_PAGE21","","Like 513; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_ADD_LO12_NC","","Like 514; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_MOVW_G1","","Like 515; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_MOVW_G0_NC","","Like 516; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_LD_PREL19","","TLS PC-rel. load imm. 20:2.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G2","","TLS DTP-rel. MOV{N,Z} 47:32.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1","","TLS DTP-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0","","TLS DTP-rel. MOV{N,Z} 15:0.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_HI12","","DTP-rel. ADD imm. from 23:12.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12","","DTP-rel. ADD imm. from 11:0.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:0.",null,null],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:1.",null,null],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:2.",null,null],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:3.",null,null],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G1","","GOT-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC","","GOT-rel. MOVK 15:0.",null,null],[17,"R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21","","Page-rel. ADRP 32:12.",null,null],[17,"R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC","","Direct LD off. 11:3.",null,null],[17,"R_AARCH64_TLSIE_LD_GOTTPREL_PREL19","","PC-rel. load imm. 20:2.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G2","","TLS TP-rel. MOV{N,Z} 47:32.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1","","TLS TP-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0","","TLS TP-rel. MOV{N,Z} 15:0.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_HI12","","TP-rel. ADD imm. 23:12.",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12","","TP-rel. ADD imm. 11:0.",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12","","TP-rel. LD/ST off. 11:0.",null,null],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12","","TP-rel. LD/ST off. 11:1.",null,null],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12","","TP-rel. LD/ST off. 11:2.",null,null],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12","","TP-rel. LD/ST off. 11:3.",null,null],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSDESC_LD_PREL19","","PC-rel. load immediate 20:2.",null,null],[17,"R_AARCH64_TLSDESC_ADR_PREL21","","PC-rel. ADR immediate 20:0.",null,null],[17,"R_AARCH64_TLSDESC_ADR_PAGE21","","Page-rel. ADRP imm. 32:12.",null,null],[17,"R_AARCH64_TLSDESC_LD64_LO12","","Direct LD off. from 11:3.",null,null],[17,"R_AARCH64_TLSDESC_ADD_LO12","","Direct ADD imm. from 11:0.",null,null],[17,"R_AARCH64_TLSDESC_OFF_G1","","GOT-rel. MOV{N,Z} imm. 31:16.",null,null],[17,"R_AARCH64_TLSDESC_OFF_G0_NC","","GOT-rel. MOVK imm. 15:0; no ck.",null,null],[17,"R_AARCH64_TLSDESC_LDR","","Relax LDR.",null,null],[17,"R_AARCH64_TLSDESC_ADD","","Relax ADD.",null,null],[17,"R_AARCH64_TLSDESC_CALL","","Relax BLR.",null,null],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12","","TP-rel. LD/ST off. 11:4.",null,null],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:4.",null,null],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_COPY","","Copy symbol at runtime.",null,null],[17,"R_AARCH64_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_AARCH64_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_AARCH64_RELATIVE","","Adjust by program base.",null,null],[17,"R_AARCH64_TLS_DTPMOD","","Module number, 64 bit.",null,null],[17,"R_AARCH64_TLS_DTPREL","","Module-relative offset, 64 bit.",null,null],[17,"R_AARCH64_TLS_TPREL","","TP-relative offset, 64 bit.",null,null],[17,"R_AARCH64_TLSDESC","","TLS Descriptor.",null,null],[17,"R_AARCH64_IRELATIVE","","STT_GNU_IFUNC relocation.",null,null],[17,"R_ARM_NONE","","No reloc",null,null],[17,"R_ARM_PC24","","Deprecated PC relative 26 bit branch.",null,null],[17,"R_ARM_ABS32","","Direct 32 bit",null,null],[17,"R_ARM_REL32","","PC relative 32 bit",null,null],[17,"R_ARM_PC13","","",null,null],[17,"R_ARM_ABS16","","Direct 16 bit",null,null],[17,"R_ARM_ABS12","","Direct 12 bit",null,null],[17,"R_ARM_THM_ABS5","","Direct & 0x7C (LDR, STR).",null,null],[17,"R_ARM_ABS8","","Direct 8 bit",null,null],[17,"R_ARM_SBREL32","","",null,null],[17,"R_ARM_THM_PC22","","PC relative 24 bit (Thumb32 BL).",null,null],[17,"R_ARM_THM_PC8","","PC relative & 0x3FC (Thumb16 LDR, ADD, ADR).",null,null],[17,"R_ARM_AMP_VCALL9","","",null,null],[17,"R_ARM_SWI24","","Obsolete static relocation.",null,null],[17,"R_ARM_TLS_DESC","","Dynamic relocation.",null,null],[17,"R_ARM_THM_SWI8","","Reserved.",null,null],[17,"R_ARM_XPC25","","Reserved.",null,null],[17,"R_ARM_THM_XPC22","","Reserved.",null,null],[17,"R_ARM_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_ARM_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_ARM_TLS_TPOFF32","","Offset in static TLS block",null,null],[17,"R_ARM_COPY","","Copy symbol at runtime",null,null],[17,"R_ARM_GLOB_DAT","","Create GOT entry",null,null],[17,"R_ARM_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_ARM_RELATIVE","","Adjust by program base",null,null],[17,"R_ARM_GOTOFF","","32 bit offset to GOT",null,null],[17,"R_ARM_GOTPC","","32 bit PC relative offset to GOT",null,null],[17,"R_ARM_GOT32","","32 bit GOT entry",null,null],[17,"R_ARM_PLT32","","Deprecated, 32 bit PLT address.",null,null],[17,"R_ARM_CALL","","PC relative 24 bit (BL, BLX).",null,null],[17,"R_ARM_JUMP24","","PC relative 24 bit (B, BL).",null,null],[17,"R_ARM_THM_JUMP24","","PC relative 24 bit (Thumb32 B.W).",null,null],[17,"R_ARM_BASE_ABS","","Adjust by program base.",null,null],[17,"R_ARM_ALU_PCREL_7_0","","Obsolete.",null,null],[17,"R_ARM_ALU_PCREL_15_8","","Obsolete.",null,null],[17,"R_ARM_ALU_PCREL_23_15","","Obsolete.",null,null],[17,"R_ARM_LDR_SBREL_11_0","","Deprecated, prog. base relative.",null,null],[17,"R_ARM_ALU_SBREL_19_12","","Deprecated, prog. base relative.",null,null],[17,"R_ARM_ALU_SBREL_27_20","","Deprecated, prog. base relative.",null,null],[17,"R_ARM_TARGET1","","",null,null],[17,"R_ARM_SBREL31","","Program base relative.",null,null],[17,"R_ARM_V4BX","","",null,null],[17,"R_ARM_TARGET2","","",null,null],[17,"R_ARM_PREL31","","32 bit PC relative.",null,null],[17,"R_ARM_MOVW_ABS_NC","","Direct 16-bit (MOVW).",null,null],[17,"R_ARM_MOVT_ABS","","Direct high 16-bit (MOVT).",null,null],[17,"R_ARM_MOVW_PREL_NC","","PC relative 16-bit (MOVW).",null,null],[17,"R_ARM_MOVT_PREL","","PC relative (MOVT).",null,null],[17,"R_ARM_THM_MOVW_ABS_NC","","Direct 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_THM_MOVT_ABS","","Direct high 16 bit (Thumb32 MOVT).",null,null],[17,"R_ARM_THM_MOVW_PREL_NC","","PC relative 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_THM_MOVT_PREL","","PC relative high 16 bit (Thumb32 MOVT).",null,null],[17,"R_ARM_THM_JUMP19","","PC relative 20 bit (Thumb32 B.W).",null,null],[17,"R_ARM_THM_JUMP6","","PC relative X & 0x7E (Thumb16 CBZ, CBNZ).",null,null],[17,"R_ARM_THM_ALU_PREL_11_0","","PC relative 12 bit (Thumb32 ADR.W).",null,null],[17,"R_ARM_THM_PC12","","PC relative 12 bit (Thumb32 LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_ABS32_NOI","","Direct 32-bit.",null,null],[17,"R_ARM_REL32_NOI","","PC relative 32-bit.",null,null],[17,"R_ARM_ALU_PC_G0_NC","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G0","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G1_NC","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G1","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G2","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_LDR_PC_G1","","PC relative (LDR,STR,LDRB,STRB).",null,null],[17,"R_ARM_LDR_PC_G2","","PC relative (LDR,STR,LDRB,STRB).",null,null],[17,"R_ARM_LDRS_PC_G0","","PC relative (STR{D,H}, LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_LDRS_PC_G1","","PC relative (STR{D,H}, LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_LDRS_PC_G2","","PC relative (STR{D,H}, LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_LDC_PC_G0","","PC relative (LDC, STC).",null,null],[17,"R_ARM_LDC_PC_G1","","PC relative (LDC, STC).",null,null],[17,"R_ARM_LDC_PC_G2","","PC relative (LDC, STC).",null,null],[17,"R_ARM_ALU_SB_G0_NC","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G0","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G1_NC","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G1","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G2","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_LDR_SB_G0","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDR_SB_G1","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDR_SB_G2","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDRS_SB_G0","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDRS_SB_G1","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDRS_SB_G2","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDC_SB_G0","","Program base relative (LDC,STC).",null,null],[17,"R_ARM_LDC_SB_G1","","Program base relative (LDC,STC).",null,null],[17,"R_ARM_LDC_SB_G2","","Program base relative (LDC,STC).",null,null],[17,"R_ARM_MOVW_BREL_NC","","Program base relative 16 bit (MOVW).",null,null],[17,"R_ARM_MOVT_BREL","","Program base relative high 16 bit (MOVT).",null,null],[17,"R_ARM_MOVW_BREL","","Program base relative 16 bit (MOVW).",null,null],[17,"R_ARM_THM_MOVW_BREL_NC","","Program base relative 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_THM_MOVT_BREL","","Program base relative high 16 bit (Thumb32 MOVT).",null,null],[17,"R_ARM_THM_MOVW_BREL","","Program base relative 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_TLS_GOTDESC","","",null,null],[17,"R_ARM_TLS_CALL","","",null,null],[17,"R_ARM_TLS_DESCSEQ","","TLS relaxation.",null,null],[17,"R_ARM_THM_TLS_CALL","","",null,null],[17,"R_ARM_PLT32_ABS","","",null,null],[17,"R_ARM_GOT_ABS","","GOT entry.",null,null],[17,"R_ARM_GOT_PREL","","PC relative GOT entry.",null,null],[17,"R_ARM_GOT_BREL12","","GOT entry relative to GOT origin (LDR).",null,null],[17,"R_ARM_GOTOFF12","","12 bit, GOT entry relative to GOT origin (LDR, STR).",null,null],[17,"R_ARM_GOTRELAX","","",null,null],[17,"R_ARM_GNU_VTENTRY","","",null,null],[17,"R_ARM_GNU_VTINHERIT","","",null,null],[17,"R_ARM_THM_PC11","","PC relative & 0xFFE (Thumb16 B).",null,null],[17,"R_ARM_THM_PC9","","PC relative & 0x1FE (Thumb16 B/B).",null,null],[17,"R_ARM_TLS_GD32","","PC-rel 32 bit for global dynamic thread local data",null,null],[17,"R_ARM_TLS_LDM32","","PC-rel 32 bit for local dynamic thread local data",null,null],[17,"R_ARM_TLS_LDO32","","32 bit offset relative to TLS block",null,null],[17,"R_ARM_TLS_IE32","","PC-rel 32 bit for GOT entry of static TLS block offset",null,null],[17,"R_ARM_TLS_LE32","","32 bit offset relative to static TLS block",null,null],[17,"R_ARM_TLS_LDO12","","12 bit relative to TLS block (LDR, STR).",null,null],[17,"R_ARM_TLS_LE12","","12 bit relative to static TLS block (LDR, STR).",null,null],[17,"R_ARM_TLS_IE12GP","","12 bit GOT entry relative to GOT origin (LDR).",null,null],[17,"R_ARM_ME_TOO","","Obsolete.",null,null],[17,"R_ARM_THM_TLS_DESCSEQ","","",null,null],[17,"R_ARM_THM_TLS_DESCSEQ16","","",null,null],[17,"R_ARM_THM_TLS_DESCSEQ32","","",null,null],[17,"R_ARM_THM_GOT_BREL12","","GOT entry relative to GOT origin, 12 bit (Thumb32 LDR).",null,null],[17,"R_ARM_IRELATIVE","","",null,null],[17,"R_ARM_RXPC25","","",null,null],[17,"R_ARM_RSBREL32","","",null,null],[17,"R_ARM_THM_RPC22","","",null,null],[17,"R_ARM_RREL32","","",null,null],[17,"R_ARM_RABS22","","",null,null],[17,"R_ARM_RPC24","","",null,null],[17,"R_ARM_RBASE","","",null,null],[17,"R_CKCORE_NONE","","no reloc",null,null],[17,"R_CKCORE_ADDR32","","direct 32 bit (S + A)",null,null],[17,"R_CKCORE_PCRELIMM8BY4","","disp ((S + A - P) >> 2) & 0xff",null,null],[17,"R_CKCORE_PCRELIMM11BY2","","disp ((S + A - P) >> 1) & 0x7ff",null,null],[17,"R_CKCORE_PCREL32","","32-bit rel (S + A - P)",null,null],[17,"R_CKCORE_PCRELJSR_IMM11BY2","","disp ((S + A - P) >>1) & 0x7ff",null,null],[17,"R_CKCORE_RELATIVE","","32 bit adjust program base(B + A)",null,null],[17,"R_CKCORE_COPY","","32 bit adjust by program base",null,null],[17,"R_CKCORE_GLOB_DAT","","off between got and sym (S)",null,null],[17,"R_CKCORE_JUMP_SLOT","","PLT entry (S)",null,null],[17,"R_CKCORE_GOTOFF","","offset to GOT (S + A - GOT)",null,null],[17,"R_CKCORE_GOTPC","","PC offset to GOT (GOT + A - P)",null,null],[17,"R_CKCORE_GOT32","","32 bit GOT entry (G)",null,null],[17,"R_CKCORE_PLT32","","32 bit PLT entry (G)",null,null],[17,"R_CKCORE_ADDRGOT","","GOT entry in GLOB_DAT (GOT + G)",null,null],[17,"R_CKCORE_ADDRPLT","","PLT entry in GLOB_DAT (GOT + G)",null,null],[17,"R_CKCORE_PCREL_IMM26BY2","","((S + A - P) >> 1) & 0x3ff_ffff",null,null],[17,"R_CKCORE_PCREL_IMM16BY2","","disp ((S + A - P) >> 1) & 0xffff",null,null],[17,"R_CKCORE_PCREL_IMM16BY4","","disp ((S + A - P) >> 2) & 0xffff",null,null],[17,"R_CKCORE_PCREL_IMM10BY2","","disp ((S + A - P) >> 1) & 0x3ff",null,null],[17,"R_CKCORE_PCREL_IMM10BY4","","disp ((S + A - P) >> 2) & 0x3ff",null,null],[17,"R_CKCORE_ADDR_HI16","","high & low 16 bit ADDR, ((S + A) >> 16) & 0xffff",null,null],[17,"R_CKCORE_ADDR_LO16","","(S + A) & 0xffff",null,null],[17,"R_CKCORE_GOTPC_HI16","","high & low 16 bit GOTPC, ((GOT + A - P) >> 16) & 0xffff",null,null],[17,"R_CKCORE_GOTPC_LO16","","(GOT + A - P) & 0xffff",null,null],[17,"R_CKCORE_GOTOFF_HI16","","high & low 16 bit GOTOFF, ((S + A - GOT) >> 16) & 0xffff",null,null],[17,"R_CKCORE_GOTOFF_LO16","","(S + A - GOT) & 0xffff",null,null],[17,"R_CKCORE_GOT12","","12 bit disp GOT entry (G)",null,null],[17,"R_CKCORE_GOT_HI16","","high & low 16 bit GOT, (G >> 16) & 0xffff",null,null],[17,"R_CKCORE_GOT_LO16","","(G & 0xffff)",null,null],[17,"R_CKCORE_PLT12","","12 bit disp PLT entry (G)",null,null],[17,"R_CKCORE_PLT_HI16","","high & low 16 bit PLT, (G >> 16) & 0xffff",null,null],[17,"R_CKCORE_PLT_LO16","","G & 0xffff",null,null],[17,"R_CKCORE_ADDRGOT_HI16","","high & low 16 bit ADDRGOT, (GOT + G * 4) & 0xffff",null,null],[17,"R_CKCORE_ADDRGOT_LO16","","(GOT + G * 4) & 0xffff",null,null],[17,"R_CKCORE_ADDRPLT_HI16","","high & low 16 bit ADDRPLT, ((GOT + G * 4) >> 16) & 0xFFFF",null,null],[17,"R_CKCORE_ADDRPLT_LO16","","(GOT+G*4) & 0xffff",null,null],[17,"R_CKCORE_PCREL_JSR_IMM26BY2","","disp ((S+A-P) >>1) & x3ff_ffff",null,null],[17,"R_CKCORE_TOFFSET_LO16","","(S+A-BTEXT) & 0xffff",null,null],[17,"R_CKCORE_DOFFSET_LO16","","(S+A-BTEXT) & 0xffff",null,null],[17,"R_CKCORE_PCREL_IMM18BY2","","disp ((S+A-P) >>1) & 0x3ffff",null,null],[17,"R_CKCORE_DOFFSET_IMM18","","disp (S+A-BDATA) & 0x3ffff",null,null],[17,"R_CKCORE_DOFFSET_IMM18BY2","","disp ((S+A-BDATA)>>1) & 0x3ffff",null,null],[17,"R_CKCORE_DOFFSET_IMM18BY4","","disp ((S+A-BDATA)>>2) & 0x3ffff",null,null],[17,"R_CKCORE_GOT_IMM18BY4","","disp (G >> 2)",null,null],[17,"R_CKCORE_PLT_IMM18BY4","","disp (G >> 2)",null,null],[17,"R_CKCORE_PCREL_IMM7BY4","","disp ((S+A-P) >>2) & 0x7f",null,null],[17,"R_CKCORE_TLS_LE32","","32 bit offset to TLS block",null,null],[17,"R_CKCORE_TLS_IE32","","",null,null],[17,"R_CKCORE_TLS_GD32","","",null,null],[17,"R_CKCORE_TLS_LDM32","","",null,null],[17,"R_CKCORE_TLS_LDO32","","",null,null],[17,"R_CKCORE_TLS_DTPMOD32","","",null,null],[17,"R_CKCORE_TLS_DTPOFF32","","",null,null],[17,"R_CKCORE_TLS_TPOFF32","","",null,null],[17,"EF_CSKY_ABIMASK","","",null,null],[17,"EF_CSKY_OTHER","","",null,null],[17,"EF_CSKY_PROCESSOR","","",null,null],[17,"EF_CSKY_ABIV1","","",null,null],[17,"EF_CSKY_ABIV2","","",null,null],[17,"SHT_CSKY_ATTRIBUTES","","C-SKY attributes section.",null,null],[17,"EF_IA_64_MASKOS","","os-specific flags",null,null],[17,"EF_IA_64_ABI64","","64-bit ABI",null,null],[17,"EF_IA_64_ARCH","","arch. version mask",null,null],[17,"PT_IA_64_ARCHEXT","","arch extension bits",null,null],[17,"PT_IA_64_UNWIND","","ia64 unwind bits",null,null],[17,"PT_IA_64_HP_OPT_ANOT","","",null,null],[17,"PT_IA_64_HP_HSL_ANOT","","",null,null],[17,"PT_IA_64_HP_STACK","","",null,null],[17,"PF_IA_64_NORECOV","","spec insns w/o recovery",null,null],[17,"SHT_IA_64_EXT","","extension bits",null,null],[17,"SHT_IA_64_UNWIND","","unwind bits",null,null],[17,"SHF_IA_64_SHORT","","section near gp",null,null],[17,"SHF_IA_64_NORECOV","","spec insns w/o recovery",null,null],[17,"DT_IA_64_PLT_RESERVE","","",null,null],[17,"R_IA64_NONE","","none",null,null],[17,"R_IA64_IMM14","","symbol + addend, add imm14",null,null],[17,"R_IA64_IMM22","","symbol + addend, add imm22",null,null],[17,"R_IA64_IMM64","","symbol + addend, mov imm64",null,null],[17,"R_IA64_DIR32MSB","","symbol + addend, data4 MSB",null,null],[17,"R_IA64_DIR32LSB","","symbol + addend, data4 LSB",null,null],[17,"R_IA64_DIR64MSB","","symbol + addend, data8 MSB",null,null],[17,"R_IA64_DIR64LSB","","symbol + addend, data8 LSB",null,null],[17,"R_IA64_GPREL22","","@gprel(sym + add), add imm22",null,null],[17,"R_IA64_GPREL64I","","@gprel(sym + add), mov imm64",null,null],[17,"R_IA64_GPREL32MSB","","@gprel(sym + add), data4 MSB",null,null],[17,"R_IA64_GPREL32LSB","","@gprel(sym + add), data4 LSB",null,null],[17,"R_IA64_GPREL64MSB","","@gprel(sym + add), data8 MSB",null,null],[17,"R_IA64_GPREL64LSB","","@gprel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF22","","@ltoff(sym + add), add imm22",null,null],[17,"R_IA64_LTOFF64I","","@ltoff(sym + add), mov imm64",null,null],[17,"R_IA64_PLTOFF22","","@pltoff(sym + add), add imm22",null,null],[17,"R_IA64_PLTOFF64I","","@pltoff(sym + add), mov imm64",null,null],[17,"R_IA64_PLTOFF64MSB","","@pltoff(sym + add), data8 MSB",null,null],[17,"R_IA64_PLTOFF64LSB","","@pltoff(sym + add), data8 LSB",null,null],[17,"R_IA64_FPTR64I","","@fptr(sym + add), mov imm64",null,null],[17,"R_IA64_FPTR32MSB","","@fptr(sym + add), data4 MSB",null,null],[17,"R_IA64_FPTR32LSB","","@fptr(sym + add), data4 LSB",null,null],[17,"R_IA64_FPTR64MSB","","@fptr(sym + add), data8 MSB",null,null],[17,"R_IA64_FPTR64LSB","","@fptr(sym + add), data8 LSB",null,null],[17,"R_IA64_PCREL60B","","@pcrel(sym + add), brl",null,null],[17,"R_IA64_PCREL21B","","@pcrel(sym + add), ptb, call",null,null],[17,"R_IA64_PCREL21M","","@pcrel(sym + add), chk.s",null,null],[17,"R_IA64_PCREL21F","","@pcrel(sym + add), fchkf",null,null],[17,"R_IA64_PCREL32MSB","","@pcrel(sym + add), data4 MSB",null,null],[17,"R_IA64_PCREL32LSB","","@pcrel(sym + add), data4 LSB",null,null],[17,"R_IA64_PCREL64MSB","","@pcrel(sym + add), data8 MSB",null,null],[17,"R_IA64_PCREL64LSB","","@pcrel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_FPTR22","","@ltoff(@fptr(s+a)), imm22",null,null],[17,"R_IA64_LTOFF_FPTR64I","","@ltoff(@fptr(s+a)), imm64",null,null],[17,"R_IA64_LTOFF_FPTR32MSB","","@ltoff(@fptr(s+a)), data4 MSB",null,null],[17,"R_IA64_LTOFF_FPTR32LSB","","@ltoff(@fptr(s+a)), data4 LSB",null,null],[17,"R_IA64_LTOFF_FPTR64MSB","","@ltoff(@fptr(s+a)), data8 MSB",null,null],[17,"R_IA64_LTOFF_FPTR64LSB","","@ltoff(@fptr(s+a)), data8 LSB",null,null],[17,"R_IA64_SEGREL32MSB","","@segrel(sym + add), data4 MSB",null,null],[17,"R_IA64_SEGREL32LSB","","@segrel(sym + add), data4 LSB",null,null],[17,"R_IA64_SEGREL64MSB","","@segrel(sym + add), data8 MSB",null,null],[17,"R_IA64_SEGREL64LSB","","@segrel(sym + add), data8 LSB",null,null],[17,"R_IA64_SECREL32MSB","","@secrel(sym + add), data4 MSB",null,null],[17,"R_IA64_SECREL32LSB","","@secrel(sym + add), data4 LSB",null,null],[17,"R_IA64_SECREL64MSB","","@secrel(sym + add), data8 MSB",null,null],[17,"R_IA64_SECREL64LSB","","@secrel(sym + add), data8 LSB",null,null],[17,"R_IA64_REL32MSB","","data 4 + REL",null,null],[17,"R_IA64_REL32LSB","","data 4 + REL",null,null],[17,"R_IA64_REL64MSB","","data 8 + REL",null,null],[17,"R_IA64_REL64LSB","","data 8 + REL",null,null],[17,"R_IA64_LTV32MSB","","symbol + addend, data4 MSB",null,null],[17,"R_IA64_LTV32LSB","","symbol + addend, data4 LSB",null,null],[17,"R_IA64_LTV64MSB","","symbol + addend, data8 MSB",null,null],[17,"R_IA64_LTV64LSB","","symbol + addend, data8 LSB",null,null],[17,"R_IA64_PCREL21BI","","@pcrel(sym + add), 21bit inst",null,null],[17,"R_IA64_PCREL22","","@pcrel(sym + add), 22bit inst",null,null],[17,"R_IA64_PCREL64I","","@pcrel(sym + add), 64bit inst",null,null],[17,"R_IA64_IPLTMSB","","dynamic reloc, imported PLT, MSB",null,null],[17,"R_IA64_IPLTLSB","","dynamic reloc, imported PLT, LSB",null,null],[17,"R_IA64_COPY","","copy relocation",null,null],[17,"R_IA64_SUB","","Addend and symbol difference",null,null],[17,"R_IA64_LTOFF22X","","LTOFF22, relaxable.",null,null],[17,"R_IA64_LDXMOV","","Use of LTOFF22X.",null,null],[17,"R_IA64_TPREL14","","@tprel(sym + add), imm14",null,null],[17,"R_IA64_TPREL22","","@tprel(sym + add), imm22",null,null],[17,"R_IA64_TPREL64I","","@tprel(sym + add), imm64",null,null],[17,"R_IA64_TPREL64MSB","","@tprel(sym + add), data8 MSB",null,null],[17,"R_IA64_TPREL64LSB","","@tprel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_TPREL22","","@ltoff(@tprel(s+a)), imm2",null,null],[17,"R_IA64_DTPMOD64MSB","","@dtpmod(sym + add), data8 MSB",null,null],[17,"R_IA64_DTPMOD64LSB","","@dtpmod(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_DTPMOD22","","@ltoff(@dtpmod(sym + add)), imm22",null,null],[17,"R_IA64_DTPREL14","","@dtprel(sym + add), imm14",null,null],[17,"R_IA64_DTPREL22","","@dtprel(sym + add), imm22",null,null],[17,"R_IA64_DTPREL64I","","@dtprel(sym + add), imm64",null,null],[17,"R_IA64_DTPREL32MSB","","@dtprel(sym + add), data4 MSB",null,null],[17,"R_IA64_DTPREL32LSB","","@dtprel(sym + add), data4 LSB",null,null],[17,"R_IA64_DTPREL64MSB","","@dtprel(sym + add), data8 MSB",null,null],[17,"R_IA64_DTPREL64LSB","","@dtprel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_DTPREL22","","@ltoff(@dtprel(s+a)), imm22",null,null],[17,"EF_SH_MACH_MASK","","",null,null],[17,"EF_SH_UNKNOWN","","",null,null],[17,"EF_SH1","","",null,null],[17,"EF_SH2","","",null,null],[17,"EF_SH3","","",null,null],[17,"EF_SH_DSP","","",null,null],[17,"EF_SH3_DSP","","",null,null],[17,"EF_SH4AL_DSP","","",null,null],[17,"EF_SH3E","","",null,null],[17,"EF_SH4","","",null,null],[17,"EF_SH2E","","",null,null],[17,"EF_SH4A","","",null,null],[17,"EF_SH2A","","",null,null],[17,"EF_SH4_NOFPU","","",null,null],[17,"EF_SH4A_NOFPU","","",null,null],[17,"EF_SH4_NOMMU_NOFPU","","",null,null],[17,"EF_SH2A_NOFPU","","",null,null],[17,"EF_SH3_NOMMU","","",null,null],[17,"EF_SH2A_SH4_NOFPU","","",null,null],[17,"EF_SH2A_SH3_NOFPU","","",null,null],[17,"EF_SH2A_SH4","","",null,null],[17,"EF_SH2A_SH3E","","",null,null],[17,"R_SH_NONE","","",null,null],[17,"R_SH_DIR32","","",null,null],[17,"R_SH_REL32","","",null,null],[17,"R_SH_DIR8WPN","","",null,null],[17,"R_SH_IND12W","","",null,null],[17,"R_SH_DIR8WPL","","",null,null],[17,"R_SH_DIR8WPZ","","",null,null],[17,"R_SH_DIR8BP","","",null,null],[17,"R_SH_DIR8W","","",null,null],[17,"R_SH_DIR8L","","",null,null],[17,"R_SH_SWITCH16","","",null,null],[17,"R_SH_SWITCH32","","",null,null],[17,"R_SH_USES","","",null,null],[17,"R_SH_COUNT","","",null,null],[17,"R_SH_ALIGN","","",null,null],[17,"R_SH_CODE","","",null,null],[17,"R_SH_DATA","","",null,null],[17,"R_SH_LABEL","","",null,null],[17,"R_SH_SWITCH8","","",null,null],[17,"R_SH_GNU_VTINHERIT","","",null,null],[17,"R_SH_GNU_VTENTRY","","",null,null],[17,"R_SH_TLS_GD_32","","",null,null],[17,"R_SH_TLS_LD_32","","",null,null],[17,"R_SH_TLS_LDO_32","","",null,null],[17,"R_SH_TLS_IE_32","","",null,null],[17,"R_SH_TLS_LE_32","","",null,null],[17,"R_SH_TLS_DTPMOD32","","",null,null],[17,"R_SH_TLS_DTPOFF32","","",null,null],[17,"R_SH_TLS_TPOFF32","","",null,null],[17,"R_SH_GOT32","","",null,null],[17,"R_SH_PLT32","","",null,null],[17,"R_SH_COPY","","",null,null],[17,"R_SH_GLOB_DAT","","",null,null],[17,"R_SH_JMP_SLOT","","",null,null],[17,"R_SH_RELATIVE","","",null,null],[17,"R_SH_GOTOFF","","",null,null],[17,"R_SH_GOTPC","","",null,null],[17,"EF_S390_HIGH_GPRS","","High GPRs kernel facility needed.",null,null],[17,"R_390_NONE","","No reloc.",null,null],[17,"R_390_8","","Direct 8 bit.",null,null],[17,"R_390_12","","Direct 12 bit.",null,null],[17,"R_390_16","","Direct 16 bit.",null,null],[17,"R_390_32","","Direct 32 bit.",null,null],[17,"R_390_PC32","","PC relative 32 bit.",null,null],[17,"R_390_GOT12","","12 bit GOT offset.",null,null],[17,"R_390_GOT32","","32 bit GOT offset.",null,null],[17,"R_390_PLT32","","32 bit PC relative PLT address.",null,null],[17,"R_390_COPY","","Copy symbol at runtime.",null,null],[17,"R_390_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_390_JMP_SLOT","","Create PLT entry.",null,null],[17,"R_390_RELATIVE","","Adjust by program base.",null,null],[17,"R_390_GOTOFF32","","32 bit offset to GOT.",null,null],[17,"R_390_GOTPC","","32 bit PC relative offset to GOT.",null,null],[17,"R_390_GOT16","","16 bit GOT offset.",null,null],[17,"R_390_PC16","","PC relative 16 bit.",null,null],[17,"R_390_PC16DBL","","PC relative 16 bit shifted by 1.",null,null],[17,"R_390_PLT16DBL","","16 bit PC rel. PLT shifted by 1.",null,null],[17,"R_390_PC32DBL","","PC relative 32 bit shifted by 1.",null,null],[17,"R_390_PLT32DBL","","32 bit PC rel. PLT shifted by 1.",null,null],[17,"R_390_GOTPCDBL","","32 bit PC rel. GOT shifted by 1.",null,null],[17,"R_390_64","","Direct 64 bit.",null,null],[17,"R_390_PC64","","PC relative 64 bit.",null,null],[17,"R_390_GOT64","","64 bit GOT offset.",null,null],[17,"R_390_PLT64","","64 bit PC relative PLT address.",null,null],[17,"R_390_GOTENT","","32 bit PC rel. to GOT entry >> 1.",null,null],[17,"R_390_GOTOFF16","","16 bit offset to GOT.",null,null],[17,"R_390_GOTOFF64","","64 bit offset to GOT.",null,null],[17,"R_390_GOTPLT12","","12 bit offset to jump slot.",null,null],[17,"R_390_GOTPLT16","","16 bit offset to jump slot.",null,null],[17,"R_390_GOTPLT32","","32 bit offset to jump slot.",null,null],[17,"R_390_GOTPLT64","","64 bit offset to jump slot.",null,null],[17,"R_390_GOTPLTENT","","32 bit rel. offset to jump slot.",null,null],[17,"R_390_PLTOFF16","","16 bit offset from GOT to PLT.",null,null],[17,"R_390_PLTOFF32","","32 bit offset from GOT to PLT.",null,null],[17,"R_390_PLTOFF64","","16 bit offset from GOT to PLT.",null,null],[17,"R_390_TLS_LOAD","","Tag for load insn in TLS code.",null,null],[17,"R_390_TLS_GDCALL","","Tag for function call in general dynamic TLS code.",null,null],[17,"R_390_TLS_LDCALL","","Tag for function call in local dynamic TLS code.",null,null],[17,"R_390_TLS_GD32","","Direct 32 bit for general dynamic thread local data.",null,null],[17,"R_390_TLS_GD64","","Direct 64 bit for general dynamic thread local data.",null,null],[17,"R_390_TLS_GOTIE12","","12 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_TLS_GOTIE32","","32 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_TLS_GOTIE64","","64 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_TLS_LDM32","","Direct 32 bit for local dynamic thread local data in LE…",null,null],[17,"R_390_TLS_LDM64","","Direct 64 bit for local dynamic thread local data in LE…",null,null],[17,"R_390_TLS_IE32","","32 bit address of GOT entry for negated static TLS block…",null,null],[17,"R_390_TLS_IE64","","64 bit address of GOT entry for negated static TLS block…",null,null],[17,"R_390_TLS_IEENT","","32 bit rel. offset to GOT entry for negated static TLS…",null,null],[17,"R_390_TLS_LE32","","32 bit negated offset relative to static TLS block.",null,null],[17,"R_390_TLS_LE64","","64 bit negated offset relative to static TLS block.",null,null],[17,"R_390_TLS_LDO32","","32 bit offset relative to TLS block.",null,null],[17,"R_390_TLS_LDO64","","64 bit offset relative to TLS block.",null,null],[17,"R_390_TLS_DTPMOD","","ID of module containing symbol.",null,null],[17,"R_390_TLS_DTPOFF","","Offset in TLS block.",null,null],[17,"R_390_TLS_TPOFF","","Negated offset in static TLS block.",null,null],[17,"R_390_20","","Direct 20 bit.",null,null],[17,"R_390_GOT20","","20 bit GOT offset.",null,null],[17,"R_390_GOTPLT20","","20 bit offset to jump slot.",null,null],[17,"R_390_TLS_GOTIE20","","20 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_IRELATIVE","","STT_GNU_IFUNC relocation.",null,null],[17,"R_CRIS_NONE","","",null,null],[17,"R_CRIS_8","","",null,null],[17,"R_CRIS_16","","",null,null],[17,"R_CRIS_32","","",null,null],[17,"R_CRIS_8_PCREL","","",null,null],[17,"R_CRIS_16_PCREL","","",null,null],[17,"R_CRIS_32_PCREL","","",null,null],[17,"R_CRIS_GNU_VTINHERIT","","",null,null],[17,"R_CRIS_GNU_VTENTRY","","",null,null],[17,"R_CRIS_COPY","","",null,null],[17,"R_CRIS_GLOB_DAT","","",null,null],[17,"R_CRIS_JUMP_SLOT","","",null,null],[17,"R_CRIS_RELATIVE","","",null,null],[17,"R_CRIS_16_GOT","","",null,null],[17,"R_CRIS_32_GOT","","",null,null],[17,"R_CRIS_16_GOTPLT","","",null,null],[17,"R_CRIS_32_GOTPLT","","",null,null],[17,"R_CRIS_32_GOTREL","","",null,null],[17,"R_CRIS_32_PLT_GOTREL","","",null,null],[17,"R_CRIS_32_PLT_PCREL","","",null,null],[17,"R_X86_64_NONE","","No reloc",null,null],[17,"R_X86_64_64","","Direct 64 bit",null,null],[17,"R_X86_64_PC32","","PC relative 32 bit signed",null,null],[17,"R_X86_64_GOT32","","32 bit GOT entry",null,null],[17,"R_X86_64_PLT32","","32 bit PLT address",null,null],[17,"R_X86_64_COPY","","Copy symbol at runtime",null,null],[17,"R_X86_64_GLOB_DAT","","Create GOT entry",null,null],[17,"R_X86_64_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_X86_64_RELATIVE","","Adjust by program base",null,null],[17,"R_X86_64_GOTPCREL","","32 bit signed PC relative offset to GOT",null,null],[17,"R_X86_64_32","","Direct 32 bit zero extended",null,null],[17,"R_X86_64_32S","","Direct 32 bit sign extended",null,null],[17,"R_X86_64_16","","Direct 16 bit zero extended",null,null],[17,"R_X86_64_PC16","","16 bit sign extended pc relative",null,null],[17,"R_X86_64_8","","Direct 8 bit sign extended",null,null],[17,"R_X86_64_PC8","","8 bit sign extended pc relative",null,null],[17,"R_X86_64_DTPMOD64","","ID of module containing symbol",null,null],[17,"R_X86_64_DTPOFF64","","Offset in module's TLS block",null,null],[17,"R_X86_64_TPOFF64","","Offset in initial TLS block",null,null],[17,"R_X86_64_TLSGD","","32 bit signed PC relative offset to two GOT entries for GD…",null,null],[17,"R_X86_64_TLSLD","","32 bit signed PC relative offset to two GOT entries for LD…",null,null],[17,"R_X86_64_DTPOFF32","","Offset in TLS block",null,null],[17,"R_X86_64_GOTTPOFF","","32 bit signed PC relative offset to GOT entry for IE symbol",null,null],[17,"R_X86_64_TPOFF32","","Offset in initial TLS block",null,null],[17,"R_X86_64_PC64","","PC relative 64 bit",null,null],[17,"R_X86_64_GOTOFF64","","64 bit offset to GOT",null,null],[17,"R_X86_64_GOTPC32","","32 bit signed pc relative offset to GOT",null,null],[17,"R_X86_64_GOT64","","64-bit GOT entry offset",null,null],[17,"R_X86_64_GOTPCREL64","","64-bit PC relative offset to GOT entry",null,null],[17,"R_X86_64_GOTPC64","","64-bit PC relative offset to GOT",null,null],[17,"R_X86_64_GOTPLT64","","like GOT64, says PLT entry needed",null,null],[17,"R_X86_64_PLTOFF64","","64-bit GOT relative offset to PLT entry",null,null],[17,"R_X86_64_SIZE32","","Size of symbol plus 32-bit addend",null,null],[17,"R_X86_64_SIZE64","","Size of symbol plus 64-bit addend",null,null],[17,"R_X86_64_GOTPC32_TLSDESC","","GOT offset for TLS descriptor.",null,null],[17,"R_X86_64_TLSDESC_CALL","","Marker for call through TLS descriptor.",null,null],[17,"R_X86_64_TLSDESC","","TLS descriptor.",null,null],[17,"R_X86_64_IRELATIVE","","Adjust indirectly by program base",null,null],[17,"R_X86_64_RELATIVE64","","64-bit adjust by program base",null,null],[17,"R_X86_64_GOTPCRELX","","Load from 32 bit signed pc relative offset to GOT entry…",null,null],[17,"R_X86_64_REX_GOTPCRELX","","Load from 32 bit signed pc relative offset to GOT entry…",null,null],[17,"SHT_X86_64_UNWIND","","Unwind information.",null,null],[17,"R_MN10300_NONE","","No reloc.",null,null],[17,"R_MN10300_32","","Direct 32 bit.",null,null],[17,"R_MN10300_16","","Direct 16 bit.",null,null],[17,"R_MN10300_8","","Direct 8 bit.",null,null],[17,"R_MN10300_PCREL32","","PC-relative 32-bit.",null,null],[17,"R_MN10300_PCREL16","","PC-relative 16-bit signed.",null,null],[17,"R_MN10300_PCREL8","","PC-relative 8-bit signed.",null,null],[17,"R_MN10300_GNU_VTINHERIT","","Ancient C++ vtable garbage...",null,null],[17,"R_MN10300_GNU_VTENTRY","","... collection annotation.",null,null],[17,"R_MN10300_24","","Direct 24 bit.",null,null],[17,"R_MN10300_GOTPC32","","32-bit PCrel offset to GOT.",null,null],[17,"R_MN10300_GOTPC16","","16-bit PCrel offset to GOT.",null,null],[17,"R_MN10300_GOTOFF32","","32-bit offset from GOT.",null,null],[17,"R_MN10300_GOTOFF24","","24-bit offset from GOT.",null,null],[17,"R_MN10300_GOTOFF16","","16-bit offset from GOT.",null,null],[17,"R_MN10300_PLT32","","32-bit PCrel to PLT entry.",null,null],[17,"R_MN10300_PLT16","","16-bit PCrel to PLT entry.",null,null],[17,"R_MN10300_GOT32","","32-bit offset to GOT entry.",null,null],[17,"R_MN10300_GOT24","","24-bit offset to GOT entry.",null,null],[17,"R_MN10300_GOT16","","16-bit offset to GOT entry.",null,null],[17,"R_MN10300_COPY","","Copy symbol at runtime.",null,null],[17,"R_MN10300_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_MN10300_JMP_SLOT","","Create PLT entry.",null,null],[17,"R_MN10300_RELATIVE","","Adjust by program base.",null,null],[17,"R_MN10300_TLS_GD","","32-bit offset for global dynamic.",null,null],[17,"R_MN10300_TLS_LD","","32-bit offset for local dynamic.",null,null],[17,"R_MN10300_TLS_LDO","","Module-relative offset.",null,null],[17,"R_MN10300_TLS_GOTIE","","GOT offset for static TLS block offset.",null,null],[17,"R_MN10300_TLS_IE","","GOT address for static TLS block offset.",null,null],[17,"R_MN10300_TLS_LE","","Offset relative to static TLS block.",null,null],[17,"R_MN10300_TLS_DTPMOD","","ID of module containing symbol.",null,null],[17,"R_MN10300_TLS_DTPOFF","","Offset in module TLS block.",null,null],[17,"R_MN10300_TLS_TPOFF","","Offset in static TLS block.",null,null],[17,"R_MN10300_SYM_DIFF","","Adjustment for next reloc as needed by linker relaxation.",null,null],[17,"R_MN10300_ALIGN","","Alignment requirement for linker relaxation.",null,null],[17,"R_M32R_NONE","","No reloc.",null,null],[17,"R_M32R_16","","Direct 16 bit.",null,null],[17,"R_M32R_32","","Direct 32 bit.",null,null],[17,"R_M32R_24","","Direct 24 bit.",null,null],[17,"R_M32R_10_PCREL","","PC relative 10 bit shifted.",null,null],[17,"R_M32R_18_PCREL","","PC relative 18 bit shifted.",null,null],[17,"R_M32R_26_PCREL","","PC relative 26 bit shifted.",null,null],[17,"R_M32R_HI16_ULO","","High 16 bit with unsigned low.",null,null],[17,"R_M32R_HI16_SLO","","High 16 bit with signed low.",null,null],[17,"R_M32R_LO16","","Low 16 bit.",null,null],[17,"R_M32R_SDA16","","16 bit offset in SDA.",null,null],[17,"R_M32R_GNU_VTINHERIT","","",null,null],[17,"R_M32R_GNU_VTENTRY","","",null,null],[17,"R_M32R_16_RELA","","Direct 16 bit.",null,null],[17,"R_M32R_32_RELA","","Direct 32 bit.",null,null],[17,"R_M32R_24_RELA","","Direct 24 bit.",null,null],[17,"R_M32R_10_PCREL_RELA","","PC relative 10 bit shifted.",null,null],[17,"R_M32R_18_PCREL_RELA","","PC relative 18 bit shifted.",null,null],[17,"R_M32R_26_PCREL_RELA","","PC relative 26 bit shifted.",null,null],[17,"R_M32R_HI16_ULO_RELA","","High 16 bit with unsigned low",null,null],[17,"R_M32R_HI16_SLO_RELA","","High 16 bit with signed low",null,null],[17,"R_M32R_LO16_RELA","","Low 16 bit",null,null],[17,"R_M32R_SDA16_RELA","","16 bit offset in SDA",null,null],[17,"R_M32R_RELA_GNU_VTINHERIT","","",null,null],[17,"R_M32R_RELA_GNU_VTENTRY","","",null,null],[17,"R_M32R_REL32","","PC relative 32 bit.",null,null],[17,"R_M32R_GOT24","","24 bit GOT entry",null,null],[17,"R_M32R_26_PLTREL","","26 bit PC relative to PLT shifted",null,null],[17,"R_M32R_COPY","","Copy symbol at runtime",null,null],[17,"R_M32R_GLOB_DAT","","Create GOT entry",null,null],[17,"R_M32R_JMP_SLOT","","Create PLT entry",null,null],[17,"R_M32R_RELATIVE","","Adjust by program base",null,null],[17,"R_M32R_GOTOFF","","24 bit offset to GOT",null,null],[17,"R_M32R_GOTPC24","","24 bit PC relative offset to GOT",null,null],[17,"R_M32R_GOT16_HI_ULO","","High 16 bit GOT entry with unsigned low",null,null],[17,"R_M32R_GOT16_HI_SLO","","High 16 bit GOT entry with signed low",null,null],[17,"R_M32R_GOT16_LO","","Low 16 bit GOT entry",null,null],[17,"R_M32R_GOTPC_HI_ULO","","High 16 bit PC relative offset to GOT with unsigned low",null,null],[17,"R_M32R_GOTPC_HI_SLO","","High 16 bit PC relative offset to GOT with signed low",null,null],[17,"R_M32R_GOTPC_LO","","Low 16 bit PC relative offset to GOT",null,null],[17,"R_M32R_GOTOFF_HI_ULO","","High 16 bit offset to GOT with unsigned low",null,null],[17,"R_M32R_GOTOFF_HI_SLO","","High 16 bit offset to GOT with signed low",null,null],[17,"R_M32R_GOTOFF_LO","","Low 16 bit offset to GOT",null,null],[17,"R_M32R_NUM","","Keep this the last entry.",null,null],[17,"R_MICROBLAZE_NONE","","No reloc.",null,null],[17,"R_MICROBLAZE_32","","Direct 32 bit.",null,null],[17,"R_MICROBLAZE_32_PCREL","","PC relative 32 bit.",null,null],[17,"R_MICROBLAZE_64_PCREL","","PC relative 64 bit.",null,null],[17,"R_MICROBLAZE_32_PCREL_LO","","Low 16 bits of PCREL32.",null,null],[17,"R_MICROBLAZE_64","","Direct 64 bit.",null,null],[17,"R_MICROBLAZE_32_LO","","Low 16 bit.",null,null],[17,"R_MICROBLAZE_SRO32","","Read-only small data area.",null,null],[17,"R_MICROBLAZE_SRW32","","Read-write small data area.",null,null],[17,"R_MICROBLAZE_64_NONE","","No reloc.",null,null],[17,"R_MICROBLAZE_32_SYM_OP_SYM","","Symbol Op Symbol relocation.",null,null],[17,"R_MICROBLAZE_GNU_VTINHERIT","","GNU C++ vtable hierarchy.",null,null],[17,"R_MICROBLAZE_GNU_VTENTRY","","GNU C++ vtable member usage.",null,null],[17,"R_MICROBLAZE_GOTPC_64","","PC-relative GOT offset.",null,null],[17,"R_MICROBLAZE_GOT_64","","GOT entry offset.",null,null],[17,"R_MICROBLAZE_PLT_64","","PLT offset (PC-relative).",null,null],[17,"R_MICROBLAZE_REL","","Adjust by program base.",null,null],[17,"R_MICROBLAZE_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_MICROBLAZE_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_MICROBLAZE_GOTOFF_64","","64 bit offset to GOT.",null,null],[17,"R_MICROBLAZE_GOTOFF_32","","32 bit offset to GOT.",null,null],[17,"R_MICROBLAZE_COPY","","Runtime copy.",null,null],[17,"R_MICROBLAZE_TLS","","TLS Reloc.",null,null],[17,"R_MICROBLAZE_TLSGD","","TLS General Dynamic.",null,null],[17,"R_MICROBLAZE_TLSLD","","TLS Local Dynamic.",null,null],[17,"R_MICROBLAZE_TLSDTPMOD32","","TLS Module ID.",null,null],[17,"R_MICROBLAZE_TLSDTPREL32","","TLS Offset Within TLS Block.",null,null],[17,"R_MICROBLAZE_TLSDTPREL64","","TLS Offset Within TLS Block.",null,null],[17,"R_MICROBLAZE_TLSGOTTPREL32","","TLS Offset From Thread Pointer.",null,null],[17,"R_MICROBLAZE_TLSTPREL32","","TLS Offset From Thread Pointer.",null,null],[17,"DT_NIOS2_GP","","Address of _gp.",null,null],[17,"R_NIOS2_NONE","","No reloc.",null,null],[17,"R_NIOS2_S16","","Direct signed 16 bit.",null,null],[17,"R_NIOS2_U16","","Direct unsigned 16 bit.",null,null],[17,"R_NIOS2_PCREL16","","PC relative 16 bit.",null,null],[17,"R_NIOS2_CALL26","","Direct call.",null,null],[17,"R_NIOS2_IMM5","","5 bit constant expression.",null,null],[17,"R_NIOS2_CACHE_OPX","","5 bit expression, shift 22.",null,null],[17,"R_NIOS2_IMM6","","6 bit constant expression.",null,null],[17,"R_NIOS2_IMM8","","8 bit constant expression.",null,null],[17,"R_NIOS2_HI16","","High 16 bit.",null,null],[17,"R_NIOS2_LO16","","Low 16 bit.",null,null],[17,"R_NIOS2_HIADJ16","","High 16 bit, adjusted.",null,null],[17,"R_NIOS2_BFD_RELOC_32","","32 bit symbol value + addend.",null,null],[17,"R_NIOS2_BFD_RELOC_16","","16 bit symbol value + addend.",null,null],[17,"R_NIOS2_BFD_RELOC_8","","8 bit symbol value + addend.",null,null],[17,"R_NIOS2_GPREL","","16 bit GP pointer offset.",null,null],[17,"R_NIOS2_GNU_VTINHERIT","","GNU C++ vtable hierarchy.",null,null],[17,"R_NIOS2_GNU_VTENTRY","","GNU C++ vtable member usage.",null,null],[17,"R_NIOS2_UJMP","","Unconditional branch.",null,null],[17,"R_NIOS2_CJMP","","Conditional branch.",null,null],[17,"R_NIOS2_CALLR","","Indirect call through register.",null,null],[17,"R_NIOS2_ALIGN","","Alignment requirement for linker relaxation.",null,null],[17,"R_NIOS2_GOT16","","16 bit GOT entry.",null,null],[17,"R_NIOS2_CALL16","","16 bit GOT entry for function.",null,null],[17,"R_NIOS2_GOTOFF_LO","","%lo of offset to GOT pointer.",null,null],[17,"R_NIOS2_GOTOFF_HA","","%hiadj of offset to GOT pointer.",null,null],[17,"R_NIOS2_PCREL_LO","","%lo of PC relative offset.",null,null],[17,"R_NIOS2_PCREL_HA","","%hiadj of PC relative offset.",null,null],[17,"R_NIOS2_TLS_GD16","","16 bit GOT offset for TLS GD.",null,null],[17,"R_NIOS2_TLS_LDM16","","16 bit GOT offset for TLS LDM.",null,null],[17,"R_NIOS2_TLS_LDO16","","16 bit module relative offset.",null,null],[17,"R_NIOS2_TLS_IE16","","16 bit GOT offset for TLS IE.",null,null],[17,"R_NIOS2_TLS_LE16","","16 bit LE TP-relative offset.",null,null],[17,"R_NIOS2_TLS_DTPMOD","","Module number.",null,null],[17,"R_NIOS2_TLS_DTPREL","","Module-relative offset.",null,null],[17,"R_NIOS2_TLS_TPREL","","TP-relative offset.",null,null],[17,"R_NIOS2_COPY","","Copy symbol at runtime.",null,null],[17,"R_NIOS2_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_NIOS2_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_NIOS2_RELATIVE","","Adjust by program base.",null,null],[17,"R_NIOS2_GOTOFF","","16 bit offset to GOT pointer.",null,null],[17,"R_NIOS2_CALL26_NOAT","","Direct call in .noat section.",null,null],[17,"R_NIOS2_GOT_LO","","%lo() of GOT entry.",null,null],[17,"R_NIOS2_GOT_HA","","%hiadj() of GOT entry.",null,null],[17,"R_NIOS2_CALL_LO","","%lo() of function GOT entry.",null,null],[17,"R_NIOS2_CALL_HA","","%hiadj() of function GOT entry.",null,null],[17,"R_TILEPRO_NONE","","No reloc",null,null],[17,"R_TILEPRO_32","","Direct 32 bit",null,null],[17,"R_TILEPRO_16","","Direct 16 bit",null,null],[17,"R_TILEPRO_8","","Direct 8 bit",null,null],[17,"R_TILEPRO_32_PCREL","","PC relative 32 bit",null,null],[17,"R_TILEPRO_16_PCREL","","PC relative 16 bit",null,null],[17,"R_TILEPRO_8_PCREL","","PC relative 8 bit",null,null],[17,"R_TILEPRO_LO16","","Low 16 bit",null,null],[17,"R_TILEPRO_HI16","","High 16 bit",null,null],[17,"R_TILEPRO_HA16","","High 16 bit, adjusted",null,null],[17,"R_TILEPRO_COPY","","Copy relocation",null,null],[17,"R_TILEPRO_GLOB_DAT","","Create GOT entry",null,null],[17,"R_TILEPRO_JMP_SLOT","","Create PLT entry",null,null],[17,"R_TILEPRO_RELATIVE","","Adjust by program base",null,null],[17,"R_TILEPRO_BROFF_X1","","X1 pipe branch offset",null,null],[17,"R_TILEPRO_JOFFLONG_X1","","X1 pipe jump offset",null,null],[17,"R_TILEPRO_JOFFLONG_X1_PLT","","X1 pipe jump offset to PLT",null,null],[17,"R_TILEPRO_IMM8_X0","","X0 pipe 8-bit",null,null],[17,"R_TILEPRO_IMM8_Y0","","Y0 pipe 8-bit",null,null],[17,"R_TILEPRO_IMM8_X1","","X1 pipe 8-bit",null,null],[17,"R_TILEPRO_IMM8_Y1","","Y1 pipe 8-bit",null,null],[17,"R_TILEPRO_MT_IMM15_X1","","X1 pipe mtspr",null,null],[17,"R_TILEPRO_MF_IMM15_X1","","X1 pipe mfspr",null,null],[17,"R_TILEPRO_IMM16_X0","","X0 pipe 16-bit",null,null],[17,"R_TILEPRO_IMM16_X1","","X1 pipe 16-bit",null,null],[17,"R_TILEPRO_IMM16_X0_LO","","X0 pipe low 16-bit",null,null],[17,"R_TILEPRO_IMM16_X1_LO","","X1 pipe low 16-bit",null,null],[17,"R_TILEPRO_IMM16_X0_HI","","X0 pipe high 16-bit",null,null],[17,"R_TILEPRO_IMM16_X1_HI","","X1 pipe high 16-bit",null,null],[17,"R_TILEPRO_IMM16_X0_HA","","X0 pipe high 16-bit, adjusted",null,null],[17,"R_TILEPRO_IMM16_X1_HA","","X1 pipe high 16-bit, adjusted",null,null],[17,"R_TILEPRO_IMM16_X0_PCREL","","X0 pipe PC relative 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_PCREL","","X1 pipe PC relative 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_LO_PCREL","","X0 pipe PC relative low 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_LO_PCREL","","X1 pipe PC relative low 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_HI_PCREL","","X0 pipe PC relative high 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_HI_PCREL","","X1 pipe PC relative high 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_HA_PCREL","","X0 pipe PC relative ha() 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_HA_PCREL","","X1 pipe PC relative ha() 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_GOT","","X0 pipe 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT","","X1 pipe 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X0_GOT_LO","","X0 pipe low 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT_LO","","X1 pipe low 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X0_GOT_HI","","X0 pipe high 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT_HI","","X1 pipe high 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X0_GOT_HA","","X0 pipe ha() 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT_HA","","X1 pipe ha() 16-bit GOT offset",null,null],[17,"R_TILEPRO_MMSTART_X0","","X0 pipe mm \"start\"",null,null],[17,"R_TILEPRO_MMEND_X0","","X0 pipe mm \"end\"",null,null],[17,"R_TILEPRO_MMSTART_X1","","X1 pipe mm \"start\"",null,null],[17,"R_TILEPRO_MMEND_X1","","X1 pipe mm \"end\"",null,null],[17,"R_TILEPRO_SHAMT_X0","","X0 pipe shift amount",null,null],[17,"R_TILEPRO_SHAMT_X1","","X1 pipe shift amount",null,null],[17,"R_TILEPRO_SHAMT_Y0","","Y0 pipe shift amount",null,null],[17,"R_TILEPRO_SHAMT_Y1","","Y1 pipe shift amount",null,null],[17,"R_TILEPRO_DEST_IMM8_X1","","X1 pipe destination 8-bit",null,null],[17,"R_TILEPRO_TLS_GD_CALL","","\"jal\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_X0_TLS_GD_ADD","","X0 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_X1_TLS_GD_ADD","","X1 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_Y0_TLS_GD_ADD","","Y0 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_Y1_TLS_GD_ADD","","Y1 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEPRO_TLS_IE_LOAD","","\"lw_tls\" for TLS IE",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD","","X0 pipe 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD","","X1 pipe 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD_LO","","X0 pipe low 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD_LO","","X1 pipe low 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD_HI","","X0 pipe high 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD_HI","","X1 pipe high 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD_HA","","X0 pipe ha() 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD_HA","","X1 pipe ha() 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE","","X0 pipe 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE","","X1 pipe 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE_LO","","X0 pipe low 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE_LO","","X1 pipe low 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE_HI","","X0 pipe high 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE_HI","","X1 pipe high 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE_HA","","X0 pipe ha() 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE_HA","","X1 pipe ha() 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_TILEPRO_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_TILEPRO_TLS_TPOFF32","","Offset in static TLS block",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE","","X0 pipe 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE","","X1 pipe 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE_LO","","X0 pipe low 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE_LO","","X1 pipe low 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE_HI","","X0 pipe high 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE_HI","","X1 pipe high 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE_HA","","X0 pipe ha() 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE_HA","","X1 pipe ha() 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_GNU_VTINHERIT","","GNU C++ vtable hierarchy",null,null],[17,"R_TILEPRO_GNU_VTENTRY","","GNU C++ vtable member usage",null,null],[17,"R_TILEGX_NONE","","No reloc",null,null],[17,"R_TILEGX_64","","Direct 64 bit",null,null],[17,"R_TILEGX_32","","Direct 32 bit",null,null],[17,"R_TILEGX_16","","Direct 16 bit",null,null],[17,"R_TILEGX_8","","Direct 8 bit",null,null],[17,"R_TILEGX_64_PCREL","","PC relative 64 bit",null,null],[17,"R_TILEGX_32_PCREL","","PC relative 32 bit",null,null],[17,"R_TILEGX_16_PCREL","","PC relative 16 bit",null,null],[17,"R_TILEGX_8_PCREL","","PC relative 8 bit",null,null],[17,"R_TILEGX_HW0","","hword 0 16-bit",null,null],[17,"R_TILEGX_HW1","","hword 1 16-bit",null,null],[17,"R_TILEGX_HW2","","hword 2 16-bit",null,null],[17,"R_TILEGX_HW3","","hword 3 16-bit",null,null],[17,"R_TILEGX_HW0_LAST","","last hword 0 16-bit",null,null],[17,"R_TILEGX_HW1_LAST","","last hword 1 16-bit",null,null],[17,"R_TILEGX_HW2_LAST","","last hword 2 16-bit",null,null],[17,"R_TILEGX_COPY","","Copy relocation",null,null],[17,"R_TILEGX_GLOB_DAT","","Create GOT entry",null,null],[17,"R_TILEGX_JMP_SLOT","","Create PLT entry",null,null],[17,"R_TILEGX_RELATIVE","","Adjust by program base",null,null],[17,"R_TILEGX_BROFF_X1","","X1 pipe branch offset",null,null],[17,"R_TILEGX_JUMPOFF_X1","","X1 pipe jump offset",null,null],[17,"R_TILEGX_JUMPOFF_X1_PLT","","X1 pipe jump offset to PLT",null,null],[17,"R_TILEGX_IMM8_X0","","X0 pipe 8-bit",null,null],[17,"R_TILEGX_IMM8_Y0","","Y0 pipe 8-bit",null,null],[17,"R_TILEGX_IMM8_X1","","X1 pipe 8-bit",null,null],[17,"R_TILEGX_IMM8_Y1","","Y1 pipe 8-bit",null,null],[17,"R_TILEGX_DEST_IMM8_X1","","X1 pipe destination 8-bit",null,null],[17,"R_TILEGX_MT_IMM14_X1","","X1 pipe mtspr",null,null],[17,"R_TILEGX_MF_IMM14_X1","","X1 pipe mfspr",null,null],[17,"R_TILEGX_MMSTART_X0","","X0 pipe mm \"start\"",null,null],[17,"R_TILEGX_MMEND_X0","","X0 pipe mm \"end\"",null,null],[17,"R_TILEGX_SHAMT_X0","","X0 pipe shift amount",null,null],[17,"R_TILEGX_SHAMT_X1","","X1 pipe shift amount",null,null],[17,"R_TILEGX_SHAMT_Y0","","Y0 pipe shift amount",null,null],[17,"R_TILEGX_SHAMT_Y1","","Y1 pipe shift amount",null,null],[17,"R_TILEGX_IMM16_X0_HW0","","X0 pipe hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0","","X1 pipe hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1","","X0 pipe hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1","","X1 pipe hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2","","X0 pipe hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2","","X1 pipe hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW3","","X0 pipe hword 3",null,null],[17,"R_TILEGX_IMM16_X1_HW3","","X1 pipe hword 3",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST","","X0 pipe last hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST","","X1 pipe last hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST","","X0 pipe last hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST","","X1 pipe last hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_LAST","","X0 pipe last hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_LAST","","X1 pipe last hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_PCREL","","X0 pipe PC relative hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_PCREL","","X1 pipe PC relative hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_PCREL","","X0 pipe PC relative hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_PCREL","","X1 pipe PC relative hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_PCREL","","X0 pipe PC relative hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_PCREL","","X1 pipe PC relative hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW3_PCREL","","X0 pipe PC relative hword 3",null,null],[17,"R_TILEGX_IMM16_X1_HW3_PCREL","","X1 pipe PC relative hword 3",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_PCREL","","X0 pipe PC-rel last hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_PCREL","","X1 pipe PC-rel last hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_PCREL","","X0 pipe PC-rel last hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_PCREL","","X1 pipe PC-rel last hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_LAST_PCREL","","X0 pipe PC-rel last hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_LAST_PCREL","","X1 pipe PC-rel last hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_GOT","","X0 pipe hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_GOT","","X1 pipe hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_PLT_PCREL","","X0 pipe PC-rel PLT hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_PLT_PCREL","","X1 pipe PC-rel PLT hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_PLT_PCREL","","X0 pipe PC-rel PLT hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_PLT_PCREL","","X1 pipe PC-rel PLT hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_PLT_PCREL","","X0 pipe PC-rel PLT hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_PLT_PCREL","","X1 pipe PC-rel PLT hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_GOT","","X0 pipe last hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_GOT","","X1 pipe last hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_GOT","","X0 pipe last hword 1 GOT offset",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_GOT","","X1 pipe last hword 1 GOT offset",null,null],[17,"R_TILEGX_IMM16_X0_HW3_PLT_PCREL","","X0 pipe PC-rel PLT hword 3",null,null],[17,"R_TILEGX_IMM16_X1_HW3_PLT_PCREL","","X1 pipe PC-rel PLT hword 3",null,null],[17,"R_TILEGX_IMM16_X0_HW0_TLS_GD","","X0 pipe hword 0 TLS GD offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_TLS_GD","","X1 pipe hword 0 TLS GD offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_TLS_LE","","X0 pipe hword 0 TLS LE offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_TLS_LE","","X1 pipe hword 0 TLS LE offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE","","X0 pipe last hword 0 LE off",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE","","X1 pipe last hword 0 LE off",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE","","X0 pipe last hword 1 LE off",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE","","X1 pipe last hword 1 LE off",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD","","X0 pipe last hword 0 GD off",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD","","X1 pipe last hword 0 GD off",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD","","X0 pipe last hword 1 GD off",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD","","X1 pipe last hword 1 GD off",null,null],[17,"R_TILEGX_IMM16_X0_HW0_TLS_IE","","X0 pipe hword 0 TLS IE offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_TLS_IE","","X1 pipe hword 0 TLS IE offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL","","X0 pipe PC-rel PLT last hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL","","X1 pipe PC-rel PLT last hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL","","X0 pipe PC-rel PLT last hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL","","X1 pipe PC-rel PLT last hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL","","X0 pipe PC-rel PLT last hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL","","X1 pipe PC-rel PLT last hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE","","X0 pipe last hword 0 IE off",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE","","X1 pipe last hword 0 IE off",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE","","X0 pipe last hword 1 IE off",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE","","X1 pipe last hword 1 IE off",null,null],[17,"R_TILEGX_TLS_DTPMOD64","","64-bit ID of symbol's module",null,null],[17,"R_TILEGX_TLS_DTPOFF64","","64-bit offset in TLS block",null,null],[17,"R_TILEGX_TLS_TPOFF64","","64-bit offset in static TLS block",null,null],[17,"R_TILEGX_TLS_DTPMOD32","","32-bit ID of symbol's module",null,null],[17,"R_TILEGX_TLS_DTPOFF32","","32-bit offset in TLS block",null,null],[17,"R_TILEGX_TLS_TPOFF32","","32-bit offset in static TLS block",null,null],[17,"R_TILEGX_TLS_GD_CALL","","\"jal\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_X0_TLS_GD_ADD","","X0 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_X1_TLS_GD_ADD","","X1 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_Y0_TLS_GD_ADD","","Y0 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_Y1_TLS_GD_ADD","","Y1 pipe \"addi\" for TLS GD",null,null],[17,"R_TILEGX_TLS_IE_LOAD","","\"ld_tls\" for TLS IE",null,null],[17,"R_TILEGX_IMM8_X0_TLS_ADD","","X0 pipe \"addi\" for TLS GD/IE",null,null],[17,"R_TILEGX_IMM8_X1_TLS_ADD","","X1 pipe \"addi\" for TLS GD/IE",null,null],[17,"R_TILEGX_IMM8_Y0_TLS_ADD","","Y0 pipe \"addi\" for TLS GD/IE",null,null],[17,"R_TILEGX_IMM8_Y1_TLS_ADD","","Y1 pipe \"addi\" for TLS GD/IE",null,null],[17,"R_TILEGX_GNU_VTINHERIT","","GNU C++ vtable hierarchy",null,null],[17,"R_TILEGX_GNU_VTENTRY","","GNU C++ vtable member usage",null,null],[17,"EF_RISCV_RVC","","",null,null],[17,"EF_RISCV_FLOAT_ABI","","",null,null],[17,"EF_RISCV_FLOAT_ABI_SOFT","","",null,null],[17,"EF_RISCV_FLOAT_ABI_SINGLE","","",null,null],[17,"EF_RISCV_FLOAT_ABI_DOUBLE","","",null,null],[17,"EF_RISCV_FLOAT_ABI_QUAD","","",null,null],[17,"R_RISCV_NONE","","",null,null],[17,"R_RISCV_32","","",null,null],[17,"R_RISCV_64","","",null,null],[17,"R_RISCV_RELATIVE","","",null,null],[17,"R_RISCV_COPY","","",null,null],[17,"R_RISCV_JUMP_SLOT","","",null,null],[17,"R_RISCV_TLS_DTPMOD32","","",null,null],[17,"R_RISCV_TLS_DTPMOD64","","",null,null],[17,"R_RISCV_TLS_DTPREL32","","",null,null],[17,"R_RISCV_TLS_DTPREL64","","",null,null],[17,"R_RISCV_TLS_TPREL32","","",null,null],[17,"R_RISCV_TLS_TPREL64","","",null,null],[17,"R_RISCV_BRANCH","","",null,null],[17,"R_RISCV_JAL","","",null,null],[17,"R_RISCV_CALL","","",null,null],[17,"R_RISCV_CALL_PLT","","",null,null],[17,"R_RISCV_GOT_HI20","","",null,null],[17,"R_RISCV_TLS_GOT_HI20","","",null,null],[17,"R_RISCV_TLS_GD_HI20","","",null,null],[17,"R_RISCV_PCREL_HI20","","",null,null],[17,"R_RISCV_PCREL_LO12_I","","",null,null],[17,"R_RISCV_PCREL_LO12_S","","",null,null],[17,"R_RISCV_HI20","","",null,null],[17,"R_RISCV_LO12_I","","",null,null],[17,"R_RISCV_LO12_S","","",null,null],[17,"R_RISCV_TPREL_HI20","","",null,null],[17,"R_RISCV_TPREL_LO12_I","","",null,null],[17,"R_RISCV_TPREL_LO12_S","","",null,null],[17,"R_RISCV_TPREL_ADD","","",null,null],[17,"R_RISCV_ADD8","","",null,null],[17,"R_RISCV_ADD16","","",null,null],[17,"R_RISCV_ADD32","","",null,null],[17,"R_RISCV_ADD64","","",null,null],[17,"R_RISCV_SUB8","","",null,null],[17,"R_RISCV_SUB16","","",null,null],[17,"R_RISCV_SUB32","","",null,null],[17,"R_RISCV_SUB64","","",null,null],[17,"R_RISCV_GNU_VTINHERIT","","",null,null],[17,"R_RISCV_GNU_VTENTRY","","",null,null],[17,"R_RISCV_ALIGN","","",null,null],[17,"R_RISCV_RVC_BRANCH","","",null,null],[17,"R_RISCV_RVC_JUMP","","",null,null],[17,"R_RISCV_RVC_LUI","","",null,null],[17,"R_RISCV_GPREL_I","","",null,null],[17,"R_RISCV_GPREL_S","","",null,null],[17,"R_RISCV_TPREL_I","","",null,null],[17,"R_RISCV_TPREL_S","","",null,null],[17,"R_RISCV_RELAX","","",null,null],[17,"R_RISCV_SUB6","","",null,null],[17,"R_RISCV_SET6","","",null,null],[17,"R_RISCV_SET8","","",null,null],[17,"R_RISCV_SET16","","",null,null],[17,"R_RISCV_SET32","","",null,null],[17,"R_RISCV_32_PCREL","","",null,null],[17,"R_BPF_NONE","","No reloc",null,null],[17,"R_BPF_64_64","","",null,null],[17,"R_BPF_64_32","","",null,null],[17,"R_METAG_HIADDR16","","",null,null],[17,"R_METAG_LOADDR16","","",null,null],[17,"R_METAG_ADDR32","","32bit absolute address",null,null],[17,"R_METAG_NONE","","No reloc",null,null],[17,"R_METAG_RELBRANCH","","",null,null],[17,"R_METAG_GETSETOFF","","",null,null],[17,"R_METAG_REG32OP1","","",null,null],[17,"R_METAG_REG32OP2","","",null,null],[17,"R_METAG_REG32OP3","","",null,null],[17,"R_METAG_REG16OP1","","",null,null],[17,"R_METAG_REG16OP2","","",null,null],[17,"R_METAG_REG16OP3","","",null,null],[17,"R_METAG_REG32OP4","","",null,null],[17,"R_METAG_HIOG","","",null,null],[17,"R_METAG_LOOG","","",null,null],[17,"R_METAG_REL8","","",null,null],[17,"R_METAG_REL16","","",null,null],[17,"R_METAG_GNU_VTINHERIT","","",null,null],[17,"R_METAG_GNU_VTENTRY","","",null,null],[17,"R_METAG_HI16_GOTOFF","","",null,null],[17,"R_METAG_LO16_GOTOFF","","",null,null],[17,"R_METAG_GETSET_GOTOFF","","",null,null],[17,"R_METAG_GETSET_GOT","","",null,null],[17,"R_METAG_HI16_GOTPC","","",null,null],[17,"R_METAG_LO16_GOTPC","","",null,null],[17,"R_METAG_HI16_PLT","","",null,null],[17,"R_METAG_LO16_PLT","","",null,null],[17,"R_METAG_RELBRANCH_PLT","","",null,null],[17,"R_METAG_GOTOFF","","",null,null],[17,"R_METAG_PLT","","",null,null],[17,"R_METAG_COPY","","",null,null],[17,"R_METAG_JMP_SLOT","","",null,null],[17,"R_METAG_RELATIVE","","",null,null],[17,"R_METAG_GLOB_DAT","","",null,null],[17,"R_METAG_TLS_GD","","",null,null],[17,"R_METAG_TLS_LDM","","",null,null],[17,"R_METAG_TLS_LDO_HI16","","",null,null],[17,"R_METAG_TLS_LDO_LO16","","",null,null],[17,"R_METAG_TLS_LDO","","",null,null],[17,"R_METAG_TLS_IE","","",null,null],[17,"R_METAG_TLS_IENONPIC","","",null,null],[17,"R_METAG_TLS_IENONPIC_HI16","","",null,null],[17,"R_METAG_TLS_IENONPIC_LO16","","",null,null],[17,"R_METAG_TLS_TPOFF","","",null,null],[17,"R_METAG_TLS_DTPMOD","","",null,null],[17,"R_METAG_TLS_DTPOFF","","",null,null],[17,"R_METAG_TLS_LE","","",null,null],[17,"R_METAG_TLS_LE_HI16","","",null,null],[17,"R_METAG_TLS_LE_LO16","","",null,null],[17,"R_NDS32_NONE","","",null,null],[17,"R_NDS32_32_RELA","","",null,null],[17,"R_NDS32_COPY","","",null,null],[17,"R_NDS32_GLOB_DAT","","",null,null],[17,"R_NDS32_JMP_SLOT","","",null,null],[17,"R_NDS32_RELATIVE","","",null,null],[17,"R_NDS32_TLS_TPOFF","","",null,null],[17,"R_NDS32_TLS_DESC","","",null,null],[11,"st_bind","","Get the `st_bind` component of the `st_info` field.",78,[[["self"]],["u8"]]],[11,"st_type","","Get the `st_type` component of the `st_info` field.",78,[[["self"]],["u8"]]],[11,"set_st_info","","Set the `st_info` field given the `st_bind` and `st_type`…",78,[[["self"],["u8"]]]],[11,"st_visibility","","Get the `st_visibility` component of the `st_info` field.",78,[[["self"]],["u8"]]],[11,"st_bind","","Get the `st_bind` component of the `st_info` field.",79,[[["self"]],["u8"]]],[11,"st_type","","Get the `st_type` component of the `st_info` field.",79,[[["self"]],["u8"]]],[11,"set_st_info","","Set the `st_info` field given the `st_bind` and `st_type`…",79,[[["self"],["u8"]]]],[11,"st_visibility","","Get the `st_visibility` component of the `st_info` field.",79,[[["self"]],["u8"]]],[11,"r_sym","","Get the `r_sym` component of the `r_info` field.",80,[[["e"]],["u32"]]],[11,"r_type","","Get the `r_type` component of the `r_info` field.",80,[[["e"]],["u8"]]],[11,"r_info","","Calculate the `r_info` field given the `r_sym` and…",80,[[["u8"],["u32"],["e"]],["u32"]]],[11,"set_r_info","","Set the `r_info` field given the `r_sym` and `r_type`…",80,[[["u32"],["e"],["self"],["u8"]]]],[11,"r_sym","","Get the `r_sym` component of the `r_info` field.",81,[[["self"],["e"]],["u32"]]],[11,"r_type","","Get the `r_type` component of the `r_info` field.",81,[[["self"],["e"]],["u32"]]],[11,"r_info","","Calculate the `r_info` field given the `r_sym` and…",81,[[["u8"],["u32"],["e"]],["u32"]]],[11,"set_r_info","","Set the `r_info` field given the `r_sym` and `r_type`…",81,[[["u32"],["e"],["self"],["u8"]]]],[11,"r_sym","","Get the `r_sym` component of the `r_info` field.",82,[[["self"],["e"]],["u32"]]],[11,"r_type","","Get the `r_type` component of the `r_info` field.",82,[[["self"],["e"]],["u32"]]],[11,"r_info","","Calculate the `r_info` field given the `r_sym` and…",82,[[["u32"],["e"]],["u64"]]],[11,"set_r_info","","Set the `r_info` field given the `r_sym` and `r_type`…",82,[[["u32"],["e"],["self"]]]],[11,"r_sym","","Get the `r_sym` component of the `r_info` field.",83,[[["self"],["e"]],["u32"]]],[11,"r_type","","Get the `r_type` component of the `r_info` field.",83,[[["self"],["e"]],["u32"]]],[11,"r_info","","Calculate the `r_info` field given the `r_sym` and…",83,[[["u32"],["e"]],["u64"]]],[11,"set_r_info","","Set the `r_info` field given the `r_sym` and `r_type`…",83,[[["u32"],["e"],["self"]]]],[0,"macho","object","Mach-O definitions.",null,null],[3,"FatHeader","object::macho","",null,null],[12,"magic","","FAT_MAGIC or FAT_MAGIC_64",88,null],[12,"nfat_arch","","number of structs that follow",88,null],[3,"FatArch32","","",null,null],[12,"cputype","","cpu specifier (int)",89,null],[12,"cpusubtype","","machine specifier (int)",89,null],[12,"offset","","file offset to this object file",89,null],[12,"size","","size of this object file",89,null],[12,"align","","alignment as a power of 2",89,null],[3,"FatArch64","","",null,null],[12,"cputype","","cpu specifier (int)",90,null],[12,"cpusubtype","","machine specifier (int)",90,null],[12,"offset","","file offset to this object file",90,null],[12,"size","","size of this object file",90,null],[12,"align","","alignment as a power of 2",90,null],[12,"reserved","","reserved",90,null],[3,"MachHeader32","","The 32-bit mach header.",null,null],[12,"magic","","mach magic number identifier",91,null],[12,"cputype","","cpu specifier",91,null],[12,"cpusubtype","","machine specifier",91,null],[12,"filetype","","type of file",91,null],[12,"ncmds","","number of load commands",91,null],[12,"sizeofcmds","","the size of all the load commands",91,null],[12,"flags","","flags",91,null],[3,"MachHeader64","","The 64-bit mach header.",null,null],[12,"magic","","mach magic number identifier",92,null],[12,"cputype","","cpu specifier",92,null],[12,"cpusubtype","","machine specifier",92,null],[12,"filetype","","type of file",92,null],[12,"ncmds","","number of load commands",92,null],[12,"sizeofcmds","","the size of all the load commands",92,null],[12,"flags","","flags",92,null],[12,"reserved","","reserved",92,null],[3,"LoadCommand","","Common fields at the start of every load command.",null,null],[12,"cmd","","Type of load command.",93,null],[12,"cmdsize","","Total size of command in bytes.",93,null],[3,"LcStr","","A variable length string in a load command.",null,null],[12,"offset","","offset to the string",94,null],[3,"SegmentCommand32","","32-bit segment load command.",null,null],[12,"cmd","","LC_SEGMENT",95,null],[12,"cmdsize","","includes sizeof section structs",95,null],[12,"segname","","segment name",95,null],[12,"vmaddr","","memory address of this segment",95,null],[12,"vmsize","","memory size of this segment",95,null],[12,"fileoff","","file offset of this segment",95,null],[12,"filesize","","amount to map from the file",95,null],[12,"maxprot","","maximum VM protection",95,null],[12,"initprot","","initial VM protection",95,null],[12,"nsects","","number of sections in segment",95,null],[12,"flags","","flags",95,null],[3,"SegmentCommand64","","64-bit segment load command.",null,null],[12,"cmd","","LC_SEGMENT_64",96,null],[12,"cmdsize","","includes sizeof section_64 structs",96,null],[12,"segname","","segment name",96,null],[12,"vmaddr","","memory address of this segment",96,null],[12,"vmsize","","memory size of this segment",96,null],[12,"fileoff","","file offset of this segment",96,null],[12,"filesize","","amount to map from the file",96,null],[12,"maxprot","","maximum VM protection",96,null],[12,"initprot","","initial VM protection",96,null],[12,"nsects","","number of sections in segment",96,null],[12,"flags","","flags",96,null],[3,"Section32","","32-bit section.",null,null],[12,"sectname","","name of this section",97,null],[12,"segname","","segment this section goes in",97,null],[12,"addr","","memory address of this section",97,null],[12,"size","","size in bytes of this section",97,null],[12,"offset","","file offset of this section",97,null],[12,"align","","section alignment (power of 2)",97,null],[12,"reloff","","file offset of relocation entries",97,null],[12,"nreloc","","number of relocation entries",97,null],[12,"flags","","flags (section type and attributes)",97,null],[12,"reserved1","","reserved (for offset or index)",97,null],[12,"reserved2","","reserved (for count or sizeof)",97,null],[3,"Section64","","64-bit section.",null,null],[12,"sectname","","name of this section",98,null],[12,"segname","","segment this section goes in",98,null],[12,"addr","","memory address of this section",98,null],[12,"size","","size in bytes of this section",98,null],[12,"offset","","file offset of this section",98,null],[12,"align","","section alignment (power of 2)",98,null],[12,"reloff","","file offset of relocation entries",98,null],[12,"nreloc","","number of relocation entries",98,null],[12,"flags","","flags (section type and attributes)",98,null],[12,"reserved1","","reserved (for offset or index)",98,null],[12,"reserved2","","reserved (for count or sizeof)",98,null],[12,"reserved3","","reserved",98,null],[3,"Fvmlib","","",null,null],[12,"name","","library's target pathname",99,null],[12,"minor_version","","library's minor version number",99,null],[12,"header_addr","","library's header address",99,null],[3,"FvmlibCommand","","",null,null],[12,"cmd","","LC_IDFVMLIB or LC_LOADFVMLIB",100,null],[12,"cmdsize","","includes pathname string",100,null],[12,"fvmlib","","the library identification",100,null],[3,"Dylib","","",null,null],[12,"name","","library's path name",101,null],[12,"timestamp","","library's build time stamp",101,null],[12,"current_version","","library's current version number",101,null],[12,"compatibility_version","","library's compatibility vers number",101,null],[3,"DylibCommand","","",null,null],[12,"cmd","","LC_ID_DYLIB, LC_LOAD_{,WEAK_}DYLIB, LC_REEXPORT_DYLIB",102,null],[12,"cmdsize","","includes pathname string",102,null],[12,"dylib","","the library identification",102,null],[3,"SubFrameworkCommand","","",null,null],[12,"cmd","","LC_SUB_FRAMEWORK",103,null],[12,"cmdsize","","includes umbrella string",103,null],[12,"umbrella","","the umbrella framework name",103,null],[3,"SubClientCommand","","",null,null],[12,"cmd","","LC_SUB_CLIENT",104,null],[12,"cmdsize","","includes client string",104,null],[12,"client","","the client name",104,null],[3,"SubUmbrellaCommand","","",null,null],[12,"cmd","","LC_SUB_UMBRELLA",105,null],[12,"cmdsize","","includes sub_umbrella string",105,null],[12,"sub_umbrella","","the sub_umbrella framework name",105,null],[3,"SubLibraryCommand","","",null,null],[12,"cmd","","LC_SUB_LIBRARY",106,null],[12,"cmdsize","","includes sub_library string",106,null],[12,"sub_library","","the sub_library name",106,null],[3,"PreboundDylibCommand","","",null,null],[12,"cmd","","LC_PREBOUND_DYLIB",107,null],[12,"cmdsize","","includes strings",107,null],[12,"name","","library's path name",107,null],[12,"nmodules","","number of modules in library",107,null],[12,"linked_modules","","bit vector of linked modules",107,null],[3,"DylinkerCommand","","",null,null],[12,"cmd","","LC_ID_DYLINKER, LC_LOAD_DYLINKER or LC_DYLD_ENVIRONMENT",108,null],[12,"cmdsize","","includes pathname string",108,null],[12,"name","","dynamic linker's path name",108,null],[3,"ThreadCommand","","",null,null],[12,"cmd","","LC_THREAD or  LC_UNIXTHREAD",109,null],[12,"cmdsize","","total size of this command",109,null],[3,"RoutinesCommand","","",null,null],[12,"cmd","","LC_ROUTINES",110,null],[12,"cmdsize","","total size of this command",110,null],[12,"init_address","","address of initialization routine",110,null],[12,"init_module","","index into the module table that the init routine is…",110,null],[12,"reserved1","","",110,null],[12,"reserved2","","",110,null],[12,"reserved3","","",110,null],[12,"reserved4","","",110,null],[12,"reserved5","","",110,null],[12,"reserved6","","",110,null],[3,"RoutinesCommand_64","","",null,null],[12,"cmd","","LC_ROUTINES_64",111,null],[12,"cmdsize","","total size of this command",111,null],[12,"init_address","","address of initialization routine",111,null],[12,"init_module","","index into the module table that the init routine is…",111,null],[12,"reserved1","","",111,null],[12,"reserved2","","",111,null],[12,"reserved3","","",111,null],[12,"reserved4","","",111,null],[12,"reserved5","","",111,null],[12,"reserved6","","",111,null],[3,"SymtabCommand","","",null,null],[12,"cmd","","LC_SYMTAB",112,null],[12,"cmdsize","","sizeof(struct SymtabCommand)",112,null],[12,"symoff","","symbol table offset",112,null],[12,"nsyms","","number of symbol table entries",112,null],[12,"stroff","","string table offset",112,null],[12,"strsize","","string table size in bytes",112,null],[3,"DysymtabCommand","","",null,null],[12,"cmd","","LC_DYSYMTAB",113,null],[12,"cmdsize","","sizeof(struct DysymtabCommand)",113,null],[12,"ilocalsym","","index to local symbols",113,null],[12,"nlocalsym","","number of local symbols",113,null],[12,"iextdefsym","","index to externally defined symbols",113,null],[12,"nextdefsym","","number of externally defined symbols",113,null],[12,"iundefsym","","index to undefined symbols",113,null],[12,"nundefsym","","number of undefined symbols",113,null],[12,"tocoff","","file offset to table of contents",113,null],[12,"ntoc","","number of entries in table of contents",113,null],[12,"modtaboff","","file offset to module table",113,null],[12,"nmodtab","","number of module table entries",113,null],[12,"extrefsymoff","","offset to referenced symbol table",113,null],[12,"nextrefsyms","","number of referenced symbol table entries",113,null],[12,"indirectsymoff","","file offset to the indirect symbol table",113,null],[12,"nindirectsyms","","number of indirect symbol table entries",113,null],[12,"extreloff","","offset to external relocation entries",113,null],[12,"nextrel","","number of external relocation entries",113,null],[12,"locreloff","","offset to local relocation entries",113,null],[12,"nlocrel","","number of local relocation entries",113,null],[3,"DylibTableOfContents","","",null,null],[12,"symbol_index","","the defined external symbol (index into the symbol table)",114,null],[12,"module_index","","index into the module table this symbol is defined in",114,null],[3,"DylibModule32","","",null,null],[12,"module_name","","the module name (index into string table)",115,null],[12,"iextdefsym","","index into externally defined symbols",115,null],[12,"nextdefsym","","number of externally defined symbols",115,null],[12,"irefsym","","index into reference symbol table",115,null],[12,"nrefsym","","number of reference symbol table entries",115,null],[12,"ilocalsym","","index into symbols for local symbols",115,null],[12,"nlocalsym","","number of local symbols",115,null],[12,"iextrel","","index into external relocation entries",115,null],[12,"nextrel","","number of external relocation entries",115,null],[12,"iinit_iterm","","low 16 bits are the index into the init section, high 16…",115,null],[12,"ninit_nterm","","low 16 bits are the number of init section entries, high…",115,null],[12,"objc_module_info_addr","","for this module address of the start of the…",115,null],[12,"objc_module_info_size","","for this module size of the (__OBJC,__module_info) section",115,null],[3,"DylibModule64","","",null,null],[12,"module_name","","the module name (index into string table)",116,null],[12,"iextdefsym","","index into externally defined symbols",116,null],[12,"nextdefsym","","number of externally defined symbols",116,null],[12,"irefsym","","index into reference symbol table",116,null],[12,"nrefsym","","number of reference symbol table entries",116,null],[12,"ilocalsym","","index into symbols for local symbols",116,null],[12,"nlocalsym","","number of local symbols",116,null],[12,"iextrel","","index into external relocation entries",116,null],[12,"nextrel","","number of external relocation entries",116,null],[12,"iinit_iterm","","low 16 bits are the index into the init section, high 16…",116,null],[12,"ninit_nterm","","low 16 bits are the number of init section entries, high…",116,null],[12,"objc_module_info_size","","for this module size of the (__OBJC,__module_info) section",116,null],[12,"objc_module_info_addr","","for this module address of the start of the…",116,null],[3,"DylibReference","","",null,null],[12,"bitfield","","",117,null],[3,"TwolevelHintsCommand","","",null,null],[12,"cmd","","LC_TWOLEVEL_HINTS",118,null],[12,"cmdsize","","sizeof(struct TwolevelHintsCommand)",118,null],[12,"offset","","offset to the hint table",118,null],[12,"nhints","","number of hints in the hint table",118,null],[3,"TwolevelHint","","",null,null],[12,"bitfield","","",119,null],[3,"PrebindCksumCommand","","",null,null],[12,"cmd","","LC_PREBIND_CKSUM",120,null],[12,"cmdsize","","sizeof(struct PrebindCksumCommand)",120,null],[12,"cksum","","the check sum or zero",120,null],[3,"UuidCommand","","",null,null],[12,"cmd","","LC_UUID",121,null],[12,"cmdsize","","sizeof(struct UuidCommand)",121,null],[12,"uuid","","the 128-bit uuid",121,null],[3,"RpathCommand","","",null,null],[12,"cmd","","LC_RPATH",122,null],[12,"cmdsize","","includes string",122,null],[12,"path","","path to add to run path",122,null],[3,"LinkeditDataCommand","","",null,null],[12,"cmd","","LC_CODE_SIGNATURE, LC_SEGMENT_SPLIT_INFO,…",123,null],[12,"cmdsize","","sizeof(struct LinkeditDataCommand)",123,null],[12,"dataoff","","file offset of data in __LINKEDIT segment",123,null],[12,"datasize","","file size of data in __LINKEDIT segment",123,null],[3,"EncryptionInfoCommand","","",null,null],[12,"cmd","","LC_ENCRYPTION_INFO",124,null],[12,"cmdsize","","sizeof(struct EncryptionInfoCommand)",124,null],[12,"cryptoff","","file offset of encrypted range",124,null],[12,"cryptsize","","file size of encrypted range",124,null],[12,"cryptid","","which enryption system, 0 means not-encrypted yet",124,null],[3,"EncryptionInfoCommand64","","",null,null],[12,"cmd","","LC_ENCRYPTION_INFO_64",125,null],[12,"cmdsize","","sizeof(struct EncryptionInfoCommand64)",125,null],[12,"cryptoff","","file offset of encrypted range",125,null],[12,"cryptsize","","file size of encrypted range",125,null],[12,"cryptid","","which enryption system, 0 means not-encrypted yet",125,null],[12,"pad","","padding to make this struct's size a multiple of 8 bytes",125,null],[3,"VersionMinCommand","","",null,null],[12,"cmd","","LC_VERSION_MIN_MACOSX or LC_VERSION_MIN_IPHONEOS or…",126,null],[12,"cmdsize","","sizeof(struct VersionMinCommand)",126,null],[12,"version","","X.Y.Z is encoded in nibbles xxxx.yy.zz",126,null],[12,"sdk","","X.Y.Z is encoded in nibbles xxxx.yy.zz",126,null],[3,"BuildVersionCommand","","",null,null],[12,"cmd","","LC_BUILD_VERSION",127,null],[12,"cmdsize","","sizeof(struct BuildVersionCommand) plus ntools *…",127,null],[12,"platform","","platform",127,null],[12,"minos","","X.Y.Z is encoded in nibbles xxxx.yy.zz",127,null],[12,"sdk","","X.Y.Z is encoded in nibbles xxxx.yy.zz",127,null],[12,"ntools","","number of tool entries following this",127,null],[3,"BuildToolVersion","","",null,null],[12,"tool","","enum for the tool",128,null],[12,"version","","version number of the tool",128,null],[3,"DyldInfoCommand","","",null,null],[12,"cmd","","LC_DYLD_INFO or LC_DYLD_INFO_ONLY",129,null],[12,"cmdsize","","sizeof(struct DyldInfoCommand)",129,null],[12,"rebase_off","","file offset to rebase info",129,null],[12,"rebase_size","","size of rebase info",129,null],[12,"bind_off","","file offset to binding info",129,null],[12,"bind_size","","size of binding info",129,null],[12,"weak_bind_off","","file offset to weak binding info",129,null],[12,"weak_bind_size","","size of weak binding info",129,null],[12,"lazy_bind_off","","file offset to lazy binding info",129,null],[12,"lazy_bind_size","","size of lazy binding infs",129,null],[12,"export_off","","file offset to lazy binding info",129,null],[12,"export_size","","size of lazy binding infs",129,null],[3,"LinkerOptionCommand","","",null,null],[12,"cmd","","LC_LINKER_OPTION only used in MH_OBJECT filetypes",130,null],[12,"cmdsize","","",130,null],[12,"count","","number of strings",130,null],[3,"SymSegCommand","","",null,null],[12,"cmd","","LC_SYMSEG",131,null],[12,"cmdsize","","sizeof(struct SymSegCommand)",131,null],[12,"offset","","symbol segment offset",131,null],[12,"size","","symbol segment size in bytes",131,null],[3,"IdentCommand","","",null,null],[12,"cmd","","LC_IDENT",132,null],[12,"cmdsize","","strings that follow this command",132,null],[3,"FvmfileCommand","","",null,null],[12,"cmd","","LC_FVMFILE",133,null],[12,"cmdsize","","includes pathname string",133,null],[12,"name","","files pathname",133,null],[12,"header_addr","","files virtual address",133,null],[3,"EntryPointCommand","","",null,null],[12,"cmd","","LC_MAIN only used in MH_EXECUTE filetypes",134,null],[12,"cmdsize","","24",134,null],[12,"entryoff","","file (__TEXT) offset of main()",134,null],[12,"stacksize","","if not zero, initial stack size",134,null],[3,"SourceVersionCommand","","",null,null],[12,"cmd","","LC_SOURCE_VERSION",135,null],[12,"cmdsize","","16",135,null],[12,"version","","A.B.C.D.E packed as a24.b10.c10.d10.e10",135,null],[3,"DataInCodeEntry","","",null,null],[12,"offset","","from mach_header to start of data range",136,null],[12,"length","","number of bytes in data range",136,null],[12,"kind","","a DICE_KIND_* value",136,null],[3,"NoteCommand","","",null,null],[12,"cmd","","LC_NOTE",137,null],[12,"cmdsize","","sizeof(struct NoteCommand)",137,null],[12,"data_owner","","owner name for this LC_NOTE",137,null],[12,"offset","","file offset of this data",137,null],[12,"size","","length of data region",137,null],[3,"Nlist32","","",null,null],[12,"n_strx","","index into the string table",138,null],[12,"n_type","","type flag, see below",138,null],[12,"n_sect","","section number or NO_SECT",138,null],[12,"n_desc","","see <mach-o/stab.h>",138,null],[12,"n_value","","value of this symbol (or stab offset)",138,null],[3,"Nlist64","","",null,null],[12,"n_strx","","index into the string table",139,null],[12,"n_type","","type flag, see below",139,null],[12,"n_sect","","section number or NO_SECT",139,null],[12,"n_desc","","see <mach-o/stab.h>",139,null],[12,"n_value","","value of this symbol (or stab offset)",139,null],[3,"Relocation","","A relocation entry.",null,null],[12,"r_word0","","",140,null],[12,"r_word1","","",140,null],[3,"RelocationInfo","","",null,null],[12,"r_address","","offset in the section to what is being relocated",141,null],[12,"r_symbolnum","","symbol index if r_extern == 1 or section ordinal if…",141,null],[12,"r_pcrel","","was relocated pc relative already",141,null],[12,"r_length","","0=byte, 1=word, 2=long, 3=quad",141,null],[12,"r_extern","","does not include value of sym referenced",141,null],[12,"r_type","","if not 0, machine specific relocation type",141,null],[3,"ScatteredRelocationInfo","","",null,null],[12,"r_address","","offset in the section to what is being relocated",142,null],[12,"r_type","","if not 0, machine specific relocation type",142,null],[12,"r_length","","0=byte, 1=word, 2=long, 3=quad",142,null],[12,"r_pcrel","","was relocated pc relative already",142,null],[12,"r_value","","the value the item to be relocated is refering to (without…",142,null],[5,"cpu_subtype_intel","","",null,[[["u32"]],["u32"]]],[5,"cpu_subtype_intel_family","","",null,[[["u32"]],["u32"]]],[5,"cpu_subtype_intel_model","","",null,[[["u32"]],["u32"]]],[17,"CPU_ARCH_MASK","","mask for architecture bits",null,null],[17,"CPU_ARCH_ABI64","","64 bit ABI",null,null],[17,"CPU_ARCH_ABI64_32","","ABI for 64-bit hardware with 32-bit types; LP32",null,null],[17,"CPU_TYPE_ANY","","",null,null],[17,"CPU_TYPE_VAX","","",null,null],[17,"CPU_TYPE_MC680X0","","",null,null],[17,"CPU_TYPE_X86","","",null,null],[17,"CPU_TYPE_X86_64","","",null,null],[17,"CPU_TYPE_MIPS","","",null,null],[17,"CPU_TYPE_MC98000","","",null,null],[17,"CPU_TYPE_HPPA","","",null,null],[17,"CPU_TYPE_ARM","","",null,null],[17,"CPU_TYPE_ARM64","","",null,null],[17,"CPU_TYPE_ARM64_32","","",null,null],[17,"CPU_TYPE_MC88000","","",null,null],[17,"CPU_TYPE_SPARC","","",null,null],[17,"CPU_TYPE_I860","","",null,null],[17,"CPU_TYPE_ALPHA","","",null,null],[17,"CPU_TYPE_POWERPC","","",null,null],[17,"CPU_TYPE_POWERPC64","","",null,null],[17,"CPU_SUBTYPE_MASK","","mask for feature flags",null,null],[17,"CPU_SUBTYPE_LIB64","","64 bit libraries",null,null],[17,"CPU_SUBTYPE_MULTIPLE","","",null,null],[17,"CPU_SUBTYPE_LITTLE_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_BIG_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_VAX_ALL","","",null,null],[17,"CPU_SUBTYPE_VAX780","","",null,null],[17,"CPU_SUBTYPE_VAX785","","",null,null],[17,"CPU_SUBTYPE_VAX750","","",null,null],[17,"CPU_SUBTYPE_VAX730","","",null,null],[17,"CPU_SUBTYPE_UVAXI","","",null,null],[17,"CPU_SUBTYPE_UVAXII","","",null,null],[17,"CPU_SUBTYPE_VAX8200","","",null,null],[17,"CPU_SUBTYPE_VAX8500","","",null,null],[17,"CPU_SUBTYPE_VAX8600","","",null,null],[17,"CPU_SUBTYPE_VAX8650","","",null,null],[17,"CPU_SUBTYPE_VAX8800","","",null,null],[17,"CPU_SUBTYPE_UVAXIII","","",null,null],[17,"CPU_SUBTYPE_MC680X0_ALL","","",null,null],[17,"CPU_SUBTYPE_MC68030","","",null,null],[17,"CPU_SUBTYPE_MC68040","","",null,null],[17,"CPU_SUBTYPE_MC68030_ONLY","","",null,null],[17,"CPU_SUBTYPE_I386_ALL","","",null,null],[17,"CPU_SUBTYPE_386","","",null,null],[17,"CPU_SUBTYPE_486","","",null,null],[17,"CPU_SUBTYPE_486SX","","",null,null],[17,"CPU_SUBTYPE_586","","",null,null],[17,"CPU_SUBTYPE_PENT","","",null,null],[17,"CPU_SUBTYPE_PENTPRO","","",null,null],[17,"CPU_SUBTYPE_PENTII_M3","","",null,null],[17,"CPU_SUBTYPE_PENTII_M5","","",null,null],[17,"CPU_SUBTYPE_CELERON","","",null,null],[17,"CPU_SUBTYPE_CELERON_MOBILE","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_XEON","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4_M","","",null,null],[17,"CPU_SUBTYPE_ITANIUM","","",null,null],[17,"CPU_SUBTYPE_ITANIUM_2","","",null,null],[17,"CPU_SUBTYPE_XEON","","",null,null],[17,"CPU_SUBTYPE_XEON_MP","","",null,null],[17,"CPU_SUBTYPE_INTEL_FAMILY_MAX","","",null,null],[17,"CPU_SUBTYPE_INTEL_MODEL_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_64_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ARCH1","","",null,null],[17,"CPU_SUBTYPE_X86_64_H","","Haswell feature subset",null,null],[17,"CPU_SUBTYPE_MIPS_ALL","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2300","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2600","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2800","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2000A","","pmax",null,null],[17,"CPU_SUBTYPE_MIPS_R2000","","",null,null],[17,"CPU_SUBTYPE_MIPS_R3000A","","3max",null,null],[17,"CPU_SUBTYPE_MIPS_R3000","","",null,null],[17,"CPU_SUBTYPE_MC98000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC98601","","",null,null],[17,"CPU_SUBTYPE_HPPA_ALL","","",null,null],[17,"CPU_SUBTYPE_HPPA_7100LC","","",null,null],[17,"CPU_SUBTYPE_MC88000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC88100","","",null,null],[17,"CPU_SUBTYPE_MC88110","","",null,null],[17,"CPU_SUBTYPE_SPARC_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_860","","",null,null],[17,"CPU_SUBTYPE_POWERPC_ALL","","",null,null],[17,"CPU_SUBTYPE_POWERPC_601","","",null,null],[17,"CPU_SUBTYPE_POWERPC_602","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603EV","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_620","","",null,null],[17,"CPU_SUBTYPE_POWERPC_750","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7400","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7450","","",null,null],[17,"CPU_SUBTYPE_POWERPC_970","","",null,null],[17,"CPU_SUBTYPE_ARM_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM_V4T","","",null,null],[17,"CPU_SUBTYPE_ARM_V6","","",null,null],[17,"CPU_SUBTYPE_ARM_V5TEJ","","",null,null],[17,"CPU_SUBTYPE_ARM_XSCALE","","",null,null],[17,"CPU_SUBTYPE_ARM_V7","","",null,null],[17,"CPU_SUBTYPE_ARM_V7F","","Cortex A9",null,null],[17,"CPU_SUBTYPE_ARM_V7S","","Swift",null,null],[17,"CPU_SUBTYPE_ARM_V7K","","",null,null],[17,"CPU_SUBTYPE_ARM_V6M","","Not meant to be run under xnu",null,null],[17,"CPU_SUBTYPE_ARM_V7M","","Not meant to be run under xnu",null,null],[17,"CPU_SUBTYPE_ARM_V7EM","","Not meant to be run under xnu",null,null],[17,"CPU_SUBTYPE_ARM_V8","","",null,null],[17,"CPU_SUBTYPE_ARM64_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM64_V8","","",null,null],[17,"CPU_SUBTYPE_ARM64E","","",null,null],[17,"CPU_SUBTYPE_ARM64_32_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM64_32_V8","","",null,null],[17,"VM_PROT_READ","","read permission",null,null],[17,"VM_PROT_WRITE","","write permission",null,null],[17,"VM_PROT_EXECUTE","","execute permission",null,null],[17,"FAT_MAGIC","","",null,null],[17,"FAT_CIGAM","","NXSwapLong(FAT_MAGIC)",null,null],[17,"FAT_MAGIC_64","","",null,null],[17,"FAT_CIGAM_64","","NXSwapLong(FAT_MAGIC_64)",null,null],[17,"MH_MAGIC","","the mach magic number",null,null],[17,"MH_CIGAM","","NXSwapInt(MH_MAGIC)",null,null],[17,"MH_MAGIC_64","","the 64-bit mach magic number",null,null],[17,"MH_CIGAM_64","","NXSwapInt(MH_MAGIC_64)",null,null],[17,"MH_OBJECT","","relocatable object file",null,null],[17,"MH_EXECUTE","","demand paged executable file",null,null],[17,"MH_FVMLIB","","fixed VM shared library file",null,null],[17,"MH_CORE","","core file",null,null],[17,"MH_PRELOAD","","preloaded executable file",null,null],[17,"MH_DYLIB","","dynamically bound shared library",null,null],[17,"MH_DYLINKER","","dynamic link editor",null,null],[17,"MH_BUNDLE","","dynamically bound bundle file",null,null],[17,"MH_DYLIB_STUB","","shared library stub for static linking only, no section…",null,null],[17,"MH_DSYM","","companion file with only debug sections",null,null],[17,"MH_KEXT_BUNDLE","","x86_64 kexts",null,null],[17,"MH_NOUNDEFS","","the object file has no undefined references",null,null],[17,"MH_INCRLINK","","the object file is the output of an incremental link…",null,null],[17,"MH_DYLDLINK","","the object file is input for the dynamic linker and can't…",null,null],[17,"MH_BINDATLOAD","","the object file's undefined references are bound by the…",null,null],[17,"MH_PREBOUND","","the file has its dynamic undefined references prebound.",null,null],[17,"MH_SPLIT_SEGS","","the file has its read-only and read-write segments split",null,null],[17,"MH_LAZY_INIT","","the shared library init routine is to be run lazily via…",null,null],[17,"MH_TWOLEVEL","","the image is using two-level name space bindings",null,null],[17,"MH_FORCE_FLAT","","the executable is forcing all images to use flat name…",null,null],[17,"MH_NOMULTIDEFS","","this umbrella guarantees no multiple defintions of symbols…",null,null],[17,"MH_NOFIXPREBINDING","","do not have dyld notify the prebinding agent about this…",null,null],[17,"MH_PREBINDABLE","","the binary is not prebound but can have its prebinding…",null,null],[17,"MH_ALLMODSBOUND","","indicates that this binary binds to all two-level…",null,null],[17,"MH_SUBSECTIONS_VIA_SYMBOLS","","safe to divide up the sections into sub-sections via…",null,null],[17,"MH_CANONICAL","","the binary has been canonicalized via the unprebind…",null,null],[17,"MH_WEAK_DEFINES","","the final linked image contains external weak symbols",null,null],[17,"MH_BINDS_TO_WEAK","","the final linked image uses weak symbols",null,null],[17,"MH_ALLOW_STACK_EXECUTION","","When this bit is set, all stacks in the task will be given…",null,null],[17,"MH_ROOT_SAFE","","When this bit is set, the binary declares it is safe for…",null,null],[17,"MH_SETUID_SAFE","","When this bit is set, the binary declares it is safe for…",null,null],[17,"MH_NO_REEXPORTED_DYLIBS","","When this bit is set on a dylib, the static linker does…",null,null],[17,"MH_PIE","","When this bit is set, the OS will load the main executable…",null,null],[17,"MH_DEAD_STRIPPABLE_DYLIB","","Only for use on dylibs. When linking against a dylib that…",null,null],[17,"MH_HAS_TLV_DESCRIPTORS","","Contains a section of type S_THREAD_LOCAL_VARIABLES",null,null],[17,"MH_NO_HEAP_EXECUTION","","When this bit is set, the OS will run the main executable…",null,null],[17,"MH_APP_EXTENSION_SAFE","","The code was linked for use in an application extension.",null,null],[17,"MH_NLIST_OUTOFSYNC_WITH_DYLDINFO","","",null,null],[17,"MH_SIM_SUPPORT","","The external symbols listed in the nlist symbol table do…",null,null],[17,"LC_REQ_DYLD","","",null,null],[17,"LC_SEGMENT","","segment of this file to be mapped",null,null],[17,"LC_SYMTAB","","link-edit stab symbol table info",null,null],[17,"LC_SYMSEG","","link-edit gdb symbol table info (obsolete)",null,null],[17,"LC_THREAD","","thread",null,null],[17,"LC_UNIXTHREAD","","unix thread (includes a stack)",null,null],[17,"LC_LOADFVMLIB","","load a specified fixed VM shared library",null,null],[17,"LC_IDFVMLIB","","fixed VM shared library identification",null,null],[17,"LC_IDENT","","object identification info (obsolete)",null,null],[17,"LC_FVMFILE","","fixed VM file inclusion (internal use)",null,null],[17,"LC_PREPAGE","","prepage command (internal use)",null,null],[17,"LC_DYSYMTAB","","dynamic link-edit symbol table info",null,null],[17,"LC_LOAD_DYLIB","","load a dynamically linked shared library",null,null],[17,"LC_ID_DYLIB","","dynamically linked shared lib ident",null,null],[17,"LC_LOAD_DYLINKER","","load a dynamic linker",null,null],[17,"LC_ID_DYLINKER","","dynamic linker identification",null,null],[17,"LC_PREBOUND_DYLIB","","modules prebound for a dynamically linked shared library",null,null],[17,"LC_ROUTINES","","image routines",null,null],[17,"LC_SUB_FRAMEWORK","","sub framework",null,null],[17,"LC_SUB_UMBRELLA","","sub umbrella",null,null],[17,"LC_SUB_CLIENT","","sub client",null,null],[17,"LC_SUB_LIBRARY","","sub library",null,null],[17,"LC_TWOLEVEL_HINTS","","two-level namespace lookup hints",null,null],[17,"LC_PREBIND_CKSUM","","prebind checksum",null,null],[17,"LC_LOAD_WEAK_DYLIB","","",null,null],[17,"LC_SEGMENT_64","","64-bit segment of this file to be mapped",null,null],[17,"LC_ROUTINES_64","","64-bit image routines",null,null],[17,"LC_UUID","","the uuid",null,null],[17,"LC_RPATH","","runpath additions",null,null],[17,"LC_CODE_SIGNATURE","","local of code signature",null,null],[17,"LC_SEGMENT_SPLIT_INFO","","local of info to split segments",null,null],[17,"LC_REEXPORT_DYLIB","","load and re-export dylib",null,null],[17,"LC_LAZY_LOAD_DYLIB","","delay load of dylib until first use",null,null],[17,"LC_ENCRYPTION_INFO","","encrypted segment information",null,null],[17,"LC_DYLD_INFO","","compressed dyld information",null,null],[17,"LC_DYLD_INFO_ONLY","","compressed dyld information only",null,null],[17,"LC_LOAD_UPWARD_DYLIB","","load upward dylib",null,null],[17,"LC_VERSION_MIN_MACOSX","","build for MacOSX min OS version",null,null],[17,"LC_VERSION_MIN_IPHONEOS","","build for iPhoneOS min OS version",null,null],[17,"LC_FUNCTION_STARTS","","compressed table of function start addresses",null,null],[17,"LC_DYLD_ENVIRONMENT","","string for dyld to treat like environment variable",null,null],[17,"LC_MAIN","","replacement for LC_UNIXTHREAD",null,null],[17,"LC_DATA_IN_CODE","","table of non-instructions in __text",null,null],[17,"LC_SOURCE_VERSION","","source version used to build binary",null,null],[17,"LC_DYLIB_CODE_SIGN_DRS","","Code signing DRs copied from linked dylibs",null,null],[17,"LC_ENCRYPTION_INFO_64","","64-bit encrypted segment information",null,null],[17,"LC_LINKER_OPTION","","linker options in MH_OBJECT files",null,null],[17,"LC_LINKER_OPTIMIZATION_HINT","","optimization hints in MH_OBJECT files",null,null],[17,"LC_VERSION_MIN_TVOS","","build for AppleTV min OS version",null,null],[17,"LC_VERSION_MIN_WATCHOS","","build for Watch min OS version",null,null],[17,"LC_NOTE","","arbitrary data included within a Mach-O file",null,null],[17,"LC_BUILD_VERSION","","build for platform min OS version",null,null],[17,"LC_DYLD_EXPORTS_TRIE","","used with `LinkeditDataCommand`, payload is trie",null,null],[17,"LC_DYLD_CHAINED_FIXUPS","","used with `LinkeditDataCommand`",null,null],[17,"SG_HIGHVM","","the file contents for this segment is for the high part of…",null,null],[17,"SG_FVMLIB","","this segment is the VM that is allocated by a fixed VM…",null,null],[17,"SG_NORELOC","","this segment has nothing that was relocated in it and…",null,null],[17,"SG_PROTECTED_VERSION_1","","This segment is protected. If the segment starts at file…",null,null],[17,"SG_READ_ONLY","","This segment is made read-only after fixups",null,null],[17,"SECTION_TYPE","","256 section types",null,null],[17,"SECTION_ATTRIBUTES","","24 section attributes",null,null],[17,"S_REGULAR","","regular section",null,null],[17,"S_ZEROFILL","","zero fill on demand section",null,null],[17,"S_CSTRING_LITERALS","","section with only literal C strings",null,null],[17,"S_4BYTE_LITERALS","","section with only 4 byte literals",null,null],[17,"S_8BYTE_LITERALS","","section with only 8 byte literals",null,null],[17,"S_LITERAL_POINTERS","","section with only pointers to literals",null,null],[17,"S_NON_LAZY_SYMBOL_POINTERS","","section with only non-lazy symbol pointers",null,null],[17,"S_LAZY_SYMBOL_POINTERS","","section with only lazy symbol pointers",null,null],[17,"S_SYMBOL_STUBS","","section with only symbol stubs, byte size of stub in the…",null,null],[17,"S_MOD_INIT_FUNC_POINTERS","","section with only function pointers for initialization",null,null],[17,"S_MOD_TERM_FUNC_POINTERS","","section with only function pointers for termination",null,null],[17,"S_COALESCED","","section contains symbols that are to be coalesced",null,null],[17,"S_GB_ZEROFILL","","zero fill on demand section (that can be larger than 4…",null,null],[17,"S_INTERPOSING","","section with only pairs of function pointers for interposing",null,null],[17,"S_16BYTE_LITERALS","","section with only 16 byte literals",null,null],[17,"S_DTRACE_DOF","","section contains DTrace Object Format",null,null],[17,"S_LAZY_DYLIB_SYMBOL_POINTERS","","section with only lazy symbol pointers to lazy loaded dylibs",null,null],[17,"S_THREAD_LOCAL_REGULAR","","template of initial values for TLVs",null,null],[17,"S_THREAD_LOCAL_ZEROFILL","","template of initial values for TLVs",null,null],[17,"S_THREAD_LOCAL_VARIABLES","","TLV descriptors",null,null],[17,"S_THREAD_LOCAL_VARIABLE_POINTERS","","pointers to TLV descriptors",null,null],[17,"S_THREAD_LOCAL_INIT_FUNCTION_POINTERS","","functions to call to initialize TLV values",null,null],[17,"S_INIT_FUNC_OFFSETS","","32-bit offsets to initializers",null,null],[17,"SECTION_ATTRIBUTES_USR","","User setable attributes",null,null],[17,"S_ATTR_PURE_INSTRUCTIONS","","section contains only true machine instructions",null,null],[17,"S_ATTR_NO_TOC","","section contains coalesced symbols that are not to be in a…",null,null],[17,"S_ATTR_STRIP_STATIC_SYMS","","ok to strip static symbols in this section in files with…",null,null],[17,"S_ATTR_NO_DEAD_STRIP","","no dead stripping",null,null],[17,"S_ATTR_LIVE_SUPPORT","","blocks are live if they reference live blocks",null,null],[17,"S_ATTR_SELF_MODIFYING_CODE","","Used with i386 code stubs written on by dyld",null,null],[17,"S_ATTR_DEBUG","","a debug section",null,null],[17,"SECTION_ATTRIBUTES_SYS","","system setable attributes",null,null],[17,"S_ATTR_SOME_INSTRUCTIONS","","section contains some machine instructions",null,null],[17,"S_ATTR_EXT_RELOC","","section has external relocation entries",null,null],[17,"S_ATTR_LOC_RELOC","","section has local relocation entries",null,null],[17,"SEG_PAGEZERO","","the pagezero segment which has no protections and catches…",null,null],[17,"SEG_TEXT","","the tradition UNIX text segment",null,null],[17,"SECT_TEXT","","the real text part of the text section no headers, and no…",null,null],[17,"SECT_FVMLIB_INIT0","","the fvmlib initialization section",null,null],[17,"SECT_FVMLIB_INIT1","","the section following the fvmlib initialization section",null,null],[17,"SEG_DATA","","the tradition UNIX data segment",null,null],[17,"SECT_DATA","","the real initialized data section no padding, no bss overlap",null,null],[17,"SECT_BSS","","the real uninitialized data section no padding",null,null],[17,"SECT_COMMON","","the section common symbols are allocated in by the link…",null,null],[17,"SEG_OBJC","","objective-C runtime segment",null,null],[17,"SECT_OBJC_SYMBOLS","","symbol table",null,null],[17,"SECT_OBJC_MODULES","","module information",null,null],[17,"SECT_OBJC_STRINGS","","string table",null,null],[17,"SECT_OBJC_REFS","","string table",null,null],[17,"SEG_ICON","","the icon segment",null,null],[17,"SECT_ICON_HEADER","","the icon headers",null,null],[17,"SECT_ICON_TIFF","","the icons in tiff format",null,null],[17,"SEG_LINKEDIT","","the segment containing all structs created and maintained…",null,null],[17,"SEG_UNIXSTACK","","the unix stack segment",null,null],[17,"SEG_IMPORT","","the segment for the self (dyld) modifing code stubs that…",null,null],[17,"INDIRECT_SYMBOL_LOCAL","","",null,null],[17,"INDIRECT_SYMBOL_ABS","","",null,null],[17,"PLATFORM_MACOS","","",null,null],[17,"PLATFORM_IOS","","",null,null],[17,"PLATFORM_TVOS","","",null,null],[17,"PLATFORM_WATCHOS","","",null,null],[17,"PLATFORM_BRIDGEOS","","",null,null],[17,"PLATFORM_IOSMAC","","",null,null],[17,"PLATFORM_IOSSIMULATOR","","",null,null],[17,"PLATFORM_TVOSSIMULATOR","","",null,null],[17,"PLATFORM_WATCHOSSIMULATOR","","",null,null],[17,"TOOL_CLANG","","",null,null],[17,"TOOL_SWIFT","","",null,null],[17,"TOOL_LD","","",null,null],[17,"REBASE_TYPE_POINTER","","",null,null],[17,"REBASE_TYPE_TEXT_ABSOLUTE32","","",null,null],[17,"REBASE_TYPE_TEXT_PCREL32","","",null,null],[17,"REBASE_OPCODE_MASK","","",null,null],[17,"REBASE_IMMEDIATE_MASK","","",null,null],[17,"REBASE_OPCODE_DONE","","",null,null],[17,"REBASE_OPCODE_SET_TYPE_IMM","","",null,null],[17,"REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","","",null,null],[17,"REBASE_OPCODE_ADD_ADDR_ULEB","","",null,null],[17,"REBASE_OPCODE_ADD_ADDR_IMM_SCALED","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_IMM_TIMES","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ULEB_TIMES","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB","","",null,null],[17,"BIND_TYPE_POINTER","","",null,null],[17,"BIND_TYPE_TEXT_ABSOLUTE32","","",null,null],[17,"BIND_TYPE_TEXT_PCREL32","","",null,null],[17,"BIND_SPECIAL_DYLIB_SELF","","",null,null],[17,"BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE","","",null,null],[17,"BIND_SPECIAL_DYLIB_FLAT_LOOKUP","","",null,null],[17,"BIND_SPECIAL_DYLIB_WEAK_LOOKUP","","",null,null],[17,"BIND_SYMBOL_FLAGS_WEAK_IMPORT","","",null,null],[17,"BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION","","",null,null],[17,"BIND_OPCODE_MASK","","",null,null],[17,"BIND_IMMEDIATE_MASK","","",null,null],[17,"BIND_OPCODE_DONE","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_SPECIAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM","","",null,null],[17,"BIND_OPCODE_SET_TYPE_IMM","","",null,null],[17,"BIND_OPCODE_SET_ADDEND_SLEB","","",null,null],[17,"BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","","",null,null],[17,"BIND_OPCODE_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED","","",null,null],[17,"BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB","","",null,null],[17,"BIND_OPCODE_THREADED","","",null,null],[17,"BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB","","",null,null],[17,"BIND_SUBOPCODE_THREADED_APPLY","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_MASK","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_REGULAR","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_REEXPORT","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER","","",null,null],[17,"DICE_KIND_DATA","","",null,null],[17,"DICE_KIND_JUMP_TABLE8","","",null,null],[17,"DICE_KIND_JUMP_TABLE16","","",null,null],[17,"DICE_KIND_JUMP_TABLE32","","",null,null],[17,"DICE_KIND_ABS_JUMP_TABLE32","","",null,null],[17,"N_STAB","","if any of these bits set, a symbolic debugging entry",null,null],[17,"N_PEXT","","private external symbol bit",null,null],[17,"N_TYPE","","mask for the type bits",null,null],[17,"N_EXT","","external symbol bit, set for external symbols",null,null],[17,"N_UNDF","","undefined, n_sect == NO_SECT",null,null],[17,"N_ABS","","absolute, n_sect == NO_SECT",null,null],[17,"N_SECT","","defined in section number n_sect",null,null],[17,"N_PBUD","","prebound undefined (defined in a dylib)",null,null],[17,"N_INDR","","indirect",null,null],[17,"NO_SECT","","symbol is not in any section",null,null],[17,"MAX_SECT","","1 thru 255 inclusive",null,null],[17,"REFERENCE_TYPE","","",null,null],[17,"REFERENCE_FLAG_UNDEFINED_NON_LAZY","","",null,null],[17,"REFERENCE_FLAG_UNDEFINED_LAZY","","",null,null],[17,"REFERENCE_FLAG_DEFINED","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_DEFINED","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY","","",null,null],[17,"REFERENCED_DYNAMICALLY","","",null,null],[17,"SELF_LIBRARY_ORDINAL","","",null,null],[17,"MAX_LIBRARY_ORDINAL","","",null,null],[17,"DYNAMIC_LOOKUP_ORDINAL","","",null,null],[17,"EXECUTABLE_ORDINAL","","",null,null],[17,"N_NO_DEAD_STRIP","","symbol is not to be dead stripped",null,null],[17,"N_DESC_DISCARDED","","symbol is discarded",null,null],[17,"N_WEAK_REF","","symbol is weak referenced",null,null],[17,"N_WEAK_DEF","","coalesed symbol is a weak definition",null,null],[17,"N_REF_TO_WEAK","","reference to a weak symbol",null,null],[17,"N_ARM_THUMB_DEF","","symbol is a Thumb function (ARM)",null,null],[17,"N_SYMBOL_RESOLVER","","",null,null],[17,"N_ALT_ENTRY","","",null,null],[17,"N_GSYM","","global symbol: name,,NO_SECT,type,0",null,null],[17,"N_FNAME","","procedure name (f77 kludge): name,,NO_SECT,0,0",null,null],[17,"N_FUN","","procedure: name,,n_sect,linenumber,address",null,null],[17,"N_STSYM","","static symbol: name,,n_sect,type,address",null,null],[17,"N_LCSYM","",".lcomm symbol: name,,n_sect,type,address",null,null],[17,"N_BNSYM","","begin nsect sym: 0,,n_sect,0,address",null,null],[17,"N_AST","","AST file path: name,,NO_SECT,0,0",null,null],[17,"N_OPT","","emitted with gcc2_compiled and in gcc source",null,null],[17,"N_RSYM","","register sym: name,,NO_SECT,type,register",null,null],[17,"N_SLINE","","src line: 0,,n_sect,linenumber,address",null,null],[17,"N_ENSYM","","end nsect sym: 0,,n_sect,0,address",null,null],[17,"N_SSYM","","structure elt: name,,NO_SECT,type,struct_offset",null,null],[17,"N_SO","","source file name: name,,n_sect,0,address",null,null],[17,"N_OSO","","object file name: name,,0,0,st_mtime",null,null],[17,"N_LSYM","","local sym: name,,NO_SECT,type,offset",null,null],[17,"N_BINCL","","include file beginning: name,,NO_SECT,0,sum",null,null],[17,"N_SOL","","#included file name: name,,n_sect,0,address",null,null],[17,"N_PARAMS","","compiler parameters: name,,NO_SECT,0,0",null,null],[17,"N_VERSION","","compiler version: name,,NO_SECT,0,0",null,null],[17,"N_OLEVEL","","compiler -O level: name,,NO_SECT,0,0",null,null],[17,"N_PSYM","","parameter: name,,NO_SECT,type,offset",null,null],[17,"N_EINCL","","include file end: name,,NO_SECT,0,0",null,null],[17,"N_ENTRY","","alternate entry: name,,n_sect,linenumber,address",null,null],[17,"N_LBRAC","","left bracket: 0,,NO_SECT,nesting level,address",null,null],[17,"N_EXCL","","deleted include file: name,,NO_SECT,0,sum",null,null],[17,"N_RBRAC","","right bracket: 0,,NO_SECT,nesting level,address",null,null],[17,"N_BCOMM","","begin common: name,,NO_SECT,0,0",null,null],[17,"N_ECOMM","","end common: name,,n_sect,0,0",null,null],[17,"N_ECOML","","end common (local name): 0,,n_sect,0,address",null,null],[17,"N_LENG","","second stab entry with length information",null,null],[17,"N_PC","","global pascal symbol: name,,NO_SECT,subtype,line",null,null],[17,"R_ABS","","absolute relocation type for Mach-O files",null,null],[17,"R_SCATTERED","","Bit set in `Relocation::r_word0` for scattered relocations.",null,null],[17,"GENERIC_RELOC_VANILLA","","generic relocation as discribed above",null,null],[17,"GENERIC_RELOC_PAIR","","Only follows a GENERIC_RELOC_SECTDIFF",null,null],[17,"GENERIC_RELOC_SECTDIFF","","",null,null],[17,"GENERIC_RELOC_PB_LA_PTR","","prebound lazy pointer",null,null],[17,"GENERIC_RELOC_LOCAL_SECTDIFF","","",null,null],[17,"GENERIC_RELOC_TLV","","thread local variables",null,null],[17,"ARM_RELOC_VANILLA","","generic relocation as discribed above",null,null],[17,"ARM_RELOC_PAIR","","the second relocation entry of a pair",null,null],[17,"ARM_RELOC_SECTDIFF","","a PAIR follows with subtract symbol value",null,null],[17,"ARM_RELOC_LOCAL_SECTDIFF","","like ARM_RELOC_SECTDIFF, but the symbol referenced was…",null,null],[17,"ARM_RELOC_PB_LA_PTR","","prebound lazy pointer",null,null],[17,"ARM_RELOC_BR24","","24 bit branch displacement (to a word address)",null,null],[17,"ARM_THUMB_RELOC_BR22","","22 bit branch displacement (to a half-word address)",null,null],[17,"ARM_THUMB_32BIT_BRANCH","","obsolete - a thumb 32-bit branch instruction possibly…",null,null],[17,"ARM_RELOC_HALF","","",null,null],[17,"ARM_RELOC_HALF_SECTDIFF","","",null,null],[17,"ARM64_RELOC_UNSIGNED","","for pointers",null,null],[17,"ARM64_RELOC_SUBTRACTOR","","must be followed by a ARM64_RELOC_UNSIGNED",null,null],[17,"ARM64_RELOC_BRANCH26","","a B/BL instruction with 26-bit displacement",null,null],[17,"ARM64_RELOC_PAGE21","","pc-rel distance to page of target",null,null],[17,"ARM64_RELOC_PAGEOFF12","","offset within page, scaled by r_length",null,null],[17,"ARM64_RELOC_GOT_LOAD_PAGE21","","pc-rel distance to page of GOT slot",null,null],[17,"ARM64_RELOC_GOT_LOAD_PAGEOFF12","","offset within page of GOT slot, scaled by r_length",null,null],[17,"ARM64_RELOC_POINTER_TO_GOT","","for pointers to GOT slots",null,null],[17,"ARM64_RELOC_TLVP_LOAD_PAGE21","","pc-rel distance to page of TLVP slot",null,null],[17,"ARM64_RELOC_TLVP_LOAD_PAGEOFF12","","offset within page of TLVP slot, scaled by r_length",null,null],[17,"ARM64_RELOC_ADDEND","","must be followed by PAGE21 or PAGEOFF12",null,null],[17,"ARM64_RELOC_AUTHENTICATED_POINTER","","",null,null],[17,"PPC_RELOC_VANILLA","","generic relocation as discribed above",null,null],[17,"PPC_RELOC_PAIR","","the second relocation entry of a pair",null,null],[17,"PPC_RELOC_BR14","","14 bit branch displacement (to a word address)",null,null],[17,"PPC_RELOC_BR24","","24 bit branch displacement (to a word address)",null,null],[17,"PPC_RELOC_HI16","","a PAIR follows with the low half",null,null],[17,"PPC_RELOC_LO16","","a PAIR follows with the high half",null,null],[17,"PPC_RELOC_HA16","","Same as the RELOC_HI16 except the low 16 bits and the high…",null,null],[17,"PPC_RELOC_LO14","","Same as the LO16 except that the low 2 bits are not stored…",null,null],[17,"PPC_RELOC_SECTDIFF","","a PAIR follows with subtract symbol value",null,null],[17,"PPC_RELOC_PB_LA_PTR","","prebound lazy pointer",null,null],[17,"PPC_RELOC_HI16_SECTDIFF","","section difference forms of above.  a PAIR",null,null],[17,"PPC_RELOC_LO16_SECTDIFF","","follows these with subtract symbol value",null,null],[17,"PPC_RELOC_HA16_SECTDIFF","","",null,null],[17,"PPC_RELOC_JBSR","","",null,null],[17,"PPC_RELOC_LO14_SECTDIFF","","",null,null],[17,"PPC_RELOC_LOCAL_SECTDIFF","","like PPC_RELOC_SECTDIFF, but the symbol referenced was…",null,null],[17,"X86_64_RELOC_UNSIGNED","","for absolute addresses",null,null],[17,"X86_64_RELOC_SIGNED","","for signed 32-bit displacement",null,null],[17,"X86_64_RELOC_BRANCH","","a CALL/JMP instruction with 32-bit displacement",null,null],[17,"X86_64_RELOC_GOT_LOAD","","a MOVQ load of a GOT entry",null,null],[17,"X86_64_RELOC_GOT","","other GOT references",null,null],[17,"X86_64_RELOC_SUBTRACTOR","","must be followed by a X86_64_RELOC_UNSIGNED",null,null],[17,"X86_64_RELOC_SIGNED_1","","for signed 32-bit displacement with a -1 addend",null,null],[17,"X86_64_RELOC_SIGNED_2","","for signed 32-bit displacement with a -2 addend",null,null],[17,"X86_64_RELOC_SIGNED_4","","for signed 32-bit displacement with a -4 addend",null,null],[17,"X86_64_RELOC_TLV","","for thread local variables",null,null],[11,"r_scattered","","Determine whether this is a scattered relocation.",140,[[["u32"],["e"]],["bool"]]],[11,"info","","Return the fields of a plain relocation.",140,[[["e"]],["relocationinfo"]]],[11,"scattered_info","","Return the fields of a scattered relocation.",140,[[["e"]],["scatteredrelocationinfo"]]],[11,"relocation","","Combine the fields into a `Relocation`.",141,[[["endian"]],[["relocation"],["endian"]]]],[11,"relocation","","Combine the fields into a `Relocation`.",142,[[["endian"]],[["relocation"],["endian"]]]],[0,"pe","object","PE/COFF definitions.",null,null],[3,"ImageDosHeader","object::pe","DOS .EXE header",null,null],[12,"e_magic","","Magic number",143,null],[12,"e_cblp","","Bytes on last page of file",143,null],[12,"e_cp","","Pages in file",143,null],[12,"e_crlc","","Relocations",143,null],[12,"e_cparhdr","","Size of header in paragraphs",143,null],[12,"e_minalloc","","Minimum extra paragraphs needed",143,null],[12,"e_maxalloc","","Maximum extra paragraphs needed",143,null],[12,"e_ss","","Initial (relative) SS value",143,null],[12,"e_sp","","Initial SP value",143,null],[12,"e_csum","","Checksum",143,null],[12,"e_ip","","Initial IP value",143,null],[12,"e_cs","","Initial (relative) CS value",143,null],[12,"e_lfarlc","","File address of relocation table",143,null],[12,"e_ovno","","Overlay number",143,null],[12,"e_res","","Reserved words",143,null],[12,"e_oemid","","OEM identifier (for e_oeminfo)",143,null],[12,"e_oeminfo","","OEM information; e_oemid specific",143,null],[12,"e_res2","","Reserved words",143,null],[12,"e_lfanew","","File address of new exe header",143,null],[3,"ImageOs2Header","","OS/2 .EXE header",null,null],[12,"ne_magic","","Magic number",144,null],[12,"ne_ver","","Version number",144,null],[12,"ne_rev","","Revision number",144,null],[12,"ne_enttab","","Offset of Entry Table",144,null],[12,"ne_cbenttab","","Number of bytes in Entry Table",144,null],[12,"ne_crc","","Checksum of whole file",144,null],[12,"ne_flags","","Flag word",144,null],[12,"ne_autodata","","Automatic data segment number",144,null],[12,"ne_heap","","Initial heap allocation",144,null],[12,"ne_stack","","Initial stack allocation",144,null],[12,"ne_csip","","Initial CS:IP setting",144,null],[12,"ne_sssp","","Initial SS:SP setting",144,null],[12,"ne_cseg","","Count of file segments",144,null],[12,"ne_cmod","","Entries in Module Reference Table",144,null],[12,"ne_cbnrestab","","Size of non-resident name table",144,null],[12,"ne_segtab","","Offset of Segment Table",144,null],[12,"ne_rsrctab","","Offset of Resource Table",144,null],[12,"ne_restab","","Offset of resident name table",144,null],[12,"ne_modtab","","Offset of Module Reference Table",144,null],[12,"ne_imptab","","Offset of Imported Names Table",144,null],[12,"ne_nrestab","","Offset of Non-resident Names Table",144,null],[12,"ne_cmovent","","Count of movable entries",144,null],[12,"ne_align","","Segment alignment shift count",144,null],[12,"ne_cres","","Count of resource segments",144,null],[12,"ne_exetyp","","Target Operating system",144,null],[12,"ne_flagsothers","","Other .EXE flags",144,null],[12,"ne_pretthunks","","offset to return thunks",144,null],[12,"ne_psegrefbytes","","offset to segment ref. bytes",144,null],[12,"ne_swaparea","","Minimum code swap area size",144,null],[12,"ne_expver","","Expected Windows version number",144,null],[3,"ImageVxdHeader","","Windows VXD header",null,null],[12,"e32_magic","","Magic number",145,null],[12,"e32_border","","The byte ordering for the VXD",145,null],[12,"e32_worder","","The word ordering for the VXD",145,null],[12,"e32_level","","The EXE format level for now = 0",145,null],[12,"e32_cpu","","The CPU type",145,null],[12,"e32_os","","The OS type",145,null],[12,"e32_ver","","Module version",145,null],[12,"e32_mflags","","Module flags",145,null],[12,"e32_mpages","","Module # pages",145,null],[12,"e32_startobj","","Object # for instruction pointer",145,null],[12,"e32_eip","","Extended instruction pointer",145,null],[12,"e32_stackobj","","Object # for stack pointer",145,null],[12,"e32_esp","","Extended stack pointer",145,null],[12,"e32_pagesize","","VXD page size",145,null],[12,"e32_lastpagesize","","Last page size in VXD",145,null],[12,"e32_fixupsize","","Fixup section size",145,null],[12,"e32_fixupsum","","Fixup section checksum",145,null],[12,"e32_ldrsize","","Loader section size",145,null],[12,"e32_ldrsum","","Loader section checksum",145,null],[12,"e32_objtab","","Object table offset",145,null],[12,"e32_objcnt","","Number of objects in module",145,null],[12,"e32_objmap","","Object page map offset",145,null],[12,"e32_itermap","","Object iterated data map offset",145,null],[12,"e32_rsrctab","","Offset of Resource Table",145,null],[12,"e32_rsrccnt","","Number of resource entries",145,null],[12,"e32_restab","","Offset of resident name table",145,null],[12,"e32_enttab","","Offset of Entry Table",145,null],[12,"e32_dirtab","","Offset of Module Directive Table",145,null],[12,"e32_dircnt","","Number of module directives",145,null],[12,"e32_fpagetab","","Offset of Fixup Page Table",145,null],[12,"e32_frectab","","Offset of Fixup Record Table",145,null],[12,"e32_impmod","","Offset of Import Module Name Table",145,null],[12,"e32_impmodcnt","","Number of entries in Import Module Name Table",145,null],[12,"e32_impproc","","Offset of Import Procedure Name Table",145,null],[12,"e32_pagesum","","Offset of Per-Page Checksum Table",145,null],[12,"e32_datapage","","Offset of Enumerated Data Pages",145,null],[12,"e32_preload","","Number of preload pages",145,null],[12,"e32_nrestab","","Offset of Non-resident Names Table",145,null],[12,"e32_cbnrestab","","Size of Non-resident Name Table",145,null],[12,"e32_nressum","","Non-resident Name Table Checksum",145,null],[12,"e32_autodata","","Object # for automatic data object",145,null],[12,"e32_debuginfo","","Offset of the debugging information",145,null],[12,"e32_debuglen","","The length of the debugging info. in bytes",145,null],[12,"e32_instpreload","","Number of instance pages in preload section of VXD file",145,null],[12,"e32_instdemand","","Number of instance pages in demand load section of VXD file",145,null],[12,"e32_heapsize","","Size of heap - for 16-bit apps",145,null],[12,"e32_res3","","Reserved words",145,null],[12,"e32_winresoff","","",145,null],[12,"e32_winreslen","","",145,null],[12,"e32_devid","","Device ID for VxD",145,null],[12,"e32_ddkver","","DDK version for VxD",145,null],[3,"ImageFileHeader","","",null,null],[12,"machine","","",146,null],[12,"number_of_sections","","",146,null],[12,"time_date_stamp","","",146,null],[12,"pointer_to_symbol_table","","",146,null],[12,"number_of_symbols","","",146,null],[12,"size_of_optional_header","","",146,null],[12,"characteristics","","",146,null],[3,"ImageDataDirectory","","",null,null],[12,"virtual_address","","",147,null],[12,"size","","",147,null],[3,"ImageOptionalHeader32","","",null,null],[12,"magic","","",148,null],[12,"major_linker_version","","",148,null],[12,"minor_linker_version","","",148,null],[12,"size_of_code","","",148,null],[12,"size_of_initialized_data","","",148,null],[12,"size_of_uninitialized_data","","",148,null],[12,"address_of_entry_point","","",148,null],[12,"base_of_code","","",148,null],[12,"base_of_data","","",148,null],[12,"image_base","","",148,null],[12,"section_alignment","","",148,null],[12,"file_alignment","","",148,null],[12,"major_operating_system_version","","",148,null],[12,"minor_operating_system_version","","",148,null],[12,"major_image_version","","",148,null],[12,"minor_image_version","","",148,null],[12,"major_subsystem_version","","",148,null],[12,"minor_subsystem_version","","",148,null],[12,"win32_version_value","","",148,null],[12,"size_of_image","","",148,null],[12,"size_of_headers","","",148,null],[12,"check_sum","","",148,null],[12,"subsystem","","",148,null],[12,"dll_characteristics","","",148,null],[12,"size_of_stack_reserve","","",148,null],[12,"size_of_stack_commit","","",148,null],[12,"size_of_heap_reserve","","",148,null],[12,"size_of_heap_commit","","",148,null],[12,"loader_flags","","",148,null],[12,"number_of_rva_and_sizes","","",148,null],[3,"ImageRomOptionalHeader","","",null,null],[12,"magic","","",149,null],[12,"major_linker_version","","",149,null],[12,"minor_linker_version","","",149,null],[12,"size_of_code","","",149,null],[12,"size_of_initialized_data","","",149,null],[12,"size_of_uninitialized_data","","",149,null],[12,"address_of_entry_point","","",149,null],[12,"base_of_code","","",149,null],[12,"base_of_data","","",149,null],[12,"base_of_bss","","",149,null],[12,"gpr_mask","","",149,null],[12,"cpr_mask","","",149,null],[12,"gp_value","","",149,null],[3,"ImageOptionalHeader64","","",null,null],[12,"magic","","",150,null],[12,"major_linker_version","","",150,null],[12,"minor_linker_version","","",150,null],[12,"size_of_code","","",150,null],[12,"size_of_initialized_data","","",150,null],[12,"size_of_uninitialized_data","","",150,null],[12,"address_of_entry_point","","",150,null],[12,"base_of_code","","",150,null],[12,"image_base","","",150,null],[12,"section_alignment","","",150,null],[12,"file_alignment","","",150,null],[12,"major_operating_system_version","","",150,null],[12,"minor_operating_system_version","","",150,null],[12,"major_image_version","","",150,null],[12,"minor_image_version","","",150,null],[12,"major_subsystem_version","","",150,null],[12,"minor_subsystem_version","","",150,null],[12,"win32_version_value","","",150,null],[12,"size_of_image","","",150,null],[12,"size_of_headers","","",150,null],[12,"check_sum","","",150,null],[12,"subsystem","","",150,null],[12,"dll_characteristics","","",150,null],[12,"size_of_stack_reserve","","",150,null],[12,"size_of_stack_commit","","",150,null],[12,"size_of_heap_reserve","","",150,null],[12,"size_of_heap_commit","","",150,null],[12,"loader_flags","","",150,null],[12,"number_of_rva_and_sizes","","",150,null],[3,"ImageNtHeaders64","","",null,null],[12,"signature","","",151,null],[12,"file_header","","",151,null],[12,"optional_header","","",151,null],[3,"ImageNtHeaders32","","",null,null],[12,"signature","","",152,null],[12,"file_header","","",152,null],[12,"optional_header","","",152,null],[3,"ImageRomHeaders","","",null,null],[12,"file_header","","",153,null],[12,"optional_header","","",153,null],[3,"Guid","","",null,null],[12,"data1","","",154,null],[12,"data2","","",154,null],[12,"data3","","",154,null],[12,"data4","","",154,null],[3,"AnonObjectHeader","","Non-COFF Object file header",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",155,null],[12,"sig2","","Must be 0xffff",155,null],[12,"version","","= 1 (implies the ClsId field is present)",155,null],[12,"machine","","",155,null],[12,"time_date_stamp","","",155,null],[12,"class_id","","Used to invoke CoCreateInstance",155,null],[12,"size_of_data","","Size of data that follows the header",155,null],[3,"AnonObjectHeaderV2","","",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",156,null],[12,"sig2","","Must be 0xffff",156,null],[12,"version","","= 2 (implies the Flags field is present - otherwise V1)",156,null],[12,"machine","","",156,null],[12,"time_date_stamp","","",156,null],[12,"class_id","","Used to invoke CoCreateInstance",156,null],[12,"size_of_data","","Size of data that follows the header",156,null],[12,"flags","","0x1 -> contains metadata",156,null],[12,"meta_data_size","","Size of CLR metadata",156,null],[12,"meta_data_offset","","Offset of CLR metadata",156,null],[3,"AnonObjectHeaderBigobj","","",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",157,null],[12,"sig2","","Must be 0xffff",157,null],[12,"version","","= 2 (implies the Flags field is present)",157,null],[12,"machine","","Actual machine - IMAGE_FILE_MACHINE_xxx",157,null],[12,"time_date_stamp","","",157,null],[12,"class_id","","{D1BAA1C7-BAEE-4ba9-AF20-FAF66AA4DCB8}",157,null],[12,"size_of_data","","Size of data that follows the header",157,null],[12,"flags","","0x1 -> contains metadata",157,null],[12,"meta_data_size","","Size of CLR metadata",157,null],[12,"meta_data_offset","","Offset of CLR metadata",157,null],[12,"number_of_sections","","extended from WORD",157,null],[12,"pointer_to_symbol_table","","",157,null],[12,"number_of_symbols","","",157,null],[3,"ImageSectionHeader","","",null,null],[12,"name","","",158,null],[12,"virtual_size","","",158,null],[12,"virtual_address","","",158,null],[12,"size_of_raw_data","","",158,null],[12,"pointer_to_raw_data","","",158,null],[12,"pointer_to_relocations","","",158,null],[12,"pointer_to_linenumbers","","",158,null],[12,"number_of_relocations","","",158,null],[12,"number_of_linenumbers","","",158,null],[12,"characteristics","","",158,null],[3,"ImageSymbol","","",null,null],[12,"name","","If first 4 bytes are 0, then second 4 bytes are offset…",159,null],[12,"value","","",159,null],[12,"section_number","","",159,null],[12,"typ","","",159,null],[12,"storage_class","","",159,null],[12,"number_of_aux_symbols","","",159,null],[3,"ImageSymbolBytes","","",null,null],[12,"0","","",160,null],[3,"ImageSymbolEx","","",null,null],[12,"name","","If first 4 bytes are 0, then second 4 bytes are offset…",161,null],[12,"value","","",161,null],[12,"section_number","","",161,null],[12,"typ","","",161,null],[12,"storage_class","","",161,null],[12,"number_of_aux_symbols","","",161,null],[3,"ImageSymbolExBytes","","",null,null],[12,"0","","",162,null],[3,"ImageAuxSymbolTokenDef","","",null,null],[12,"aux_type","","IMAGE_AUX_SYMBOL_TYPE",163,null],[12,"reserved1","","Must be 0",163,null],[12,"symbol_table_index","","",163,null],[12,"reserved2","","Must be 0",163,null],[3,"ImageAuxSymbolFunction","","Auxilliary symbol format 1: function definitions.",null,null],[12,"tag_index","","",164,null],[12,"total_size","","",164,null],[12,"pointer_to_linenumber","","",164,null],[12,"pointer_to_next_function","","",164,null],[12,"unused","","",164,null],[3,"ImageAuxSymbolFunctionBeginEnd","","Auxilliary symbol format 2: .bf and .ef symbols.",null,null],[12,"unused1","","",165,null],[12,"linenumber","","declaration line number",165,null],[12,"unused2","","",165,null],[12,"pointer_to_next_function","","",165,null],[12,"unused3","","",165,null],[3,"ImageAuxSymbolWeak","","Auxilliary symbol format 3: weak externals.",null,null],[12,"weak_default_sym_index","","the weak extern default symbol index",166,null],[12,"weak_search_type","","",166,null],[3,"ImageAuxSymbolSection","","Auxilliary symbol format 5: sections.",null,null],[12,"length","","section length",167,null],[12,"number_of_relocations","","number of relocation entries",167,null],[12,"number_of_linenumbers","","number of line numbers",167,null],[12,"check_sum","","checksum for communal",167,null],[12,"number","","section number to associate with",167,null],[12,"selection","","communal selection type",167,null],[12,"reserved","","",167,null],[12,"high_number","","high bits of the section number",167,null],[3,"ImageAuxSymbolCrc","","",null,null],[12,"crc","","",168,null],[3,"ImageRelocation","","",null,null],[12,"virtual_address","","Also `RelocCount` when IMAGE_SCN_LNK_NRELOC_OVFL is set",169,null],[12,"symbol_table_index","","",169,null],[12,"typ","","",169,null],[3,"ImageLinenumber","","",null,null],[12,"symbol_table_index_or_virtual_address","","Symbol table index of function name if Linenumber is 0.…",170,null],[12,"linenumber","","Line number.",170,null],[3,"ImageBaseRelocation","","",null,null],[12,"virtual_address","","",171,null],[12,"size_of_block","","",171,null],[3,"ImageArchiveMemberHeader","","",null,null],[12,"name","","File member name - `/' terminated.",172,null],[12,"date","","File member date - decimal.",172,null],[12,"user_id","","File member user id - decimal.",172,null],[12,"group_id","","File member group id - decimal.",172,null],[12,"mode","","File member mode - octal.",172,null],[12,"size","","File member size - decimal.",172,null],[12,"end_header","","String to end header.",172,null],[3,"ImageExportDirectory","","",null,null],[12,"characteristics","","",173,null],[12,"time_date_stamp","","",173,null],[12,"major_version","","",173,null],[12,"minor_version","","",173,null],[12,"name","","",173,null],[12,"base","","",173,null],[12,"number_of_functions","","",173,null],[12,"number_of_names","","",173,null],[12,"address_of_functions","","RVA from base of image",173,null],[12,"address_of_names","","RVA from base of image",173,null],[12,"address_of_name_ordinals","","RVA from base of image",173,null],[3,"ImageImportByName","","",null,null],[12,"hint","","",174,null],[3,"ImageTlsDirectory64","","",null,null],[12,"start_address_of_raw_data","","",175,null],[12,"end_address_of_raw_data","","",175,null],[12,"address_of_index","","PDWORD",175,null],[12,"address_of_call_backs","","PIMAGE_TLS_CALLBACK *;",175,null],[12,"size_of_zero_fill","","",175,null],[12,"characteristics","","",175,null],[3,"ImageTlsDirectory32","","",null,null],[12,"start_address_of_raw_data","","",176,null],[12,"end_address_of_raw_data","","",176,null],[12,"address_of_index","","PDWORD",176,null],[12,"address_of_call_backs","","PIMAGE_TLS_CALLBACK *",176,null],[12,"size_of_zero_fill","","",176,null],[12,"characteristics","","",176,null],[3,"ImageImportDescriptor","","",null,null],[12,"characteristics_or_original_first_thunk","","0 for terminating null import descriptor RVA to original…",177,null],[12,"original_first_thunk","","",177,null],[12,"time_date_stamp","","0 if not bound, -1 if bound, and real date\\time stamp in…",177,null],[12,"forwarder_chain","","-1 if no forwarders",177,null],[12,"name","","",177,null],[12,"first_thunk","","RVA to IAT (if bound this IAT has actual addresses)",177,null],[3,"ImageBoundImportDescriptor","","",null,null],[12,"time_date_stamp","","",178,null],[12,"offset_module_name","","",178,null],[12,"number_of_module_forwarder_refs","","",178,null],[3,"ImageBoundForwarderRef","","",null,null],[12,"time_date_stamp","","",179,null],[12,"offset_module_name","","",179,null],[12,"reserved","","",179,null],[3,"ImageDelayloadDescriptor","","",null,null],[12,"attributes","","",180,null],[12,"dll_name_rva","","RVA to the name of the target library (NULL-terminate…",180,null],[12,"module_handle_rva","","RVA to the HMODULE caching location (PHMODULE)",180,null],[12,"import_address_table_rva","","RVA to the start of the IAT (PIMAGE_THUNK_DATA)",180,null],[12,"import_name_table_rva","","RVA to the start of the name table…",180,null],[12,"bound_import_address_table_rva","","RVA to an optional bound IAT",180,null],[12,"unload_information_table_rva","","RVA to an optional unload info table",180,null],[12,"time_date_stamp","","0 if not bound, otherwise, date/time of the target DLL",180,null],[3,"ImageResourceDirectory","","",null,null],[12,"characteristics","","",181,null],[12,"time_date_stamp","","",181,null],[12,"major_version","","",181,null],[12,"minor_version","","",181,null],[12,"number_of_named_entries","","",181,null],[12,"number_of_id_entries","","",181,null],[3,"ImageResourceDirectoryEntry","","",null,null],[12,"name_or_id","","",182,null],[12,"offset_to_data_or_directory","","",182,null],[3,"ImageResourceDirectoryString","","",null,null],[12,"length","","",183,null],[3,"ImageResourceDirStringU","","",null,null],[12,"length","","",184,null],[3,"ImageResourceDataEntry","","",null,null],[12,"offset_to_data","","",185,null],[12,"size","","",185,null],[12,"code_page","","",185,null],[12,"reserved","","",185,null],[3,"ImageLoadConfigCodeIntegrity","","",null,null],[12,"flags","","Flags to indicate if CI information is available, etc.",186,null],[12,"catalog","","0xFFFF means not available",186,null],[12,"catalog_offset","","",186,null],[12,"reserved","","Additional bitmask to be defined later",186,null],[3,"ImageDynamicRelocationTable","","",null,null],[12,"version","","",187,null],[12,"size","","",187,null],[3,"ImageDynamicRelocation32","","",null,null],[12,"symbol","","",188,null],[12,"base_reloc_size","","",188,null],[3,"ImageDynamicRelocation64","","",null,null],[12,"symbol","","",189,null],[12,"base_reloc_size","","",189,null],[3,"ImageDynamicRelocation32V2","","",null,null],[12,"header_size","","",190,null],[12,"fixup_info_size","","",190,null],[12,"symbol","","",190,null],[12,"symbol_group","","",190,null],[12,"flags","","",190,null],[3,"ImageDynamicRelocation64V2","","",null,null],[12,"header_size","","",191,null],[12,"fixup_info_size","","",191,null],[12,"symbol","","",191,null],[12,"symbol_group","","",191,null],[12,"flags","","",191,null],[3,"ImagePrologueDynamicRelocationHeader","","",null,null],[12,"prologue_byte_count","","",192,null],[3,"ImageEpilogueDynamicRelocationHeader","","",null,null],[12,"epilogue_count","","",193,null],[12,"epilogue_byte_count","","",193,null],[12,"branch_descriptor_element_size","","",193,null],[12,"branch_descriptor_count","","",193,null],[3,"ImageLoadConfigDirectory32","","",null,null],[12,"size","","",194,null],[12,"time_date_stamp","","",194,null],[12,"major_version","","",194,null],[12,"minor_version","","",194,null],[12,"global_flags_clear","","",194,null],[12,"global_flags_set","","",194,null],[12,"critical_section_default_timeout","","",194,null],[12,"de_commit_free_block_threshold","","",194,null],[12,"de_commit_total_free_threshold","","",194,null],[12,"lock_prefix_table","","VA",194,null],[12,"maximum_allocation_size","","",194,null],[12,"virtual_memory_threshold","","",194,null],[12,"process_heap_flags","","",194,null],[12,"process_affinity_mask","","",194,null],[12,"csd_version","","",194,null],[12,"dependent_load_flags","","",194,null],[12,"edit_list","","VA",194,null],[12,"security_cookie","","VA",194,null],[12,"sehandler_table","","VA",194,null],[12,"sehandler_count","","",194,null],[12,"guard_cf_check_function_pointer","","VA",194,null],[12,"guard_cf_dispatch_function_pointer","","VA",194,null],[12,"guard_cf_function_table","","VA",194,null],[12,"guard_cf_function_count","","",194,null],[12,"guard_flags","","",194,null],[12,"code_integrity","","",194,null],[12,"guard_address_taken_iat_entry_table","","VA",194,null],[12,"guard_address_taken_iat_entry_count","","",194,null],[12,"guard_long_jump_target_table","","VA",194,null],[12,"guard_long_jump_target_count","","",194,null],[12,"dynamic_value_reloc_table","","VA",194,null],[12,"chpe_metadata_pointer","","",194,null],[12,"guard_rf_failure_routine","","VA",194,null],[12,"guard_rf_failure_routine_function_pointer","","VA",194,null],[12,"dynamic_value_reloc_table_offset","","",194,null],[12,"dynamic_value_reloc_table_section","","",194,null],[12,"reserved2","","",194,null],[12,"guard_rf_verify_stack_pointer_function_pointer","","VA",194,null],[12,"hot_patch_table_offset","","",194,null],[12,"reserved3","","",194,null],[12,"enclave_configuration_pointer","","VA",194,null],[12,"volatile_metadata_pointer","","VA",194,null],[3,"ImageLoadConfigDirectory64","","",null,null],[12,"size","","",195,null],[12,"time_date_stamp","","",195,null],[12,"major_version","","",195,null],[12,"minor_version","","",195,null],[12,"global_flags_clear","","",195,null],[12,"global_flags_set","","",195,null],[12,"critical_section_default_timeout","","",195,null],[12,"de_commit_free_block_threshold","","",195,null],[12,"de_commit_total_free_threshold","","",195,null],[12,"lock_prefix_table","","VA",195,null],[12,"maximum_allocation_size","","",195,null],[12,"virtual_memory_threshold","","",195,null],[12,"process_affinity_mask","","",195,null],[12,"process_heap_flags","","",195,null],[12,"csd_version","","",195,null],[12,"dependent_load_flags","","",195,null],[12,"edit_list","","VA",195,null],[12,"security_cookie","","VA",195,null],[12,"sehandler_table","","VA",195,null],[12,"sehandler_count","","",195,null],[12,"guard_cf_check_function_pointer","","VA",195,null],[12,"guard_cf_dispatch_function_pointer","","VA",195,null],[12,"guard_cf_function_table","","VA",195,null],[12,"guard_cf_function_count","","",195,null],[12,"guard_flags","","",195,null],[12,"code_integrity","","",195,null],[12,"guard_address_taken_iat_entry_table","","VA",195,null],[12,"guard_address_taken_iat_entry_count","","",195,null],[12,"guard_long_jump_target_table","","VA",195,null],[12,"guard_long_jump_target_count","","",195,null],[12,"dynamic_value_reloc_table","","VA",195,null],[12,"chpe_metadata_pointer","","VA",195,null],[12,"guard_rf_failure_routine","","VA",195,null],[12,"guard_rf_failure_routine_function_pointer","","VA",195,null],[12,"dynamic_value_reloc_table_offset","","",195,null],[12,"dynamic_value_reloc_table_section","","",195,null],[12,"reserved2","","",195,null],[12,"guard_rf_verify_stack_pointer_function_pointer","","VA",195,null],[12,"hot_patch_table_offset","","",195,null],[12,"reserved3","","",195,null],[12,"enclave_configuration_pointer","","VA",195,null],[12,"volatile_metadata_pointer","","VA",195,null],[3,"ImageHotPatchInfo","","",null,null],[12,"version","","",196,null],[12,"size","","",196,null],[12,"sequence_number","","",196,null],[12,"base_image_list","","",196,null],[12,"base_image_count","","",196,null],[12,"buffer_offset","","Version 2 and later",196,null],[12,"extra_patch_size","","Version 3 and later",196,null],[3,"ImageHotPatchBase","","",null,null],[12,"sequence_number","","",197,null],[12,"flags","","",197,null],[12,"original_time_date_stamp","","",197,null],[12,"original_check_sum","","",197,null],[12,"code_integrity_info","","",197,null],[12,"code_integrity_size","","",197,null],[12,"patch_table","","",197,null],[12,"buffer_offset","","Version 2 and later",197,null],[3,"ImageHotPatchHashes","","",null,null],[12,"sha256","","",198,null],[12,"sha1","","",198,null],[3,"ImageArmRuntimeFunctionEntry","","",null,null],[12,"begin_address","","",199,null],[12,"unwind_data","","",199,null],[3,"ImageArm64RuntimeFunctionEntry","","",null,null],[12,"begin_address","","",200,null],[12,"unwind_data","","",200,null],[3,"ImageAlpha64RuntimeFunctionEntry","","",null,null],[12,"begin_address","","",201,null],[12,"end_address","","",201,null],[12,"exception_handler","","",201,null],[12,"handler_data","","",201,null],[12,"prolog_end_address","","",201,null],[3,"ImageAlphaRuntimeFunctionEntry","","",null,null],[12,"begin_address","","",202,null],[12,"end_address","","",202,null],[12,"exception_handler","","",202,null],[12,"handler_data","","",202,null],[12,"prolog_end_address","","",202,null],[3,"ImageRuntimeFunctionEntry","","",null,null],[12,"begin_address","","",203,null],[12,"end_address","","",203,null],[12,"unwind_info_address_or_data","","",203,null],[3,"ImageEnclaveConfig32","","",null,null],[12,"size","","",204,null],[12,"minimum_required_config_size","","",204,null],[12,"policy_flags","","",204,null],[12,"number_of_imports","","",204,null],[12,"import_list","","",204,null],[12,"import_entry_size","","",204,null],[12,"family_id","","",204,null],[12,"image_id","","",204,null],[12,"image_version","","",204,null],[12,"security_version","","",204,null],[12,"enclave_size","","",204,null],[12,"number_of_threads","","",204,null],[12,"enclave_flags","","",204,null],[3,"ImageEnclaveConfig64","","",null,null],[12,"size","","",205,null],[12,"minimum_required_config_size","","",205,null],[12,"policy_flags","","",205,null],[12,"number_of_imports","","",205,null],[12,"import_list","","",205,null],[12,"import_entry_size","","",205,null],[12,"family_id","","",205,null],[12,"image_id","","",205,null],[12,"image_version","","",205,null],[12,"security_version","","",205,null],[12,"enclave_size","","",205,null],[12,"number_of_threads","","",205,null],[12,"enclave_flags","","",205,null],[3,"ImageEnclaveImport","","",null,null],[12,"match_type","","",206,null],[12,"minimum_security_version","","",206,null],[12,"unique_or_author_id","","",206,null],[12,"family_id","","",206,null],[12,"image_id","","",206,null],[12,"import_name","","",206,null],[12,"reserved","","",206,null],[3,"ImageDebugDirectory","","",null,null],[12,"characteristics","","",207,null],[12,"time_date_stamp","","",207,null],[12,"major_version","","",207,null],[12,"minor_version","","",207,null],[12,"typ","","",207,null],[12,"size_of_data","","",207,null],[12,"address_of_raw_data","","",207,null],[12,"pointer_to_raw_data","","",207,null],[3,"ImageCoffSymbolsHeader","","",null,null],[12,"number_of_symbols","","",208,null],[12,"lva_to_first_symbol","","",208,null],[12,"number_of_linenumbers","","",208,null],[12,"lva_to_first_linenumber","","",208,null],[12,"rva_to_first_byte_of_code","","",208,null],[12,"rva_to_last_byte_of_code","","",208,null],[12,"rva_to_first_byte_of_data","","",208,null],[12,"rva_to_last_byte_of_data","","",208,null],[3,"ImageDebugMisc","","",null,null],[12,"data_type","","type of misc data, see defines",209,null],[12,"length","","total length of record, rounded to four byte multiple.",209,null],[12,"unicode","","TRUE if data is unicode string",209,null],[12,"reserved","","",209,null],[3,"ImageFunctionEntry","","",null,null],[12,"starting_address","","",210,null],[12,"ending_address","","",210,null],[12,"end_of_prologue","","",210,null],[3,"ImageFunctionEntry64","","",null,null],[12,"starting_address","","",211,null],[12,"ending_address","","",211,null],[12,"end_of_prologue_or_unwind_info_address","","",211,null],[3,"ImageSeparateDebugHeader","","",null,null],[12,"signature","","",212,null],[12,"flags","","",212,null],[12,"machine","","",212,null],[12,"characteristics","","",212,null],[12,"time_date_stamp","","",212,null],[12,"check_sum","","",212,null],[12,"image_base","","",212,null],[12,"size_of_image","","",212,null],[12,"number_of_sections","","",212,null],[12,"exported_names_size","","",212,null],[12,"debug_directory_size","","",212,null],[12,"section_alignment","","",212,null],[12,"reserved","","",212,null],[3,"NonPagedDebugInfo","","",null,null],[12,"signature","","",213,null],[12,"flags","","",213,null],[12,"size","","",213,null],[12,"machine","","",213,null],[12,"characteristics","","",213,null],[12,"time_date_stamp","","",213,null],[12,"check_sum","","",213,null],[12,"size_of_image","","",213,null],[12,"image_base","","",213,null],[3,"ImageArchitectureEntry","","",null,null],[12,"fixup_inst_rva","","RVA of instruction to fixup",214,null],[12,"new_inst","","fixup instruction (see alphaops.h)",214,null],[3,"ImportObjectHeader","","",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",215,null],[12,"sig2","","Must be IMPORT_OBJECT_HDR_SIG2.",215,null],[12,"version","","",215,null],[12,"machine","","",215,null],[12,"time_date_stamp","","Time/date stamp",215,null],[12,"size_of_data","","particularly useful for incremental links",215,null],[12,"ordinal_or_hint","","if grf & IMPORT_OBJECT_ORDINAL",215,null],[12,"name_type","","",215,null],[3,"ImageCor20Header","","",null,null],[12,"cb","","",216,null],[12,"major_runtime_version","","",216,null],[12,"minor_runtime_version","","",216,null],[12,"meta_data","","",216,null],[12,"flags","","",216,null],[12,"entry_point_token_or_rva","","",216,null],[12,"resources","","",216,null],[12,"strong_name_signature","","",216,null],[12,"code_manager_table","","",216,null],[12,"vtable_fixups","","",216,null],[12,"export_address_table_jumps","","",216,null],[12,"managed_native_header","","",216,null],[6,"ClsId","","",null,null],[17,"IMAGE_DOS_SIGNATURE","","MZ",null,null],[17,"IMAGE_OS2_SIGNATURE","","NE",null,null],[17,"IMAGE_OS2_SIGNATURE_LE","","LE",null,null],[17,"IMAGE_VXD_SIGNATURE","","LE",null,null],[17,"IMAGE_NT_SIGNATURE","","PE00",null,null],[17,"IMAGE_SIZEOF_FILE_HEADER","","",null,null],[17,"IMAGE_FILE_RELOCS_STRIPPED","","Relocation info stripped from file.",null,null],[17,"IMAGE_FILE_EXECUTABLE_IMAGE","","File is executable (i.e. no unresolved external…",null,null],[17,"IMAGE_FILE_LINE_NUMS_STRIPPED","","Line nunbers stripped from file.",null,null],[17,"IMAGE_FILE_LOCAL_SYMS_STRIPPED","","Local symbols stripped from file.",null,null],[17,"IMAGE_FILE_AGGRESIVE_WS_TRIM","","Aggressively trim working set",null,null],[17,"IMAGE_FILE_LARGE_ADDRESS_AWARE","","App can handle >2gb addresses",null,null],[17,"IMAGE_FILE_BYTES_REVERSED_LO","","Bytes of machine word are reversed.",null,null],[17,"IMAGE_FILE_32BIT_MACHINE","","32 bit word machine.",null,null],[17,"IMAGE_FILE_DEBUG_STRIPPED","","Debugging info stripped from file in .DBG file",null,null],[17,"IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP","","If Image is on removable media, copy and run from the swap…",null,null],[17,"IMAGE_FILE_NET_RUN_FROM_SWAP","","If Image is on Net, copy and run from the swap file.",null,null],[17,"IMAGE_FILE_SYSTEM","","System File.",null,null],[17,"IMAGE_FILE_DLL","","File is a DLL.",null,null],[17,"IMAGE_FILE_UP_SYSTEM_ONLY","","File should only be run on a UP machine",null,null],[17,"IMAGE_FILE_BYTES_REVERSED_HI","","Bytes of machine word are reversed.",null,null],[17,"IMAGE_FILE_MACHINE_UNKNOWN","","",null,null],[17,"IMAGE_FILE_MACHINE_TARGET_HOST","","Useful for indicating we want to interact with the host…",null,null],[17,"IMAGE_FILE_MACHINE_I386","","Intel 386.",null,null],[17,"IMAGE_FILE_MACHINE_R3000","","MIPS little-endian, 0x160 big-endian",null,null],[17,"IMAGE_FILE_MACHINE_R4000","","MIPS little-endian",null,null],[17,"IMAGE_FILE_MACHINE_R10000","","MIPS little-endian",null,null],[17,"IMAGE_FILE_MACHINE_WCEMIPSV2","","MIPS little-endian WCE v2",null,null],[17,"IMAGE_FILE_MACHINE_ALPHA","","Alpha_AXP",null,null],[17,"IMAGE_FILE_MACHINE_SH3","","SH3 little-endian",null,null],[17,"IMAGE_FILE_MACHINE_SH3DSP","","",null,null],[17,"IMAGE_FILE_MACHINE_SH3E","","SH3E little-endian",null,null],[17,"IMAGE_FILE_MACHINE_SH4","","SH4 little-endian",null,null],[17,"IMAGE_FILE_MACHINE_SH5","","SH5",null,null],[17,"IMAGE_FILE_MACHINE_ARM","","ARM Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_THUMB","","ARM Thumb/Thumb-2 Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_ARMNT","","ARM Thumb-2 Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_AM33","","",null,null],[17,"IMAGE_FILE_MACHINE_POWERPC","","IBM PowerPC Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_POWERPCFP","","",null,null],[17,"IMAGE_FILE_MACHINE_IA64","","Intel 64",null,null],[17,"IMAGE_FILE_MACHINE_MIPS16","","MIPS",null,null],[17,"IMAGE_FILE_MACHINE_ALPHA64","","ALPHA64",null,null],[17,"IMAGE_FILE_MACHINE_MIPSFPU","","MIPS",null,null],[17,"IMAGE_FILE_MACHINE_MIPSFPU16","","MIPS",null,null],[17,"IMAGE_FILE_MACHINE_AXP64","","",null,null],[17,"IMAGE_FILE_MACHINE_TRICORE","","Infineon",null,null],[17,"IMAGE_FILE_MACHINE_CEF","","",null,null],[17,"IMAGE_FILE_MACHINE_EBC","","EFI Byte Code",null,null],[17,"IMAGE_FILE_MACHINE_AMD64","","AMD64 (K8)",null,null],[17,"IMAGE_FILE_MACHINE_M32R","","M32R little-endian",null,null],[17,"IMAGE_FILE_MACHINE_ARM64","","ARM64 Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_CEE","","",null,null],[17,"IMAGE_NUMBEROF_DIRECTORY_ENTRIES","","",null,null],[17,"IMAGE_NT_OPTIONAL_HDR32_MAGIC","","",null,null],[17,"IMAGE_NT_OPTIONAL_HDR64_MAGIC","","",null,null],[17,"IMAGE_ROM_OPTIONAL_HDR_MAGIC","","",null,null],[17,"IMAGE_SUBSYSTEM_UNKNOWN","","Unknown subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_NATIVE","","Image doesn't require a subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_GUI","","Image runs in the Windows GUI subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_CUI","","Image runs in the Windows character subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_OS2_CUI","","image runs in the OS/2 character subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_POSIX_CUI","","image runs in the Posix character subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_NATIVE_WINDOWS","","image is a native Win9x driver.",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_CE_GUI","","Image runs in the Windows CE subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_EFI_APPLICATION","","",null,null],[17,"IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER","","",null,null],[17,"IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER","","",null,null],[17,"IMAGE_SUBSYSTEM_EFI_ROM","","",null,null],[17,"IMAGE_SUBSYSTEM_XBOX","","",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION","","",null,null],[17,"IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG","","",null,null],[17,"IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA","","Image can handle a high entropy 64-bit virtual address…",null,null],[17,"IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE","","DLL can move.",null,null],[17,"IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY","","Code Integrity Image",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NX_COMPAT","","Image is NX compatible",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NO_ISOLATION","","Image understands isolation and doesn't want it",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NO_SEH","","Image does not use SEH. No SE handler may reside in this…",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NO_BIND","","Do not bind this image.",null,null],[17,"IMAGE_DLLCHARACTERISTICS_APPCONTAINER","","Image should execute in an AppContainer",null,null],[17,"IMAGE_DLLCHARACTERISTICS_WDM_DRIVER","","Driver uses WDM model",null,null],[17,"IMAGE_DLLCHARACTERISTICS_GUARD_CF","","Image supports Control Flow Guard.",null,null],[17,"IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE","","",null,null],[17,"IMAGE_DIRECTORY_ENTRY_EXPORT","","Export Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_IMPORT","","Import Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_RESOURCE","","Resource Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_EXCEPTION","","Exception Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_SECURITY","","Security Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_BASERELOC","","Base Relocation Table",null,null],[17,"IMAGE_DIRECTORY_ENTRY_DEBUG","","Debug Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_ARCHITECTURE","","Architecture Specific Data",null,null],[17,"IMAGE_DIRECTORY_ENTRY_GLOBALPTR","","RVA of GP",null,null],[17,"IMAGE_DIRECTORY_ENTRY_TLS","","TLS Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG","","Load Configuration Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT","","Bound Import Directory in headers",null,null],[17,"IMAGE_DIRECTORY_ENTRY_IAT","","Import Address Table",null,null],[17,"IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT","","Delay Load Import Descriptors",null,null],[17,"IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","","COM Runtime descriptor",null,null],[17,"IMAGE_SIZEOF_SHORT_NAME","","",null,null],[17,"IMAGE_SIZEOF_SECTION_HEADER","","",null,null],[17,"IMAGE_SCN_TYPE_NO_PAD","","Reserved.",null,null],[17,"IMAGE_SCN_CNT_CODE","","Section contains code.",null,null],[17,"IMAGE_SCN_CNT_INITIALIZED_DATA","","Section contains initialized data.",null,null],[17,"IMAGE_SCN_CNT_UNINITIALIZED_DATA","","Section contains uninitialized data.",null,null],[17,"IMAGE_SCN_LNK_OTHER","","Reserved.",null,null],[17,"IMAGE_SCN_LNK_INFO","","Section contains comments or some other type of information.",null,null],[17,"IMAGE_SCN_LNK_REMOVE","","Section contents will not become part of image.",null,null],[17,"IMAGE_SCN_LNK_COMDAT","","Section contents comdat.",null,null],[17,"IMAGE_SCN_NO_DEFER_SPEC_EXC","","Reset speculative exceptions handling bits in the TLB…",null,null],[17,"IMAGE_SCN_GPREL","","Section content can be accessed relative to GP",null,null],[17,"IMAGE_SCN_MEM_FARDATA","","",null,null],[17,"IMAGE_SCN_MEM_PURGEABLE","","",null,null],[17,"IMAGE_SCN_MEM_16BIT","","",null,null],[17,"IMAGE_SCN_MEM_LOCKED","","",null,null],[17,"IMAGE_SCN_MEM_PRELOAD","","",null,null],[17,"IMAGE_SCN_ALIGN_1BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_2BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_4BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_8BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_16BYTES","","Default alignment if no others are specified.",null,null],[17,"IMAGE_SCN_ALIGN_32BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_64BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_128BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_256BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_512BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_1024BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_2048BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_4096BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_8192BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_MASK","","",null,null],[17,"IMAGE_SCN_LNK_NRELOC_OVFL","","Section contains extended relocations.",null,null],[17,"IMAGE_SCN_MEM_DISCARDABLE","","Section can be discarded.",null,null],[17,"IMAGE_SCN_MEM_NOT_CACHED","","Section is not cachable.",null,null],[17,"IMAGE_SCN_MEM_NOT_PAGED","","Section is not pageable.",null,null],[17,"IMAGE_SCN_MEM_SHARED","","Section is shareable.",null,null],[17,"IMAGE_SCN_MEM_EXECUTE","","Section is executable.",null,null],[17,"IMAGE_SCN_MEM_READ","","Section is readable.",null,null],[17,"IMAGE_SCN_MEM_WRITE","","Section is writeable.",null,null],[17,"IMAGE_SCN_SCALE_INDEX","","Tls index is scaled",null,null],[17,"IMAGE_SIZEOF_SYMBOL","","",null,null],[17,"IMAGE_SIZEOF_SYMBOL_EX","","",null,null],[17,"IMAGE_SYM_UNDEFINED","","Symbol is undefined or is common.",null,null],[17,"IMAGE_SYM_ABSOLUTE","","Symbol is an absolute value.",null,null],[17,"IMAGE_SYM_DEBUG","","Symbol is a special debug item.",null,null],[17,"IMAGE_SYM_SECTION_MAX","","Values 0xFF00-0xFFFF are special",null,null],[17,"IMAGE_SYM_SECTION_MAX_EX","","",null,null],[17,"IMAGE_SYM_TYPE_NULL","","no type.",null,null],[17,"IMAGE_SYM_TYPE_VOID","","",null,null],[17,"IMAGE_SYM_TYPE_CHAR","","type character.",null,null],[17,"IMAGE_SYM_TYPE_SHORT","","type short integer.",null,null],[17,"IMAGE_SYM_TYPE_INT","","",null,null],[17,"IMAGE_SYM_TYPE_LONG","","",null,null],[17,"IMAGE_SYM_TYPE_FLOAT","","",null,null],[17,"IMAGE_SYM_TYPE_DOUBLE","","",null,null],[17,"IMAGE_SYM_TYPE_STRUCT","","",null,null],[17,"IMAGE_SYM_TYPE_UNION","","",null,null],[17,"IMAGE_SYM_TYPE_ENUM","","enumeration.",null,null],[17,"IMAGE_SYM_TYPE_MOE","","member of enumeration.",null,null],[17,"IMAGE_SYM_TYPE_BYTE","","",null,null],[17,"IMAGE_SYM_TYPE_WORD","","",null,null],[17,"IMAGE_SYM_TYPE_UINT","","",null,null],[17,"IMAGE_SYM_TYPE_DWORD","","",null,null],[17,"IMAGE_SYM_TYPE_PCODE","","",null,null],[17,"IMAGE_SYM_DTYPE_NULL","","no derived type.",null,null],[17,"IMAGE_SYM_DTYPE_POINTER","","pointer.",null,null],[17,"IMAGE_SYM_DTYPE_FUNCTION","","function.",null,null],[17,"IMAGE_SYM_DTYPE_ARRAY","","array.",null,null],[17,"IMAGE_SYM_CLASS_END_OF_FUNCTION","","",null,null],[17,"IMAGE_SYM_CLASS_NULL","","",null,null],[17,"IMAGE_SYM_CLASS_AUTOMATIC","","",null,null],[17,"IMAGE_SYM_CLASS_EXTERNAL","","",null,null],[17,"IMAGE_SYM_CLASS_STATIC","","",null,null],[17,"IMAGE_SYM_CLASS_REGISTER","","",null,null],[17,"IMAGE_SYM_CLASS_EXTERNAL_DEF","","",null,null],[17,"IMAGE_SYM_CLASS_LABEL","","",null,null],[17,"IMAGE_SYM_CLASS_UNDEFINED_LABEL","","",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_STRUCT","","",null,null],[17,"IMAGE_SYM_CLASS_ARGUMENT","","",null,null],[17,"IMAGE_SYM_CLASS_STRUCT_TAG","","",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_UNION","","",null,null],[17,"IMAGE_SYM_CLASS_UNION_TAG","","",null,null],[17,"IMAGE_SYM_CLASS_TYPE_DEFINITION","","",null,null],[17,"IMAGE_SYM_CLASS_UNDEFINED_STATIC","","",null,null],[17,"IMAGE_SYM_CLASS_ENUM_TAG","","",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_ENUM","","",null,null],[17,"IMAGE_SYM_CLASS_REGISTER_PARAM","","",null,null],[17,"IMAGE_SYM_CLASS_BIT_FIELD","","",null,null],[17,"IMAGE_SYM_CLASS_FAR_EXTERNAL","","",null,null],[17,"IMAGE_SYM_CLASS_BLOCK","","",null,null],[17,"IMAGE_SYM_CLASS_FUNCTION","","",null,null],[17,"IMAGE_SYM_CLASS_END_OF_STRUCT","","",null,null],[17,"IMAGE_SYM_CLASS_FILE","","",null,null],[17,"IMAGE_SYM_CLASS_SECTION","","",null,null],[17,"IMAGE_SYM_CLASS_WEAK_EXTERNAL","","",null,null],[17,"IMAGE_SYM_CLASS_CLR_TOKEN","","",null,null],[17,"N_BTMASK","","",null,null],[17,"N_TMASK","","",null,null],[17,"N_TMASK1","","",null,null],[17,"N_TMASK2","","",null,null],[17,"N_BTSHFT","","",null,null],[17,"N_TSHIFT","","",null,null],[17,"IMAGE_SYM_DTYPE_SHIFT","","",null,null],[17,"IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF","","",null,null],[17,"IMAGE_COMDAT_SELECT_NODUPLICATES","","",null,null],[17,"IMAGE_COMDAT_SELECT_ANY","","",null,null],[17,"IMAGE_COMDAT_SELECT_SAME_SIZE","","",null,null],[17,"IMAGE_COMDAT_SELECT_EXACT_MATCH","","",null,null],[17,"IMAGE_COMDAT_SELECT_ASSOCIATIVE","","",null,null],[17,"IMAGE_COMDAT_SELECT_LARGEST","","",null,null],[17,"IMAGE_COMDAT_SELECT_NEWEST","","",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY","","",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_LIBRARY","","",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_ALIAS","","",null,null],[17,"IMAGE_WEAK_EXTERN_ANTI_DEPENDENCY","","",null,null],[17,"IMAGE_REL_I386_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_I386_DIR16","","Direct 16-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_I386_REL16","","PC-relative 16-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_I386_DIR32","","Direct 32-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_I386_DIR32NB","","Direct 32-bit reference to the symbols virtual address,…",null,null],[17,"IMAGE_REL_I386_SEG12","","Direct 16-bit reference to the segment-selector bits of a…",null,null],[17,"IMAGE_REL_I386_SECTION","","",null,null],[17,"IMAGE_REL_I386_SECREL","","",null,null],[17,"IMAGE_REL_I386_TOKEN","","clr token",null,null],[17,"IMAGE_REL_I386_SECREL7","","7 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_I386_REL32","","PC-relative 32-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_MIPS_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_MIPS_REFHALF","","",null,null],[17,"IMAGE_REL_MIPS_REFWORD","","",null,null],[17,"IMAGE_REL_MIPS_JMPADDR","","",null,null],[17,"IMAGE_REL_MIPS_REFHI","","",null,null],[17,"IMAGE_REL_MIPS_REFLO","","",null,null],[17,"IMAGE_REL_MIPS_GPREL","","",null,null],[17,"IMAGE_REL_MIPS_LITERAL","","",null,null],[17,"IMAGE_REL_MIPS_SECTION","","",null,null],[17,"IMAGE_REL_MIPS_SECREL","","",null,null],[17,"IMAGE_REL_MIPS_SECRELLO","","Low 16-bit section relative referemce (used for >32k TLS)",null,null],[17,"IMAGE_REL_MIPS_SECRELHI","","High 16-bit section relative reference (used for >32k TLS)",null,null],[17,"IMAGE_REL_MIPS_TOKEN","","clr token",null,null],[17,"IMAGE_REL_MIPS_JMPADDR16","","",null,null],[17,"IMAGE_REL_MIPS_REFWORDNB","","",null,null],[17,"IMAGE_REL_MIPS_PAIR","","",null,null],[17,"IMAGE_REL_ALPHA_ABSOLUTE","","",null,null],[17,"IMAGE_REL_ALPHA_REFLONG","","",null,null],[17,"IMAGE_REL_ALPHA_REFQUAD","","",null,null],[17,"IMAGE_REL_ALPHA_GPREL32","","",null,null],[17,"IMAGE_REL_ALPHA_LITERAL","","",null,null],[17,"IMAGE_REL_ALPHA_LITUSE","","",null,null],[17,"IMAGE_REL_ALPHA_GPDISP","","",null,null],[17,"IMAGE_REL_ALPHA_BRADDR","","",null,null],[17,"IMAGE_REL_ALPHA_HINT","","",null,null],[17,"IMAGE_REL_ALPHA_INLINE_REFLONG","","",null,null],[17,"IMAGE_REL_ALPHA_REFHI","","",null,null],[17,"IMAGE_REL_ALPHA_REFLO","","",null,null],[17,"IMAGE_REL_ALPHA_PAIR","","",null,null],[17,"IMAGE_REL_ALPHA_MATCH","","",null,null],[17,"IMAGE_REL_ALPHA_SECTION","","",null,null],[17,"IMAGE_REL_ALPHA_SECREL","","",null,null],[17,"IMAGE_REL_ALPHA_REFLONGNB","","",null,null],[17,"IMAGE_REL_ALPHA_SECRELLO","","Low 16-bit section relative reference",null,null],[17,"IMAGE_REL_ALPHA_SECRELHI","","High 16-bit section relative reference",null,null],[17,"IMAGE_REL_ALPHA_REFQ3","","High 16 bits of 48 bit reference",null,null],[17,"IMAGE_REL_ALPHA_REFQ2","","Middle 16 bits of 48 bit reference",null,null],[17,"IMAGE_REL_ALPHA_REFQ1","","Low 16 bits of 48 bit reference",null,null],[17,"IMAGE_REL_ALPHA_GPRELLO","","Low 16-bit GP relative reference",null,null],[17,"IMAGE_REL_ALPHA_GPRELHI","","High 16-bit GP relative reference",null,null],[17,"IMAGE_REL_PPC_ABSOLUTE","","NOP",null,null],[17,"IMAGE_REL_PPC_ADDR64","","64-bit address",null,null],[17,"IMAGE_REL_PPC_ADDR32","","32-bit address",null,null],[17,"IMAGE_REL_PPC_ADDR24","","26-bit address, shifted left 2 (branch absolute)",null,null],[17,"IMAGE_REL_PPC_ADDR16","","16-bit address",null,null],[17,"IMAGE_REL_PPC_ADDR14","","16-bit address, shifted left 2 (load doubleword)",null,null],[17,"IMAGE_REL_PPC_REL24","","26-bit PC-relative offset, shifted left 2 (branch relative)",null,null],[17,"IMAGE_REL_PPC_REL14","","16-bit PC-relative offset, shifted left 2 (br cond relative)",null,null],[17,"IMAGE_REL_PPC_TOCREL16","","16-bit offset from TOC base",null,null],[17,"IMAGE_REL_PPC_TOCREL14","","16-bit offset from TOC base, shifted left 2 (load…",null,null],[17,"IMAGE_REL_PPC_ADDR32NB","","32-bit addr w/o image base",null,null],[17,"IMAGE_REL_PPC_SECREL","","va of containing section (as in an image sectionhdr)",null,null],[17,"IMAGE_REL_PPC_SECTION","","sectionheader number",null,null],[17,"IMAGE_REL_PPC_IFGLUE","","substitute TOC restore instruction iff symbol is glue code",null,null],[17,"IMAGE_REL_PPC_IMGLUE","","symbol is glue code; virtual address is TOC restore…",null,null],[17,"IMAGE_REL_PPC_SECREL16","","va of containing section (limited to 16 bits)",null,null],[17,"IMAGE_REL_PPC_REFHI","","",null,null],[17,"IMAGE_REL_PPC_REFLO","","",null,null],[17,"IMAGE_REL_PPC_PAIR","","",null,null],[17,"IMAGE_REL_PPC_SECRELLO","","Low 16-bit section relative reference (used for >32k TLS)",null,null],[17,"IMAGE_REL_PPC_SECRELHI","","High 16-bit section relative reference (used for >32k TLS)",null,null],[17,"IMAGE_REL_PPC_GPREL","","",null,null],[17,"IMAGE_REL_PPC_TOKEN","","clr token",null,null],[17,"IMAGE_REL_PPC_TYPEMASK","","mask to isolate above values in IMAGE_RELOCATION.Type",null,null],[17,"IMAGE_REL_PPC_NEG","","subtract reloc value rather than adding it",null,null],[17,"IMAGE_REL_PPC_BRTAKEN","","fix branch prediction bit to predict branch taken",null,null],[17,"IMAGE_REL_PPC_BRNTAKEN","","fix branch prediction bit to predict branch not taken",null,null],[17,"IMAGE_REL_PPC_TOCDEFN","","toc slot defined in file (or, data in toc)",null,null],[17,"IMAGE_REL_SH3_ABSOLUTE","","No relocation",null,null],[17,"IMAGE_REL_SH3_DIRECT16","","16 bit direct",null,null],[17,"IMAGE_REL_SH3_DIRECT32","","32 bit direct",null,null],[17,"IMAGE_REL_SH3_DIRECT8","","8 bit direct, -128..255",null,null],[17,"IMAGE_REL_SH3_DIRECT8_WORD","","8 bit direct .W (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT8_LONG","","8 bit direct .L (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT4","","4 bit direct (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT4_WORD","","4 bit direct .W (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT4_LONG","","4 bit direct .L (0 ext.)",null,null],[17,"IMAGE_REL_SH3_PCREL8_WORD","","8 bit PC relative .W",null,null],[17,"IMAGE_REL_SH3_PCREL8_LONG","","8 bit PC relative .L",null,null],[17,"IMAGE_REL_SH3_PCREL12_WORD","","12 LSB PC relative .W",null,null],[17,"IMAGE_REL_SH3_STARTOF_SECTION","","Start of EXE section",null,null],[17,"IMAGE_REL_SH3_SIZEOF_SECTION","","Size of EXE section",null,null],[17,"IMAGE_REL_SH3_SECTION","","Section table index",null,null],[17,"IMAGE_REL_SH3_SECREL","","Offset within section",null,null],[17,"IMAGE_REL_SH3_DIRECT32_NB","","32 bit direct not based",null,null],[17,"IMAGE_REL_SH3_GPREL4_LONG","","GP-relative addressing",null,null],[17,"IMAGE_REL_SH3_TOKEN","","clr token",null,null],[17,"IMAGE_REL_SHM_PCRELPT","","Offset from current instruction in longwords if not…",null,null],[17,"IMAGE_REL_SHM_REFLO","","Low bits of 32-bit address",null,null],[17,"IMAGE_REL_SHM_REFHALF","","High bits of 32-bit address",null,null],[17,"IMAGE_REL_SHM_RELLO","","Low bits of relative reference",null,null],[17,"IMAGE_REL_SHM_RELHALF","","High bits of relative reference",null,null],[17,"IMAGE_REL_SHM_PAIR","","offset operand for relocation",null,null],[17,"IMAGE_REL_SH_NOMODE","","relocation ignores section mode",null,null],[17,"IMAGE_REL_ARM_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_ARM_ADDR32","","32 bit address",null,null],[17,"IMAGE_REL_ARM_ADDR32NB","","32 bit address w/o image base",null,null],[17,"IMAGE_REL_ARM_BRANCH24","","24 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_ARM_BRANCH11","","Thumb: 2 11 bit offsets",null,null],[17,"IMAGE_REL_ARM_TOKEN","","clr token",null,null],[17,"IMAGE_REL_ARM_GPREL12","","GP-relative addressing (ARM)",null,null],[17,"IMAGE_REL_ARM_GPREL7","","GP-relative addressing (Thumb)",null,null],[17,"IMAGE_REL_ARM_BLX24","","",null,null],[17,"IMAGE_REL_ARM_BLX11","","",null,null],[17,"IMAGE_REL_ARM_SECTION","","Section table index",null,null],[17,"IMAGE_REL_ARM_SECREL","","Offset within section",null,null],[17,"IMAGE_REL_ARM_MOV32A","","ARM: MOVW/MOVT",null,null],[17,"IMAGE_REL_ARM_MOV32","","ARM: MOVW/MOVT (deprecated)",null,null],[17,"IMAGE_REL_ARM_MOV32T","","Thumb: MOVW/MOVT",null,null],[17,"IMAGE_REL_THUMB_MOV32","","Thumb: MOVW/MOVT (deprecated)",null,null],[17,"IMAGE_REL_ARM_BRANCH20T","","Thumb: 32-bit conditional B",null,null],[17,"IMAGE_REL_THUMB_BRANCH20","","Thumb: 32-bit conditional B (deprecated)",null,null],[17,"IMAGE_REL_ARM_BRANCH24T","","Thumb: 32-bit B or BL",null,null],[17,"IMAGE_REL_THUMB_BRANCH24","","Thumb: 32-bit B or BL (deprecated)",null,null],[17,"IMAGE_REL_ARM_BLX23T","","Thumb: BLX immediate",null,null],[17,"IMAGE_REL_THUMB_BLX23","","Thumb: BLX immediate (deprecated)",null,null],[17,"IMAGE_REL_AM_ABSOLUTE","","",null,null],[17,"IMAGE_REL_AM_ADDR32","","",null,null],[17,"IMAGE_REL_AM_ADDR32NB","","",null,null],[17,"IMAGE_REL_AM_CALL32","","",null,null],[17,"IMAGE_REL_AM_FUNCINFO","","",null,null],[17,"IMAGE_REL_AM_REL32_1","","",null,null],[17,"IMAGE_REL_AM_REL32_2","","",null,null],[17,"IMAGE_REL_AM_SECREL","","",null,null],[17,"IMAGE_REL_AM_SECTION","","",null,null],[17,"IMAGE_REL_AM_TOKEN","","",null,null],[17,"IMAGE_REL_ARM64_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_ARM64_ADDR32","","32 bit address. Review! do we need it?",null,null],[17,"IMAGE_REL_ARM64_ADDR32NB","","32 bit address w/o image base (RVA: for Data/PData/XData)",null,null],[17,"IMAGE_REL_ARM64_BRANCH26","","26 bit offset << 2 & sign ext. for B & BL",null,null],[17,"IMAGE_REL_ARM64_PAGEBASE_REL21","","ADRP",null,null],[17,"IMAGE_REL_ARM64_REL21","","ADR",null,null],[17,"IMAGE_REL_ARM64_PAGEOFFSET_12A","","ADD/ADDS (immediate) with zero shift, for page offset",null,null],[17,"IMAGE_REL_ARM64_PAGEOFFSET_12L","","LDR (indexed, unsigned immediate), for page offset",null,null],[17,"IMAGE_REL_ARM64_SECREL","","Offset within section",null,null],[17,"IMAGE_REL_ARM64_SECREL_LOW12A","","ADD/ADDS (immediate) with zero shift, for bit 0:11 of…",null,null],[17,"IMAGE_REL_ARM64_SECREL_HIGH12A","","ADD/ADDS (immediate) with zero shift, for bit 12:23 of…",null,null],[17,"IMAGE_REL_ARM64_SECREL_LOW12L","","LDR (indexed, unsigned immediate), for bit 0:11 of section…",null,null],[17,"IMAGE_REL_ARM64_TOKEN","","",null,null],[17,"IMAGE_REL_ARM64_SECTION","","Section table index",null,null],[17,"IMAGE_REL_ARM64_ADDR64","","64 bit address",null,null],[17,"IMAGE_REL_ARM64_BRANCH19","","19 bit offset << 2 & sign ext. for conditional B",null,null],[17,"IMAGE_REL_AMD64_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_AMD64_ADDR64","","64-bit address (VA).",null,null],[17,"IMAGE_REL_AMD64_ADDR32","","32-bit address (VA).",null,null],[17,"IMAGE_REL_AMD64_ADDR32NB","","32-bit address w/o image base (RVA).",null,null],[17,"IMAGE_REL_AMD64_REL32","","32-bit relative address from byte following reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_1","","32-bit relative address from byte distance 1 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_2","","32-bit relative address from byte distance 2 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_3","","32-bit relative address from byte distance 3 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_4","","32-bit relative address from byte distance 4 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_5","","32-bit relative address from byte distance 5 from reloc",null,null],[17,"IMAGE_REL_AMD64_SECTION","","Section index",null,null],[17,"IMAGE_REL_AMD64_SECREL","","32 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_AMD64_SECREL7","","7 bit unsigned offset from base of section containing target",null,null],[17,"IMAGE_REL_AMD64_TOKEN","","32 bit metadata token",null,null],[17,"IMAGE_REL_AMD64_SREL32","","32 bit signed span-dependent value emitted into object",null,null],[17,"IMAGE_REL_AMD64_PAIR","","",null,null],[17,"IMAGE_REL_AMD64_SSPAN32","","32 bit signed span-dependent value applied at link time",null,null],[17,"IMAGE_REL_AMD64_EHANDLER","","",null,null],[17,"IMAGE_REL_AMD64_IMPORT_BR","","Indirect branch to an import",null,null],[17,"IMAGE_REL_AMD64_IMPORT_CALL","","Indirect call to an import",null,null],[17,"IMAGE_REL_AMD64_CFG_BR","","Indirect branch to a CFG check",null,null],[17,"IMAGE_REL_AMD64_CFG_BR_REX","","Indirect branch to a CFG check, with REX.W prefix",null,null],[17,"IMAGE_REL_AMD64_CFG_CALL","","Indirect call to a CFG check",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR","","Indirect branch to a target in RAX (no CFG)",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR_REX","","Indirect branch to a target in RAX, with REX.W prefix (no…",null,null],[17,"IMAGE_REL_AMD64_INDIR_CALL","","Indirect call to a target in RAX (no CFG)",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_FIRST","","Indirect branch for a switch table using Reg 0 (RAX)",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_LAST","","Indirect branch for a switch table using Reg 15 (R15)",null,null],[17,"IMAGE_REL_IA64_ABSOLUTE","","",null,null],[17,"IMAGE_REL_IA64_IMM14","","",null,null],[17,"IMAGE_REL_IA64_IMM22","","",null,null],[17,"IMAGE_REL_IA64_IMM64","","",null,null],[17,"IMAGE_REL_IA64_DIR32","","",null,null],[17,"IMAGE_REL_IA64_DIR64","","",null,null],[17,"IMAGE_REL_IA64_PCREL21B","","",null,null],[17,"IMAGE_REL_IA64_PCREL21M","","",null,null],[17,"IMAGE_REL_IA64_PCREL21F","","",null,null],[17,"IMAGE_REL_IA64_GPREL22","","",null,null],[17,"IMAGE_REL_IA64_LTOFF22","","",null,null],[17,"IMAGE_REL_IA64_SECTION","","",null,null],[17,"IMAGE_REL_IA64_SECREL22","","",null,null],[17,"IMAGE_REL_IA64_SECREL64I","","",null,null],[17,"IMAGE_REL_IA64_SECREL32","","",null,null],[17,"IMAGE_REL_IA64_DIR32NB","","",null,null],[17,"IMAGE_REL_IA64_SREL14","","",null,null],[17,"IMAGE_REL_IA64_SREL22","","",null,null],[17,"IMAGE_REL_IA64_SREL32","","",null,null],[17,"IMAGE_REL_IA64_UREL32","","",null,null],[17,"IMAGE_REL_IA64_PCREL60X","","This is always a BRL and never converted",null,null],[17,"IMAGE_REL_IA64_PCREL60B","","If possible, convert to MBB bundle with NOP.B in slot 1",null,null],[17,"IMAGE_REL_IA64_PCREL60F","","If possible, convert to MFB bundle with NOP.F in slot 1",null,null],[17,"IMAGE_REL_IA64_PCREL60I","","If possible, convert to MIB bundle with NOP.I in slot 1",null,null],[17,"IMAGE_REL_IA64_PCREL60M","","If possible, convert to MMB bundle with NOP.M in slot 1",null,null],[17,"IMAGE_REL_IA64_IMMGPREL64","","",null,null],[17,"IMAGE_REL_IA64_TOKEN","","clr token",null,null],[17,"IMAGE_REL_IA64_GPREL32","","",null,null],[17,"IMAGE_REL_IA64_ADDEND","","",null,null],[17,"IMAGE_REL_CEF_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_CEF_ADDR32","","32-bit address (VA).",null,null],[17,"IMAGE_REL_CEF_ADDR64","","64-bit address (VA).",null,null],[17,"IMAGE_REL_CEF_ADDR32NB","","32-bit address w/o image base (RVA).",null,null],[17,"IMAGE_REL_CEF_SECTION","","Section index",null,null],[17,"IMAGE_REL_CEF_SECREL","","32 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_CEF_TOKEN","","32 bit metadata token",null,null],[17,"IMAGE_REL_CEE_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_CEE_ADDR32","","32-bit address (VA).",null,null],[17,"IMAGE_REL_CEE_ADDR64","","64-bit address (VA).",null,null],[17,"IMAGE_REL_CEE_ADDR32NB","","32-bit address w/o image base (RVA).",null,null],[17,"IMAGE_REL_CEE_SECTION","","Section index",null,null],[17,"IMAGE_REL_CEE_SECREL","","32 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_CEE_TOKEN","","32 bit metadata token",null,null],[17,"IMAGE_REL_M32R_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_M32R_ADDR32","","32 bit address",null,null],[17,"IMAGE_REL_M32R_ADDR32NB","","32 bit address w/o image base",null,null],[17,"IMAGE_REL_M32R_ADDR24","","24 bit address",null,null],[17,"IMAGE_REL_M32R_GPREL16","","GP relative addressing",null,null],[17,"IMAGE_REL_M32R_PCREL24","","24 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_M32R_PCREL16","","16 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_M32R_PCREL8","","8 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_M32R_REFHALF","","16 MSBs",null,null],[17,"IMAGE_REL_M32R_REFHI","","16 MSBs; adj for LSB sign ext.",null,null],[17,"IMAGE_REL_M32R_REFLO","","16 LSBs",null,null],[17,"IMAGE_REL_M32R_PAIR","","Link HI and LO",null,null],[17,"IMAGE_REL_M32R_SECTION","","Section table index",null,null],[17,"IMAGE_REL_M32R_SECREL32","","32 bit section relative reference",null,null],[17,"IMAGE_REL_M32R_TOKEN","","clr token",null,null],[17,"IMAGE_REL_EBC_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_EBC_ADDR32NB","","32 bit address w/o image base",null,null],[17,"IMAGE_REL_EBC_REL32","","32-bit relative address from byte following reloc",null,null],[17,"IMAGE_REL_EBC_SECTION","","Section table index",null,null],[17,"IMAGE_REL_EBC_SECREL","","Offset within section",null,null],[17,"EMARCH_ENC_I17_IMM7B_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM7B_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM7B_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_I_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_I_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_I_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_I_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_P_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_P_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_P_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_P_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_INST_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_INST_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"IMAGE_REL_BASED_ABSOLUTE","","",null,null],[17,"IMAGE_REL_BASED_HIGH","","",null,null],[17,"IMAGE_REL_BASED_LOW","","",null,null],[17,"IMAGE_REL_BASED_HIGHLOW","","",null,null],[17,"IMAGE_REL_BASED_HIGHADJ","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_5","","",null,null],[17,"IMAGE_REL_BASED_RESERVED","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_7","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_8","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_9","","",null,null],[17,"IMAGE_REL_BASED_DIR64","","",null,null],[17,"IMAGE_REL_BASED_IA64_IMM64","","",null,null],[17,"IMAGE_REL_BASED_MIPS_JMPADDR","","",null,null],[17,"IMAGE_REL_BASED_MIPS_JMPADDR16","","",null,null],[17,"IMAGE_REL_BASED_ARM_MOV32","","",null,null],[17,"IMAGE_REL_BASED_THUMB_MOV32","","",null,null],[17,"IMAGE_ARCHIVE_START_SIZE","","",null,null],[17,"IMAGE_ARCHIVE_START","","",null,null],[17,"IMAGE_ARCHIVE_END","","",null,null],[17,"IMAGE_ARCHIVE_PAD","","",null,null],[17,"IMAGE_ARCHIVE_LINKER_MEMBER","","",null,null],[17,"IMAGE_ARCHIVE_LONGNAMES_MEMBER","","",null,null],[17,"IMAGE_ARCHIVE_HYBRIDMAP_MEMBER","","",null,null],[17,"IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR","","",null,null],[17,"IMAGE_DELAYLOAD_RVA_BASED","","Delay load version 2 flag for…",null,null],[17,"IMAGE_RESOURCE_NAME_IS_STRING","","",null,null],[17,"IMAGE_RESOURCE_DATA_IS_DIRECTORY","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_RF_PROLOGUE","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_RF_EPILOGUE","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_IMPORT_CONTROL_TRANSFER","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_INDIR_CONTROL_TRANSFER","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_SWITCHTABLE_BRANCH","","",null,null],[17,"IMAGE_HOT_PATCH_BASE_OBLIGATORY","","",null,null],[17,"IMAGE_HOT_PATCH_BASE_CAN_ROLL_BACK","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_INVERSE","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_OBLIGATORY","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_RESERVED","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_TYPE","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_SOURCE_RVA","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_TARGET_RVA","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_SIZE","","",null,null],[17,"IMAGE_HOT_PATCH_NONE","","",null,null],[17,"IMAGE_HOT_PATCH_FUNCTION","","",null,null],[17,"IMAGE_HOT_PATCH_ABSOLUTE","","",null,null],[17,"IMAGE_HOT_PATCH_REL32","","",null,null],[17,"IMAGE_HOT_PATCH_CALL_TARGET","","",null,null],[17,"IMAGE_HOT_PATCH_INDIRECT","","",null,null],[17,"IMAGE_HOT_PATCH_NO_CALL_TARGET","","",null,null],[17,"IMAGE_HOT_PATCH_DYNAMIC_VALUE","","",null,null],[17,"IMAGE_GUARD_CF_INSTRUMENTED","","Module performs control flow integrity checks using…",null,null],[17,"IMAGE_GUARD_CFW_INSTRUMENTED","","Module performs control flow and write integrity checks",null,null],[17,"IMAGE_GUARD_CF_FUNCTION_TABLE_PRESENT","","Module contains valid control flow target metadata",null,null],[17,"IMAGE_GUARD_SECURITY_COOKIE_UNUSED","","Module does not make use of the /GS security cookie",null,null],[17,"IMAGE_GUARD_PROTECT_DELAYLOAD_IAT","","Module supports read only delay load IAT",null,null],[17,"IMAGE_GUARD_DELAYLOAD_IAT_IN_ITS_OWN_SECTION","","Delayload import table in its own .didat section (with…",null,null],[17,"IMAGE_GUARD_CF_EXPORT_SUPPRESSION_INFO_PRESENT","","Module contains suppressed export information.",null,null],[17,"IMAGE_GUARD_CF_ENABLE_EXPORT_SUPPRESSION","","Module enables suppression of exports",null,null],[17,"IMAGE_GUARD_CF_LONGJUMP_TABLE_PRESENT","","Module contains longjmp target information",null,null],[17,"IMAGE_GUARD_RF_INSTRUMENTED","","Module contains return flow instrumentation and metadata",null,null],[17,"IMAGE_GUARD_RF_ENABLE","","Module requests that the OS enable return flow protection",null,null],[17,"IMAGE_GUARD_RF_STRICT","","Module requests that the OS enable return flow protection…",null,null],[17,"IMAGE_GUARD_RETPOLINE_PRESENT","","Module was built with retpoline support",null,null],[17,"IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK","","Stride of Guard CF function table encoded in these bits…",null,null],[17,"IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_SHIFT","","Shift to right-justify Guard CF function table stride",null,null],[17,"IMAGE_GUARD_FLAG_FID_SUPPRESSED","","The containing GFID entry is suppressed",null,null],[17,"IMAGE_GUARD_FLAG_EXPORT_SUPPRESSED","","The containing GFID entry is export suppressed",null,null],[17,"IMAGE_ENCLAVE_LONG_ID_LENGTH","","",null,null],[17,"IMAGE_ENCLAVE_SHORT_ID_LENGTH","","",null,null],[17,"IMAGE_ENCLAVE_POLICY_DEBUGGABLE","","",null,null],[17,"IMAGE_ENCLAVE_FLAG_PRIMARY_IMAGE","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_NONE","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_UNIQUE_ID","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_AUTHOR_ID","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_FAMILY_ID","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_IMAGE_ID","","",null,null],[17,"IMAGE_DEBUG_TYPE_UNKNOWN","","",null,null],[17,"IMAGE_DEBUG_TYPE_COFF","","",null,null],[17,"IMAGE_DEBUG_TYPE_CODEVIEW","","",null,null],[17,"IMAGE_DEBUG_TYPE_FPO","","",null,null],[17,"IMAGE_DEBUG_TYPE_MISC","","",null,null],[17,"IMAGE_DEBUG_TYPE_EXCEPTION","","",null,null],[17,"IMAGE_DEBUG_TYPE_FIXUP","","",null,null],[17,"IMAGE_DEBUG_TYPE_OMAP_TO_SRC","","",null,null],[17,"IMAGE_DEBUG_TYPE_OMAP_FROM_SRC","","",null,null],[17,"IMAGE_DEBUG_TYPE_BORLAND","","",null,null],[17,"IMAGE_DEBUG_TYPE_RESERVED10","","",null,null],[17,"IMAGE_DEBUG_TYPE_CLSID","","",null,null],[17,"IMAGE_DEBUG_TYPE_VC_FEATURE","","",null,null],[17,"IMAGE_DEBUG_TYPE_POGO","","",null,null],[17,"IMAGE_DEBUG_TYPE_ILTCG","","",null,null],[17,"IMAGE_DEBUG_TYPE_MPX","","",null,null],[17,"IMAGE_DEBUG_TYPE_REPRO","","",null,null],[17,"FRAME_FPO","","",null,null],[17,"FRAME_TRAP","","",null,null],[17,"FRAME_TSS","","",null,null],[17,"FRAME_NONFPO","","",null,null],[17,"IMAGE_DEBUG_MISC_EXENAME","","",null,null],[17,"IMAGE_SEPARATE_DEBUG_SIGNATURE","","",null,null],[17,"NON_PAGED_DEBUG_SIGNATURE","","",null,null],[17,"IMAGE_SEPARATE_DEBUG_FLAGS_MASK","","",null,null],[17,"IMAGE_SEPARATE_DEBUG_MISMATCH","","when DBG was updated, the old checksum didn't match.",null,null],[17,"IMPORT_OBJECT_HDR_SIG2","","",null,null],[17,"IMPORT_OBJECT_CODE","","",null,null],[17,"IMPORT_OBJECT_DATA","","",null,null],[17,"IMPORT_OBJECT_CONST","","",null,null],[17,"IMPORT_OBJECT_ORDINAL","","Import by ordinal",null,null],[17,"IMPORT_OBJECT_NAME","","Import name == public symbol name.",null,null],[17,"IMPORT_OBJECT_NAME_NO_PREFIX","","Import name == public symbol name skipping leading ?, @,…",null,null],[17,"IMPORT_OBJECT_NAME_UNDECORATE","","Import name == public symbol name skipping leading ?, @,…",null,null],[17,"IMPORT_OBJECT_NAME_EXPORTAS","","Import name == a name is explicitly provided after the DLL…",null,null],[17,"COMIMAGE_FLAGS_ILONLY","","",null,null],[17,"COMIMAGE_FLAGS_32BITREQUIRED","","",null,null],[17,"COMIMAGE_FLAGS_IL_LIBRARY","","",null,null],[17,"COMIMAGE_FLAGS_STRONGNAMESIGNED","","",null,null],[17,"COMIMAGE_FLAGS_NATIVE_ENTRYPOINT","","",null,null],[17,"COMIMAGE_FLAGS_TRACKDEBUGDATA","","",null,null],[17,"COMIMAGE_FLAGS_32BITPREFERRED","","",null,null],[17,"COR_VERSION_MAJOR_V2","","",null,null],[17,"COR_VERSION_MAJOR","","",null,null],[17,"COR_VERSION_MINOR","","",null,null],[17,"COR_DELETED_NAME_LENGTH","","",null,null],[17,"COR_VTABLEGAP_NAME_LENGTH","","",null,null],[17,"NATIVE_TYPE_MAX_CB","","",null,null],[17,"COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE","","",null,null],[17,"IMAGE_COR_MIH_METHODRVA","","",null,null],[17,"IMAGE_COR_MIH_EHRVA","","",null,null],[17,"IMAGE_COR_MIH_BASICBLOCK","","",null,null],[17,"COR_VTABLE_32BIT","","V-table slots are 32-bits in size.",null,null],[17,"COR_VTABLE_64BIT","","V-table slots are 64-bits in size.",null,null],[17,"COR_VTABLE_FROM_UNMANAGED","","If set, transition from unmanaged.",null,null],[17,"COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN","","If set, transition from unmanaged with keeping the current…",null,null],[17,"COR_VTABLE_CALL_MOST_DERIVED","","Call most derived method described by",null,null],[17,"IMAGE_COR_EATJ_THUNK_SIZE","","Size of a jump thunk reserved range.",null,null],[17,"MAX_CLASS_NAME","","",null,null],[17,"MAX_PACKAGE_NAME","","",null,null],[11,"base_type","","",159,[[["self"]],["u16"]]],[11,"derived_type","","",159,[[["self"]],["u16"]]],[11,"base_type","","",161,[[["self"]],["u16"]]],[11,"derived_type","","",161,[[["self"]],["u16"]]],[11,"from","object","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"from","object::endian","",217,[[["t"]],["t"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"into","","",217,[[],["u"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"into","","",218,[[],["u"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,[[["self"],["t"]]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"from","object::pod","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"from","object::read","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into_iter","","",219,[[],["i"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"into","","",219,[[],["u"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"into","","",220,[[],["u"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into_iter","","",221,[[],["i"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"into","","",221,[[],["u"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"into","","",222,[[],["u"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into_iter","","",223,[[],["i"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"into","","",223,[[],["u"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into_iter","","",224,[[],["i"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"into","","",224,[[],["u"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"into","","",225,[[],["u"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,[[["self"],["t"]]]],[11,"to_string","","",225,[[["self"]],["string"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"from","object::read::coff","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into_iter","","",226,[[],["i"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"into","","",226,[[],["u"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"into","","",227,[[],["u"]]],[11,"try_into","","",227,[[],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"type_id","","",227,[[["self"]],["typeid"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into_iter","","",228,[[],["i"]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"into","","",228,[[],["u"]]],[11,"try_into","","",228,[[],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"type_id","","",228,[[["self"]],["typeid"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"into","","",229,[[],["u"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into_iter","","",230,[[],["i"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"into","","",230,[[],["u"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into_iter","","",231,[[],["i"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"into","","",231,[[],["u"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"from","object::read::elf","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into_iter","","",232,[[],["i"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"into","","",232,[[],["u"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"into","","",233,[[],["u"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into_iter","","",234,[[],["i"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"into","","",234,[[],["u"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"into","","",235,[[],["u"]]],[11,"try_into","","",235,[[],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"type_id","","",235,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into_iter","","",236,[[],["i"]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"into","","",236,[[],["u"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into_iter","","",237,[[],["i"]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"into","","",237,[[],["u"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"into","","",238,[[],["u"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","object::read::macho","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into_iter","","",239,[[],["i"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"into","","",239,[[],["u"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"into","","",240,[[],["u"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into_iter","","",241,[[],["i"]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"into","","",241,[[],["u"]]],[11,"try_into","","",241,[[],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"type_id","","",241,[[["self"]],["typeid"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"into","","",242,[[],["u"]]],[11,"try_into","","",242,[[],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"type_id","","",242,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into_iter","","",243,[[],["i"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"into","","",243,[[],["u"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into_iter","","",244,[[],["i"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"into","","",244,[[],["u"]]],[11,"try_into","","",244,[[],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"type_id","","",244,[[["self"]],["typeid"]]],[11,"from","object::read::pe","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into_iter","","",245,[[],["i"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"into","","",245,[[],["u"]]],[11,"try_into","","",245,[[],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"type_id","","",245,[[["self"]],["typeid"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"into","","",246,[[],["u"]]],[11,"try_into","","",246,[[],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"type_id","","",246,[[["self"]],["typeid"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into_iter","","",247,[[],["i"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"into","","",247,[[],["u"]]],[11,"try_into","","",247,[[],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"type_id","","",247,[[["self"]],["typeid"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"into","","",248,[[],["u"]]],[11,"try_into","","",248,[[],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"type_id","","",248,[[["self"]],["typeid"]]],[11,"from","","",249,[[["t"]],["t"]]],[11,"into_iter","","",249,[[],["i"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"into","","",249,[[],["u"]]],[11,"try_into","","",249,[[],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"type_id","","",249,[[["self"]],["typeid"]]],[11,"from","object::elf","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"into","","",250,[[],["u"]]],[11,"try_into","","",250,[[],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"type_id","","",250,[[["self"]],["typeid"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,[[["self"],["t"]]]],[11,"from","","",251,[[["t"]],["t"]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"into","","",251,[[],["u"]]],[11,"try_into","","",251,[[],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"type_id","","",251,[[["self"]],["typeid"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,[[["self"],["t"]]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"from","","",252,[[["t"]],["t"]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"into","","",252,[[],["u"]]],[11,"try_into","","",252,[[],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"type_id","","",252,[[["self"]],["typeid"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,[[["self"],["t"]]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"into","","",253,[[],["u"]]],[11,"try_into","","",253,[[],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"type_id","","",253,[[["self"]],["typeid"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,[[["self"],["t"]]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"from","object::macho","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"into","","",129,[[],["u"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"into","","",130,[[],["u"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"into","","",131,[[],["u"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"into","","",132,[[],["u"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"into","","",134,[[],["u"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"into","","",135,[[],["u"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"into","","",137,[[],["u"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"into","","",138,[[],["u"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"into","","",140,[[],["u"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"into","","",141,[[],["u"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"into","","",142,[[],["u"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"from","object::pe","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"into","","",144,[[],["u"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"into","","",145,[[],["u"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"into","","",146,[[],["u"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"into","","",147,[[],["u"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"into","","",148,[[],["u"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"into","","",149,[[],["u"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"into","","",150,[[],["u"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"into","","",151,[[],["u"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"into","","",152,[[],["u"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"into","","",153,[[],["u"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"into","","",154,[[],["u"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"into","","",155,[[],["u"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"into","","",156,[[],["u"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"into","","",157,[[],["u"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"into","","",158,[[],["u"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"into","","",159,[[],["u"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"into","","",160,[[],["u"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"into","","",161,[[],["u"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"into","","",162,[[],["u"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"into","","",163,[[],["u"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"into","","",164,[[],["u"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"into","","",165,[[],["u"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"into","","",166,[[],["u"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"into","","",167,[[],["u"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"into","","",168,[[],["u"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"into","","",169,[[],["u"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"into","","",170,[[],["u"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"into","","",171,[[],["u"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"into","","",172,[[],["u"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"into","","",173,[[],["u"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"into","","",174,[[],["u"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"into","","",175,[[],["u"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"into","","",176,[[],["u"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"into","","",177,[[],["u"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"into","","",178,[[],["u"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"into","","",179,[[],["u"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"into","","",180,[[],["u"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"into","","",181,[[],["u"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"into","","",182,[[],["u"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"into","","",183,[[],["u"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"into","","",184,[[],["u"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"into","","",185,[[],["u"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"into","","",186,[[],["u"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"into","","",187,[[],["u"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"into","","",188,[[],["u"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"into","","",189,[[],["u"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"into","","",190,[[],["u"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"into","","",191,[[],["u"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"into","","",192,[[],["u"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"into","","",193,[[],["u"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"into","","",194,[[],["u"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"into","","",195,[[],["u"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"into","","",196,[[],["u"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"into","","",197,[[],["u"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,[[["self"],["t"]]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"into","","",198,[[],["u"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,[[["self"],["t"]]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"into","","",199,[[],["u"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,[[["self"],["t"]]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"into","","",200,[[],["u"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,[[["self"],["t"]]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"into","","",201,[[],["u"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,[[["self"],["t"]]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"into","","",202,[[],["u"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"into","","",203,[[],["u"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,[[["self"],["t"]]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"into","","",204,[[],["u"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,[[["self"],["t"]]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"into","","",205,[[],["u"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"into","","",206,[[],["u"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"into","","",207,[[],["u"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"into","","",208,[[],["u"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"into","","",209,[[],["u"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"into","","",210,[[],["u"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"into","","",211,[[],["u"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"into","","",212,[[],["u"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"into","","",213,[[],["u"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"into","","",214,[[],["u"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"into","","",215,[[],["u"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"into","","",216,[[],["u"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"from_big_endian","object::endian","",21,[[["bool"]],["option"]]],[11,"is_big_endian","","",21,[[],["bool"]]],[11,"from_big_endian","","",217,[[["bool"]],["option"]]],[11,"is_big_endian","","",217,[[],["bool"]]],[11,"from_big_endian","","",218,[[["bool"]],["option"]]],[11,"is_big_endian","","",218,[[],["bool"]]],[11,"is_type_64","object::elf","",71,[[["self"]],["bool"]]],[11,"e_ident","","",71,[[["self"]],["ident"]]],[11,"e_type","","",71,[[["self"]],["u16"]]],[11,"e_machine","","",71,[[["self"]],["u16"]]],[11,"e_version","","",71,[[["self"]],["u32"]]],[11,"e_entry","","",71,[[["self"]]]],[11,"e_phoff","","",71,[[["self"]]]],[11,"e_shoff","","",71,[[["self"]]]],[11,"e_flags","","",71,[[["self"]],["u32"]]],[11,"e_ehsize","","",71,[[["self"]],["u16"]]],[11,"e_phentsize","","",71,[[["self"]],["u16"]]],[11,"e_phnum","","",71,[[["self"]],["u16"]]],[11,"e_shentsize","","",71,[[["self"]],["u16"]]],[11,"e_shnum","","",71,[[["self"]],["u16"]]],[11,"e_shstrndx","","",71,[[["self"]],["u16"]]],[11,"is_type_64","","",72,[[["self"]],["bool"]]],[11,"e_ident","","",72,[[["self"]],["ident"]]],[11,"e_type","","",72,[[["self"]],["u16"]]],[11,"e_machine","","",72,[[["self"]],["u16"]]],[11,"e_version","","",72,[[["self"]],["u32"]]],[11,"e_entry","","",72,[[["self"]]]],[11,"e_phoff","","",72,[[["self"]]]],[11,"e_shoff","","",72,[[["self"]]]],[11,"e_flags","","",72,[[["self"]],["u32"]]],[11,"e_ehsize","","",72,[[["self"]],["u16"]]],[11,"e_phentsize","","",72,[[["self"]],["u16"]]],[11,"e_phnum","","",72,[[["self"]],["u16"]]],[11,"e_shentsize","","",72,[[["self"]],["u16"]]],[11,"e_shnum","","",72,[[["self"]],["u16"]]],[11,"e_shstrndx","","",72,[[["self"]],["u16"]]],[11,"p_type","","",84,[[["self"]],["u32"]]],[11,"p_flags","","",84,[[["self"]],["u32"]]],[11,"p_offset","","",84,[[["self"]]]],[11,"p_vaddr","","",84,[[["self"]]]],[11,"p_paddr","","",84,[[["self"]]]],[11,"p_filesz","","",84,[[["self"]]]],[11,"p_memsz","","",84,[[["self"]]]],[11,"p_align","","",84,[[["self"]]]],[11,"p_type","","",85,[[["self"]],["u32"]]],[11,"p_flags","","",85,[[["self"]],["u32"]]],[11,"p_offset","","",85,[[["self"]]]],[11,"p_vaddr","","",85,[[["self"]]]],[11,"p_paddr","","",85,[[["self"]]]],[11,"p_filesz","","",85,[[["self"]]]],[11,"p_memsz","","",85,[[["self"]]]],[11,"p_align","","",85,[[["self"]]]],[11,"sh_name","","",74,[[["self"]],["u32"]]],[11,"sh_type","","",74,[[["self"]],["u32"]]],[11,"sh_flags","","",74,[[["self"]]]],[11,"sh_addr","","",74,[[["self"]]]],[11,"sh_offset","","",74,[[["self"]]]],[11,"sh_size","","",74,[[["self"]]]],[11,"sh_link","","",74,[[["self"]],["u32"]]],[11,"sh_info","","",74,[[["self"]],["u32"]]],[11,"sh_addralign","","",74,[[["self"]]]],[11,"sh_entsize","","",74,[[["self"]]]],[11,"sh_name","","",75,[[["self"]],["u32"]]],[11,"sh_type","","",75,[[["self"]],["u32"]]],[11,"sh_flags","","",75,[[["self"]]]],[11,"sh_addr","","",75,[[["self"]]]],[11,"sh_offset","","",75,[[["self"]]]],[11,"sh_size","","",75,[[["self"]]]],[11,"sh_link","","",75,[[["self"]],["u32"]]],[11,"sh_info","","",75,[[["self"]],["u32"]]],[11,"sh_addralign","","",75,[[["self"]]]],[11,"sh_entsize","","",75,[[["self"]]]],[11,"st_name","","",78,[[["self"]],["u32"]]],[11,"st_info","","",78,[[["self"]],["u8"]]],[11,"st_bind","","",78,[[["self"]],["u8"]]],[11,"st_type","","",78,[[["self"]],["u8"]]],[11,"st_other","","",78,[[["self"]],["u8"]]],[11,"st_visibility","","",78,[[["self"]],["u8"]]],[11,"st_shndx","","",78,[[["self"]],["u16"]]],[11,"st_value","","",78,[[["self"]]]],[11,"st_size","","",78,[[["self"]]]],[11,"st_name","","",79,[[["self"]],["u32"]]],[11,"st_info","","",79,[[["self"]],["u8"]]],[11,"st_bind","","",79,[[["self"]],["u8"]]],[11,"st_type","","",79,[[["self"]],["u8"]]],[11,"st_other","","",79,[[["self"]],["u8"]]],[11,"st_visibility","","",79,[[["self"]],["u8"]]],[11,"st_shndx","","",79,[[["self"]],["u16"]]],[11,"st_value","","",79,[[["self"]]]],[11,"st_size","","",79,[[["self"]]]],[11,"r_offset","","",81,[[["self"]]]],[11,"r_info","","",81,[[["self"]]]],[11,"r_addend","","",81,[[["self"]]]],[11,"r_sym","","",81,[[["self"]],["u32"]]],[11,"r_type","","",81,[[["self"]],["u32"]]],[11,"r_offset","","",83,[[["self"]]]],[11,"r_info","","",83,[[["self"]]]],[11,"r_addend","","",83,[[["self"]]]],[11,"r_sym","","",83,[[["self"]],["u32"]]],[11,"r_type","","",83,[[["self"]],["u32"]]],[11,"ch_type","","",76,[[["self"]],["u32"]]],[11,"ch_size","","",76,[[["self"]]]],[11,"ch_addralign","","",76,[[["self"]]]],[11,"ch_type","","",77,[[["self"]],["u32"]]],[11,"ch_size","","",77,[[["self"]]]],[11,"ch_addralign","","",77,[[["self"]]]],[11,"n_namesz","","",86,[[["self"]],["u32"]]],[11,"n_descsz","","",86,[[["self"]],["u32"]]],[11,"n_type","","",86,[[["self"]],["u32"]]],[11,"n_namesz","","",87,[[["self"]],["u32"]]],[11,"n_descsz","","",87,[[["self"]],["u32"]]],[11,"n_type","","",87,[[["self"]],["u32"]]],[11,"is_type_64","object::macho","",91,[[["self"]],["bool"]]],[11,"is_big_endian","","",91,[[["self"]],["bool"]]],[11,"is_little_endian","","",91,[[["self"]],["bool"]]],[11,"magic","","",91,[[["self"]],["u32"]]],[11,"cputype","","",91,[[["self"]],["u32"]]],[11,"cpusubtype","","",91,[[["self"]],["u32"]]],[11,"filetype","","",91,[[["self"]],["u32"]]],[11,"ncmds","","",91,[[["self"]],["u32"]]],[11,"sizeofcmds","","",91,[[["self"]],["u32"]]],[11,"flags","","",91,[[["self"]],["u32"]]],[11,"is_type_64","","",92,[[["self"]],["bool"]]],[11,"is_big_endian","","",92,[[["self"]],["bool"]]],[11,"is_little_endian","","",92,[[["self"]],["bool"]]],[11,"magic","","",92,[[["self"]],["u32"]]],[11,"cputype","","",92,[[["self"]],["u32"]]],[11,"cpusubtype","","",92,[[["self"]],["u32"]]],[11,"filetype","","",92,[[["self"]],["u32"]]],[11,"ncmds","","",92,[[["self"]],["u32"]]],[11,"sizeofcmds","","",92,[[["self"]],["u32"]]],[11,"flags","","",92,[[["self"]],["u32"]]],[11,"from_command","","",95,[[["macholoadcommand"]],[["result",["option"]],["option"]]]],[11,"cmd","","",95,[[["self"]],["u32"]]],[11,"cmdsize","","",95,[[["self"]],["u32"]]],[11,"segname","","",95,[[["self"]]]],[11,"vmaddr","","",95,[[["self"]]]],[11,"vmsize","","",95,[[["self"]]]],[11,"fileoff","","",95,[[["self"]]]],[11,"filesize","","",95,[[["self"]]]],[11,"maxprot","","",95,[[["self"]],["u32"]]],[11,"initprot","","",95,[[["self"]],["u32"]]],[11,"nsects","","",95,[[["self"]],["u32"]]],[11,"flags","","",95,[[["self"]],["u32"]]],[11,"from_command","","",96,[[["macholoadcommand"]],[["result",["option"]],["option"]]]],[11,"cmd","","",96,[[["self"]],["u32"]]],[11,"cmdsize","","",96,[[["self"]],["u32"]]],[11,"segname","","",96,[[["self"]]]],[11,"vmaddr","","",96,[[["self"]]]],[11,"vmsize","","",96,[[["self"]]]],[11,"fileoff","","",96,[[["self"]]]],[11,"filesize","","",96,[[["self"]]]],[11,"maxprot","","",96,[[["self"]],["u32"]]],[11,"initprot","","",96,[[["self"]],["u32"]]],[11,"nsects","","",96,[[["self"]],["u32"]]],[11,"flags","","",96,[[["self"]],["u32"]]],[11,"sectname","","",97,[[["self"]]]],[11,"segname","","",97,[[["self"]]]],[11,"addr","","",97,[[["self"]]]],[11,"size","","",97,[[["self"]]]],[11,"offset","","",97,[[["self"]],["u32"]]],[11,"align","","",97,[[["self"]],["u32"]]],[11,"reloff","","",97,[[["self"]],["u32"]]],[11,"nreloc","","",97,[[["self"]],["u32"]]],[11,"flags","","",97,[[["self"]],["u32"]]],[11,"sectname","","",98,[[["self"]]]],[11,"segname","","",98,[[["self"]]]],[11,"addr","","",98,[[["self"]]]],[11,"size","","",98,[[["self"]]]],[11,"offset","","",98,[[["self"]],["u32"]]],[11,"align","","",98,[[["self"]],["u32"]]],[11,"reloff","","",98,[[["self"]],["u32"]]],[11,"nreloc","","",98,[[["self"]],["u32"]]],[11,"flags","","",98,[[["self"]],["u32"]]],[11,"n_strx","","",138,[[["self"]],["u32"]]],[11,"n_type","","",138,[[["self"]],["u8"]]],[11,"n_sect","","",138,[[["self"]],["u8"]]],[11,"n_desc","","",138,[[["self"]],["u16"]]],[11,"n_value","","",138,[[["self"]]]],[11,"n_strx","","",139,[[["self"]],["u32"]]],[11,"n_type","","",139,[[["self"]],["u8"]]],[11,"n_sect","","",139,[[["self"]],["u8"]]],[11,"n_desc","","",139,[[["self"]],["u16"]]],[11,"n_value","","",139,[[["self"]]]],[11,"is_type_64","object::pe","",152,[[["self"]],["bool"]]],[11,"is_valid_optional_magic","","",152,[[["self"]],["bool"]]],[11,"signature","","",152,[[["self"]],["u32"]]],[11,"file_header","","",152,[[["self"]],["imagefileheader"]]],[11,"optional_header","","",152,[[["self"]]]],[11,"is_type_64","","",151,[[["self"]],["bool"]]],[11,"is_valid_optional_magic","","",151,[[["self"]],["bool"]]],[11,"signature","","",151,[[["self"]],["u32"]]],[11,"file_header","","",151,[[["self"]],["imagefileheader"]]],[11,"optional_header","","",151,[[["self"]]]],[11,"magic","","",148,[[["self"]],["u16"]]],[11,"major_linker_version","","",148,[[["self"]],["u8"]]],[11,"minor_linker_version","","",148,[[["self"]],["u8"]]],[11,"size_of_code","","",148,[[["self"]],["u32"]]],[11,"size_of_initialized_data","","",148,[[["self"]],["u32"]]],[11,"size_of_uninitialized_data","","",148,[[["self"]],["u32"]]],[11,"address_of_entry_point","","",148,[[["self"]],["u32"]]],[11,"base_of_code","","",148,[[["self"]],["u32"]]],[11,"image_base","","",148,[[["self"]],["u64"]]],[11,"section_alignment","","",148,[[["self"]],["u32"]]],[11,"file_alignment","","",148,[[["self"]],["u32"]]],[11,"major_operating_system_version","","",148,[[["self"]],["u16"]]],[11,"minor_operating_system_version","","",148,[[["self"]],["u16"]]],[11,"major_image_version","","",148,[[["self"]],["u16"]]],[11,"minor_image_version","","",148,[[["self"]],["u16"]]],[11,"major_subsystem_version","","",148,[[["self"]],["u16"]]],[11,"minor_subsystem_version","","",148,[[["self"]],["u16"]]],[11,"win32_version_value","","",148,[[["self"]],["u32"]]],[11,"size_of_image","","",148,[[["self"]],["u32"]]],[11,"size_of_headers","","",148,[[["self"]],["u32"]]],[11,"check_sum","","",148,[[["self"]],["u32"]]],[11,"subsystem","","",148,[[["self"]],["u16"]]],[11,"dll_characteristics","","",148,[[["self"]],["u16"]]],[11,"size_of_stack_reserve","","",148,[[["self"]],["u64"]]],[11,"size_of_stack_commit","","",148,[[["self"]],["u64"]]],[11,"size_of_heap_reserve","","",148,[[["self"]],["u64"]]],[11,"size_of_heap_commit","","",148,[[["self"]],["u64"]]],[11,"loader_flags","","",148,[[["self"]],["u32"]]],[11,"number_of_rva_and_sizes","","",148,[[["self"]],["u32"]]],[11,"magic","","",150,[[["self"]],["u16"]]],[11,"major_linker_version","","",150,[[["self"]],["u8"]]],[11,"minor_linker_version","","",150,[[["self"]],["u8"]]],[11,"size_of_code","","",150,[[["self"]],["u32"]]],[11,"size_of_initialized_data","","",150,[[["self"]],["u32"]]],[11,"size_of_uninitialized_data","","",150,[[["self"]],["u32"]]],[11,"address_of_entry_point","","",150,[[["self"]],["u32"]]],[11,"base_of_code","","",150,[[["self"]],["u32"]]],[11,"image_base","","",150,[[["self"]],["u64"]]],[11,"section_alignment","","",150,[[["self"]],["u32"]]],[11,"file_alignment","","",150,[[["self"]],["u32"]]],[11,"major_operating_system_version","","",150,[[["self"]],["u16"]]],[11,"minor_operating_system_version","","",150,[[["self"]],["u16"]]],[11,"major_image_version","","",150,[[["self"]],["u16"]]],[11,"minor_image_version","","",150,[[["self"]],["u16"]]],[11,"major_subsystem_version","","",150,[[["self"]],["u16"]]],[11,"minor_subsystem_version","","",150,[[["self"]],["u16"]]],[11,"win32_version_value","","",150,[[["self"]],["u32"]]],[11,"size_of_image","","",150,[[["self"]],["u32"]]],[11,"size_of_headers","","",150,[[["self"]],["u32"]]],[11,"check_sum","","",150,[[["self"]],["u32"]]],[11,"subsystem","","",150,[[["self"]],["u16"]]],[11,"dll_characteristics","","",150,[[["self"]],["u16"]]],[11,"size_of_stack_reserve","","",150,[[["self"]],["u64"]]],[11,"size_of_stack_commit","","",150,[[["self"]],["u64"]]],[11,"size_of_heap_reserve","","",150,[[["self"]],["u64"]]],[11,"size_of_heap_commit","","",150,[[["self"]],["u64"]]],[11,"loader_flags","","",150,[[["self"]],["u32"]]],[11,"number_of_rva_and_sizes","","",150,[[["self"]],["u32"]]],[11,"architecture","object::read","",40,[[["self"]],["architecture"]]],[11,"is_little_endian","","",40,[[["self"]],["bool"]]],[11,"is_64","","",40,[[["self"]],["bool"]]],[11,"segments","","",40,[[["self"]],["segmentiterator"]]],[11,"section_by_name","","",40,[[["str"],["self"]],[["option",["section"]],["section"]]]],[11,"section_by_index","","",40,[[["sectionindex"],["self"]],[["section"],["result",["section"]]]]],[11,"sections","","",40,[[["self"]],["sectioniterator"]]],[11,"symbol_by_index","","",40,[[["self"],["symbolindex"]],[["result",["symbol"]],["symbol"]]]],[11,"symbols","","",40,[[["self"]],["symboliterator"]]],[11,"dynamic_symbols","","",40,[[["self"]],["symboliterator"]]],[11,"symbol_map","","",40,[[["self"]],["symbolmap"]]],[11,"has_debug_symbols","","",40,[[["self"]],["bool"]]],[11,"mach_uuid","","",40,[[["self"]],[["result",["option"]],["option"]]]],[11,"build_id","","",40,[[["self"]],[["result",["option"]],["option"]]]],[11,"gnu_debuglink","","",40,[[["self"]],[["result",["option"]],["option"]]]],[11,"entry","","",40,[[["self"]],["u64"]]],[11,"flags","","",40,[[["self"]],["fileflags"]]],[11,"architecture","object::read::coff","",41,[[["self"]],["architecture"]]],[11,"is_little_endian","","",41,[[["self"]],["bool"]]],[11,"is_64","","",41,[[["self"]],["bool"]]],[11,"segments","","",41,[[["self"]],["coffsegmentiterator"]]],[11,"section_by_name","","",41,[[["str"],["self"]],[["coffsection"],["option",["coffsection"]]]]],[11,"section_by_index","","",41,[[["sectionindex"],["self"]],[["result",["coffsection"]],["coffsection"]]]],[11,"sections","","",41,[[["self"]],["coffsectioniterator"]]],[11,"symbol_by_index","","",41,[[["self"],["symbolindex"]],[["result",["symbol"]],["symbol"]]]],[11,"symbols","","",41,[[["self"]],["coffsymboliterator"]]],[11,"dynamic_symbols","","",41,[[["self"]],["coffsymboliterator"]]],[11,"symbol_map","","",41,[[["self"]],["symbolmap"]]],[11,"has_debug_symbols","","",41,[[["self"]],["bool"]]],[11,"entry","","",41,[[["self"]],["u64"]]],[11,"flags","","",41,[[["self"]],["fileflags"]]],[11,"architecture","object::read::elf","",44,[[["self"]],["architecture"]]],[11,"is_little_endian","","",44,[[["self"]],["bool"]]],[11,"is_64","","",44,[[["self"]],["bool"]]],[11,"segments","","",44,[[["self"]],["elfsegmentiterator"]]],[11,"section_by_name","","",44,[[["str"],["self"]],[["option",["elfsection"]],["elfsection"]]]],[11,"section_by_index","","",44,[[["sectionindex"],["self"]],[["elfsection"],["result",["elfsection"]]]]],[11,"sections","","",44,[[["self"]],["elfsectioniterator"]]],[11,"symbol_by_index","","",44,[[["self"],["symbolindex"]],[["symbol"],["result",["symbol"]]]]],[11,"symbols","","",44,[[["self"]],["elfsymboliterator"]]],[11,"dynamic_symbols","","",44,[[["self"]],["elfsymboliterator"]]],[11,"symbol_map","","",44,[[["self"]],["symbolmap"]]],[11,"has_debug_symbols","","",44,[[["self"]],["bool"]]],[11,"build_id","","",44,[[["self"]],[["result",["option"]],["option"]]]],[11,"gnu_debuglink","","",44,[[["self"]],[["result",["option"]],["option"]]]],[11,"entry","","",44,[[["self"]],["u64"]]],[11,"flags","","",44,[[["self"]],["fileflags"]]],[11,"architecture","object::read::macho","",56,[[["self"]],["architecture"]]],[11,"is_little_endian","","",56,[[["self"]],["bool"]]],[11,"is_64","","",56,[[["self"]],["bool"]]],[11,"segments","","",56,[[["self"]],["machosegmentiterator"]]],[11,"section_by_name","","",56,[[["str"],["self"]],[["machosection"],["option",["machosection"]]]]],[11,"section_by_index","","",56,[[["sectionindex"],["self"]],[["result",["machosection"]],["machosection"]]]],[11,"sections","","",56,[[["self"]],["machosectioniterator"]]],[11,"symbol_by_index","","",56,[[["self"],["symbolindex"]],[["result",["symbol"]],["symbol"]]]],[11,"symbols","","",56,[[["self"]],["machosymboliterator"]]],[11,"dynamic_symbols","","",56,[[["self"]],["machosymboliterator"]]],[11,"symbol_map","","",56,[[["self"]],["symbolmap"]]],[11,"has_debug_symbols","","",56,[[["self"]],["bool"]]],[11,"mach_uuid","","",56,[[["self"]],[["result",["option"]],["option"]]]],[11,"entry","","",56,[[["self"]],["u64"]]],[11,"flags","","",56,[[["self"]],["fileflags"]]],[11,"architecture","object::read::pe","",62,[[["self"]],["architecture"]]],[11,"is_little_endian","","",62,[[["self"]],["bool"]]],[11,"is_64","","",62,[[["self"]],["bool"]]],[11,"segments","","",62,[[["self"]],["pesegmentiterator"]]],[11,"section_by_name","","",62,[[["str"],["self"]],[["option",["pesection"]],["pesection"]]]],[11,"section_by_index","","",62,[[["sectionindex"],["self"]],[["result",["pesection"]],["pesection"]]]],[11,"sections","","",62,[[["self"]],["pesectioniterator"]]],[11,"symbol_by_index","","",62,[[["self"],["symbolindex"]],[["result",["symbol"]],["symbol"]]]],[11,"symbols","","",62,[[["self"]],["coffsymboliterator"]]],[11,"dynamic_symbols","","",62,[[["self"]],["coffsymboliterator"]]],[11,"symbol_map","","",62,[[["self"]],["symbolmap"]]],[11,"has_debug_symbols","","",62,[[["self"]],["bool"]]],[11,"entry","","",62,[[["self"]],["u64"]]],[11,"flags","","",62,[[["self"]],["fileflags"]]],[11,"address","object::read","",220,[[["self"]],["u64"]]],[11,"size","","",220,[[["self"]],["u64"]]],[11,"align","","",220,[[["self"]],["u64"]]],[11,"file_range","","",220,[[["self"]]]],[11,"data","","",220,[[["self"]],["result"]]],[11,"data_range","","",220,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"name","","",220,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"address","object::read::coff","",227,[[["self"]],["u64"]]],[11,"size","","",227,[[["self"]],["u64"]]],[11,"align","","",227,[[["self"]],["u64"]]],[11,"file_range","","",227,[[["self"]]]],[11,"data","","",227,[[["self"]],["result"]]],[11,"data_range","","",227,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"name","","",227,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"address","object::read::elf","",233,[[["self"]],["u64"]]],[11,"size","","",233,[[["self"]],["u64"]]],[11,"align","","",233,[[["self"]],["u64"]]],[11,"file_range","","",233,[[["self"]]]],[11,"data","","",233,[[["self"]],["result"]]],[11,"data_range","","",233,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"name","","",233,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"address","object::read::macho","",240,[[["self"]],["u64"]]],[11,"size","","",240,[[["self"]],["u64"]]],[11,"align","","",240,[[["self"]],["u64"]]],[11,"file_range","","",240,[[["self"]]]],[11,"data","","",240,[[["self"]],["result"]]],[11,"data_range","","",240,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"name","","",240,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"address","object::read::pe","",246,[[["self"]],["u64"]]],[11,"size","","",246,[[["self"]],["u64"]]],[11,"align","","",246,[[["self"]],["u64"]]],[11,"file_range","","",246,[[["self"]]]],[11,"data","","",246,[[["self"]],["result"]]],[11,"data_range","","",246,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"name","","",246,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"index","object::read","",222,[[["self"]],["sectionindex"]]],[11,"address","","",222,[[["self"]],["u64"]]],[11,"size","","",222,[[["self"]],["u64"]]],[11,"align","","",222,[[["self"]],["u64"]]],[11,"file_range","","",222,[[["self"]],["option"]]],[11,"data","","",222,[[["self"]],["result"]]],[11,"data_range","","",222,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"compressed_data","","",222,[[["self"]],[["compresseddata"],["result",["compresseddata"]]]]],[11,"name","","",222,[[["self"]],[["str"],["result",["str"]]]]],[11,"segment_name","","",222,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"kind","","",222,[[["self"]],["sectionkind"]]],[11,"relocations","","",222,[[["self"]],["relocationiterator"]]],[11,"flags","","",222,[[["self"]],["sectionflags"]]],[11,"index","object::read::coff","",229,[[["self"]],["sectionindex"]]],[11,"address","","",229,[[["self"]],["u64"]]],[11,"size","","",229,[[["self"]],["u64"]]],[11,"align","","",229,[[["self"]],["u64"]]],[11,"file_range","","",229,[[["self"]],["option"]]],[11,"data","","",229,[[["self"]],["result"]]],[11,"data_range","","",229,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"compressed_data","","",229,[[["self"]],[["compresseddata"],["result",["compresseddata"]]]]],[11,"name","","",229,[[["self"]],[["str"],["result",["str"]]]]],[11,"segment_name","","",229,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"kind","","",229,[[["self"]],["sectionkind"]]],[11,"relocations","","",229,[[["self"]],["coffrelocationiterator"]]],[11,"flags","","",229,[[["self"]],["sectionflags"]]],[11,"index","object::read::elf","",235,[[["self"]],["sectionindex"]]],[11,"address","","",235,[[["self"]],["u64"]]],[11,"size","","",235,[[["self"]],["u64"]]],[11,"align","","",235,[[["self"]],["u64"]]],[11,"file_range","","",235,[[["self"]],["option"]]],[11,"data","","",235,[[["self"]],["result"]]],[11,"data_range","","",235,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"compressed_data","","",235,[[["self"]],[["result",["compresseddata"]],["compresseddata"]]]],[11,"name","","",235,[[["self"]],[["str"],["result",["str"]]]]],[11,"segment_name","","",235,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"kind","","",235,[[["self"]],["sectionkind"]]],[11,"relocations","","",235,[[["self"]],["elfrelocationiterator"]]],[11,"flags","","",235,[[["self"]],["sectionflags"]]],[11,"index","object::read::macho","",242,[[["self"]],["sectionindex"]]],[11,"address","","",242,[[["self"]],["u64"]]],[11,"size","","",242,[[["self"]],["u64"]]],[11,"align","","",242,[[["self"]],["u64"]]],[11,"file_range","","",242,[[["self"]],["option"]]],[11,"data","","",242,[[["self"]],["result"]]],[11,"data_range","","",242,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"compressed_data","","",242,[[["self"]],[["compresseddata"],["result",["compresseddata"]]]]],[11,"name","","",242,[[["self"]],[["str"],["result",["str"]]]]],[11,"segment_name","","",242,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"kind","","",242,[[["self"]],["sectionkind"]]],[11,"relocations","","",242,[[["self"]],["machorelocationiterator"]]],[11,"flags","","",242,[[["self"]],["sectionflags"]]],[11,"index","object::read::pe","",248,[[["self"]],["sectionindex"]]],[11,"address","","",248,[[["self"]],["u64"]]],[11,"size","","",248,[[["self"]],["u64"]]],[11,"align","","",248,[[["self"]],["u64"]]],[11,"file_range","","",248,[[["self"]],["option"]]],[11,"data","","",248,[[["self"]],["result"]]],[11,"data_range","","",248,[[["self"],["u64"]],[["result",["option"]],["option"]]]],[11,"compressed_data","","",248,[[["self"]],[["compresseddata"],["result",["compresseddata"]]]]],[11,"name","","",248,[[["self"]],[["str"],["result",["str"]]]]],[11,"segment_name","","",248,[[["self"]],[["result",["option"]],["option",["str"]]]]],[11,"kind","","",248,[[["self"]],["sectionkind"]]],[11,"relocations","","",248,[[["self"]],["perelocationiterator"]]],[11,"flags","","",248,[[["self"]],["sectionflags"]]],[11,"from","object::elf","",81,[[["rel32"]],["self"]]],[11,"from","","",83,[[["rel64"]],["self"]]],[11,"fmt","object","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::endian","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",217,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",218,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","object::pod","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","object::read","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",219,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",220,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",221,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",222,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",223,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",224,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::read::coff","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",226,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",227,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",228,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",229,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",230,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",231,[[["self"],["formatter"]],["result"]]],[11,"fmt","object::read::elf","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",232,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",233,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",234,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",235,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",237,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",238,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::read::macho","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",239,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",240,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",242,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",243,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",244,[[["self"],["formatter"]],["result"]]],[11,"fmt","object::read::pe","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",245,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",246,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",247,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",248,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",249,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::read","",225,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::elf","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",250,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",251,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",252,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",253,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::macho","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",131,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",132,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::pe","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",151,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",170,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",171,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",172,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",175,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",176,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",177,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",178,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",179,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",187,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",188,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",192,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",193,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",194,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",195,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",197,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",198,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",199,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",200,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",201,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",202,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",204,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",205,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",206,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",207,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",208,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",209,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",210,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",211,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",212,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",213,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",214,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",215,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",216,[[["formatter"],["self"]],["result"]]],[11,"fmt","object::read","",225,[[["self"],["formatter"]],["result"]]],[11,"eq","object","",0,[[["architecture"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["addresssize"]],["bool"]]],[11,"eq","","",2,[[["self"],["binaryformat"]],["bool"]]],[11,"eq","","",3,[[["self"],["sectionkind"]],["bool"]]],[11,"eq","","",4,[[["self"],["symbolkind"]],["bool"]]],[11,"eq","","",5,[[["symbolscope"],["self"]],["bool"]]],[11,"eq","","",6,[[["relocationkind"],["self"]],["bool"]]],[11,"ne","","",6,[[["relocationkind"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["relocationencoding"]],["bool"]]],[11,"eq","","",9,[[["self"],["fileflags"]],["bool"]]],[11,"ne","","",9,[[["self"],["fileflags"]],["bool"]]],[11,"eq","","",13,[[["sectionflags"],["self"]],["bool"]]],[11,"ne","","",13,[[["sectionflags"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["symbolflags"]],["bool"]]],[11,"ne","","",17,[[["self"],["symbolflags"]],["bool"]]],[11,"eq","object::endian","",21,[[["self"],["endianness"]],["bool"]]],[11,"eq","","",217,[[["self"],["littleendian"]],["bool"]]],[11,"eq","","",218,[[["self"],["bigendian"]],["bool"]]],[11,"eq","","",23,[[["self"],["u16"]],["bool"]]],[11,"ne","","",23,[[["self"],["u16"]],["bool"]]],[11,"eq","","",24,[[["u32"],["self"]],["bool"]]],[11,"ne","","",24,[[["u32"],["self"]],["bool"]]],[11,"eq","","",25,[[["self"],["u64"]],["bool"]]],[11,"ne","","",25,[[["self"],["u64"]],["bool"]]],[11,"eq","","",26,[[["i16"],["self"]],["bool"]]],[11,"ne","","",26,[[["i16"],["self"]],["bool"]]],[11,"eq","","",27,[[["self"],["i32"]],["bool"]]],[11,"ne","","",27,[[["self"],["i32"]],["bool"]]],[11,"eq","","",28,[[["self"],["i64"]],["bool"]]],[11,"ne","","",28,[[["self"],["i64"]],["bool"]]],[11,"eq","","",29,[[["u16bytes"],["self"]],["bool"]]],[11,"ne","","",29,[[["u16bytes"],["self"]],["bool"]]],[11,"eq","","",30,[[["u32bytes"],["self"]],["bool"]]],[11,"ne","","",30,[[["u32bytes"],["self"]],["bool"]]],[11,"eq","","",31,[[["u64bytes"],["self"]],["bool"]]],[11,"ne","","",31,[[["u64bytes"],["self"]],["bool"]]],[11,"eq","object::pod","",32,[[["self"],["bytes"]],["bool"]]],[11,"ne","","",32,[[["self"],["bytes"]],["bool"]]],[11,"eq","object::read","",225,[[["error"],["self"]],["bool"]]],[11,"ne","","",225,[[["error"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["sectionindex"]],["bool"]]],[11,"ne","","",33,[[["self"],["sectionindex"]],["bool"]]],[11,"eq","","",34,[[["symbolindex"],["self"]],["bool"]]],[11,"ne","","",34,[[["symbolindex"],["self"]],["bool"]]],[11,"eq","","",36,[[["self"],["symbolsection"]],["bool"]]],[11,"ne","","",36,[[["self"],["symbolsection"]],["bool"]]],[11,"eq","","",37,[[["self"],["relocationtarget"]],["bool"]]],[11,"ne","","",37,[[["self"],["relocationtarget"]],["bool"]]],[11,"eq","","",35,[[["compresseddata"],["self"]],["bool"]]],[11,"ne","","",35,[[["compresseddata"],["self"]],["bool"]]],[11,"eq","","",38,[[["compressionformat"],["self"]],["bool"]]],[11,"cmp","object::endian","",23,[[["self"],["u16"]],["ordering"]]],[11,"cmp","","",24,[[["u32"],["self"]],["ordering"]]],[11,"cmp","","",25,[[["self"],["u64"]],["ordering"]]],[11,"cmp","","",26,[[["i16"],["self"]],["ordering"]]],[11,"cmp","","",27,[[["self"],["i32"]],["ordering"]]],[11,"cmp","","",28,[[["self"],["i64"]],["ordering"]]],[11,"cmp","","",29,[[["u16bytes"],["self"]],["ordering"]]],[11,"cmp","","",30,[[["u32bytes"],["self"]],["ordering"]]],[11,"cmp","","",31,[[["u64bytes"],["self"]],["ordering"]]],[11,"partial_cmp","","",23,[[["self"],["u16"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",23,[[["self"],["u16"]],["bool"]]],[11,"le","","",23,[[["self"],["u16"]],["bool"]]],[11,"gt","","",23,[[["self"],["u16"]],["bool"]]],[11,"ge","","",23,[[["self"],["u16"]],["bool"]]],[11,"partial_cmp","","",24,[[["u32"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",24,[[["u32"],["self"]],["bool"]]],[11,"le","","",24,[[["u32"],["self"]],["bool"]]],[11,"gt","","",24,[[["u32"],["self"]],["bool"]]],[11,"ge","","",24,[[["u32"],["self"]],["bool"]]],[11,"partial_cmp","","",25,[[["self"],["u64"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",25,[[["self"],["u64"]],["bool"]]],[11,"le","","",25,[[["self"],["u64"]],["bool"]]],[11,"gt","","",25,[[["self"],["u64"]],["bool"]]],[11,"ge","","",25,[[["self"],["u64"]],["bool"]]],[11,"partial_cmp","","",26,[[["i16"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",26,[[["i16"],["self"]],["bool"]]],[11,"le","","",26,[[["i16"],["self"]],["bool"]]],[11,"gt","","",26,[[["i16"],["self"]],["bool"]]],[11,"ge","","",26,[[["i16"],["self"]],["bool"]]],[11,"partial_cmp","","",27,[[["self"],["i32"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",27,[[["self"],["i32"]],["bool"]]],[11,"le","","",27,[[["self"],["i32"]],["bool"]]],[11,"gt","","",27,[[["self"],["i32"]],["bool"]]],[11,"ge","","",27,[[["self"],["i32"]],["bool"]]],[11,"partial_cmp","","",28,[[["self"],["i64"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",28,[[["self"],["i64"]],["bool"]]],[11,"le","","",28,[[["self"],["i64"]],["bool"]]],[11,"gt","","",28,[[["self"],["i64"]],["bool"]]],[11,"ge","","",28,[[["self"],["i64"]],["bool"]]],[11,"partial_cmp","","",29,[[["u16bytes"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",29,[[["u16bytes"],["self"]],["bool"]]],[11,"le","","",29,[[["u16bytes"],["self"]],["bool"]]],[11,"gt","","",29,[[["u16bytes"],["self"]],["bool"]]],[11,"ge","","",29,[[["u16bytes"],["self"]],["bool"]]],[11,"partial_cmp","","",30,[[["u32bytes"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",30,[[["u32bytes"],["self"]],["bool"]]],[11,"le","","",30,[[["u32bytes"],["self"]],["bool"]]],[11,"gt","","",30,[[["u32bytes"],["self"]],["bool"]]],[11,"ge","","",30,[[["u32bytes"],["self"]],["bool"]]],[11,"partial_cmp","","",31,[[["u64bytes"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",31,[[["u64bytes"],["self"]],["bool"]]],[11,"le","","",31,[[["u64bytes"],["self"]],["bool"]]],[11,"gt","","",31,[[["u64bytes"],["self"]],["bool"]]],[11,"ge","","",31,[[["u64bytes"],["self"]],["bool"]]],[11,"hash","object","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","object::endian","",21,[[["self"],["__h"]]]],[11,"hash","","",217,[[["self"],["__h"]]]],[11,"hash","","",218,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","","",27,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","object::read","",33,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"next","","",219,[[["self"]],["option"]]],[11,"next","","",221,[[["self"]],["option"]]],[11,"next","","",223,[[["self"]],["option"]]],[11,"next","","",224,[[["self"]],["option"]]],[11,"next","object::read::coff","",226,[[["self"]],["option"]]],[11,"next","","",228,[[["self"]],["option"]]],[11,"next","","",230,[[["self"]],["option"]]],[11,"next","","",231,[[["self"]],["option"]]],[11,"next","object::read::elf","",232,[[["self"]],["option"]]],[11,"next","","",234,[[["self"]],["option"]]],[11,"next","","",236,[[["self"]],["option"]]],[11,"next","","",237,[[["self"]],["option"]]],[11,"next","object::read::macho","",239,[[["self"]],["option"]]],[11,"next","","",241,[[["self"]],["option"]]],[11,"next","","",243,[[["self"]],["option"]]],[11,"next","","",244,[[["self"]],["option"]]],[11,"next","object::read::pe","",245,[[["self"]],["option"]]],[11,"next","","",247,[[["self"]],["option"]]],[11,"next","","",249,[[["self"]],["option"]]],[11,"clone","object","",0,[[["self"]],["architecture"]]],[11,"clone","","",1,[[["self"]],["addresssize"]]],[11,"clone","","",2,[[["self"]],["binaryformat"]]],[11,"clone","","",3,[[["self"]],["sectionkind"]]],[11,"clone","","",4,[[["self"]],["symbolkind"]]],[11,"clone","","",5,[[["self"]],["symbolscope"]]],[11,"clone","","",6,[[["self"]],["relocationkind"]]],[11,"clone","","",8,[[["self"]],["relocationencoding"]]],[11,"clone","","",9,[[["self"]],["fileflags"]]],[11,"clone","","",13,[[["self"]],["sectionflags"]]],[11,"clone","","",17,[[["self"]],["symbolflags"]]],[11,"clone","object::endian","",21,[[["self"]],["endianness"]]],[11,"clone","","",217,[[["self"]],["littleendian"]]],[11,"clone","","",218,[[["self"]],["bigendian"]]],[11,"clone","","",23,[[["self"]],["u16"]]],[11,"clone","","",24,[[["self"]],["u32"]]],[11,"clone","","",25,[[["self"]],["u64"]]],[11,"clone","","",26,[[["self"]],["i16"]]],[11,"clone","","",27,[[["self"]],["i32"]]],[11,"clone","","",28,[[["self"]],["i64"]]],[11,"clone","","",29,[[["self"]],["u16bytes"]]],[11,"clone","","",30,[[["self"]],["u32bytes"]]],[11,"clone","","",31,[[["self"]],["u64bytes"]]],[11,"clone","object::pod","",32,[[["self"]],["bytes"]]],[11,"clone","object::read","",39,[[["self"]],["stringtable"]]],[11,"clone","object::read::coff","",42,[[["self"]],["sectiontable"]]],[11,"clone","object::read::elf","",45,[[["self"]],["sectiontable"]]],[11,"clone","","",46,[[["self"]],["symboltable"]]],[11,"clone","object::read::macho","",57,[[["self"]],["symboltable"]]],[11,"clone","object::read","",225,[[["self"]],["error"]]],[11,"clone","","",33,[[["self"]],["sectionindex"]]],[11,"clone","","",34,[[["self"]],["symbolindex"]]],[11,"clone","","",36,[[["self"]],["symbolsection"]]],[11,"clone","","",68,[[["self"]],["symbol"]]],[11,"clone","","",37,[[["self"]],["relocationtarget"]]],[11,"clone","","",35,[[["self"]],["compresseddata"]]],[11,"clone","","",38,[[["self"]],["compressionformat"]]],[11,"clone","object::elf","",71,[[["self"]],["fileheader32"]]],[11,"clone","","",72,[[["self"]],["fileheader64"]]],[11,"clone","","",73,[[["self"]],["ident"]]],[11,"clone","","",74,[[["self"]],["sectionheader32"]]],[11,"clone","","",75,[[["self"]],["sectionheader64"]]],[11,"clone","","",76,[[["self"]],["compressionheader32"]]],[11,"clone","","",77,[[["self"]],["compressionheader64"]]],[11,"clone","","",78,[[["self"]],["sym32"]]],[11,"clone","","",79,[[["self"]],["sym64"]]],[11,"clone","","",250,[[["self"]],["syminfo32"]]],[11,"clone","","",251,[[["self"]],["syminfo64"]]],[11,"clone","","",80,[[["self"]],["rel32"]]],[11,"clone","","",81,[[["self"]],["rela32"]]],[11,"clone","","",82,[[["self"]],["rel64"]]],[11,"clone","","",83,[[["self"]],["rela64"]]],[11,"clone","","",84,[[["self"]],["programheader32"]]],[11,"clone","","",85,[[["self"]],["programheader64"]]],[11,"clone","","",252,[[["self"]],["dyn32"]]],[11,"clone","","",253,[[["self"]],["dyn64"]]],[11,"clone","","",86,[[["self"]],["noteheader32"]]],[11,"clone","","",87,[[["self"]],["noteheader64"]]],[11,"clone","object::macho","",88,[[["self"]],["fatheader"]]],[11,"clone","","",89,[[["self"]],["fatarch32"]]],[11,"clone","","",90,[[["self"]],["fatarch64"]]],[11,"clone","","",91,[[["self"]],["machheader32"]]],[11,"clone","","",92,[[["self"]],["machheader64"]]],[11,"clone","","",93,[[["self"]],["loadcommand"]]],[11,"clone","","",94,[[["self"]],["lcstr"]]],[11,"clone","","",95,[[["self"]],["segmentcommand32"]]],[11,"clone","","",96,[[["self"]],["segmentcommand64"]]],[11,"clone","","",97,[[["self"]],["section32"]]],[11,"clone","","",98,[[["self"]],["section64"]]],[11,"clone","","",99,[[["self"]],["fvmlib"]]],[11,"clone","","",100,[[["self"]],["fvmlibcommand"]]],[11,"clone","","",101,[[["self"]],["dylib"]]],[11,"clone","","",102,[[["self"]],["dylibcommand"]]],[11,"clone","","",103,[[["self"]],["subframeworkcommand"]]],[11,"clone","","",104,[[["self"]],["subclientcommand"]]],[11,"clone","","",105,[[["self"]],["subumbrellacommand"]]],[11,"clone","","",106,[[["self"]],["sublibrarycommand"]]],[11,"clone","","",107,[[["self"]],["prebounddylibcommand"]]],[11,"clone","","",108,[[["self"]],["dylinkercommand"]]],[11,"clone","","",109,[[["self"]],["threadcommand"]]],[11,"clone","","",110,[[["self"]],["routinescommand"]]],[11,"clone","","",111,[[["self"]],["routinescommand_64"]]],[11,"clone","","",112,[[["self"]],["symtabcommand"]]],[11,"clone","","",113,[[["self"]],["dysymtabcommand"]]],[11,"clone","","",114,[[["self"]],["dylibtableofcontents"]]],[11,"clone","","",115,[[["self"]],["dylibmodule32"]]],[11,"clone","","",116,[[["self"]],["dylibmodule64"]]],[11,"clone","","",117,[[["self"]],["dylibreference"]]],[11,"clone","","",118,[[["self"]],["twolevelhintscommand"]]],[11,"clone","","",119,[[["self"]],["twolevelhint"]]],[11,"clone","","",120,[[["self"]],["prebindcksumcommand"]]],[11,"clone","","",121,[[["self"]],["uuidcommand"]]],[11,"clone","","",122,[[["self"]],["rpathcommand"]]],[11,"clone","","",123,[[["self"]],["linkeditdatacommand"]]],[11,"clone","","",124,[[["self"]],["encryptioninfocommand"]]],[11,"clone","","",125,[[["self"]],["encryptioninfocommand64"]]],[11,"clone","","",126,[[["self"]],["versionmincommand"]]],[11,"clone","","",127,[[["self"]],["buildversioncommand"]]],[11,"clone","","",128,[[["self"]],["buildtoolversion"]]],[11,"clone","","",129,[[["self"]],["dyldinfocommand"]]],[11,"clone","","",130,[[["self"]],["linkeroptioncommand"]]],[11,"clone","","",131,[[["self"]],["symsegcommand"]]],[11,"clone","","",132,[[["self"]],["identcommand"]]],[11,"clone","","",133,[[["self"]],["fvmfilecommand"]]],[11,"clone","","",134,[[["self"]],["entrypointcommand"]]],[11,"clone","","",135,[[["self"]],["sourceversioncommand"]]],[11,"clone","","",136,[[["self"]],["dataincodeentry"]]],[11,"clone","","",137,[[["self"]],["notecommand"]]],[11,"clone","","",138,[[["self"]],["nlist32"]]],[11,"clone","","",139,[[["self"]],["nlist64"]]],[11,"clone","","",140,[[["self"]],["relocation"]]],[11,"clone","","",141,[[["self"]],["relocationinfo"]]],[11,"clone","","",142,[[["self"]],["scatteredrelocationinfo"]]],[11,"clone","object::pe","",143,[[["self"]],["imagedosheader"]]],[11,"clone","","",144,[[["self"]],["imageos2header"]]],[11,"clone","","",145,[[["self"]],["imagevxdheader"]]],[11,"clone","","",146,[[["self"]],["imagefileheader"]]],[11,"clone","","",147,[[["self"]],["imagedatadirectory"]]],[11,"clone","","",148,[[["self"]],["imageoptionalheader32"]]],[11,"clone","","",149,[[["self"]],["imageromoptionalheader"]]],[11,"clone","","",150,[[["self"]],["imageoptionalheader64"]]],[11,"clone","","",151,[[["self"]],["imagentheaders64"]]],[11,"clone","","",152,[[["self"]],["imagentheaders32"]]],[11,"clone","","",153,[[["self"]],["imageromheaders"]]],[11,"clone","","",154,[[["self"]],["guid"]]],[11,"clone","","",155,[[["self"]],["anonobjectheader"]]],[11,"clone","","",156,[[["self"]],["anonobjectheaderv2"]]],[11,"clone","","",157,[[["self"]],["anonobjectheaderbigobj"]]],[11,"clone","","",158,[[["self"]],["imagesectionheader"]]],[11,"clone","","",159,[[["self"]],["imagesymbol"]]],[11,"clone","","",160,[[["self"]],["imagesymbolbytes"]]],[11,"clone","","",161,[[["self"]],["imagesymbolex"]]],[11,"clone","","",162,[[["self"]],["imagesymbolexbytes"]]],[11,"clone","","",163,[[["self"]],["imageauxsymboltokendef"]]],[11,"clone","","",164,[[["self"]],["imageauxsymbolfunction"]]],[11,"clone","","",165,[[["self"]],["imageauxsymbolfunctionbeginend"]]],[11,"clone","","",166,[[["self"]],["imageauxsymbolweak"]]],[11,"clone","","",167,[[["self"]],["imageauxsymbolsection"]]],[11,"clone","","",168,[[["self"]],["imageauxsymbolcrc"]]],[11,"clone","","",169,[[["self"]],["imagerelocation"]]],[11,"clone","","",170,[[["self"]],["imagelinenumber"]]],[11,"clone","","",171,[[["self"]],["imagebaserelocation"]]],[11,"clone","","",172,[[["self"]],["imagearchivememberheader"]]],[11,"clone","","",173,[[["self"]],["imageexportdirectory"]]],[11,"clone","","",174,[[["self"]],["imageimportbyname"]]],[11,"clone","","",175,[[["self"]],["imagetlsdirectory64"]]],[11,"clone","","",176,[[["self"]],["imagetlsdirectory32"]]],[11,"clone","","",177,[[["self"]],["imageimportdescriptor"]]],[11,"clone","","",178,[[["self"]],["imageboundimportdescriptor"]]],[11,"clone","","",179,[[["self"]],["imageboundforwarderref"]]],[11,"clone","","",180,[[["self"]],["imagedelayloaddescriptor"]]],[11,"clone","","",181,[[["self"]],["imageresourcedirectory"]]],[11,"clone","","",182,[[["self"]],["imageresourcedirectoryentry"]]],[11,"clone","","",183,[[["self"]],["imageresourcedirectorystring"]]],[11,"clone","","",184,[[["self"]],["imageresourcedirstringu"]]],[11,"clone","","",185,[[["self"]],["imageresourcedataentry"]]],[11,"clone","","",186,[[["self"]],["imageloadconfigcodeintegrity"]]],[11,"clone","","",187,[[["self"]],["imagedynamicrelocationtable"]]],[11,"clone","","",188,[[["self"]],["imagedynamicrelocation32"]]],[11,"clone","","",189,[[["self"]],["imagedynamicrelocation64"]]],[11,"clone","","",190,[[["self"]],["imagedynamicrelocation32v2"]]],[11,"clone","","",191,[[["self"]],["imagedynamicrelocation64v2"]]],[11,"clone","","",192,[[["self"]],["imageprologuedynamicrelocationheader"]]],[11,"clone","","",193,[[["self"]],["imageepiloguedynamicrelocationheader"]]],[11,"clone","","",194,[[["self"]],["imageloadconfigdirectory32"]]],[11,"clone","","",195,[[["self"]],["imageloadconfigdirectory64"]]],[11,"clone","","",196,[[["self"]],["imagehotpatchinfo"]]],[11,"clone","","",197,[[["self"]],["imagehotpatchbase"]]],[11,"clone","","",198,[[["self"]],["imagehotpatchhashes"]]],[11,"clone","","",199,[[["self"]],["imagearmruntimefunctionentry"]]],[11,"clone","","",200,[[["self"]],["imagearm64runtimefunctionentry"]]],[11,"clone","","",201,[[["self"]],["imagealpha64runtimefunctionentry"]]],[11,"clone","","",202,[[["self"]],["imagealpharuntimefunctionentry"]]],[11,"clone","","",203,[[["self"]],["imageruntimefunctionentry"]]],[11,"clone","","",204,[[["self"]],["imageenclaveconfig32"]]],[11,"clone","","",205,[[["self"]],["imageenclaveconfig64"]]],[11,"clone","","",206,[[["self"]],["imageenclaveimport"]]],[11,"clone","","",207,[[["self"]],["imagedebugdirectory"]]],[11,"clone","","",208,[[["self"]],["imagecoffsymbolsheader"]]],[11,"clone","","",209,[[["self"]],["imagedebugmisc"]]],[11,"clone","","",210,[[["self"]],["imagefunctionentry"]]],[11,"clone","","",211,[[["self"]],["imagefunctionentry64"]]],[11,"clone","","",212,[[["self"]],["imageseparatedebugheader"]]],[11,"clone","","",213,[[["self"]],["nonpageddebuginfo"]]],[11,"clone","","",214,[[["self"]],["imagearchitectureentry"]]],[11,"clone","","",215,[[["self"]],["importobjectheader"]]],[11,"clone","","",216,[[["self"]],["imagecor20header"]]],[11,"default","object::endian","",21,[[],["endianness"]]],[11,"default","","",217,[[],["littleendian"]]],[11,"default","","",218,[[],["bigendian"]]],[11,"default","","",23,[[],["u16"]]],[11,"default","","",24,[[],["u32"]]],[11,"default","","",25,[[],["u64"]]],[11,"default","","",26,[[],["i16"]]],[11,"default","","",27,[[],["i32"]]],[11,"default","","",28,[[],["i64"]]],[11,"default","","",29,[[],["u16bytes"]]],[11,"default","","",30,[[],["u32bytes"]]],[11,"default","","",31,[[],["u64bytes"]]],[11,"default","object::pod","",32,[[],["bytes"]]],[11,"default","object::read","",39,[[],["stringtable"]]],[11,"default","object::read::coff","",42,[[],["sectiontable"]]],[11,"default","object::read::elf","",45,[[],["sectiontable"]]],[11,"default","","",46,[[],["self"]]],[11,"default","object::read::macho","",57,[[],["self"]]],[11,"default","object::read::pe","",249,[[],["perelocationiterator"]]],[11,"default","object::elf","",76,[[],["compressionheader32"]]],[11,"default","","",77,[[],["compressionheader64"]]],[11,"parse","object::pe","Read the DOS header.",146,[[["bytes"]],["result"]]],[11,"name","","Parse a COFF symbol name.",159,[[["self"],["stringtable"]],["result"]]],[11,"parse","object::read::elf","Read the file header.",49,[[["bytes"]],[["result"],["self"]]]],[11,"is_supported","","Check that the ident field in the file header is a…",49,[[["self"]],["bool"]]],[11,"is_class_32","","",49,[[["self"]],["bool"]]],[11,"is_class_64","","",49,[[["self"]],["bool"]]],[11,"is_little_endian","","",49,[[["self"]],["bool"]]],[11,"is_big_endian","","",49,[[["self"]],["bool"]]],[11,"endian","","",49,[[["self"]],["result"]]],[11,"section_0","","Return the first section header, if present.",49,[[["bytes"],["self"]],[["result",["option"]],["option"]]]],[11,"phnum","","Return the `e_phnum` field of the header. Handles extended…",49,[[["bytes"],["self"]],[["usize"],["result",["usize"]]]]],[11,"shnum","","Return the `e_shnum` field of the header. Handles extended…",49,[[["bytes"],["self"]],[["usize"],["result",["usize"]]]]],[11,"shstrndx","","Return the `e_shstrndx` field of the header. Handles…",49,[[["bytes"],["self"]],[["result",["u32"]],["u32"]]]],[11,"program_headers","","Return the slice of program headers.",49,[[["bytes"],["self"]],["result"]]],[11,"section_headers","","Return the slice of section headers.",49,[[["bytes"],["self"]],["result"]]],[11,"section_strings","","Return the string table for the section headers.",49,[[["bytes"],["self"]],[["result",["stringtable"]],["stringtable"]]]],[11,"sections","","Return the section table.",49,[[["bytes"],["self"]],[["sectiontable"],["result",["sectiontable"]]]]],[11,"file_range","","Return the offset and size of the segment in the file.",50,[[["self"]]]],[11,"data","","Return the segment data.",50,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"notes","","Return a note iterator for the segment data.",50,[[["bytes"],["self"]],[["option",["elfnoteiterator"]],["result",["option"]]]]],[11,"file_range","","Return the offset and size of the section in the file.",51,[[["self"]],["option"]]],[11,"data","","Return the section data.",51,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"data_as_array","","Return the section data as a slice of the given type.",51,[[["bytes"],["self"]],["result"]]],[11,"notes","","Return a note iterator for the section data.",51,[[["bytes"],["self"]],[["option",["elfnoteiterator"]],["result",["option"]]]]],[11,"name","","Parse the symbol name from the string table.",52,[[["self"],["stringtable"]],["result"]]],[11,"parse","object::read::macho","Read the file header.",58,[[["bytes"]],[["result"],["self"]]]],[11,"is_supported","","",58,[[["self"]],["bool"]]],[11,"endian","","",58,[[["self"]],["result"]]],[11,"load_commands","","",58,[[["bytes"],["self"]],[["result",["macholoadcommanditerator"]],["macholoadcommanditerator"]]]],[11,"uuid","","Return the UUID from the `LC_UUID` load command, if one is…",58,[[["bytes"],["self"]],[["result",["option"]],["option"]]]],[11,"symbols","object::macho","Return the symbol table that this command references.",112,[[["bytes"],["self"],["e"]],[["symboltable"],["result",["symboltable"]]]]],[11,"name","object::read::macho","Return the `segname` bytes up until the null terminator.",59,[[["self"]]]],[11,"file_range","","Return the offset and size of the segment in the file.",59,[[["self"]]]],[11,"data","","Get the segment data from the file data.",59,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"sections","","Get the array of sections from the data following the…",59,[[["bytes"],["self"]],["result"]]],[11,"name","","Return the `sectname` bytes up until the null terminator.",60,[[["self"]]]],[11,"segment_name","","Return the `segname` bytes up until the null terminator.",60,[[["self"]]]],[11,"file_range","","Return the offset and size of the section in the file.",60,[[["self"]],["option"]]],[11,"data","","Return the section data.",60,[[["self"],["bytes"]],[["result",["bytes"]],["bytes"]]]],[11,"relocations","","Return the relocation array.",60,[[["self"],["bytes"]],["result"]]],[11,"name","","",61,[[["stringtable"],["self"]],["result"]]],[11,"is_undefined","","",61,[[["self"]],["bool"]]],[11,"parse","object::read::pe","Read the NT headers, including the data directories.",63,[[["imagedosheader"],["bytes"]],["result"]]],[11,"sections","","Read the section table.",63,[[["bytes"],["self"]],[["sectiontable"],["result",["sectiontable"]]]]],[11,"symbols","","Read the symbol table and string table.",63,[[["bytes"],["self"]],[["result",["symboltable"]],["symboltable"]]]],[11,"parse","object::pe","Read the DOS header.",143,[[["bytes"]],[["result"],["self"]]]],[11,"nt_headers","","Read the NT headers, including the data directories.",143,[[["bytes"],["self"]],["result"]]],[11,"pe_data","","Return the data for a PE section.",158,[[["bytes"],["self"]],[["result",["bytes"]],["bytes"]]]],[11,"endianness","object::read","Get the endianness of the file.",65,[[["self"]],["endianness"]]],[11,"symbol_data","","Get the data for the given symbol.",65,[[["symbol"],["self"]],[["result",["option"]],["option"]]]],[11,"mach_uuid","","The UUID from a Mach-O `LC_UUID` load command.",65,[[["self"]],[["result",["option"]],["option"]]]],[11,"build_id","","The build ID from an ELF `NT_GNU_BUILD_ID` note.",65,[[["self"]],[["result",["option"]],["option"]]]],[11,"gnu_debuglink","","The filename and CRC from a `.gnu_debuglink` section.",65,[[["self"]],[["result",["option"]],["option"]]]],[11,"uncompressed_data","","Returns the uncompressed contents of the section.",67,[[["self"]],[["result",["cow"]],["cow"]]]]],"p":[[4,"Architecture"],[4,"AddressSize"],[4,"BinaryFormat"],[4,"SectionKind"],[4,"SymbolKind"],[4,"SymbolScope"],[4,"RelocationKind"],[13,"MachO"],[4,"RelocationEncoding"],[4,"FileFlags"],[13,"Elf"],[13,"MachO"],[13,"Coff"],[4,"SectionFlags"],[13,"Elf"],[13,"MachO"],[13,"Coff"],[4,"SymbolFlags"],[13,"Elf"],[13,"MachO"],[13,"CoffSection"],[4,"Endianness"],[8,"Endian"],[3,"U16"],[3,"U32"],[3,"U64"],[3,"I16"],[3,"I32"],[3,"I64"],[3,"U16Bytes"],[3,"U32Bytes"],[3,"U64Bytes"],[3,"Bytes"],[3,"SectionIndex"],[3,"SymbolIndex"],[3,"CompressedData"],[4,"SymbolSection"],[4,"RelocationTarget"],[4,"CompressionFormat"],[3,"StringTable"],[3,"File"],[3,"CoffFile"],[3,"SectionTable"],[3,"SymbolTable"],[3,"ElfFile"],[3,"SectionTable"],[3,"SymbolTable"],[3,"RelocationSections"],[3,"ElfNote"],[8,"FileHeader"],[8,"ProgramHeader"],[8,"SectionHeader"],[8,"Sym"],[8,"Rela"],[8,"CompressionHeader"],[8,"NoteHeader"],[3,"MachOFile"],[3,"SymbolTable"],[8,"MachHeader"],[8,"Segment"],[8,"Section"],[8,"Nlist"],[3,"PeFile"],[8,"ImageNtHeaders"],[8,"ImageOptionalHeader"],[8,"Object"],[8,"ObjectSegment"],[8,"ObjectSection"],[3,"Symbol"],[3,"SymbolMap"],[3,"Relocation"],[3,"FileHeader32"],[3,"FileHeader64"],[3,"Ident"],[3,"SectionHeader32"],[3,"SectionHeader64"],[3,"CompressionHeader32"],[3,"CompressionHeader64"],[3,"Sym32"],[3,"Sym64"],[3,"Rel32"],[3,"Rela32"],[3,"Rel64"],[3,"Rela64"],[3,"ProgramHeader32"],[3,"ProgramHeader64"],[3,"NoteHeader32"],[3,"NoteHeader64"],[3,"FatHeader"],[3,"FatArch32"],[3,"FatArch64"],[3,"MachHeader32"],[3,"MachHeader64"],[3,"LoadCommand"],[3,"LcStr"],[3,"SegmentCommand32"],[3,"SegmentCommand64"],[3,"Section32"],[3,"Section64"],[3,"Fvmlib"],[3,"FvmlibCommand"],[3,"Dylib"],[3,"DylibCommand"],[3,"SubFrameworkCommand"],[3,"SubClientCommand"],[3,"SubUmbrellaCommand"],[3,"SubLibraryCommand"],[3,"PreboundDylibCommand"],[3,"DylinkerCommand"],[3,"ThreadCommand"],[3,"RoutinesCommand"],[3,"RoutinesCommand_64"],[3,"SymtabCommand"],[3,"DysymtabCommand"],[3,"DylibTableOfContents"],[3,"DylibModule32"],[3,"DylibModule64"],[3,"DylibReference"],[3,"TwolevelHintsCommand"],[3,"TwolevelHint"],[3,"PrebindCksumCommand"],[3,"UuidCommand"],[3,"RpathCommand"],[3,"LinkeditDataCommand"],[3,"EncryptionInfoCommand"],[3,"EncryptionInfoCommand64"],[3,"VersionMinCommand"],[3,"BuildVersionCommand"],[3,"BuildToolVersion"],[3,"DyldInfoCommand"],[3,"LinkerOptionCommand"],[3,"SymSegCommand"],[3,"IdentCommand"],[3,"FvmfileCommand"],[3,"EntryPointCommand"],[3,"SourceVersionCommand"],[3,"DataInCodeEntry"],[3,"NoteCommand"],[3,"Nlist32"],[3,"Nlist64"],[3,"Relocation"],[3,"RelocationInfo"],[3,"ScatteredRelocationInfo"],[3,"ImageDosHeader"],[3,"ImageOs2Header"],[3,"ImageVxdHeader"],[3,"ImageFileHeader"],[3,"ImageDataDirectory"],[3,"ImageOptionalHeader32"],[3,"ImageRomOptionalHeader"],[3,"ImageOptionalHeader64"],[3,"ImageNtHeaders64"],[3,"ImageNtHeaders32"],[3,"ImageRomHeaders"],[3,"Guid"],[3,"AnonObjectHeader"],[3,"AnonObjectHeaderV2"],[3,"AnonObjectHeaderBigobj"],[3,"ImageSectionHeader"],[3,"ImageSymbol"],[3,"ImageSymbolBytes"],[3,"ImageSymbolEx"],[3,"ImageSymbolExBytes"],[3,"ImageAuxSymbolTokenDef"],[3,"ImageAuxSymbolFunction"],[3,"ImageAuxSymbolFunctionBeginEnd"],[3,"ImageAuxSymbolWeak"],[3,"ImageAuxSymbolSection"],[3,"ImageAuxSymbolCrc"],[3,"ImageRelocation"],[3,"ImageLinenumber"],[3,"ImageBaseRelocation"],[3,"ImageArchiveMemberHeader"],[3,"ImageExportDirectory"],[3,"ImageImportByName"],[3,"ImageTlsDirectory64"],[3,"ImageTlsDirectory32"],[3,"ImageImportDescriptor"],[3,"ImageBoundImportDescriptor"],[3,"ImageBoundForwarderRef"],[3,"ImageDelayloadDescriptor"],[3,"ImageResourceDirectory"],[3,"ImageResourceDirectoryEntry"],[3,"ImageResourceDirectoryString"],[3,"ImageResourceDirStringU"],[3,"ImageResourceDataEntry"],[3,"ImageLoadConfigCodeIntegrity"],[3,"ImageDynamicRelocationTable"],[3,"ImageDynamicRelocation32"],[3,"ImageDynamicRelocation64"],[3,"ImageDynamicRelocation32V2"],[3,"ImageDynamicRelocation64V2"],[3,"ImagePrologueDynamicRelocationHeader"],[3,"ImageEpilogueDynamicRelocationHeader"],[3,"ImageLoadConfigDirectory32"],[3,"ImageLoadConfigDirectory64"],[3,"ImageHotPatchInfo"],[3,"ImageHotPatchBase"],[3,"ImageHotPatchHashes"],[3,"ImageArmRuntimeFunctionEntry"],[3,"ImageArm64RuntimeFunctionEntry"],[3,"ImageAlpha64RuntimeFunctionEntry"],[3,"ImageAlphaRuntimeFunctionEntry"],[3,"ImageRuntimeFunctionEntry"],[3,"ImageEnclaveConfig32"],[3,"ImageEnclaveConfig64"],[3,"ImageEnclaveImport"],[3,"ImageDebugDirectory"],[3,"ImageCoffSymbolsHeader"],[3,"ImageDebugMisc"],[3,"ImageFunctionEntry"],[3,"ImageFunctionEntry64"],[3,"ImageSeparateDebugHeader"],[3,"NonPagedDebugInfo"],[3,"ImageArchitectureEntry"],[3,"ImportObjectHeader"],[3,"ImageCor20Header"],[3,"LittleEndian"],[3,"BigEndian"],[3,"SegmentIterator"],[3,"Segment"],[3,"SectionIterator"],[3,"Section"],[3,"SymbolIterator"],[3,"RelocationIterator"],[3,"Error"],[3,"CoffSegmentIterator"],[3,"CoffSegment"],[3,"CoffSectionIterator"],[3,"CoffSection"],[3,"CoffSymbolIterator"],[3,"CoffRelocationIterator"],[3,"ElfSegmentIterator"],[3,"ElfSegment"],[3,"ElfSectionIterator"],[3,"ElfSection"],[3,"ElfSymbolIterator"],[3,"ElfRelocationIterator"],[3,"ElfNoteIterator"],[3,"MachOSegmentIterator"],[3,"MachOSegment"],[3,"MachOSectionIterator"],[3,"MachOSection"],[3,"MachOSymbolIterator"],[3,"MachORelocationIterator"],[3,"PeSegmentIterator"],[3,"PeSegment"],[3,"PeSectionIterator"],[3,"PeSection"],[3,"PeRelocationIterator"],[3,"Syminfo32"],[3,"Syminfo64"],[3,"Dyn32"],[3,"Dyn64"]]};
searchIndex["palette"] = {"doc":"A library that makes linear color calculations and…","i":[[3,"Alpha","palette","An alpha component wrapper for colors.",null,null],[12,"color","","The color.",0,null],[12,"alpha","","The transparency component. 0.0 is fully transparent and…",0,null],[3,"Hsl","","Linear HSL color space.",null,null],[12,"hue","","The hue of the color, in degrees. Decides if it's red,…",1,null],[12,"saturation","","The colorfulness of the color. 0.0 gives gray scale colors…",1,null],[12,"lightness","","Decides how light the color will look. 0.0 will be black,…",1,null],[12,"space","","The white point and RGB primaries this color is adapted…",1,null],[3,"Hsv","","Linear HSV color space.",null,null],[12,"hue","","The hue of the color, in degrees. Decides if it's red,…",2,null],[12,"saturation","","The colorfulness of the color. 0.0 gives gray scale colors…",2,null],[12,"value","","Decides how bright the color will look. 0.0 will be black,…",2,null],[12,"space","","The white point and RGB primaries this color is adapted…",2,null],[3,"Hwb","","Linear HWB color space.",null,null],[12,"hue","","The hue of the color, in degrees. Decides if it's red,…",3,null],[12,"whiteness","","The whiteness of the color. It specifies the amount white…",3,null],[12,"blackness","","The blackness of the color. It specifies the amount black…",3,null],[12,"space","","The white point and RGB primaries this color is adapted…",3,null],[3,"Lab","","The CIE L*a*b* (CIELAB) color space.",null,null],[12,"l","","L* is the lightness of the color. 0.0 gives absolute black…",4,null],[12,"a","","a* goes from red at -128 to green at 127.",4,null],[12,"b","","b* goes from yellow at -128 to blue at 127.",4,null],[12,"white_point","","The white point associated with the color's illuminant and…",4,null],[3,"Lch","","CIE L*C*h°, a polar version of CIE L*a*b*.",null,null],[12,"l","","L* is the lightness of the color. 0.0 gives absolute black…",5,null],[12,"chroma","","C* is the colorfulness of the color. It's similar to…",5,null],[12,"hue","","The hue of the color, in degrees. Decides if it's red,…",5,null],[12,"white_point","","The white point associated with the color's illuminant and…",5,null],[3,"Xyz","","The CIE 1931 XYZ color space.",null,null],[12,"x","","X is the scale of what can be seen as a response curve for…",6,null],[12,"y","","Y is the luminance of the color, where 0.0 is black and…",6,null],[12,"z","","Z is the scale of what can be seen as the blue…",6,null],[12,"white_point","","The white point associated with the color's illuminant and…",6,null],[3,"Yxy","","The CIE 1931 Yxy (xyY)  color space.",null,null],[12,"x","","x chromacity co-ordinate derived from XYZ color space as…",7,null],[12,"y","","y chromacity co-ordinate derived from XYZ color space as…",7,null],[12,"luma","","luma (Y) was a measure of the brightness or luminance of a…",7,null],[12,"white_point","","The white point associated with the color's illuminant and…",7,null],[3,"OutOfBounds","","The error type for a color conversion that converted a…",null,null],[3,"LabHue","","A hue type for the CIE L*a*b* family of color spaces.",null,null],[3,"RgbHue","","A hue type for the RGB family of color spaces.",null,null],[0,"blend","","Color blending and blending equations.",null,null],[3,"Equations","palette::blend","A pair of blending equations and corresponding parameters.",null,null],[12,"color_equation","","The equation for the color components.",8,null],[12,"alpha_equation","","The equation for the alpha component.",8,null],[12,"color_parameters","","The parameters for the color components.",8,null],[12,"alpha_parameters","","The parameters for the alpha component.",8,null],[3,"Parameters","","A pair of source and destination parameters.",null,null],[12,"source","","The source parameter.",9,null],[12,"destination","","The destination parameter.",9,null],[3,"PreAlpha","","Premultiplied alpha wrapper.",null,null],[12,"color","","The premultiplied color components (`original.color *…",10,null],[12,"alpha","","The transparency component. 0.0 is fully transparent and…",10,null],[4,"Equation","","A blending equation.",null,null],[13,"Add","","Add the source and destination, according to `sp * S + dp…",11,null],[13,"Subtract","","Subtract the destination from the source, according to `sp…",11,null],[13,"ReverseSubtract","","Subtract the source from the destination, according to `dp…",11,null],[13,"Min","","Create a color where each component is the smallest of…",11,null],[13,"Max","","Create a color where each component is the largest of each…",11,null],[4,"Parameter","","A blending parameter.",null,null],[13,"One","","A simple 1.",12,null],[13,"Zero","","A simple 0.",12,null],[13,"SourceColor","","The source color, or alpha.",12,null],[13,"OneMinusSourceColor","","One minus the source color, or alpha.",12,null],[13,"DestinationColor","","The destination color, or alpha.",12,null],[13,"OneMinusDestinationColor","","One minus the destination color, or alpha.",12,null],[13,"SourceAlpha","","The source alpha.",12,null],[13,"OneMinusSourceAlpha","","One minus the source alpha.",12,null],[13,"DestinationAlpha","","The destination alpha.",12,null],[13,"OneMinusDestinationAlpha","","One minus the destination alpha.",12,null],[11,"from_equations","","Create a pair of blending equations, where all the…",8,[[["equation"]],["equations"]]],[11,"from_parameters","","Create a pair of additive blending equations with the…",8,[[["parameter"]],["equations"]]],[8,"Blend","","A trait for colors that can be blended together.",null,null],[16,"Color","","The core color type. Typically `Self` for color types…",13,null],[10,"into_premultiplied","","Convert the color to premultiplied alpha.",13,[[],["prealpha"]]],[10,"from_premultiplied","","Convert the color from premultiplied alpha.",13,[[["prealpha"]],["self"]]],[11,"blend","","Blend self, as the source color, with `destination`, using…",13,[[["f"]],["self"]]],[11,"over","","Place `self` over `other`. This is the good old common…",13,[[],["self"]]],[11,"inside","","Results in the parts of `self` that overlaps the visible…",13,[[],["self"]]],[11,"outside","","Results in the parts of `self` that lies outside the…",13,[[],["self"]]],[11,"atop","","Place `self` over only the visible parts of `other`.",13,[[],["self"]]],[11,"xor","","Results in either `self` or `other`, where they do not…",13,[[],["self"]]],[11,"plus","","Add `self` and `other`. This uses the alpha component to…",13,[[],["self"]]],[11,"multiply","","Multiply `self` with `other`. This uses the alpha…",13,[[],["self"]]],[11,"screen","","Make a color which is at least as light as `self` or…",13,[[],["self"]]],[11,"overlay","","Multiply `self` or `other` if other is dark, or screen…",13,[[],["self"]]],[11,"darken","","Return the darkest parts of `self` and `other`.",13,[[],["self"]]],[11,"lighten","","Return the lightest parts of `self` and `other`.",13,[[],["self"]]],[11,"dodge","","Lighten `other` to reflect `self`. Results in `other` if…",13,[[],["self"]]],[11,"burn","","Darken `other` to reflect `self`. Results in `other` if…",13,[[],["self"]]],[11,"hard_light","","Multiply `self` or `other` if other is dark, or screen…",13,[[],["self"]]],[11,"soft_light","","Lighten `other` if `self` is light, or darken `other` as…",13,[[],["self"]]],[11,"difference","","Return the absolute difference between `self` and `other`.…",13,[[],["self"]]],[11,"exclusion","","Similar to `difference`, but appears to result in a lower…",13,[[],["self"]]],[8,"BlendFunction","","A trait for custom blend functions.",null,null],[10,"apply_to","","Apply this blend function to a pair of colors.",14,[[["prealpha"]],["prealpha"]]],[0,"gradient","palette","Types for interpolation between multiple colors.",null,null],[3,"Gradient","palette::gradient","A linear interpolation between colors.",null,null],[3,"Take","","An iterator over interpolated colors.",null,null],[3,"Slice","","A slice of a Gradient that limits its domain.",null,null],[3,"Range","","A domain range for gradient slices.",null,null],[11,"new","","Create a gradient of evenly spaced colors with the domain…",15,[[["intoiterator"]],["gradient"]]],[11,"with_domain","","Create a gradient of colors with custom spacing and…",15,[[["vec"]],["gradient"]]],[11,"get","","Get a color from the gradient. The color of the closest…",15,[[["self"]],["c"]]],[11,"take","","Take `n` evenly spaced colors from the gradient, as an…",15,[[["self"],["usize"]],["take"]]],[11,"slice","","Slice this gradient to limit its domain.",15,[[["into",["range"]],["self"],["range"]],["slice"]]],[11,"domain","","Get the limits of this gradient's domain.",15,[[["self"]]]],[11,"get","","Get a color from the gradient slice. The color of the…",16,[[["self"]],["c"]]],[11,"take","","Take `n` evenly spaced colors from the gradient slice, as…",16,[[["self"],["usize"]],["take"]]],[11,"slice","","Slice this gradient slice to further limit its domain.…",16,[[["into",["range"]],["self"],["range"]],["slice"]]],[11,"domain","","Get the limits of this gradient slice's domain.",16,[[["self"]]]],[0,"named","palette","A collection of named color constants. Can be toggled with…",null,null],[5,"from_str","palette::named","Get a SVG/CSS3 color by name. Can be toggled with the…",null,[[["str"]],[["option",["srgb"]],["srgb",["u8"]]]]],[17,"ALICEBLUE","","",null,null],[17,"ANTIQUEWHITE","","",null,null],[17,"AQUA","","",null,null],[17,"AQUAMARINE","","",null,null],[17,"AZURE","","",null,null],[17,"BEIGE","","",null,null],[17,"BISQUE","","",null,null],[17,"BLACK","","",null,null],[17,"BLANCHEDALMOND","","",null,null],[17,"BLUE","","",null,null],[17,"BLUEVIOLET","","",null,null],[17,"BROWN","","",null,null],[17,"BURLYWOOD","","",null,null],[17,"CADETBLUE","","",null,null],[17,"CHARTREUSE","","",null,null],[17,"CHOCOLATE","","",null,null],[17,"CORAL","","",null,null],[17,"CORNFLOWERBLUE","","",null,null],[17,"CORNSILK","","",null,null],[17,"CRIMSON","","",null,null],[17,"CYAN","","",null,null],[17,"DARKBLUE","","",null,null],[17,"DARKCYAN","","",null,null],[17,"DARKGOLDENROD","","",null,null],[17,"DARKGRAY","","",null,null],[17,"DARKGREEN","","",null,null],[17,"DARKGREY","","",null,null],[17,"DARKKHAKI","","",null,null],[17,"DARKMAGENTA","","",null,null],[17,"DARKOLIVEGREEN","","",null,null],[17,"DARKORANGE","","",null,null],[17,"DARKORCHID","","",null,null],[17,"DARKRED","","",null,null],[17,"DARKSALMON","","",null,null],[17,"DARKSEAGREEN","","",null,null],[17,"DARKSLATEBLUE","","",null,null],[17,"DARKSLATEGRAY","","",null,null],[17,"DARKSLATEGREY","","",null,null],[17,"DARKTURQUOISE","","",null,null],[17,"DARKVIOLET","","",null,null],[17,"DEEPPINK","","",null,null],[17,"DEEPSKYBLUE","","",null,null],[17,"DIMGRAY","","",null,null],[17,"DIMGREY","","",null,null],[17,"DODGERBLUE","","",null,null],[17,"FIREBRICK","","",null,null],[17,"FLORALWHITE","","",null,null],[17,"FORESTGREEN","","",null,null],[17,"FUCHSIA","","",null,null],[17,"GAINSBORO","","",null,null],[17,"GHOSTWHITE","","",null,null],[17,"GOLD","","",null,null],[17,"GOLDENROD","","",null,null],[17,"GRAY","","",null,null],[17,"GREY","","",null,null],[17,"GREEN","","",null,null],[17,"GREENYELLOW","","",null,null],[17,"HONEYDEW","","",null,null],[17,"HOTPINK","","",null,null],[17,"INDIANRED","","",null,null],[17,"INDIGO","","",null,null],[17,"IVORY","","",null,null],[17,"KHAKI","","",null,null],[17,"LAVENDER","","",null,null],[17,"LAVENDERBLUSH","","",null,null],[17,"LAWNGREEN","","",null,null],[17,"LEMONCHIFFON","","",null,null],[17,"LIGHTBLUE","","",null,null],[17,"LIGHTCORAL","","",null,null],[17,"LIGHTCYAN","","",null,null],[17,"LIGHTGOLDENRODYELLOW","","",null,null],[17,"LIGHTGRAY","","",null,null],[17,"LIGHTGREEN","","",null,null],[17,"LIGHTGREY","","",null,null],[17,"LIGHTPINK","","",null,null],[17,"LIGHTSALMON","","",null,null],[17,"LIGHTSEAGREEN","","",null,null],[17,"LIGHTSKYBLUE","","",null,null],[17,"LIGHTSLATEGRAY","","",null,null],[17,"LIGHTSLATEGREY","","",null,null],[17,"LIGHTSTEELBLUE","","",null,null],[17,"LIGHTYELLOW","","",null,null],[17,"LIME","","",null,null],[17,"LIMEGREEN","","",null,null],[17,"LINEN","","",null,null],[17,"MAGENTA","","",null,null],[17,"MAROON","","",null,null],[17,"MEDIUMAQUAMARINE","","",null,null],[17,"MEDIUMBLUE","","",null,null],[17,"MEDIUMORCHID","","",null,null],[17,"MEDIUMPURPLE","","",null,null],[17,"MEDIUMSEAGREEN","","",null,null],[17,"MEDIUMSLATEBLUE","","",null,null],[17,"MEDIUMSPRINGGREEN","","",null,null],[17,"MEDIUMTURQUOISE","","",null,null],[17,"MEDIUMVIOLETRED","","",null,null],[17,"MIDNIGHTBLUE","","",null,null],[17,"MINTCREAM","","",null,null],[17,"MISTYROSE","","",null,null],[17,"MOCCASIN","","",null,null],[17,"NAVAJOWHITE","","",null,null],[17,"NAVY","","",null,null],[17,"OLDLACE","","",null,null],[17,"OLIVE","","",null,null],[17,"OLIVEDRAB","","",null,null],[17,"ORANGE","","",null,null],[17,"ORANGERED","","",null,null],[17,"ORCHID","","",null,null],[17,"PALEGOLDENROD","","",null,null],[17,"PALEGREEN","","",null,null],[17,"PALETURQUOISE","","",null,null],[17,"PALEVIOLETRED","","",null,null],[17,"PAPAYAWHIP","","",null,null],[17,"PEACHPUFF","","",null,null],[17,"PERU","","",null,null],[17,"PINK","","",null,null],[17,"PLUM","","",null,null],[17,"POWDERBLUE","","",null,null],[17,"PURPLE","","",null,null],[17,"REBECCAPURPLE","","",null,null],[17,"RED","","",null,null],[17,"ROSYBROWN","","",null,null],[17,"ROYALBLUE","","",null,null],[17,"SADDLEBROWN","","",null,null],[17,"SALMON","","",null,null],[17,"SANDYBROWN","","",null,null],[17,"SEAGREEN","","",null,null],[17,"SEASHELL","","",null,null],[17,"SIENNA","","",null,null],[17,"SILVER","","",null,null],[17,"SKYBLUE","","",null,null],[17,"SLATEBLUE","","",null,null],[17,"SLATEGRAY","","",null,null],[17,"SLATEGREY","","",null,null],[17,"SNOW","","",null,null],[17,"SPRINGGREEN","","",null,null],[17,"STEELBLUE","","",null,null],[17,"TAN","","",null,null],[17,"TEAL","","",null,null],[17,"THISTLE","","",null,null],[17,"TOMATO","","",null,null],[17,"TURQUOISE","","",null,null],[17,"VIOLET","","",null,null],[17,"WHEAT","","",null,null],[17,"WHITE","","",null,null],[17,"WHITESMOKE","","",null,null],[17,"YELLOW","","",null,null],[17,"YELLOWGREEN","","",null,null],[11,"new","palette","HSL for linear sRGB.",1,[[["into",["rgbhue"]],["rgbhue"],["t"]],[["hsl",["srgb"]],["srgb"]]]],[11,"with_wp","","Linear HSL.",1,[[["into",["rgbhue"]],["rgbhue"],["t"]],["hsl"]]],[11,"into_components","","Convert to a `(hue, saturation, lightness)` tuple.",1,[[]]],[11,"from_components","","Convert from a `(hue, saturation, lightness)` tuple.",1,[[],["self"]]],[11,"new","","HSL and transparency for linear sRGB.",0,[[["into",["rgbhue"]],["a"],["rgbhue"],["t"]],["self"]]],[11,"with_wp","","Linear HSL and transparency.",0,[[["into",["rgbhue"]],["a"],["rgbhue"],["t"]],["self"]]],[11,"into_components","","Convert to a `(hue, saturation, lightness, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(hue, saturation, lightness, alpha)` tuple.",0,[[],["self"]]],[11,"new","","HSV for linear sRGB.",2,[[["into",["rgbhue"]],["rgbhue"],["t"]],[["hsv",["srgb"]],["srgb"]]]],[11,"with_wp","","Linear HSV.",2,[[["into",["rgbhue"]],["rgbhue"],["t"]],["hsv"]]],[11,"into_components","","Convert to a `(hue, saturation, value)` tuple.",2,[[]]],[11,"from_components","","Convert from a `(hue, saturation, value)` tuple.",2,[[],["self"]]],[11,"new","","HSV and transparency for linear sRGB.",0,[[["into",["rgbhue"]],["a"],["rgbhue"],["t"]],["self"]]],[11,"with_wp","","Linear HSV and transparency.",0,[[["into",["rgbhue"]],["a"],["rgbhue"],["t"]],["self"]]],[11,"into_components","","Convert to a `(hue, saturation, value, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(hue, saturation, value, alpha)` tuple.",0,[[],["self"]]],[11,"new","","HWB for linear sRGB.",3,[[["into",["rgbhue"]],["rgbhue"],["t"]],[["srgb"],["hwb",["srgb"]]]]],[11,"with_wp","","Linear HWB.",3,[[["into",["rgbhue"]],["rgbhue"],["t"]],["hwb"]]],[11,"into_components","","Convert to a `(hue, whiteness, blackness)` tuple.",3,[[]]],[11,"from_components","","Convert from a `(hue, whiteness, blackness)` tuple.",3,[[],["self"]]],[11,"new","","HWB and transparency for linear sRGB.",0,[[["into",["rgbhue"]],["a"],["rgbhue"],["t"]],["self"]]],[11,"with_wp","","Linear HWB and transparency.",0,[[["into",["rgbhue"]],["a"],["rgbhue"],["t"]],["self"]]],[11,"into_components","","Convert to a `(hue, whiteness, blackness, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(hue, whiteness, blackness, alpha)` tuple.",0,[[],["self"]]],[11,"new","","CIE L*a*b* with white point D65.",4,[[["t"]],[["d65"],["lab",["d65"]]]]],[11,"with_wp","","CIE L*a*b*.",4,[[["t"]],["lab"]]],[11,"into_components","","Convert to a `(L\\*, a\\*, b\\*)` tuple.",4,[[]]],[11,"from_components","","Convert from a `(L\\*, a\\*, b\\*)` tuple.",4,[[],["self"]]],[11,"new","","CIE L*a*b* and transparency and white point D65.",0,[[["a"],["t"]],["self"]]],[11,"with_wp","","CIE L*a*b* and transparency.",0,[[["a"],["t"]],["self"]]],[11,"into_components","","Convert to a `(L\\*, a\\*, b\\*, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(L\\*, a\\*, b\\*, alpha)` tuple.",0,[[],["self"]]],[11,"new","","CIE L*C*h° with white point D65.",5,[[["into",["labhue"]],["t"],["labhue"]],[["d65"],["lch",["d65"]]]]],[11,"with_wp","","CIE L*C*h°.",5,[[["into",["labhue"]],["t"],["labhue"]],["lch"]]],[11,"into_components","","Convert to a `(L\\*, C\\*, h°)` tuple.",5,[[]]],[11,"from_components","","Convert from a `(L\\*, C\\*, h°)` tuple.",5,[[],["self"]]],[11,"new","","CIE L*C*h° and transparency with white point D65.",0,[[["a"],["into",["labhue"]],["labhue"],["t"]],["self"]]],[11,"with_wp","","CIE L*C*h° and transparency.",0,[[["a"],["into",["labhue"]],["labhue"],["t"]],["self"]]],[11,"into_components","","Convert to a `(L\\*, C\\*, h°, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(L\\*, C\\*, h°, alpha)` tuple.",0,[[],["self"]]],[0,"luma","","Luminance types.",null,null],[3,"Luma","palette::luma","Luminance.",null,null],[12,"luma","","The lightness of the color. 0.0 is black and 1.0 is white.",17,null],[12,"standard","","The kind of RGB standard. sRGB is the default.",17,null],[11,"new","","Create a luminance color.",17,[[["t"]],["luma"]]],[11,"into_format","","Convert into another component type.",17,[[],[["luma"],["component"]]]],[11,"from_format","","Convert from another component type.",17,[[["luma"],["component"]],["self"]]],[11,"into_components","","Convert to a `(luma,)` tuple.",17,[[]]],[11,"from_components","","Convert from a `(luma,)` tuple.",17,[[],["self"]]],[11,"into_linear","","Convert the color to linear luminance.",17,[[],[["linear"],["luma",["linear"]]]]],[11,"from_linear","","Convert linear luminance to nonlinear luminance.",17,[[["linear"],["luma",["linear"]]],["luma"]]],[11,"into_encoding","","Convert the color to a different encoding.",17,[[],[["luma"],["lumastandard"]]]],[11,"from_encoding","","Convert luminance from a different encoding.",17,[[["luma"],["lumastandard"]],["luma"]]],[11,"new","palette","Create a luminance color with transparency.",0,[[["a"],["t"]],["self"]]],[11,"into_format","","Convert into another component type.",0,[[],[["luma"],["alpha",["luma"]],["component"]]]],[11,"from_format","","Convert from another component type.",0,[[["luma"],["alpha",["luma"]],["component"]],["self"]]],[11,"into_components","","Convert to a `(luma, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(luma, alpha)` tuple.",0,[[],["self"]]],[11,"into_linear","","Convert the color to linear luminance with transparency.",0,[[],[["alpha",["luma"]],["luma",["linear"]]]]],[11,"from_linear","","Convert linear luminance to nonlinear luminance with…",0,[[["alpha",["luma"]],["luma",["linear"]]],[["alpha",["luma"]],["luma"]]]],[11,"into_encoding","","Convert the color to a different encoding with transparency.",0,[[],[["alpha",["luma"]],["luma"]]]],[11,"from_encoding","","Convert luminance from a different encoding with…",0,[[["alpha",["luma"]],["luma"]],[["alpha",["luma"]],["luma"]]]],[6,"Lumaa","palette::luma","Luminance with an alpha component. See the `Lumaa`…",null,null],[6,"SrgbLuma","","sRGB encoded luminance.",null,null],[6,"SrgbLumaa","","sRGB encoded luminance with an alpha component.",null,null],[6,"LinLuma","","Linear luminance.",null,null],[6,"LinLumaa","","Linear luminance with an alpha component.",null,null],[6,"GammaLuma","","Gamma 2.2 encoded luminance.",null,null],[6,"GammaLumaa","","Gamma 2.2 encoded luminance with an alpha component.",null,null],[8,"LumaStandard","","A white point and a transfer function.",null,null],[16,"WhitePoint","","The white point of the color space.",18,null],[16,"TransferFn","","The transfer function for the luminance component.",18,null],[0,"rgb","palette","RGB types, spaces and standards.",null,null],[3,"Rgb","palette::rgb","Generic RGB.",null,null],[12,"red","","The amount of red light, where 0.0 is no red light and…",19,null],[12,"green","","The amount of green light, where 0.0 is no green light and…",19,null],[12,"blue","","The amount of blue light, where 0.0 is no blue light and…",19,null],[12,"standard","","The kind of RGB standard. sRGB is the default.",19,null],[11,"new","","Create an RGB color.",19,[[["t"]],["rgb"]]],[11,"into_format","","Convert into another component type.",19,[[],[["component"],["rgb"]]]],[11,"from_format","","Convert from another component type.",19,[[["component"],["rgb"]],["self"]]],[11,"into_components","","Convert to a `(red, green, blue)` tuple.",19,[[]]],[11,"from_components","","Convert from a `(red, green, blue)` tuple.",19,[[],["self"]]],[11,"into_linear","","Convert the color to linear RGB.",19,[[],[["linear"],["rgb",["linear"]]]]],[11,"from_linear","","Convert linear RGB to nonlinear RGB.",19,[[["linear"],["rgb",["linear"]]],["rgb"]]],[11,"into_encoding","","Convert the color to a different encoding.",19,[[],[["rgb"],["rgbstandard"]]]],[11,"from_encoding","","Convert RGB from a different encoding.",19,[[["rgb"],["rgbstandard"]],["rgb"]]],[11,"new","palette","Nonlinear RGB.",0,[[["a"],["t"]],["self"]]],[11,"into_format","","Convert into another component type.",0,[[],[["alpha",["rgb"]],["component"],["rgb"]]]],[11,"from_format","","Convert from another component type.",0,[[["alpha",["rgb"]],["component"],["rgb"]],["self"]]],[11,"into_components","","Convert to a `(red, green, blue, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(red, green, blue, alpha)` tuple.",0,[[],["self"]]],[11,"into_linear","","Convert the color to linear RGB with transparency.",0,[[],[["alpha",["rgb"]],["rgb",["linear"]]]]],[11,"from_linear","","Convert linear RGB to nonlinear RGB with transparency.",0,[[["alpha",["rgb"]],["rgb",["linear"]]],["self"]]],[11,"into_encoding","","Convert the color to a different encoding with transparency.",0,[[],[["rgb"],["alpha",["rgb"]]]]],[11,"from_encoding","","Convert RGB from a different encoding with transparency.",0,[[["rgb"],["alpha",["rgb"]]],["self"]]],[6,"Rgba","palette::rgb","Generic RGB with an alpha component. See the `Rgba`…",null,null],[6,"Srgb","","Nonlinear sRGB.",null,null],[6,"Srgba","","Nonlinear sRGB with an alpha component.",null,null],[6,"LinSrgb","","Linear sRGB.",null,null],[6,"LinSrgba","","Linear sRGB with an alpha component.",null,null],[6,"GammaSrgb","","Gamma 2.2 encoded sRGB.",null,null],[6,"GammaSrgba","","Gamma 2.2 encoded sRGB with an alpha component.",null,null],[8,"RgbStandard","","An RGB space and a transfer function.",null,null],[16,"Space","","The RGB color space.",20,null],[16,"TransferFn","","The transfer function for the color components.",20,null],[8,"RgbSpace","","A set of primaries and a white point.",null,null],[16,"Primaries","","The primaries of the RGB color space.",21,null],[16,"WhitePoint","","The white point of the RGB color space.",21,null],[8,"Primaries","","Represents the red, green and blue primaries of an RGB…",null,null],[10,"red","","Primary red.",22,[[],[["float"],["whitepoint"],["component"],["yxy"]]]],[10,"green","","Primary green.",22,[[],[["float"],["whitepoint"],["component"],["yxy"]]]],[10,"blue","","Primary blue.",22,[[],[["float"],["whitepoint"],["component"],["yxy"]]]],[11,"new","palette","CIE XYZ with whtie point D65.",6,[[["t"]],[["d65"],["xyz",["d65"]]]]],[11,"with_wp","","CIE XYZ.",6,[[["t"]],["xyz"]]],[11,"into_components","","Convert to a `(X, Y, Z)` tuple.",6,[[]]],[11,"from_components","","Convert from a `(X, Y, Z)` tuple.",6,[[],["self"]]],[11,"new","","CIE Yxy and transparency with white point D65.",0,[[["a"],["t"]],["self"]]],[11,"with_wp","","CIE XYZ and transparency.",0,[[["a"],["t"]],["self"]]],[11,"into_components","","Convert to a `(X, Y, Z, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(X, Y, Z, alpha)` tuple.",0,[[],["self"]]],[11,"new","","CIE Yxy with white point D65.",7,[[["t"]],[["d65"],["yxy",["d65"]]]]],[11,"with_wp","","CIE Yxy.",7,[[["t"]],["yxy"]]],[11,"into_components","","Convert to a `(x, y, luma)`, a.k.a. `(x, y, Y)` tuple.",7,[[]]],[11,"from_components","","Convert from a `(x, y, luma)`, a.k.a. `(x, y, Y)` tuple.",7,[[],["self"]]],[11,"new","","CIE Yxy and transparency with white point D65.",0,[[["a"],["t"]],["self"]]],[11,"with_wp","","CIE Yxy and transparency.",0,[[["a"],["t"]],["self"]]],[11,"into_components","","Convert to a `(x, y, luma)`, a.k.a. `(x, y, Y)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(x, y, luma)`, a.k.a. `(x, y, Y)` tuple.",0,[[],["self"]]],[11,"from_degrees","","Create a new hue from degrees.",23,[[["t"]],["labhue"]]],[11,"from_radians","","Create a new hue from radians, instead of degrees.",23,[[["t"]],["labhue"]]],[11,"to_degrees","","Get the hue as degrees, in the range `(-180, 180]`.",23,[[],["t"]]],[11,"to_radians","","Convert the hue to radians, in the range `(-π, π]`.",23,[[],["t"]]],[11,"to_positive_degrees","","Convert the hue to positive degrees, in the range `[0,…",23,[[],["t"]]],[11,"to_positive_radians","","Convert the hue to positive radians, in the range `[0, 2π)`.",23,[[],["t"]]],[11,"to_raw_degrees","","Get the internal representation, without normalizing it.",23,[[],["t"]]],[11,"to_raw_radians","","Get the internal representation as radians, without…",23,[[],["t"]]],[11,"from_degrees","","Create a new hue from degrees.",24,[[["t"]],["rgbhue"]]],[11,"from_radians","","Create a new hue from radians, instead of degrees.",24,[[["t"]],["rgbhue"]]],[11,"to_degrees","","Get the hue as degrees, in the range `(-180, 180]`.",24,[[],["t"]]],[11,"to_radians","","Convert the hue to radians, in the range `(-π, π]`.",24,[[],["t"]]],[11,"to_positive_degrees","","Convert the hue to positive degrees, in the range `[0,…",24,[[],["t"]]],[11,"to_positive_radians","","Convert the hue to positive radians, in the range `[0, 2π)`.",24,[[],["t"]]],[11,"to_raw_degrees","","Get the internal representation, without normalizing it.",24,[[],["t"]]],[11,"to_raw_radians","","Get the internal representation as radians, without…",24,[[],["t"]]],[0,"chromatic_adaptation","","Convert colors from one reference white point to another",null,null],[3,"ConeResponseMatrices","palette::chromatic_adaptation","Holds the matrix coeffecients for the chromatic adaptation…",null,null],[12,"ma","","3x3 matrix for the cone response domains",25,null],[12,"inv_ma","","3x3 matrix for the inverse of the cone response domains",25,null],[4,"Method","","Chromatic adaptation methods implemented in the library",null,null],[13,"Bradford","","Bradford chromatic adaptation method",26,null],[13,"VonKries","","VonKries chromatic adaptation method",26,null],[13,"XyzScaling","","XyzScaling chromatic adaptation method",26,null],[8,"TransformMatrix","","Generates a conversion matrix to convert the Xyz…",null,null],[10,"get_cone_response","","Get the cone response functions for the chromatic…",27,[[["self"]],["coneresponsematrices"]]],[11,"generate_transform_matrix","","Generates a 3x3 transformation matrix to convert color…",27,[[["self"]],["mat3"]]],[8,"AdaptFrom","","Trait to convert color from one reference white point to…",null,null],[11,"adapt_from","","Convert the source color to the destination color using…",28,[[["s"]],["self"]]],[10,"adapt_from_using","","Convert the source color to the destination color using…",28,[[["s"],["transformmatrix"]],["self"]]],[8,"AdaptInto","","Trait to convert color with one reference white point into…",null,null],[11,"adapt_into","","Convert the source color to the destination color using…",29,[[],["d"]]],[10,"adapt_into_using","","Convert the source color to the destination color using…",29,[[["transformmatrix"]],["d"]]],[11,"color","palette","Consume this error and return the wrapped color",30,[[],["t"]]],[0,"encoding","","Various encoding traits, types and standards.",null,null],[0,"srgb","palette::encoding","The sRGB standard.",null,null],[3,"Srgb","palette::encoding::srgb","The sRGB color space.",null,null],[0,"gamma","palette::encoding","Gamma encoding.",null,null],[3,"Gamma","palette::encoding::gamma","Gamma encoding.",null,null],[3,"GammaFn","","The transfer function for gamma encoded colors.",null,null],[3,"F2p2","","Represents `2.2f32`.",null,null],[8,"Number","","A type level float constant.",null,null],[18,"VALUE","","The represented number.",31,null],[0,"linear","palette::encoding","Linear encoding",null,null],[3,"Linear","palette::encoding::linear","A generic standard with linear components.",null,null],[3,"LinearFn","","Linear color component encoding.",null,null],[0,"pixel","palette::encoding","Pixel encodings and pixel format conversion.",null,null],[8,"RawPixelSized","palette::encoding::pixel","A contiguous sequence of pixel channels with a known length.",null,null],[18,"CHANNELS","","The guaranteed number of channels in the sequence.",32,null],[8,"RawPixel","","A contiguous sequence of pixel channels.",null,null],[10,"channels","","The length of the sequence.",33,[[["self"]],["usize"]]],[10,"from_raw_parts","","Convert from a pointer and a length.",33,[[["usize"]],["self"]]],[10,"from_raw_parts_mut","","Convert from a mutable pointer and a length.",33,[[["usize"]],["self"]]],[10,"as_ptr","","Convert to a pointer.",33,[[["self"]]]],[10,"as_mut_ptr","","Convert to a mutable pointer.",33,[[["self"]]]],[8,"Pixel","","Represents colors that can be serialized and deserialized…",null,null],[18,"CHANNELS","","The number of color channels.",34,null],[11,"as_raw","","Cast as a reference to raw color components.",34,[[["self"]],["p"]]],[11,"as_raw_mut","","Cast as a mutable reference to raw color components.",34,[[["self"]],["p"]]],[11,"into_raw","","Convert from raw color components.",34,[[],["rawpixelsized"]]],[11,"from_raw","","Cast from a reference to raw color components.",34,[[["p"]],["self"]]],[11,"from_raw_mut","","Cast from a mutable reference to raw color components.",34,[[["p"]],["self"]]],[11,"from_raw_slice","","Cast a slice of raw color components to a slice of colors.",34,[[]]],[11,"from_raw_slice_mut","","Cast a mutable slice of raw color components to a mutable…",34,[[]]],[11,"into_raw_slice","","Cast a slice of colors to a slice of raw color components.",34,[[]]],[11,"into_raw_slice_mut","","Cast a mutable slice of colors to a mutable slice of raw…",34,[[]]],[8,"TransferFn","palette::encoding","A transfer function to and from linear space.",null,null],[10,"from_linear","","Convert the color component `x` from linear space.",35,[[["float"]],["float"]]],[10,"into_linear","","Convert the color component `x` into linear space.",35,[[["float"]],["float"]]],[0,"white_point","palette","Defines the tristimulus values of the CIE Illuminants.",null,null],[3,"A","palette::white_point","CIE standard illuminant A",null,null],[3,"B","","CIE standard illuminant B",null,null],[3,"C","","CIE standard illuminant C",null,null],[3,"D50","","CIE D series standard illuminant - D50",null,null],[3,"D55","","CIE D series standard illuminant - D55",null,null],[3,"D65","","CIE D series standard illuminant - D65",null,null],[3,"D75","","CIE D series standard illuminant - D75",null,null],[3,"E","","CIE standard illuminant E",null,null],[3,"F2","","CIE fluorescent illuminant series - F2",null,null],[3,"F7","","CIE fluorescent illuminant series - F7",null,null],[3,"F11","","CIE fluorescent illuminant series - F11",null,null],[3,"D50Degree10","","CIE D series standard illuminant - D50",null,null],[3,"D55Degree10","","CIE D series standard illuminant - D55",null,null],[3,"D65Degree10","","CIE D series standard illuminant - D65",null,null],[3,"D75Degree10","","CIE D series standard illuminant - D75",null,null],[8,"WhitePoint","","WhitePoint defines the Xyz color co-ordinates for a given…",null,null],[10,"get_xyz","","Get the Xyz chromacity co-ordinates for the white point.",36,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[0,"float","palette","Floating point trait",null,null],[8,"Float","palette::float","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",37,[[],["self"]]],[10,"infinity","","Returns the infinite value.",37,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",37,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",37,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",37,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",37,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",37,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",37,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",37,[[],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",37,[[],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",37,[[],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",37,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",37,[[],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",37,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",37,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",37,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",37,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",37,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",37,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",37,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",37,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",37,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",37,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",37,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",37,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",37,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",37,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",37,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",37,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",37,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",37,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",37,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",37,[[],["self"]]],[11,"to_degrees","","Converts radians to degrees.",37,[[],["self"]]],[11,"to_radians","","Converts degrees to radians.",37,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",37,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",37,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",37,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",37,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",37,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",37,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",37,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",37,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",37,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",37,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",37,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",37,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",37,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",37,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",37,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",37,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",37,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",37,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",37,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",37,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",37,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",37,[[]]],[6,"Hsla","palette","Linear HSL with an alpha component. See the `Hsla`…",null,null],[6,"Hsva","","Linear HSV with an alpha component. See the `Hsva`…",null,null],[6,"Hwba","","Linear HWB with an alpha component. See the `Hwba`…",null,null],[6,"Laba","","CIE L*a*b* (CIELAB) with an alpha component. See the…",null,null],[6,"Lcha","","CIE L*C*h° with an alpha component. See the `Lcha`…",null,null],[6,"Xyza","","CIE 1931 XYZ with an alpha component. See the `Xyza`…",null,null],[6,"Yxya","","CIE 1931 Yxy (xyY) with an alpha component. See the `Yxya`…",null,null],[6,"Mat3","","A 9 element array representing a 3x3 matrix",null,null],[8,"Blend","","A trait for colors that can be blended together.",null,null],[16,"Color","","The core color type. Typically `Self` for color types…",13,null],[10,"into_premultiplied","","Convert the color to premultiplied alpha.",13,[[],["prealpha"]]],[10,"from_premultiplied","","Convert the color from premultiplied alpha.",13,[[["prealpha"]],["self"]]],[11,"blend","palette::blend","Blend self, as the source color, with `destination`, using…",13,[[["f"]],["self"]]],[11,"over","","Place `self` over `other`. This is the good old common…",13,[[],["self"]]],[11,"inside","","Results in the parts of `self` that overlaps the visible…",13,[[],["self"]]],[11,"outside","","Results in the parts of `self` that lies outside the…",13,[[],["self"]]],[11,"atop","","Place `self` over only the visible parts of `other`.",13,[[],["self"]]],[11,"xor","","Results in either `self` or `other`, where they do not…",13,[[],["self"]]],[11,"plus","","Add `self` and `other`. This uses the alpha component to…",13,[[],["self"]]],[11,"multiply","","Multiply `self` with `other`. This uses the alpha…",13,[[],["self"]]],[11,"screen","","Make a color which is at least as light as `self` or…",13,[[],["self"]]],[11,"overlay","","Multiply `self` or `other` if other is dark, or screen…",13,[[],["self"]]],[11,"darken","","Return the darkest parts of `self` and `other`.",13,[[],["self"]]],[11,"lighten","","Return the lightest parts of `self` and `other`.",13,[[],["self"]]],[11,"dodge","","Lighten `other` to reflect `self`. Results in `other` if…",13,[[],["self"]]],[11,"burn","","Darken `other` to reflect `self`. Results in `other` if…",13,[[],["self"]]],[11,"hard_light","","Multiply `self` or `other` if other is dark, or screen…",13,[[],["self"]]],[11,"soft_light","","Lighten `other` if `self` is light, or darken `other` as…",13,[[],["self"]]],[11,"difference","","Return the absolute difference between `self` and `other`.…",13,[[],["self"]]],[11,"exclusion","","Similar to `difference`, but appears to result in a lower…",13,[[],["self"]]],[8,"ConvertFrom","palette","A trait for converting one color from another.",null,null],[10,"convert_from","","Convert from T with values clamped to the color defined…",38,[[["t"]],["self"]]],[11,"convert_unclamped_from","","Convert from T. The resulting color might be invalid in…",38,[[["t"]],["self"]]],[10,"try_convert_from","","Convert from T, returning ok if the color is inside of its…",38,[[["t"]],[["result",["outofbounds"]],["outofbounds"]]]],[8,"ConvertInto","","A trait for converting a color into another.",null,null],[10,"convert_into","","Convert into T with values clamped to the color defined…",39,[[],["t"]]],[10,"convert_unclamped_into","","Convert into T. The resulting color might be invalid in…",39,[[],["t"]]],[10,"try_convert_into","","Convert into T, returning ok if the color is inside of its…",39,[[],[["result",["outofbounds"]],["outofbounds"]]]],[8,"FromColor","","FromColor provides conversion from the colors.",null,null],[10,"from_xyz","","Convert from XYZ color space",40,[[["xyz"]],["self"]]],[11,"from_yxy","","Convert from Yxy color space",40,[[["yxy"]],["self"]]],[11,"from_lab","","Convert from L*a*b* color space",40,[[["lab"]],["self"]]],[11,"from_lch","","Convert from L*C*h° color space",40,[[["lch"]],["self"]]],[11,"from_rgb","","Convert from RGB color space",40,[[["rgb",["linear"]],["linear"]],["self"]]],[11,"from_hsl","","Convert from HSL color space",40,[[["rgbspace"],["hsl"]],["self"]]],[11,"from_hsv","","Convert from HSV color space",40,[[["rgbspace"],["hsv"]],["self"]]],[11,"from_hwb","","Convert from HWB color space",40,[[["rgbspace"],["hwb"]],["self"]]],[11,"from_luma","","Convert from Luma",40,[[["luma",["linear"]],["linear"]],["self"]]],[8,"IntoColor","","IntoColor provides conversion to the colors.",null,null],[10,"into_xyz","","Convert into XYZ space",41,[[],["xyz"]]],[11,"into_yxy","","Convert into Yxy color space",41,[[],["yxy"]]],[11,"into_lab","","Convert into L*a*b* color space",41,[[],["lab"]]],[11,"into_lch","","Convert into L*C*h° color space",41,[[],["lch"]]],[11,"into_rgb","","Convert into RGB color space.",41,[[],[["linear"],["rgb",["linear"]]]]],[11,"into_hsl","","Convert into HSL color space",41,[[],[["rgbspace"],["hsl"]]]],[11,"into_hsv","","Convert into HSV color space",41,[[],[["rgbspace"],["hsv"]]]],[11,"into_hwb","","Convert into HWB color space",41,[[],[["rgbspace"],["hwb"]]]],[11,"into_luma","","Convert into Luma",41,[[],[["linear"],["luma",["linear"]]]]],[8,"Limited","","A trait for clamping and checking if colors are within…",null,null],[10,"is_valid","","Check if the color's components are within the expected…",42,[[["self"]],["bool"]]],[10,"clamp","","Return a new color where the components has been clamped…",42,[[["self"]],["self"]]],[10,"clamp_self","","Clamp the color's components to the nearest valid values.",42,[[["self"]]]],[8,"Mix","","A trait for linear color interpolation.",null,null],[16,"Scalar","","The type of the mixing factor.",43,null],[10,"mix","","Mix the color with an other color, by `factor`.",43,[[["self"]],["self"]]],[8,"Shade","","The `Shade` trait allows a color to be lightened or…",null,null],[16,"Scalar","","The type of the lighten/darken amount.",44,null],[10,"lighten","","Lighten the color by `amount`.",44,[[["self"]],["self"]]],[11,"darken","","Darken the color by `amount`.",44,[[["self"]],["self"]]],[8,"GetHue","","A trait for colors where a hue may be calculated.",null,null],[16,"Hue","","The kind of hue unit this color space uses.",45,null],[10,"get_hue","","Calculate a hue if possible.",45,[[["self"]],["option"]]],[8,"Hue","","A trait for colors where the hue can be manipulated…",null,null],[10,"with_hue","","Return a new copy of `self`, but with a specific hue.",46,[[["into"],["self"]],["self"]]],[10,"shift_hue","","Return a new copy of `self`, but with the hue shifted by…",46,[[["into"],["self"]],["self"]]],[8,"Saturate","","A trait for colors where the saturation (or chroma) can be…",null,null],[16,"Scalar","","The type of the (de)saturation factor.",47,null],[10,"saturate","","Increase the saturation by `factor`.",47,[[["self"]],["self"]]],[11,"desaturate","","Decrease the saturation by `factor`.",47,[[["self"]],["self"]]],[8,"ComponentWise","","Perform a unary or binary operation on each component of a…",null,null],[16,"Scalar","","The scalar type for color components.",48,null],[10,"component_wise","","Perform a binary operation on this and an other color.",48,[[["self"],["fnmut"]],["self"]]],[10,"component_wise_self","","Perform a unary operation on this color.",48,[[["fnmut"],["self"]],["self"]]],[8,"Component","","Common trait for color components.",null,null],[18,"LIMITED","","True if the max intensity is also the highest possible…",49,null],[10,"max_intensity","","The highest displayable value this component type can…",49,[[],["self"]]],[10,"convert","","Convert into another color component type, including…",49,[[["self"]],["component"]]],[11,"adapt_into_using","","",0,[[["m"]],["d"]]],[11,"from","","",0,[[],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",1,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",1,[[["m"]],["d"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",2,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",2,[[["m"]],["d"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",3,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",3,[[["m"]],["d"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",4,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",4,[[["m"]],["d"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",5,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",5,[[["m"]],["d"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",6,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",6,[[["m"]],["d"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",7,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",7,[[["m"]],["d"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",30,[[["m"]],["d"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",23,[[["m"]],["d"]]],[11,"from","","",23,[[],["t"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",24,[[["m"]],["d"]]],[11,"from","","",24,[[],["t"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"apply_to","palette::blend","",8,[[["prealpha"]],["prealpha"]]],[11,"adapt_into_using","","",8,[[["m"]],["d"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",9,[[["m"]],["d"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",10,[[["m"]],["d"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",11,[[["m"]],["d"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",12,[[["m"]],["d"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::gradient","",15,[[["m"]],["d"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",50,[[["m"]],["d"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"into_iter","","",50,[[],["i"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",16,[[["m"]],["d"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",51,[[["m"]],["d"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"adapt_from_using","palette::luma","",17,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",17,[[["m"]],["d"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"adapt_from_using","palette::rgb","",19,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",19,[[["m"]],["d"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::chromatic_adaptation","",25,[[["m"]],["d"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",26,[[["m"]],["d"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::encoding::srgb","",52,[[["m"]],["d"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::encoding::gamma","",53,[[["m"]],["d"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",54,[[["m"]],["d"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",55,[[["m"]],["d"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::encoding::linear","",56,[[["m"]],["d"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",57,[[["m"]],["d"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::white_point","",58,[[["m"]],["d"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",59,[[["m"]],["d"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",60,[[["m"]],["d"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",61,[[["m"]],["d"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",62,[[["m"]],["d"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",63,[[["m"]],["d"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",64,[[["m"]],["d"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",65,[[["m"]],["d"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",66,[[["m"]],["d"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",67,[[["m"]],["d"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",68,[[["m"]],["d"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",69,[[["m"]],["d"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",70,[[["m"]],["d"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",71,[[["m"]],["d"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",72,[[["m"]],["d"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"into_premultiplied","palette::blend","",10,[[],["prealpha"]]],[11,"from_premultiplied","","",10,[[["prealpha"]],["prealpha"]]],[11,"into_premultiplied","palette","",0,[[],["prealpha"]]],[11,"from_premultiplied","","",0,[[["prealpha"]],["alpha"]]],[11,"into_premultiplied","palette::luma","",17,[[],[["prealpha",["luma"]],["luma"]]]],[11,"from_premultiplied","","",17,[[["prealpha",["luma"]],["luma"]],["self"]]],[11,"into_premultiplied","palette::rgb","",19,[[],[["rgb"],["prealpha",["rgb"]]]]],[11,"from_premultiplied","","",19,[[["rgb"],["prealpha",["rgb"]]],["self"]]],[11,"apply_to","palette::blend","",8,[[["prealpha"]],["prealpha"]]],[11,"red","palette::encoding::srgb","",52,[[],[["float"],["whitepoint"],["component"],["yxy"]]]],[11,"green","","",52,[[],[["float"],["whitepoint"],["component"],["yxy"]]]],[11,"blue","","",52,[[],[["float"],["whitepoint"],["component"],["yxy"]]]],[11,"get_cone_response","palette::chromatic_adaptation","",26,[[["self"]],["coneresponsematrices"]]],[11,"from_xyz","palette","",1,[[["xyz"]],["self"]]],[11,"from_rgb","","",1,[[["rgb",["linear"]],["linear"]],["self"]]],[11,"from_hsv","","",1,[[["hsv"],["rgbspace"]],["self"]]],[11,"from_hsl","","",1,[[["hsl"],["rgbspace"]],["self"]]],[11,"from_xyz","","",2,[[["xyz"]],["self"]]],[11,"from_rgb","","",2,[[["rgb",["linear"]],["linear"]],["self"]]],[11,"from_hsl","","",2,[[["hsl"],["rgbspace"]],["self"]]],[11,"from_hwb","","",2,[[["hwb"],["rgbspace"]],["self"]]],[11,"from_hsv","","",2,[[["hsv"],["rgbspace"]],["self"]]],[11,"from_xyz","","",3,[[["xyz"]],["self"]]],[11,"from_hsv","","",3,[[["hsv"],["rgbspace"]],["self"]]],[11,"from_hwb","","",3,[[["hwb"],["rgbspace"]],["self"]]],[11,"from_xyz","","",4,[[["xyz"]],["self"]]],[11,"from_lab","","",4,[[["lab"]],["self"]]],[11,"from_lch","","",4,[[["lch"]],["self"]]],[11,"from_xyz","","",5,[[["xyz"]],["self"]]],[11,"from_lab","","",5,[[["lab"]],["self"]]],[11,"from_lch","","",5,[[["lch"]],["self"]]],[11,"from_xyz","palette::luma","",17,[[["xyz"]],["self"]]],[11,"from_yxy","","",17,[[["yxy"]],["self"]]],[11,"from_luma","","",17,[[["luma",["linear"]],["linear"]],["self"]]],[11,"from_xyz","palette::rgb","",19,[[["xyz"]],["self"]]],[11,"from_hsv","","",19,[[["hsv"],["rgbspace"]],["self"]]],[11,"from_hsl","","",19,[[["hsl"],["rgbspace"]],["self"]]],[11,"from_luma","","",19,[[["linear"],["luma",["linear"]]],["self"]]],[11,"from_rgb","","",19,[[["rgb",["linear"]],["linear"]],["self"]]],[11,"from_xyz","palette","",6,[[["xyz"]],["self"]]],[11,"from_rgb","","",6,[[["rgb",["linear"]],["linear"]],["self"]]],[11,"from_lab","","",6,[[["lab"]],["self"]]],[11,"from_yxy","","",6,[[["yxy"]],["self"]]],[11,"from_luma","","",6,[[["luma",["linear"]],["linear"]],["self"]]],[11,"from_xyz","","",7,[[["xyz"]],["self"]]],[11,"from_yxy","","",7,[[["yxy"]],["self"]]],[11,"from_luma","","",7,[[["luma",["linear"]],["linear"]],["self"]]],[11,"into_xyz","palette::luma","",17,[[],["xyz"]]],[11,"into_yxy","","",17,[[],["yxy"]]],[11,"into_luma","","",17,[[],[["linear"],["luma",["linear"]]]]],[11,"into_xyz","palette::rgb","",19,[[],["xyz"]]],[11,"into_yxy","","",19,[[],["yxy"]]],[11,"into_lab","","",19,[[],["lab"]]],[11,"into_lch","","",19,[[],["lch"]]],[11,"into_rgb","","",19,[[],[["rgb",["linear"]],["linear"]]]],[11,"into_hsl","","",19,[[],[["rgbspace"],["hsl"]]]],[11,"into_hsv","","",19,[[],[["rgbspace"],["hsv"]]]],[11,"into_hwb","","",19,[[],[["hwb"],["rgbspace"]]]],[11,"into_luma","","",19,[[],[["linear"],["luma",["linear"]]]]],[11,"into_xyz","palette","",6,[[],["xyz"]]],[11,"into_yxy","","",6,[[],["yxy"]]],[11,"into_lab","","",6,[[],["lab"]]],[11,"into_lch","","",6,[[],["lch"]]],[11,"into_rgb","","",6,[[],[["linear"],["rgb",["linear"]]]]],[11,"into_hsl","","",6,[[],[["rgbspace"],["hsl"]]]],[11,"into_hsv","","",6,[[],[["rgbspace"],["hsv"]]]],[11,"into_luma","","",6,[[],[["linear"],["luma",["linear"]]]]],[11,"into_xyz","","",7,[[],["xyz"]]],[11,"into_yxy","","",7,[[],["yxy"]]],[11,"into_lab","","",7,[[],["lab"]]],[11,"into_lch","","",7,[[],["lch"]]],[11,"into_rgb","","",7,[[],[["linear"],["rgb",["linear"]]]]],[11,"into_hsl","","",7,[[],[["rgbspace"],["hsl"]]]],[11,"into_hsv","","",7,[[],[["rgbspace"],["hsv"]]]],[11,"into_luma","","",7,[[],[["linear"],["luma",["linear"]]]]],[11,"into_xyz","","",4,[[],["xyz"]]],[11,"into_yxy","","",4,[[],["yxy"]]],[11,"into_lab","","",4,[[],["lab"]]],[11,"into_lch","","",4,[[],["lch"]]],[11,"into_rgb","","",4,[[],[["linear"],["rgb",["linear"]]]]],[11,"into_hsl","","",4,[[],[["rgbspace"],["hsl"]]]],[11,"into_hsv","","",4,[[],[["rgbspace"],["hsv"]]]],[11,"into_luma","","",4,[[],[["linear"],["luma",["linear"]]]]],[11,"into_xyz","","",5,[[],["xyz"]]],[11,"into_yxy","","",5,[[],["yxy"]]],[11,"into_lab","","",5,[[],["lab"]]],[11,"into_lch","","",5,[[],["lch"]]],[11,"into_rgb","","",5,[[],[["linear"],["rgb",["linear"]]]]],[11,"into_hsl","","",5,[[],[["rgbspace"],["hsl"]]]],[11,"into_hsv","","",5,[[],[["rgbspace"],["hsv"]]]],[11,"into_luma","","",5,[[],[["linear"],["luma",["linear"]]]]],[11,"into_xyz","","",1,[[],["xyz"]]],[11,"into_yxy","","",1,[[],["yxy"]]],[11,"into_lab","","",1,[[],["lab"]]],[11,"into_lch","","",1,[[],["lch"]]],[11,"into_rgb","","",1,[[],[["rgb",["linear"]],["linear"]]]],[11,"into_hsl","","",1,[[],[["rgbspace"],["hsl"]]]],[11,"into_hsv","","",1,[[],[["rgbspace"],["hsv"]]]],[11,"into_luma","","",1,[[],[["linear"],["luma",["linear"]]]]],[11,"into_xyz","","",2,[[],["xyz"]]],[11,"into_yxy","","",2,[[],["yxy"]]],[11,"into_lab","","",2,[[],["lab"]]],[11,"into_lch","","",2,[[],["lch"]]],[11,"into_rgb","","",2,[[],[["rgb",["linear"]],["linear"]]]],[11,"into_hsl","","",2,[[],[["rgbspace"],["hsl"]]]],[11,"into_hsv","","",2,[[],[["rgbspace"],["hsv"]]]],[11,"into_luma","","",2,[[],[["linear"],["luma",["linear"]]]]],[11,"into_xyz","","",3,[[],["xyz"]]],[11,"into_yxy","","",3,[[],["yxy"]]],[11,"into_lab","","",3,[[],["lab"]]],[11,"into_lch","","",3,[[],["lch"]]],[11,"into_rgb","","",3,[[],[["rgb",["linear"]],["linear"]]]],[11,"into_hsl","","",3,[[],[["rgbspace"],["hsl"]]]],[11,"into_hsv","","",3,[[],[["rgbspace"],["hsv"]]]],[11,"into_luma","","",3,[[],[["linear"],["luma",["linear"]]]]],[11,"into_linear","palette::encoding::srgb","",52,[[["float"]],["float"]]],[11,"from_linear","","",52,[[["float"]],["float"]]],[11,"into_linear","palette::encoding::gamma","",54,[[["float"]],["float"]]],[11,"from_linear","","",54,[[["float"]],["float"]]],[11,"into_linear","palette::encoding::linear","",57,[[["float"]],["float"]]],[11,"from_linear","","",57,[[["float"]],["float"]]],[11,"get_xyz","palette::white_point","",58,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",59,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",60,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",61,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",62,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",63,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",64,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",65,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",66,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",67,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",68,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",69,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",70,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",71,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"get_xyz","","",72,[[],[["float"],["whitepoint"],["component"],["xyz"]]]],[11,"is_valid","palette","",0,[[["self"]],["bool"]]],[11,"clamp","","",0,[[["self"]],["alpha"]]],[11,"clamp_self","","",0,[[["self"]]]],[11,"is_valid","","",1,[[["self"]],["bool"]]],[11,"clamp","","",1,[[["self"]],["hsl"]]],[11,"clamp_self","","",1,[[["self"]]]],[11,"is_valid","","",2,[[["self"]],["bool"]]],[11,"clamp","","",2,[[["self"]],["hsv"]]],[11,"clamp_self","","",2,[[["self"]]]],[11,"is_valid","","",3,[[["self"]],["bool"]]],[11,"clamp","","",3,[[["self"]],["hwb"]]],[11,"clamp_self","","",3,[[["self"]]]],[11,"is_valid","","",4,[[["self"]],["bool"]]],[11,"clamp","","",4,[[["self"]],["lab"]]],[11,"clamp_self","","",4,[[["self"]]]],[11,"is_valid","","",5,[[["self"]],["bool"]]],[11,"clamp","","",5,[[["self"]],["lch"]]],[11,"clamp_self","","",5,[[["self"]]]],[11,"is_valid","palette::luma","",17,[[["self"]],["bool"]]],[11,"clamp","","",17,[[["self"]],["luma"]]],[11,"clamp_self","","",17,[[["self"]]]],[11,"is_valid","palette::rgb","",19,[[["self"]],["bool"]]],[11,"clamp","","",19,[[["self"]],["rgb"]]],[11,"clamp_self","","",19,[[["self"]]]],[11,"is_valid","palette","",6,[[["self"]],["bool"]]],[11,"clamp","","",6,[[["self"]],["xyz"]]],[11,"clamp_self","","",6,[[["self"]]]],[11,"is_valid","","",7,[[["self"]],["bool"]]],[11,"clamp","","",7,[[["self"]],["yxy"]]],[11,"clamp_self","","",7,[[["self"]]]],[11,"mix","palette::blend","",10,[[["prealpha"],["self"]],["prealpha"]]],[11,"mix","palette","",0,[[["self"],["alpha"]],["alpha"]]],[11,"mix","","",1,[[["hsl"],["self"],["t"]],["hsl"]]],[11,"mix","","",2,[[["t"],["self"],["hsv"]],["hsv"]]],[11,"mix","","",3,[[["hwb"],["self"],["t"]],["hwb"]]],[11,"mix","","",4,[[["t"],["self"],["lab"]],["lab"]]],[11,"mix","","",5,[[["lch"],["self"],["t"]],["lch"]]],[11,"mix","palette::luma","",17,[[["luma"],["self"],["t"]],["luma"]]],[11,"mix","palette::rgb","",19,[[["rgb"],["self"],["t"]],["rgb"]]],[11,"mix","palette","",6,[[["t"],["self"],["xyz"]],["xyz"]]],[11,"mix","","",7,[[["yxy"],["self"],["t"]],["yxy"]]],[11,"lighten","","",0,[[["self"]],["alpha"]]],[11,"lighten","","",1,[[["self"],["t"]],["hsl"]]],[11,"lighten","","",2,[[["self"],["t"]],["hsv"]]],[11,"lighten","","",3,[[["self"],["t"]],["hwb"]]],[11,"lighten","","",4,[[["self"],["t"]],["lab"]]],[11,"lighten","","",5,[[["self"],["t"]],["lch"]]],[11,"lighten","palette::luma","",17,[[["self"],["t"]],["luma"]]],[11,"lighten","palette::rgb","",19,[[["self"],["t"]],["rgb"]]],[11,"lighten","palette","",6,[[["self"],["t"]],["xyz"]]],[11,"lighten","","",7,[[["self"],["t"]],["yxy"]]],[11,"get_hue","","",0,[[["self"]],["option"]]],[11,"get_hue","","",1,[[["self"]],[["option",["rgbhue"]],["rgbhue"]]]],[11,"get_hue","","",2,[[["self"]],[["option",["rgbhue"]],["rgbhue"]]]],[11,"get_hue","","",3,[[["self"]],[["option",["rgbhue"]],["rgbhue"]]]],[11,"get_hue","","",4,[[["self"]],[["option",["labhue"]],["labhue"]]]],[11,"get_hue","","",5,[[["self"]],[["option",["labhue"]],["labhue"]]]],[11,"get_hue","palette::rgb","",19,[[["self"]],[["option",["rgbhue"]],["rgbhue"]]]],[11,"with_hue","palette","",0,[[["self"],["into"]],["alpha"]]],[11,"shift_hue","","",0,[[["self"],["into"]],["alpha"]]],[11,"with_hue","","",1,[[["into"],["self"]],["hsl"]]],[11,"shift_hue","","",1,[[["into"],["self"]],["hsl"]]],[11,"with_hue","","",2,[[["into"],["self"]],["hsv"]]],[11,"shift_hue","","",2,[[["into"],["self"]],["hsv"]]],[11,"with_hue","","",3,[[["into"],["self"]],["hwb"]]],[11,"shift_hue","","",3,[[["into"],["self"]],["hwb"]]],[11,"with_hue","","",5,[[["into"],["self"]],["lch"]]],[11,"shift_hue","","",5,[[["into"],["self"]],["lch"]]],[11,"saturate","","",0,[[["self"]],["alpha"]]],[11,"saturate","","",1,[[["self"],["t"]],["hsl"]]],[11,"saturate","","",2,[[["self"],["t"]],["hsv"]]],[11,"saturate","","",5,[[["self"],["t"]],["lch"]]],[11,"component_wise","palette::blend","",10,[[["fnmut"],["prealpha"],["self"]],["prealpha"]]],[11,"component_wise_self","","",10,[[["fnmut"],["self"]],["prealpha"]]],[11,"component_wise","palette","",0,[[["fnmut"],["self"],["alpha"]],["alpha"]]],[11,"component_wise_self","","",0,[[["fnmut"],["self"]],["alpha"]]],[11,"component_wise","","",4,[[["fnmut"],["self"],["lab"]],["lab"]]],[11,"component_wise_self","","",4,[[["fnmut"],["self"]],["lab"]]],[11,"component_wise","palette::luma","",17,[[["fnmut"],["luma"],["self"]],["luma"]]],[11,"component_wise_self","","",17,[[["fnmut"],["self"]],["luma"]]],[11,"component_wise","palette::rgb","",19,[[["rgb"],["fnmut"],["self"]],["rgb"]]],[11,"component_wise_self","","",19,[[["fnmut"],["self"]],["rgb"]]],[11,"component_wise","palette","",6,[[["fnmut"],["self"],["xyz"]],["xyz"]]],[11,"component_wise_self","","",6,[[["fnmut"],["self"]],["xyz"]]],[11,"component_wise","","",7,[[["yxy"],["fnmut"],["self"]],["yxy"]]],[11,"component_wise_self","","",7,[[["fnmut"],["self"]],["yxy"]]],[11,"as_mut","palette::blend","",10,[[["self"]],["p"]]],[11,"as_mut","palette","",0,[[["self"]],["p"]]],[11,"as_mut","","",1,[[["self"]],["p"]]],[11,"as_mut","","",2,[[["self"]],["p"]]],[11,"as_mut","","",3,[[["self"]],["p"]]],[11,"as_mut","","",4,[[["self"]],["p"]]],[11,"as_mut","","",5,[[["self"]],["p"]]],[11,"as_mut","palette::luma","Convert to a raw pixel format.",17,[[["self"]],["p"]]],[11,"as_mut","palette::rgb","Convert to a raw pixel format.",19,[[["self"]],["p"]]],[11,"as_mut","palette","",6,[[["self"]],["p"]]],[11,"as_mut","","",7,[[["self"]],["p"]]],[11,"as_ref","palette::blend","",10,[[["self"]],["p"]]],[11,"as_ref","palette","",0,[[["self"]],["p"]]],[11,"as_ref","","",1,[[["self"]],["p"]]],[11,"as_ref","","",2,[[["self"]],["p"]]],[11,"as_ref","","",3,[[["self"]],["p"]]],[11,"as_ref","","",4,[[["self"]],["p"]]],[11,"as_ref","","",5,[[["self"]],["p"]]],[11,"as_ref","palette::luma","Convert to a raw pixel format.",17,[[["self"]],["p"]]],[11,"as_ref","palette::rgb","Convert to a raw pixel format.",19,[[["self"]],["p"]]],[11,"as_ref","palette","",6,[[["self"]],["p"]]],[11,"as_ref","","",7,[[["self"]],["p"]]],[11,"from","palette::blend","",10,[[["alpha"]],["prealpha"]]],[11,"from","palette","",0,[[["prealpha"]],["alpha"]]],[11,"from","palette::gradient","",51,[[["range"]],["range"]]],[11,"from","","",51,[[["rangefrom"]],["range"]]],[11,"from","","",51,[[["rangeto"]],["range"]]],[11,"from","","",51,[[["rangefull"]],["range"]]],[11,"from","palette","",0,[[["c"]],["alpha"]]],[11,"from","","",1,[[["rgb"]],["self"]]],[11,"from","","",0,[[["rgb"]],["self"]]],[11,"from","","",1,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",1,[[["luma"]],["self"]]],[11,"from","","",0,[[["luma"]],["self"]]],[11,"from","","",1,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",1,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",0,[[["hsv"]],["self"]]],[11,"from","","",1,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from","","",0,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from","","",1,[[["hwb"]],["self"]]],[11,"from","","",0,[[["hwb"]],["self"]]],[11,"from","","",1,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from","","",0,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from","","",1,[[["lab"]],["self"]]],[11,"from","","",0,[[["lab"]],["self"]]],[11,"from","","",1,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","","",0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","","",1,[[["lch"]],["self"]]],[11,"from","","",0,[[["lch"]],["self"]]],[11,"from","","",1,[[["lch"],["alpha",["lch"]]],["self"]]],[11,"from","","",0,[[["lch"],["alpha",["lch"]]],["self"]]],[11,"from","","",0,[[["xyz"]],["self"]]],[11,"from","","",1,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from","","",0,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from","","",1,[[["yxy"]],["self"]]],[11,"from","","",0,[[["yxy"]],["self"]]],[11,"from","","",1,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from","","",0,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from","","",1,[[["xyz"]],["self"]]],[11,"from","","",1,[[["hsv"]],["self"]]],[11,"from","","",1,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",2,[[["rgb"]],["self"]]],[11,"from","","",0,[[["rgb"]],["self"]]],[11,"from","","",2,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",2,[[["luma"]],["self"]]],[11,"from","","",0,[[["luma"]],["self"]]],[11,"from","","",2,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",0,[[["hsl"]],["self"]]],[11,"from","","",2,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",0,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",2,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from","","",0,[[["hwb"]],["self"]]],[11,"from","","",2,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from","","",0,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from","","",2,[[["lab"]],["self"]]],[11,"from","","",0,[[["lab"]],["self"]]],[11,"from","","",2,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","","",0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","","",2,[[["lch"]],["self"]]],[11,"from","","",0,[[["lch"]],["self"]]],[11,"from","","",2,[[["lch"],["alpha",["lch"]]],["self"]]],[11,"from","","",0,[[["lch"],["alpha",["lch"]]],["self"]]],[11,"from","","",0,[[["xyz"]],["self"]]],[11,"from","","",2,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from","","",0,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from","","",2,[[["yxy"]],["self"]]],[11,"from","","",0,[[["yxy"]],["self"]]],[11,"from","","",2,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from","","",0,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from","","",2,[[["xyz"]],["self"]]],[11,"from","","",2,[[["hsl"]],["self"]]],[11,"from","","",2,[[["hwb"]],["self"]]],[11,"from","","",2,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",3,[[["rgb"]],["self"]]],[11,"from","","",0,[[["rgb"]],["self"]]],[11,"from","","",3,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",3,[[["luma"]],["self"]]],[11,"from","","",0,[[["luma"]],["self"]]],[11,"from","","",3,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",3,[[["hsl"]],["self"]]],[11,"from","","",0,[[["hsl"]],["self"]]],[11,"from","","",3,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",0,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",0,[[["hsv"]],["self"]]],[11,"from","","",3,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from","","",0,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from","","",3,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from","","",3,[[["lab"]],["self"]]],[11,"from","","",0,[[["lab"]],["self"]]],[11,"from","","",3,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","","",0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","","",3,[[["lch"]],["self"]]],[11,"from","","",0,[[["lch"]],["self"]]],[11,"from","","",3,[[["lch"],["alpha",["lch"]]],["self"]]],[11,"from","","",0,[[["lch"],["alpha",["lch"]]],["self"]]],[11,"from","","",0,[[["xyz"]],["self"]]],[11,"from","","",3,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from","","",0,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from","","",3,[[["yxy"]],["self"]]],[11,"from","","",0,[[["yxy"]],["self"]]],[11,"from","","",3,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from","","",0,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from","","",3,[[["xyz"]],["self"]]],[11,"from","","",3,[[["hsv"]],["self"]]],[11,"from","","",3,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",4,[[["rgb"]],["self"]]],[11,"from","","",0,[[["rgb"]],["self"]]],[11,"from","","",4,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",4,[[["luma"]],["self"]]],[11,"from","","",0,[[["luma"]],["self"]]],[11,"from","","",4,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",4,[[["hsl"]],["self"]]],[11,"from","","",0,[[["hsl"]],["self"]]],[11,"from","","",4,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",0,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",4,[[["hsv"]],["self"]]],[11,"from","","",0,[[["hsv"]],["self"]]],[11,"from","","",4,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from","","",0,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from","","",4,[[["hwb"]],["self"]]],[11,"from","","",0,[[["hwb"]],["self"]]],[11,"from","","",4,[[["alpha",["hwb"]],["hwb"]],["self"]]],[11,"from","","",0,[[["alpha",["hwb"]],["hwb"]],["self"]]],[11,"from","","",4,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","","",0,[[["lch"]],["self"]]],[11,"from","","",4,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from","","",0,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from","","",0,[[["xyz"]],["self"]]],[11,"from","","",4,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from","","",0,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from","","",4,[[["yxy"]],["self"]]],[11,"from","","",0,[[["yxy"]],["self"]]],[11,"from","","",4,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from","","",0,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from","","",4,[[["xyz"]],["self"]]],[11,"from","","",4,[[["lch"]],["self"]]],[11,"from","","",4,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",5,[[["rgb"]],["self"]]],[11,"from","","",0,[[["rgb"]],["self"]]],[11,"from","","",5,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",5,[[["luma"]],["self"]]],[11,"from","","",0,[[["luma"]],["self"]]],[11,"from","","",5,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",5,[[["hsl"]],["self"]]],[11,"from","","",0,[[["hsl"]],["self"]]],[11,"from","","",5,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",0,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",5,[[["hsv"]],["self"]]],[11,"from","","",0,[[["hsv"]],["self"]]],[11,"from","","",5,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from","","",0,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from","","",5,[[["hwb"]],["self"]]],[11,"from","","",0,[[["hwb"]],["self"]]],[11,"from","","",5,[[["alpha",["hwb"]],["hwb"]],["self"]]],[11,"from","","",0,[[["alpha",["hwb"]],["hwb"]],["self"]]],[11,"from","","",0,[[["lab"]],["self"]]],[11,"from","","",5,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","","",0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","","",5,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from","","",0,[[["xyz"]],["self"]]],[11,"from","","",5,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from","","",0,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from","","",5,[[["yxy"]],["self"]]],[11,"from","","",0,[[["yxy"]],["self"]]],[11,"from","","",5,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from","","",0,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from","","",5,[[["xyz"]],["self"]]],[11,"from","","",5,[[["lab"]],["self"]]],[11,"from","","",5,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","palette::luma","",17,[[["rgb"]],["self"]]],[11,"from","palette","",0,[[["rgb"]],["self"]]],[11,"from","palette::luma","",17,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","palette","",0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","palette::luma","",17,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",17,[[["hsl"]],["self"]]],[11,"from","palette","",0,[[["hsl"]],["self"]]],[11,"from","palette::luma","",17,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","palette","",0,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","palette::luma","",17,[[["hsv"]],["self"]]],[11,"from","palette","",0,[[["hsv"]],["self"]]],[11,"from","palette::luma","",17,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from","palette","",0,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from","palette::luma","",17,[[["hwb"]],["self"]]],[11,"from","palette","",0,[[["hwb"]],["self"]]],[11,"from","palette::luma","",17,[[["alpha",["hwb"]],["hwb"]],["self"]]],[11,"from","palette","",0,[[["alpha",["hwb"]],["hwb"]],["self"]]],[11,"from","palette::luma","",17,[[["lab"]],["self"]]],[11,"from","palette","",0,[[["lab"]],["self"]]],[11,"from","palette::luma","",17,[[["lab"],["alpha",["lab"]]],["self"]]],[11,"from","palette","",0,[[["lab"],["alpha",["lab"]]],["self"]]],[11,"from","palette::luma","",17,[[["lch"]],["self"]]],[11,"from","palette","",0,[[["lch"]],["self"]]],[11,"from","palette::luma","",17,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from","palette","",0,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from","","",0,[[["xyz"]],["self"]]],[11,"from","palette::luma","",17,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from","palette","",0,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from","","",0,[[["yxy"]],["self"]]],[11,"from","palette::luma","",17,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from","palette","",0,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from","palette::luma","",17,[[["xyz"]],["self"]]],[11,"from","","",17,[[["yxy"]],["self"]]],[11,"from","","",17,[[],["self"]]],[11,"from","palette","",0,[[],["self"]]],[11,"from","palette::rgb","",19,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","palette","",0,[[["luma"]],["self"]]],[11,"from","palette::rgb","",19,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","palette","",0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",0,[[["hsl"]],["self"]]],[11,"from","palette::rgb","",19,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","palette","",0,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",0,[[["hsv"]],["self"]]],[11,"from","palette::rgb","",19,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from","palette","",0,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from","palette::rgb","",19,[[["hwb"]],["self"]]],[11,"from","palette","",0,[[["hwb"]],["self"]]],[11,"from","palette::rgb","",19,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from","palette","",0,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from","palette::rgb","",19,[[["lab"]],["self"]]],[11,"from","palette","",0,[[["lab"]],["self"]]],[11,"from","palette::rgb","",19,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","palette","",0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","palette::rgb","",19,[[["lch"]],["self"]]],[11,"from","palette","",0,[[["lch"]],["self"]]],[11,"from","palette::rgb","",19,[[["lch"],["alpha",["lch"]]],["self"]]],[11,"from","palette","",0,[[["lch"],["alpha",["lch"]]],["self"]]],[11,"from","","",0,[[["xyz"]],["self"]]],[11,"from","palette::rgb","",19,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from","palette","",0,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from","palette::rgb","",19,[[["yxy"]],["self"]]],[11,"from","palette","",0,[[["yxy"]],["self"]]],[11,"from","palette::rgb","",19,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from","palette","",0,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from","palette::rgb","",19,[[["xyz"]],["self"]]],[11,"from","","",19,[[["hsl"]],["self"]]],[11,"from","","",19,[[["hsv"]],["self"]]],[11,"from","","",19,[[["luma"]],["self"]]],[11,"from","","",19,[[],["self"]]],[11,"from","palette","",0,[[],["self"]]],[11,"from","","",0,[[["rgb"]],["self"]]],[11,"from","","",6,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",0,[[["luma"]],["self"]]],[11,"from","","",6,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",6,[[["hsl"]],["self"]]],[11,"from","","",0,[[["hsl"]],["self"]]],[11,"from","","",6,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",0,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",6,[[["hsv"]],["self"]]],[11,"from","","",0,[[["hsv"]],["self"]]],[11,"from","","",6,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from","","",0,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from","","",6,[[["hwb"]],["self"]]],[11,"from","","",0,[[["hwb"]],["self"]]],[11,"from","","",6,[[["alpha",["hwb"]],["hwb"]],["self"]]],[11,"from","","",0,[[["alpha",["hwb"]],["hwb"]],["self"]]],[11,"from","","",0,[[["lab"]],["self"]]],[11,"from","","",6,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","","",0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","","",6,[[["lch"]],["self"]]],[11,"from","","",0,[[["lch"]],["self"]]],[11,"from","","",6,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from","","",0,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from","","",6,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from","","",0,[[["yxy"]],["self"]]],[11,"from","","",6,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from","","",0,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from","","",6,[[["rgb"]],["self"]]],[11,"from","","",6,[[["yxy"]],["self"]]],[11,"from","","",6,[[["lab"]],["self"]]],[11,"from","","",6,[[["luma"]],["self"]]],[11,"from","","",6,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",7,[[["rgb"]],["self"]]],[11,"from","","",0,[[["rgb"]],["self"]]],[11,"from","","",7,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","","",0,[[["luma"]],["self"]]],[11,"from","","",7,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","","",7,[[["hsl"]],["self"]]],[11,"from","","",0,[[["hsl"]],["self"]]],[11,"from","","",7,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",0,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","","",7,[[["hsv"]],["self"]]],[11,"from","","",0,[[["hsv"]],["self"]]],[11,"from","","",7,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from","","",0,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from","","",7,[[["hwb"]],["self"]]],[11,"from","","",0,[[["hwb"]],["self"]]],[11,"from","","",7,[[["alpha",["hwb"]],["hwb"]],["self"]]],[11,"from","","",0,[[["alpha",["hwb"]],["hwb"]],["self"]]],[11,"from","","",7,[[["lab"]],["self"]]],[11,"from","","",0,[[["lab"]],["self"]]],[11,"from","","",7,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","","",0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","","",7,[[["lch"]],["self"]]],[11,"from","","",0,[[["lch"]],["self"]]],[11,"from","","",7,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from","","",0,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from","","",0,[[["xyz"]],["self"]]],[11,"from","","",7,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from","","",0,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from","","",7,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from","","",7,[[["xyz"]],["self"]]],[11,"from","","",7,[[["luma"]],["self"]]],[11,"from","","",7,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",23,[[["t"]],["labhue"]]],[11,"from","","",24,[[["t"]],["rgbhue"]]],[11,"into","","",1,[[]]],[11,"into","","",0,[[]]],[11,"into","","",2,[[]]],[11,"into","","",0,[[]]],[11,"into","","",3,[[]]],[11,"into","","",0,[[]]],[11,"into","","",4,[[]]],[11,"into","","",0,[[]]],[11,"into","","",5,[[]]],[11,"into","","",0,[[]]],[11,"into","palette::luma","",17,[[]]],[11,"into","palette","",0,[[]]],[11,"into","palette::rgb","",19,[[]]],[11,"into","palette","",0,[[]]],[11,"into","","",6,[[]]],[11,"into","","",0,[[]]],[11,"into","","",7,[[]]],[11,"into","","",0,[[]]],[11,"into","","",23,[[],["f64"]]],[11,"into","","",23,[[],["f32"]]],[11,"into","","",23,[[],["f32"]]],[11,"into","","",24,[[],["f64"]]],[11,"into","","",24,[[],["f32"]]],[11,"into","","",24,[[],["f32"]]],[11,"next","palette::gradient","",50,[[["self"]],["option"]]],[11,"size_hint","","",50,[[["self"]]]],[11,"clone","palette::blend","",8,[[["self"]],["equations"]]],[11,"clone","","",11,[[["self"]],["equation"]]],[11,"clone","","",9,[[["self"]],["parameters"]]],[11,"clone","","",12,[[["self"]],["parameter"]]],[11,"clone","","",10,[[["self"]],["prealpha"]]],[11,"clone","palette::gradient","",15,[[["self"]],["gradient"]]],[11,"clone","","",50,[[["self"]],["take"]]],[11,"clone","","",16,[[["self"]],["slice"]]],[11,"clone","","",51,[[["self"]],["range"]]],[11,"clone","palette","",0,[[["self"]],["alpha"]]],[11,"clone","","",1,[[["self"]],["hsl"]]],[11,"clone","","",2,[[["self"]],["hsv"]]],[11,"clone","","",3,[[["self"]],["hwb"]]],[11,"clone","","",4,[[["self"]],["lab"]]],[11,"clone","","",5,[[["self"]],["lch"]]],[11,"clone","palette::luma","",17,[[["self"]],["luma"]]],[11,"clone","palette::rgb","",19,[[["self"]],["rgb"]]],[11,"clone","palette","",6,[[["self"]],["xyz"]]],[11,"clone","","",7,[[["self"]],["yxy"]]],[11,"clone","","",23,[[["self"]],["labhue"]]],[11,"clone","","",24,[[["self"]],["rgbhue"]]],[11,"clone","palette::encoding::srgb","",52,[[["self"]],["srgb"]]],[11,"clone","palette::encoding::gamma","",53,[[["self"]],["gamma"]]],[11,"clone","","",54,[[["self"]],["gammafn"]]],[11,"clone","","",55,[[["self"]],["f2p2"]]],[11,"clone","palette::encoding::linear","",56,[[["self"]],["linear"]]],[11,"clone","","",57,[[["self"]],["linearfn"]]],[11,"clone","palette::white_point","",58,[[["self"]],["a"]]],[11,"clone","","",59,[[["self"]],["b"]]],[11,"clone","","",60,[[["self"]],["c"]]],[11,"clone","","",61,[[["self"]],["d50"]]],[11,"clone","","",62,[[["self"]],["d55"]]],[11,"clone","","",63,[[["self"]],["d65"]]],[11,"clone","","",64,[[["self"]],["d75"]]],[11,"clone","","",65,[[["self"]],["e"]]],[11,"clone","","",66,[[["self"]],["f2"]]],[11,"clone","","",67,[[["self"]],["f7"]]],[11,"clone","","",68,[[["self"]],["f11"]]],[11,"clone","","",69,[[["self"]],["d50degree10"]]],[11,"clone","","",70,[[["self"]],["d55degree10"]]],[11,"clone","","",71,[[["self"]],["d65degree10"]]],[11,"clone","","",72,[[["self"]],["d75degree10"]]],[11,"default","palette::blend","",10,[[],["prealpha"]]],[11,"default","palette","",0,[[],["alpha"]]],[11,"default","","",1,[[],["hsl"]]],[11,"default","","",2,[[],["hsv"]]],[11,"default","","",3,[[],["hwb"]]],[11,"default","","",4,[[],["lab"]]],[11,"default","","",5,[[],["lch"]]],[11,"default","palette::luma","",17,[[],["luma"]]],[11,"default","palette::rgb","",19,[[],["rgb"]]],[11,"default","palette","",6,[[],["xyz"]]],[11,"default","","",7,[[],["yxy"]]],[11,"default","","",23,[[],["labhue"]]],[11,"default","","",24,[[],["rgbhue"]]],[11,"eq","palette::blend","",8,[[["self"],["equations"]],["bool"]]],[11,"ne","","",8,[[["self"],["equations"]],["bool"]]],[11,"eq","","",11,[[["self"],["equation"]],["bool"]]],[11,"eq","","",9,[[["parameters"],["self"]],["bool"]]],[11,"ne","","",9,[[["parameters"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"],["parameter"]],["bool"]]],[11,"eq","","",10,[[["prealpha"],["self"]],["bool"]]],[11,"ne","","",10,[[["prealpha"],["self"]],["bool"]]],[11,"eq","palette::gradient","",51,[[["range"],["self"]],["bool"]]],[11,"ne","","",51,[[["range"],["self"]],["bool"]]],[11,"eq","palette","",0,[[["self"],["alpha"]],["bool"]]],[11,"ne","","",0,[[["self"],["alpha"]],["bool"]]],[11,"eq","","",1,[[["hsl"],["self"]],["bool"]]],[11,"ne","","",1,[[["hsl"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["hsv"]],["bool"]]],[11,"ne","","",2,[[["self"],["hsv"]],["bool"]]],[11,"eq","","",3,[[["hwb"],["self"]],["bool"]]],[11,"ne","","",3,[[["hwb"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["lab"]],["bool"]]],[11,"ne","","",4,[[["self"],["lab"]],["bool"]]],[11,"eq","","",5,[[["lch"],["self"]],["bool"]]],[11,"ne","","",5,[[["lch"],["self"]],["bool"]]],[11,"eq","palette::luma","",17,[[["luma"],["self"]],["bool"]]],[11,"ne","","",17,[[["luma"],["self"]],["bool"]]],[11,"eq","palette::rgb","",19,[[["rgb"],["self"]],["bool"]]],[11,"ne","","",19,[[["rgb"],["self"]],["bool"]]],[11,"eq","palette","",6,[[["self"],["xyz"]],["bool"]]],[11,"ne","","",6,[[["self"],["xyz"]],["bool"]]],[11,"eq","","",7,[[["yxy"],["self"]],["bool"]]],[11,"ne","","",7,[[["yxy"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["labhue"]],["bool"]]],[11,"eq","","",23,[[["t"],["self"]],["bool"]]],[11,"eq","","",24,[[["self"],["rgbhue"]],["bool"]]],[11,"eq","","",24,[[["t"],["self"]],["bool"]]],[11,"eq","palette::encoding::srgb","",52,[[["self"],["srgb"]],["bool"]]],[11,"eq","palette::encoding::gamma","",53,[[["self"],["gamma"]],["bool"]]],[11,"ne","","",53,[[["self"],["gamma"]],["bool"]]],[11,"eq","","",54,[[["gammafn"],["self"]],["bool"]]],[11,"ne","","",54,[[["gammafn"],["self"]],["bool"]]],[11,"eq","","",55,[[["self"],["f2p2"]],["bool"]]],[11,"eq","palette::encoding::linear","",56,[[["linear"],["self"]],["bool"]]],[11,"ne","","",56,[[["linear"],["self"]],["bool"]]],[11,"eq","","",57,[[["self"],["linearfn"]],["bool"]]],[11,"eq","palette::white_point","",58,[[["self"],["a"]],["bool"]]],[11,"eq","","",59,[[["self"],["b"]],["bool"]]],[11,"eq","","",60,[[["self"],["c"]],["bool"]]],[11,"eq","","",61,[[["self"],["d50"]],["bool"]]],[11,"eq","","",62,[[["d55"],["self"]],["bool"]]],[11,"eq","","",63,[[["self"],["d65"]],["bool"]]],[11,"eq","","",64,[[["d75"],["self"]],["bool"]]],[11,"eq","","",65,[[["e"],["self"]],["bool"]]],[11,"eq","","",66,[[["f2"],["self"]],["bool"]]],[11,"eq","","",67,[[["f7"],["self"]],["bool"]]],[11,"eq","","",68,[[["self"],["f11"]],["bool"]]],[11,"eq","","",69,[[["self"],["d50degree10"]],["bool"]]],[11,"eq","","",70,[[["self"],["d55degree10"]],["bool"]]],[11,"eq","","",71,[[["d65degree10"],["self"]],["bool"]]],[11,"eq","","",72,[[["self"],["d75degree10"]],["bool"]]],[11,"deref","palette::blend","",10,[[["self"]],["c"]]],[11,"deref","palette","",0,[[["self"]],["c"]]],[11,"deref_mut","palette::blend","",10,[[["self"]],["c"]]],[11,"deref_mut","palette","",0,[[["self"]],["c"]]],[11,"fmt","palette::blend","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::gradient","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::luma","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::rgb","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::encoding::srgb","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::encoding::gamma","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::encoding::linear","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::white_point","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette","",30,[[["formatter"],["self"]],["result"]]],[11,"div","palette::blend","",10,[[["prealpha"]]]],[11,"div","","",10,[[["t"]]]],[11,"div","palette","",0,[[["alpha"]]]],[11,"div","","",0,[[["t"]]]],[11,"div","","",4,[[["lab"]]]],[11,"div","","",4,[[["t"]]]],[11,"div","palette::luma","",17,[[["luma"]]]],[11,"div","","",17,[[["t"]]]],[11,"div","palette::rgb","",19,[[["rgb"]]]],[11,"div","","",19,[[["t"]]]],[11,"div","palette","",6,[[["xyz"]]]],[11,"div","","",6,[[["t"]]]],[11,"div","","",7,[[["yxy"]]]],[11,"div","","",7,[[["t"]]]],[11,"sub","palette::blend","",10,[[["prealpha"]]]],[11,"sub","","",10,[[["t"]]]],[11,"sub","palette","",0,[[["alpha"]]]],[11,"sub","","",0,[[["t"]]]],[11,"sub","","",1,[[["hsl"]]]],[11,"sub","","",1,[[["t"]]]],[11,"sub","","",2,[[["hsv"]]]],[11,"sub","","",2,[[["t"]]]],[11,"sub","","",3,[[["hwb"]]]],[11,"sub","","",3,[[["t"]]]],[11,"sub","","",4,[[["lab"]]]],[11,"sub","","",4,[[["t"]]]],[11,"sub","","",5,[[["lch"]]]],[11,"sub","","",5,[[["t"]]]],[11,"sub","palette::luma","",17,[[["luma"]]]],[11,"sub","","",17,[[["t"]]]],[11,"sub","palette::rgb","",19,[[["rgb"]]]],[11,"sub","","",19,[[["t"]]]],[11,"sub","palette","",6,[[["xyz"]]]],[11,"sub","","",6,[[["t"]]]],[11,"sub","","",7,[[["yxy"]]]],[11,"sub","","",7,[[["t"]]]],[11,"sub","","",23,[[["labhue"]],["labhue"]]],[11,"sub","","",23,[[["t"]],["labhue"]]],[11,"sub","","",24,[[["rgbhue"]],["rgbhue"]]],[11,"sub","","",24,[[["t"]],["rgbhue"]]],[11,"add","palette::blend","",10,[[["prealpha"]]]],[11,"add","","",10,[[["t"]]]],[11,"add","palette","",0,[[["alpha"]]]],[11,"add","","",0,[[["t"]]]],[11,"add","","",1,[[["hsl"]]]],[11,"add","","",1,[[["t"]]]],[11,"add","","",2,[[["hsv"]]]],[11,"add","","",2,[[["t"]]]],[11,"add","","",3,[[["hwb"]]]],[11,"add","","",3,[[["t"]]]],[11,"add","","",4,[[["lab"]]]],[11,"add","","",4,[[["t"]]]],[11,"add","","",5,[[["lch"]]]],[11,"add","","",5,[[["t"]]]],[11,"add","palette::luma","",17,[[["luma"]]]],[11,"add","","",17,[[["t"]]]],[11,"add","palette::rgb","",19,[[["rgb"]]]],[11,"add","","",19,[[["t"]]]],[11,"add","palette","",6,[[["xyz"]]]],[11,"add","","",6,[[["t"]]]],[11,"add","","",7,[[["yxy"]]]],[11,"add","","",7,[[["t"]]]],[11,"add","","",23,[[["labhue"]],["labhue"]]],[11,"add","","",23,[[["t"]],["labhue"]]],[11,"add","","",24,[[["rgbhue"]],["rgbhue"]]],[11,"add","","",24,[[["t"]],["rgbhue"]]],[11,"mul","palette::blend","",10,[[["prealpha"]]]],[11,"mul","","",10,[[["t"]]]],[11,"mul","palette","",0,[[["alpha"]]]],[11,"mul","","",0,[[["t"]]]],[11,"mul","","",4,[[["lab"]]]],[11,"mul","","",4,[[["t"]]]],[11,"mul","palette::luma","",17,[[["luma"]]]],[11,"mul","","",17,[[["t"]]]],[11,"mul","palette::rgb","",19,[[["rgb"]]]],[11,"mul","","",19,[[["t"]]]],[11,"mul","palette","",6,[[["xyz"]]]],[11,"mul","","",6,[[["t"]]]],[11,"mul","","",7,[[["yxy"]]]],[11,"mul","","",7,[[["t"]]]],[11,"add_assign","palette::blend","",10,[[["self"],["prealpha"]]]],[11,"add_assign","","",10,[[["self"],["t"]]]],[11,"add_assign","palette","",0,[[["self"],["alpha"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",1,[[["self"],["hsl"]]]],[11,"add_assign","","",1,[[["self"],["t"]]]],[11,"add_assign","","",2,[[["self"],["hsv"]]]],[11,"add_assign","","",2,[[["self"],["t"]]]],[11,"add_assign","","",3,[[["self"],["hwb"]]]],[11,"add_assign","","",3,[[["self"],["t"]]]],[11,"add_assign","","",4,[[["self"],["lab"]]]],[11,"add_assign","","",4,[[["self"],["t"]]]],[11,"add_assign","","",5,[[["self"],["lch"]]]],[11,"add_assign","","",5,[[["self"],["t"]]]],[11,"add_assign","palette::luma","",17,[[["self"],["luma"]]]],[11,"add_assign","","",17,[[["self"],["t"]]]],[11,"add_assign","palette::rgb","",19,[[["self"],["rgb"]]]],[11,"add_assign","","",19,[[["self"],["t"]]]],[11,"add_assign","palette","",6,[[["self"],["xyz"]]]],[11,"add_assign","","",6,[[["self"],["t"]]]],[11,"add_assign","","",7,[[["self"],["yxy"]]]],[11,"add_assign","","",7,[[["self"],["t"]]]],[11,"add_assign","","",23,[[["self"],["labhue"]]]],[11,"add_assign","","",23,[[["self"],["t"]]]],[11,"add_assign","","",24,[[["self"],["rgbhue"]]]],[11,"add_assign","","",24,[[["self"],["t"]]]],[11,"sub_assign","palette::blend","",10,[[["self"],["prealpha"]]]],[11,"sub_assign","","",10,[[["self"],["t"]]]],[11,"sub_assign","palette","",0,[[["self"],["alpha"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",1,[[["self"],["hsl"]]]],[11,"sub_assign","","",1,[[["self"],["t"]]]],[11,"sub_assign","","",2,[[["self"],["hsv"]]]],[11,"sub_assign","","",2,[[["self"],["t"]]]],[11,"sub_assign","","",3,[[["self"],["hwb"]]]],[11,"sub_assign","","",3,[[["self"],["t"]]]],[11,"sub_assign","","",4,[[["self"],["lab"]]]],[11,"sub_assign","","",4,[[["self"],["t"]]]],[11,"sub_assign","","",5,[[["self"],["lch"]]]],[11,"sub_assign","","",5,[[["self"],["t"]]]],[11,"sub_assign","palette::luma","",17,[[["self"],["luma"]]]],[11,"sub_assign","","",17,[[["self"],["t"]]]],[11,"sub_assign","palette::rgb","",19,[[["self"],["rgb"]]]],[11,"sub_assign","","",19,[[["self"],["t"]]]],[11,"sub_assign","palette","",6,[[["self"],["xyz"]]]],[11,"sub_assign","","",6,[[["self"],["t"]]]],[11,"sub_assign","","",7,[[["self"],["yxy"]]]],[11,"sub_assign","","",7,[[["self"],["t"]]]],[11,"sub_assign","","",23,[[["self"],["labhue"]]]],[11,"sub_assign","","",23,[[["self"],["t"]]]],[11,"sub_assign","","",24,[[["self"],["rgbhue"]]]],[11,"sub_assign","","",24,[[["self"],["t"]]]],[11,"mul_assign","palette::blend","",10,[[["self"],["prealpha"]]]],[11,"mul_assign","","",10,[[["self"],["t"]]]],[11,"mul_assign","palette","",0,[[["self"],["alpha"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",4,[[["self"],["lab"]]]],[11,"mul_assign","","",4,[[["self"],["t"]]]],[11,"mul_assign","palette::luma","",17,[[["self"],["luma"]]]],[11,"mul_assign","","",17,[[["self"],["t"]]]],[11,"mul_assign","palette::rgb","",19,[[["self"],["rgb"]]]],[11,"mul_assign","","",19,[[["self"],["t"]]]],[11,"mul_assign","palette","",6,[[["self"],["xyz"]]]],[11,"mul_assign","","",6,[[["self"],["t"]]]],[11,"mul_assign","","",7,[[["self"],["yxy"]]]],[11,"mul_assign","","",7,[[["self"],["t"]]]],[11,"div_assign","palette::blend","",10,[[["self"],["prealpha"]]]],[11,"div_assign","","",10,[[["self"],["t"]]]],[11,"div_assign","palette","",0,[[["self"],["alpha"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",4,[[["self"],["lab"]]]],[11,"div_assign","","",4,[[["self"],["t"]]]],[11,"div_assign","palette::luma","",17,[[["self"],["luma"]]]],[11,"div_assign","","",17,[[["self"],["t"]]]],[11,"div_assign","palette::rgb","",19,[[["self"],["rgb"]]]],[11,"div_assign","","",19,[[["self"],["t"]]]],[11,"div_assign","palette","",6,[[["self"],["xyz"]]]],[11,"div_assign","","",6,[[["self"],["t"]]]],[11,"div_assign","","",7,[[["self"],["yxy"]]]],[11,"div_assign","","",7,[[["self"],["t"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::luma","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::rgb","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::luma","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::rgb","",19,[[["formatter"],["self"]],["result"]]],[11,"description","palette","",30,[[["self"]],["str"]]],[11,"default_epsilon","palette::blend","",10,[[]]],[11,"abs_diff_eq","","",10,[[["prealpha"],["self"]],["bool"]]],[11,"default_epsilon","palette::gradient","",51,[[]]],[11,"abs_diff_eq","","",51,[[["self"]],["bool"]]],[11,"default_epsilon","palette","",0,[[]]],[11,"abs_diff_eq","","",0,[[["self"]],["bool"]]],[11,"default_epsilon","","",1,[[]]],[11,"abs_diff_eq","","",1,[[["self"]],["bool"]]],[11,"default_epsilon","","",2,[[]]],[11,"abs_diff_eq","","",2,[[["self"]],["bool"]]],[11,"default_epsilon","","",3,[[]]],[11,"abs_diff_eq","","",3,[[["self"]],["bool"]]],[11,"default_epsilon","palette::luma","",17,[[]]],[11,"abs_diff_eq","","",17,[[["self"]],["bool"]]],[11,"default_epsilon","palette::rgb","",19,[[]]],[11,"abs_diff_eq","","",19,[[["self"]],["bool"]]],[11,"default_epsilon","palette","",6,[[]]],[11,"abs_diff_eq","","",6,[[["self"]],["bool"]]],[11,"abs_diff_ne","","",6,[[["self"]],["bool"]]],[11,"default_epsilon","","",7,[[]]],[11,"abs_diff_eq","","",7,[[["self"]],["bool"]]],[11,"abs_diff_ne","","",7,[[["self"]],["bool"]]],[11,"default_epsilon","","",4,[[]]],[11,"abs_diff_eq","","",4,[[["self"]],["bool"]]],[11,"abs_diff_ne","","",4,[[["self"]],["bool"]]],[11,"default_epsilon","","",5,[[]]],[11,"abs_diff_eq","","",5,[[["self"]],["bool"]]],[11,"abs_diff_ne","","",5,[[["self"]],["bool"]]],[11,"default_epsilon","","",23,[[]]],[11,"abs_diff_eq","","",23,[[["self"]],["bool"]]],[11,"abs_diff_ne","","",23,[[["self"]],["bool"]]],[11,"default_epsilon","","",24,[[]]],[11,"abs_diff_eq","","",24,[[["self"]],["bool"]]],[11,"abs_diff_ne","","",24,[[["self"]],["bool"]]],[11,"default_max_relative","palette::blend","",10,[[]]],[11,"relative_eq","","",10,[[["prealpha"],["self"]],["bool"]]],[11,"default_max_relative","palette::gradient","",51,[[]]],[11,"relative_eq","","",51,[[["range"],["self"]],["bool"]]],[11,"default_max_relative","palette","",0,[[]]],[11,"relative_eq","","",0,[[["alpha"],["self"]],["bool"]]],[11,"default_max_relative","","",1,[[]]],[11,"relative_eq","","",1,[[["self"]],["bool"]]],[11,"default_max_relative","","",2,[[]]],[11,"relative_eq","","",2,[[["self"]],["bool"]]],[11,"default_max_relative","","",3,[[]]],[11,"relative_eq","","",3,[[["self"]],["bool"]]],[11,"default_max_relative","palette::luma","",17,[[]]],[11,"relative_eq","","",17,[[["self"]],["bool"]]],[11,"default_max_relative","palette::rgb","",19,[[]]],[11,"relative_eq","","",19,[[["self"]],["bool"]]],[11,"default_max_relative","palette","",6,[[]]],[11,"relative_eq","","",6,[[["self"]],["bool"]]],[11,"relative_ne","","",6,[[["self"]],["bool"]]],[11,"default_max_relative","","",7,[[]]],[11,"relative_eq","","",7,[[["self"]],["bool"]]],[11,"relative_ne","","",7,[[["self"]],["bool"]]],[11,"default_max_relative","","",4,[[]]],[11,"relative_eq","","",4,[[["self"]],["bool"]]],[11,"relative_ne","","",4,[[["self"]],["bool"]]],[11,"default_max_relative","","",5,[[]]],[11,"relative_eq","","",5,[[["self"]],["bool"]]],[11,"relative_ne","","",5,[[["self"]],["bool"]]],[11,"default_max_relative","","",23,[[]]],[11,"relative_eq","","",23,[[["self"]],["bool"]]],[11,"relative_ne","","",23,[[["self"]],["bool"]]],[11,"default_max_relative","","",24,[[]]],[11,"relative_eq","","",24,[[["self"]],["bool"]]],[11,"relative_ne","","",24,[[["self"]],["bool"]]],[11,"default_max_ulps","palette::blend","",10,[[],["u32"]]],[11,"ulps_eq","","",10,[[["prealpha"],["u32"],["self"]],["bool"]]],[11,"default_max_ulps","palette::gradient","",51,[[],["u32"]]],[11,"ulps_eq","","",51,[[["range"],["u32"],["self"]],["bool"]]],[11,"default_max_ulps","palette","",0,[[],["u32"]]],[11,"ulps_eq","","",0,[[["alpha"],["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",1,[[],["u32"]]],[11,"ulps_eq","","",1,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",2,[[],["u32"]]],[11,"ulps_eq","","",2,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",3,[[],["u32"]]],[11,"ulps_eq","","",3,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","palette::luma","",17,[[],["u32"]]],[11,"ulps_eq","","",17,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","palette::rgb","",19,[[],["u32"]]],[11,"ulps_eq","","",19,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","palette","",6,[[],["u32"]]],[11,"ulps_eq","","",6,[[["u32"],["self"]],["bool"]]],[11,"ulps_ne","","",6,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",7,[[],["u32"]]],[11,"ulps_eq","","",7,[[["u32"],["self"]],["bool"]]],[11,"ulps_ne","","",7,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",4,[[],["u32"]]],[11,"ulps_eq","","",4,[[["u32"],["self"]],["bool"]]],[11,"ulps_ne","","",4,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",5,[[],["u32"]]],[11,"ulps_eq","","",5,[[["u32"],["self"]],["bool"]]],[11,"ulps_ne","","",5,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",23,[[],["u32"]]],[11,"ulps_eq","","",23,[[["u32"],["self"]],["bool"]]],[11,"ulps_ne","","",23,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",24,[[],["u32"]]],[11,"ulps_eq","","",24,[[["u32"],["self"]],["bool"]]],[11,"ulps_ne","","",24,[[["u32"],["self"]],["bool"]]],[11,"blend","palette::blend","Blend self, as the source color, with `destination`, using…",13,[[["f"]],["self"]]],[11,"over","","Place `self` over `other`. This is the good old common…",13,[[],["self"]]],[11,"inside","","Results in the parts of `self` that overlaps the visible…",13,[[],["self"]]],[11,"outside","","Results in the parts of `self` that lies outside the…",13,[[],["self"]]],[11,"atop","","Place `self` over only the visible parts of `other`.",13,[[],["self"]]],[11,"xor","","Results in either `self` or `other`, where they do not…",13,[[],["self"]]],[11,"plus","","Add `self` and `other`. This uses the alpha component to…",13,[[],["self"]]],[11,"multiply","","Multiply `self` with `other`. This uses the alpha…",13,[[],["self"]]],[11,"screen","","Make a color which is at least as light as `self` or…",13,[[],["self"]]],[11,"overlay","","Multiply `self` or `other` if other is dark, or screen…",13,[[],["self"]]],[11,"darken","","Return the darkest parts of `self` and `other`.",13,[[],["self"]]],[11,"lighten","","Return the lightest parts of `self` and `other`.",13,[[],["self"]]],[11,"dodge","","Lighten `other` to reflect `self`. Results in `other` if…",13,[[],["self"]]],[11,"burn","","Darken `other` to reflect `self`. Results in `other` if…",13,[[],["self"]]],[11,"hard_light","","Multiply `self` or `other` if other is dark, or screen…",13,[[],["self"]]],[11,"soft_light","","Lighten `other` if `self` is light, or darken `other` as…",13,[[],["self"]]],[11,"difference","","Return the absolute difference between `self` and `other`.…",13,[[],["self"]]],[11,"exclusion","","Similar to `difference`, but appears to result in a lower…",13,[[],["self"]]],[11,"from_yxy","palette","Convert from Yxy color space",40,[[["yxy"]],["self"]]],[11,"from_lab","","Convert from L*a*b* color space",40,[[["lab"]],["self"]]],[11,"from_lch","","Convert from L*C*h° color space",40,[[["lch"]],["self"]]],[11,"from_rgb","","Convert from RGB color space",40,[[["rgb",["linear"]],["linear"]],["self"]]],[11,"from_hsl","","Convert from HSL color space",40,[[["rgbspace"],["hsl"]],["self"]]],[11,"from_hsv","","Convert from HSV color space",40,[[["rgbspace"],["hsv"]],["self"]]],[11,"from_hwb","","Convert from HWB color space",40,[[["rgbspace"],["hwb"]],["self"]]],[11,"from_luma","","Convert from Luma",40,[[["luma",["linear"]],["linear"]],["self"]]],[11,"into_yxy","","Convert into Yxy color space",41,[[],["yxy"]]],[11,"into_lab","","Convert into L*a*b* color space",41,[[],["lab"]]],[11,"into_lch","","Convert into L*C*h° color space",41,[[],["lch"]]],[11,"into_rgb","","Convert into RGB color space.",41,[[],[["linear"],["rgb",["linear"]]]]],[11,"into_hsl","","Convert into HSL color space",41,[[],[["rgbspace"],["hsl"]]]],[11,"into_hsv","","Convert into HSV color space",41,[[],[["rgbspace"],["hsv"]]]],[11,"into_hwb","","Convert into HWB color space",41,[[],[["rgbspace"],["hwb"]]]],[11,"into_luma","","Convert into Luma",41,[[],[["linear"],["luma",["linear"]]]]],[11,"convert_unclamped_from","","Convert from T. The resulting color might be invalid in…",38,[[["t"]],["self"]]],[18,"CHANNELS","palette::encoding::pixel","The guaranteed number of channels in the sequence.",32,null]],"p":[[3,"Alpha"],[3,"Hsl"],[3,"Hsv"],[3,"Hwb"],[3,"Lab"],[3,"Lch"],[3,"Xyz"],[3,"Yxy"],[3,"Equations"],[3,"Parameters"],[3,"PreAlpha"],[4,"Equation"],[4,"Parameter"],[8,"Blend"],[8,"BlendFunction"],[3,"Gradient"],[3,"Slice"],[3,"Luma"],[8,"LumaStandard"],[3,"Rgb"],[8,"RgbStandard"],[8,"RgbSpace"],[8,"Primaries"],[3,"LabHue"],[3,"RgbHue"],[3,"ConeResponseMatrices"],[4,"Method"],[8,"TransformMatrix"],[8,"AdaptFrom"],[8,"AdaptInto"],[3,"OutOfBounds"],[8,"Number"],[8,"RawPixelSized"],[8,"RawPixel"],[8,"Pixel"],[8,"TransferFn"],[8,"WhitePoint"],[8,"Float"],[8,"ConvertFrom"],[8,"ConvertInto"],[8,"FromColor"],[8,"IntoColor"],[8,"Limited"],[8,"Mix"],[8,"Shade"],[8,"GetHue"],[8,"Hue"],[8,"Saturate"],[8,"ComponentWise"],[8,"Component"],[3,"Take"],[3,"Range"],[3,"Srgb"],[3,"Gamma"],[3,"GammaFn"],[3,"F2p2"],[3,"Linear"],[3,"LinearFn"],[3,"A"],[3,"B"],[3,"C"],[3,"D50"],[3,"D55"],[3,"D65"],[3,"D75"],[3,"E"],[3,"F2"],[3,"F7"],[3,"F11"],[3,"D50Degree10"],[3,"D55Degree10"],[3,"D65Degree10"],[3,"D75Degree10"]]};
searchIndex["palette_derive"] = {"doc":"Derives traits from the palette crate.","i":[[24,"FromColor","palette_derive","",null,null],[24,"IntoColor","","",null,null],[24,"Pixel","","",null,null]],"p":[]};
searchIndex["paste"] = {"doc":"The nightly-only [`concat_idents!`] macro in the Rust…","i":[[14,"item","paste","Paste identifiers within a macro invocation that expands…",null,null],[14,"item_with_macros","","Paste identifiers within a macro invocation that expands…",null,null],[14,"expr","","Paste identifiers within a macro invocation that expands…",null,null]],"p":[]};
searchIndex["paste_impl"] = {"doc":"","i":[[14,"item","paste_impl","",null,null],[14,"item_with_macros","","",null,null],[24,"proc_macro_hack_expr","","",null,null]],"p":[]};
searchIndex["pest"] = {"doc":"pest. The Elegant Parser","i":[[3,"ParserState","pest","The complete state of a [`Parser`].",null,null],[3,"Position","","A cursor position in a `&str` which provides useful…",null,null],[3,"Lines","","Line iterator for Spans, created by [`Span::lines()`].",null,null],[3,"Span","","A span over a `&str`. It is created from either [two…",null,null],[4,"Atomicity","","The current atomicity of a [`ParserState`].",null,null],[13,"Atomic","","",0,null],[13,"CompoundAtomic","","",0,null],[13,"NonAtomic","","",0,null],[4,"Lookahead","","The current lookahead status of a [`ParserState`].",null,null],[13,"Positive","","",1,null],[13,"Negative","","",1,null],[13,"None","","",1,null],[4,"MatchDir","","Match direction for the stack. Used in…",null,null],[13,"BottomToTop","","",2,null],[13,"TopToBottom","","",2,null],[4,"Token","","A token generated by a `Parser`.",null,null],[13,"Start","","The starting `Position` of a matched `Rule`",3,null],[12,"rule","pest::Token","",4,null],[12,"pos","","",4,null],[13,"End","pest","The ending `Position` of a matched `Rule`",3,null],[12,"rule","pest::Token","",5,null],[12,"pos","","",5,null],[5,"state","pest","Creates a `ParserState` from a `&str`, supplying it to a…",null,[[["str"],["f"]],[["error"],["pairs"],["result",["pairs","error"]]]]],[0,"error","","Types for different kinds of parsing failures.",null,null],[3,"Error","pest::error","Parse-related error type.",null,null],[12,"variant","","Variant of the error",6,null],[12,"location","","Location within the input string",6,null],[12,"line_col","","Line/column within the input string",6,null],[4,"ErrorVariant","","Different kinds of parsing errors.",null,null],[13,"ParsingError","","Generated parsing error with expected and unexpected `Rule`s",7,null],[12,"positives","pest::error::ErrorVariant","Positive attempts",8,null],[12,"negatives","","Negative attempts",8,null],[13,"CustomError","pest::error","Custom error with a message",7,null],[12,"message","pest::error::ErrorVariant","Short explanation",9,null],[4,"InputLocation","pest::error","Where an `Error` has occurred.",null,null],[13,"Pos","","`Error` was created by `Error::new_from_pos`",10,null],[13,"Span","","`Error` was created by `Error::new_from_span`",10,null],[4,"LineColLocation","","Line/column where an `Error` has occurred.",null,null],[13,"Pos","","Line/column pair if `Error` was created by…",11,null],[13,"Span","","Line/column pairs if `Error` was created by…",11,null],[11,"new_from_pos","","Creates `Error` from `ErrorVariant` and `Position`.",6,[[["position"],["errorvariant"]],["error"]]],[11,"new_from_span","","Creates `Error` from `ErrorVariant` and `Span`.",6,[[["span"],["errorvariant"]],["error"]]],[11,"with_path","","Returns `Error` variant with `path` which is shown when…",6,[[["str"]],["error"]]],[11,"renamed_rules","","Renames all `Rule`s if this is a [`ParsingError`]. It does…",6,[[["f"]],["error"]]],[0,"iterators","pest","Types and iterators for parser output.",null,null],[3,"FlatPairs","pest::iterators","An iterator over [`Pair`]s. It is created by…",null,null],[3,"Pair","","A matching pair of [`Token`]s and everything between them.",null,null],[3,"Pairs","","An iterator over [`Pair`]s. It is created by…",null,null],[3,"Tokens","","An iterator over [`Token`]s. It is created by…",null,null],[11,"tokens","","Returns the `Tokens` for these pairs.",12,[[],["tokens"]]],[11,"as_rule","","Returns the `Rule` of the `Pair`.",13,[[["self"]],["r"]]],[11,"as_str","","Captures a slice from the `&str` defined by the token…",13,[[["self"]],["str"]]],[11,"into_span","","Returns the `Span` defined by the `Pair`, consuming it.",13,[[],["span"]]],[11,"as_span","","Returns the `Span` defined by the `Pair`, without…",13,[[["self"]],["span"]]],[11,"into_inner","","Returns the inner `Pairs` between the `Pair`, consuming it.",13,[[],["pairs"]]],[11,"tokens","","Returns the `Tokens` for the `Pair`.",13,[[],["tokens"]]],[11,"single","","Create a new `Pairs` iterator containing just the single…",14,[[["pair"]],["self"]]],[11,"as_str","","Captures a slice from the `&str` defined by the starting…",14,[[["self"]],["str"]]],[11,"concat","","Captures inner token `Pair`s and concatenates resulting…",14,[[["self"]],["string"]]],[11,"flatten","","Flattens the `Pairs`.",14,[[],["flatpairs"]]],[11,"tokens","","Returns the `Tokens` for the `Pairs`.",14,[[],["tokens"]]],[11,"peek","","Peek at the first inner `Pair` without changing the…",14,[[["self"]],[["option",["pair"]],["pair"]]]],[11,"new","pest","Allocates a fresh `ParserState` object to the heap and…",15,[[["str"]],["box"]]],[11,"position","","Returns a reference to the current `Position` of the…",15,[[["self"]],["position"]]],[11,"atomicity","","Returns the current atomicity of the `ParserState`.",15,[[["self"]],["atomicity"]]],[11,"rule","","Wrapper needed to generate tokens. This will associate the…",15,[[["box"],["f"],["r"]],[["parseresult",["box"]],["box"]]]],[11,"sequence","","Starts a sequence of transformations provided by `f` from…",15,[[["box"],["f"]],[["parseresult",["box"]],["box"]]]],[11,"repeat","","Repeatedly applies the transformation provided by `f` from…",15,[[["box"],["f"]],[["parseresult",["box"]],["box"]]]],[11,"optional","","Optionally applies the transformation provided by `f` from…",15,[[["box"],["f"]],[["parseresult",["box"]],["box"]]]],[11,"match_char_by","","Attempts to match a single character based on a filter…",15,[[["box"],["f"]],[["parseresult",["box"]],["box"]]]],[11,"match_string","","Attempts to match the given string. Returns `Ok` with the…",15,[[["box"],["str"]],[["parseresult",["box"]],["box"]]]],[11,"match_insensitive","","Attempts to case-insensitively match the given string.…",15,[[["box"],["str"]],[["parseresult",["box"]],["box"]]]],[11,"match_range","","Attempts to match a single character from the given range.…",15,[[["box"],["char"],["range",["char"]]],[["parseresult",["box"]],["box"]]]],[11,"skip","","Attempts to skip `n` characters forward. Returns `Ok` with…",15,[[["box"],["usize"]],[["parseresult",["box"]],["box"]]]],[11,"skip_until","","Attempts to skip forward until one of the given strings is…",15,[[["box"]],[["parseresult",["box"]],["box"]]]],[11,"start_of_input","","Attempts to match the start of the input. Returns `Ok`…",15,[[["box"]],[["parseresult",["box"]],["box"]]]],[11,"end_of_input","","Attempts to match the end of the input. Returns `Ok` with…",15,[[["box"]],[["parseresult",["box"]],["box"]]]],[11,"lookahead","","Starts a lookahead transformation provided by `f` from the…",15,[[["box"],["f"],["bool"]],[["parseresult",["box"]],["box"]]]],[11,"atomic","","Transformation which stops `Token`s from being generated…",15,[[["box"],["atomicity"],["f"]],[["parseresult",["box"]],["box"]]]],[11,"stack_push","","Evaluates the result of closure `f` and pushes the span of…",15,[[["box"],["f"]],[["parseresult",["box"]],["box"]]]],[11,"stack_peek","","Peeks the top of the stack and attempts to match the…",15,[[["box"]],[["parseresult",["box"]],["box"]]]],[11,"stack_pop","","Pops the top of the stack and attempts to match the…",15,[[["box"]],[["parseresult",["box"]],["box"]]]],[11,"stack_match_peek_slice","","Matches part of the state of the stack.",15,[[["matchdir"],["i32"],["box"],["option",["i32"]]],[["parseresult",["box"]],["box"]]]],[11,"stack_match_peek","","Matches the full state of the stack.",15,[[["box"]],[["parseresult",["box"]],["box"]]]],[11,"stack_match_pop","","Matches the full state of the stack. This method will…",15,[[["box"]],[["parseresult",["box"]],["box"]]]],[11,"stack_drop","","Drops the top of the stack. Returns `Ok(Box<ParserState>)`…",15,[[["box"]],[["parseresult",["box"]],["box"]]]],[11,"restore_on_err","","Restores the original state of the `ParserState` when `f`…",15,[[["box"],["f"]],[["parseresult",["box"]],["box"]]]],[11,"new","","Attempts to create a new `Position` at the given position.…",16,[[["str"],["usize"]],[["option",["position"]],["position"]]]],[11,"from_start","","Creates a `Position` at the start of a `&str`.",16,[[["str"]],["position"]]],[11,"pos","","Returns the byte position of this `Position` as a `usize`.",16,[[["self"]],["usize"]]],[11,"span","","Creates a `Span` from two `Position`s.",16,[[["position"],["self"]],["span"]]],[11,"line_col","","Returns the line and column number of this `Position`.",16,[[["self"]]]],[11,"line_of","","Returns the entire line of the input that contains this…",16,[[["self"]],["str"]]],[0,"prec_climber","","Constructs useful in infix operator parsing with the…",null,null],[3,"Operator","pest::prec_climber","Infix operator used in [`PrecClimber`].",null,null],[3,"PrecClimber","","List of operators and precedences, which can perform…",null,null],[4,"Assoc","","Associativity of an [`Operator`].",null,null],[13,"Left","","Left `Operator` associativity",17,null],[13,"Right","","Right `Operator` associativity",17,null],[11,"new","","Creates a new `Operator` from a `Rule` and `Assoc`.",18,[[["assoc"],["r"]],["operator"]]],[11,"new","","Creates a new `PrecClimber` from the `Operator`s contained…",19,[[["vec",["operator"]],["operator"]],["precclimber"]]],[11,"climb","","Performs the precedence climbing algorithm on the `pairs`…",19,[[["g"],["p"],["f"],["self"]],["t"]]],[11,"new","pest","Attempts to create a new span. Will return `None` if…",20,[[["str"],["usize"]],[["span"],["option",["span"]]]]],[11,"start","","Returns the `Span`'s start byte position as a `usize`.",20,[[["self"]],["usize"]]],[11,"end","","Returns the `Span`'s end byte position as a `usize`.",20,[[["self"]],["usize"]]],[11,"start_pos","","Returns the `Span`'s start `Position`.",20,[[["self"]],["position"]]],[11,"end_pos","","Returns the `Span`'s end `Position`.",20,[[["self"]],["position"]]],[11,"split","","Splits the `Span` into a pair of `Position`s.",20,[[]]],[11,"as_str","","Captures a slice from the `&str` defined by the `Span`.",20,[[["self"]],["str"]]],[11,"lines","","Iterates over all lines (partially) covered by this span.",20,[[["self"]],["lines"]]],[6,"ParseResult","","Type alias to simplify specifying the return value of…",null,null],[8,"Parser","","A trait with a single method that parses strings.",null,null],[10,"parse","","Parses a `&str` starting from `rule`.",21,[[["str"],["r"]],[["result",["pairs","error"]],["pairs"],["error"]]]],[8,"RuleType","","A trait which parser rules must implement.",null,null],[14,"parses_to","","Testing tool that compares produced tokens.",null,null],[14,"fails_with","","Testing tool that compares produced errors.",null,null],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","pest::error","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","pest::iterators","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","pest::prec_climber","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"next_back","pest::iterators","",12,[[["self"]],["option"]]],[11,"next_back","","",14,[[["self"]],["option"]]],[11,"next_back","","",23,[[["self"]],["option"]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"next","","",14,[[["self"]],["option"]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"next","pest","",22,[[["self"]],[["str"],["option",["str"]]]]],[11,"clone","pest::error","",6,[[["self"]],["error"]]],[11,"clone","","",7,[[["self"]],["errorvariant"]]],[11,"clone","","",10,[[["self"]],["inputlocation"]]],[11,"clone","","",11,[[["self"]],["linecollocation"]]],[11,"clone","pest::iterators","",12,[[["self"]],["flatpairs"]]],[11,"clone","","",13,[[["self"]],["pair"]]],[11,"clone","","",14,[[["self"]],["pairs"]]],[11,"clone","","",23,[[["self"]],["tokens"]]],[11,"clone","pest","",1,[[["self"]],["lookahead"]]],[11,"clone","","",0,[[["self"]],["atomicity"]]],[11,"clone","","",2,[[["self"]],["matchdir"]]],[11,"clone","","",16,[[["self"]],["position"]]],[11,"clone","pest::prec_climber","",17,[[["self"]],["assoc"]]],[11,"clone","pest","",20,[[["self"]],["span"]]],[11,"clone","","",3,[[["self"]],["token"]]],[11,"cmp","","",16,[[["position"],["self"]],["ordering"]]],[11,"eq","pest::error","",6,[[["self"],["error"]],["bool"]]],[11,"ne","","",6,[[["self"],["error"]],["bool"]]],[11,"eq","","",7,[[["errorvariant"],["self"]],["bool"]]],[11,"ne","","",7,[[["errorvariant"],["self"]],["bool"]]],[11,"eq","","",10,[[["inputlocation"],["self"]],["bool"]]],[11,"ne","","",10,[[["inputlocation"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["linecollocation"]],["bool"]]],[11,"ne","","",11,[[["self"],["linecollocation"]],["bool"]]],[11,"eq","pest::iterators","",13,[[["pair"],["self"]],["bool"]]],[11,"eq","","",14,[[["pairs"],["self"]],["bool"]]],[11,"eq","pest","",1,[[["self"],["lookahead"]],["bool"]]],[11,"eq","","",0,[[["self"],["atomicity"]],["bool"]]],[11,"eq","","",2,[[["self"],["matchdir"]],["bool"]]],[11,"eq","","",16,[[["position"],["self"]],["bool"]]],[11,"eq","pest::prec_climber","",17,[[["self"],["assoc"]],["bool"]]],[11,"eq","pest","",20,[[["span"],["self"]],["bool"]]],[11,"eq","","",3,[[["token"],["self"]],["bool"]]],[11,"ne","","",3,[[["token"],["self"]],["bool"]]],[11,"partial_cmp","","",16,[[["position"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","pest::error","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","pest::iterators","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","pest","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","pest::prec_climber","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","pest","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","pest::error","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","pest::iterators","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"bitor","pest::prec_climber","",18,[[],["self"]]],[11,"hash","pest::error","",6,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","pest::iterators","",13,[[["self"],["h"]]]],[11,"hash","","",14,[[["self"],["h"]]]],[11,"hash","pest","",16,[[["self"],["h"]]]],[11,"hash","","",20,[[["self"],["h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"description","pest::error","",6,[[["self"]],["str"]]]],"p":[[4,"Atomicity"],[4,"Lookahead"],[4,"MatchDir"],[4,"Token"],[13,"Start"],[13,"End"],[3,"Error"],[4,"ErrorVariant"],[13,"ParsingError"],[13,"CustomError"],[4,"InputLocation"],[4,"LineColLocation"],[3,"FlatPairs"],[3,"Pair"],[3,"Pairs"],[3,"ParserState"],[3,"Position"],[4,"Assoc"],[3,"Operator"],[3,"PrecClimber"],[3,"Span"],[8,"Parser"],[3,"Lines"],[3,"Tokens"]]};
searchIndex["pest_derive"] = {"doc":"pest. The Elegant Parser","i":[[24,"Parser","pest_derive","",null,null]],"p":[]};
searchIndex["pest_generator"] = {"doc":"","i":[[5,"derive_parser","pest_generator","",null,[[["tokenstream"],["bool"]],["tokenstream"]]]],"p":[]};
searchIndex["pest_meta"] = {"doc":"","i":[[5,"unwrap_or_report","pest_meta","",null,[[["result"]],["t"]]],[0,"ast","","",null,null],[3,"Rule","pest_meta::ast","",null,null],[12,"name","","",0,null],[12,"ty","","",0,null],[12,"expr","","",0,null],[3,"ExprTopDownIterator","","",null,null],[4,"RuleType","","",null,null],[13,"Normal","","",1,null],[13,"Silent","","",1,null],[13,"Atomic","","",1,null],[13,"CompoundAtomic","","",1,null],[13,"NonAtomic","","",1,null],[4,"Expr","","",null,null],[13,"Str","","Matches an exact string, e.g. `\"a\"`",2,null],[13,"Insens","","Matches an exact string, case insensitively (ASCII only),…",2,null],[13,"Range","","Matches one character in the range, e.g. `'a'..'z'`",2,null],[13,"Ident","","Matches the rule with the given name, e.g. `a`",2,null],[13,"PeekSlice","","Matches a custom part of the stack, e.g. `PEEK[..]`",2,null],[13,"PosPred","","Positive lookahead; matches expression without making…",2,null],[13,"NegPred","","Negative lookahead; matches if expression doesn't match,…",2,null],[13,"Seq","","Matches a sequence of two expressions, e.g. `e1 ~ e2`",2,null],[13,"Choice","","Matches either of two expressions, e.g. `e1 | e2`",2,null],[13,"Opt","","Optionally matches an expression, e.g. `e?`",2,null],[13,"Rep","","Matches an expression zero or more times, e.g. `e*`",2,null],[13,"RepOnce","","Matches an expression one or more times, e.g. `e+`",2,null],[13,"RepExact","","Matches an expression an exact number of times, e.g. `e{n}`",2,null],[13,"RepMin","","Matches an expression at least a number of times, e.g.…",2,null],[13,"RepMax","","Matches an expression at most a number of times, e.g.…",2,null],[13,"RepMinMax","","Matches an expression a number of times within a range,…",2,null],[13,"Skip","","Continues to match expressions until one of the strings in…",2,null],[13,"Push","","Matches an expression and pushes it to the stack, e.g.…",2,null],[11,"iter_top_down","","",2,[[["self"]],["exprtopdowniterator"]]],[11,"map_top_down","","",2,[[["f"]],["expr"]]],[11,"map_bottom_up","","",2,[[["f"]],["expr"]]],[11,"new","","",3,[[["expr"]],["self"]]],[0,"optimizer","pest_meta","",null,null],[3,"OptimizedRule","pest_meta::optimizer","",null,null],[12,"name","","",4,null],[12,"ty","","",4,null],[12,"expr","","",4,null],[3,"OptimizedExprTopDownIterator","","",null,null],[4,"OptimizedExpr","","",null,null],[13,"Str","","",5,null],[13,"Insens","","",5,null],[13,"Range","","",5,null],[13,"Ident","","",5,null],[13,"PeekSlice","","",5,null],[13,"PosPred","","",5,null],[13,"NegPred","","",5,null],[13,"Seq","","",5,null],[13,"Choice","","",5,null],[13,"Opt","","",5,null],[13,"Rep","","",5,null],[13,"Skip","","",5,null],[13,"Push","","",5,null],[13,"RestoreOnErr","","",5,null],[5,"optimize","","",null,[[["rule"],["vec",["rule"]]],[["optimizedrule"],["vec",["optimizedrule"]]]]],[11,"iter_top_down","","",5,[[["self"]],["optimizedexprtopdowniterator"]]],[11,"map_top_down","","",5,[[["f"]],["optimizedexpr"]]],[11,"map_bottom_up","","",5,[[["f"]],["optimizedexpr"]]],[11,"new","","",6,[[["optimizedexpr"]],["self"]]],[0,"parser","pest_meta","",null,null],[3,"PestParser","pest_meta::parser","",null,null],[3,"ParserRule","","",null,null],[12,"name","","",7,null],[12,"span","","",7,null],[12,"ty","","",7,null],[12,"node","","",7,null],[3,"ParserNode","","",null,null],[12,"expr","","",8,null],[12,"span","","",8,null],[4,"Rule","","",null,null],[13,"EOI","","",9,null],[13,"grammar_rules","","",9,null],[13,"grammar_rule","","",9,null],[13,"assignment_operator","","",9,null],[13,"opening_brace","","",9,null],[13,"closing_brace","","",9,null],[13,"opening_paren","","",9,null],[13,"closing_paren","","",9,null],[13,"opening_brack","","",9,null],[13,"closing_brack","","",9,null],[13,"modifier","","",9,null],[13,"silent_modifier","","",9,null],[13,"atomic_modifier","","",9,null],[13,"compound_atomic_modifier","","",9,null],[13,"non_atomic_modifier","","",9,null],[13,"expression","","",9,null],[13,"term","","",9,null],[13,"node","","",9,null],[13,"terminal","","",9,null],[13,"prefix_operator","","",9,null],[13,"infix_operator","","",9,null],[13,"postfix_operator","","",9,null],[13,"positive_predicate_operator","","",9,null],[13,"negative_predicate_operator","","",9,null],[13,"sequence_operator","","",9,null],[13,"choice_operator","","",9,null],[13,"optional_operator","","",9,null],[13,"repeat_operator","","",9,null],[13,"repeat_once_operator","","",9,null],[13,"repeat_exact","","",9,null],[13,"repeat_min","","",9,null],[13,"repeat_max","","",9,null],[13,"repeat_min_max","","",9,null],[13,"number","","",9,null],[13,"integer","","",9,null],[13,"comma","","",9,null],[13,"_push","","",9,null],[13,"peek_slice","","",9,null],[13,"identifier","","",9,null],[13,"alpha","","",9,null],[13,"alpha_num","","",9,null],[13,"string","","",9,null],[13,"insensitive_string","","",9,null],[13,"range","","",9,null],[13,"character","","",9,null],[13,"inner_str","","",9,null],[13,"inner_chr","","",9,null],[13,"escape","","",9,null],[13,"code","","",9,null],[13,"unicode","","",9,null],[13,"hex_digit","","",9,null],[13,"quote","","",9,null],[13,"single_quote","","",9,null],[13,"range_operator","","",9,null],[13,"newline","","",9,null],[13,"WHITESPACE","","",9,null],[13,"block_comment","","",9,null],[13,"COMMENT","","",9,null],[4,"ParserExpr","","",null,null],[13,"Str","","",10,null],[13,"Insens","","",10,null],[13,"Range","","",10,null],[13,"Ident","","",10,null],[13,"PeekSlice","","",10,null],[13,"PosPred","","",10,null],[13,"NegPred","","",10,null],[13,"Seq","","",10,null],[13,"Choice","","",10,null],[13,"Opt","","",10,null],[13,"Rep","","",10,null],[13,"RepOnce","","",10,null],[13,"RepExact","","",10,null],[13,"RepMin","","",10,null],[13,"RepMax","","",10,null],[13,"RepMinMax","","",10,null],[13,"Push","","",10,null],[5,"parse","","",null,[[["str"],["rule"]],[["pairs",["rule"]],["error",["rule"]],["result",["pairs","error"]]]]],[5,"consume_rules","","",null,[[["pairs",["rule"]],["rule"]],[["vec",["astrule"]],["result",["vec","vec"]],["vec",["error"]]]]],[11,"filter_map_top_down","","",8,[[["f"]],["vec"]]],[0,"validator","pest_meta","",null,null],[5,"validate_pairs","pest_meta::validator","",null,[[["rule"],["pairs",["rule"]]],[["vec",["str"]],["result",["vec","vec"]],["vec",["error"]]]]],[5,"validate_rust_keywords","","",null,[[["vec"],["hashset"]],[["error",["rule"]],["vec",["error"]]]]],[5,"validate_pest_keywords","","",null,[[["vec"],["hashset"]],[["error",["rule"]],["vec",["error"]]]]],[5,"validate_already_defined","","",null,[[["vec"]],[["error",["rule"]],["vec",["error"]]]]],[5,"validate_undefined","","",null,[[["vec"],["hashset"]],[["error",["rule"]],["vec",["error"]]]]],[5,"validate_ast","","",null,[[["vec"]],[["error",["rule"]],["vec",["error"]]]]],[11,"from","pest_meta::ast","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","pest_meta::optimizer","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","pest_meta::parser","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"next","pest_meta::ast","",3,[[["self"]],["option"]]],[11,"next","pest_meta::optimizer","",6,[[["self"]],["option"]]],[11,"clone","pest_meta::ast","",0,[[["self"]],["rule"]]],[11,"clone","","",1,[[["self"]],["ruletype"]]],[11,"clone","","",2,[[["self"]],["expr"]]],[11,"clone","pest_meta::optimizer","",4,[[["self"]],["optimizedrule"]]],[11,"clone","","",5,[[["self"]],["optimizedexpr"]]],[11,"clone","pest_meta::parser","",9,[[["self"]],["rule"]]],[11,"clone","","",7,[[["self"]],["parserrule"]]],[11,"clone","","",8,[[["self"]],["parsernode"]]],[11,"clone","","",10,[[["self"]],["parserexpr"]]],[11,"cmp","","",9,[[["self"],["rule"]],["ordering"]]],[11,"eq","pest_meta::ast","",0,[[["self"],["rule"]],["bool"]]],[11,"ne","","",0,[[["self"],["rule"]],["bool"]]],[11,"eq","","",1,[[["self"],["ruletype"]],["bool"]]],[11,"eq","","",2,[[["expr"],["self"]],["bool"]]],[11,"ne","","",2,[[["expr"],["self"]],["bool"]]],[11,"eq","pest_meta::optimizer","",4,[[["self"],["optimizedrule"]],["bool"]]],[11,"ne","","",4,[[["self"],["optimizedrule"]],["bool"]]],[11,"eq","","",5,[[["self"],["optimizedexpr"]],["bool"]]],[11,"ne","","",5,[[["self"],["optimizedexpr"]],["bool"]]],[11,"eq","pest_meta::parser","",9,[[["self"],["rule"]],["bool"]]],[11,"eq","","",7,[[["self"],["parserrule"]],["bool"]]],[11,"ne","","",7,[[["self"],["parserrule"]],["bool"]]],[11,"eq","","",8,[[["parsernode"],["self"]],["bool"]]],[11,"ne","","",8,[[["parsernode"],["self"]],["bool"]]],[11,"eq","","",10,[[["parserexpr"],["self"]],["bool"]]],[11,"ne","","",10,[[["parserexpr"],["self"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["rule"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","pest_meta::ast","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","pest_meta::optimizer","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","pest_meta::parser","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"parse","","",11,[[["str"],["rule"]],[["pairs",["rule"]],["error",["rule"]],["result",["pairs","error"]]]]]],"p":[[3,"Rule"],[4,"RuleType"],[4,"Expr"],[3,"ExprTopDownIterator"],[3,"OptimizedRule"],[4,"OptimizedExpr"],[3,"OptimizedExprTopDownIterator"],[3,"ParserRule"],[3,"ParserNode"],[4,"Rule"],[4,"ParserExpr"],[3,"PestParser"]]};
searchIndex["phf"] = {"doc":"Compile-time generated maps and sets.","i":[[8,"PhfHash","phf","A trait implemented by types which can be used in PHF data…",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher…",0,[[["self"],["h"]]]],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,[[["h"]]]],[3,"Map","","An immutable map constructed at compile time.",null,null],[3,"Set","","An immutable set constructed at compile time.",null,null],[0,"map","","An immutable map constructed at compile time.",null,null],[3,"Map","phf::map","An immutable map constructed at compile time.",null,null],[3,"Entries","","An iterator over the key/value pairs in a `Map`.",null,null],[3,"Keys","","An iterator over the keys in a `Map`.",null,null],[3,"Values","","An iterator over the values in a `Map`.",null,null],[11,"is_empty","","Returns true if the `Map` is empty.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of entries in the `Map`.",1,[[["self"]],["usize"]]],[11,"contains_key","","Determines if `key` is in the `Map`.",1,[[["t"],["self"]],["bool"]]],[11,"get","","Returns a reference to the value that `key` maps to.",1,[[["t"],["self"]],[["option"],["v"]]]],[11,"get_key","","Returns a reference to the map's internal static instance…",1,[[["t"],["self"]],[["option"],["k"]]]],[11,"get_entry","","Like `get`, but returns both the key and the value.",1,[[["t"],["self"]],["option"]]],[11,"entries","","Returns an iterator over the key/value pairs in the map.",1,[[["self"]],["entries"]]],[11,"keys","","Returns an iterator over the keys in the map.",1,[[["self"]],["keys"]]],[11,"values","","Returns an iterator over the values in the map.",1,[[["self"]],["values"]]],[0,"set","phf","An immutable set constructed at compile time.",null,null],[3,"Set","phf::set","An immutable set constructed at compile time.",null,null],[3,"Iter","","An iterator over the values in a `Set`.",null,null],[11,"len","","Returns the number of elements in the `Set`.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Set` contains no elements.",2,[[["self"]],["bool"]]],[11,"get_key","","Returns a reference to the set's internal static instance…",2,[[["self"],["u"]],[["t"],["option"]]]],[11,"contains","","Returns true if `value` is in the `Set`.",2,[[["self"],["u"]],["bool"]]],[11,"iter","","Returns an iterator over the values in the set.",2,[[["self"]],["iter"]]],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",2,[[["set"],["self"]],["bool"]]],[11,"is_subset","","Returns true if `other` contains all values in `self`.",2,[[["set"],["self"]],["bool"]]],[11,"is_superset","","Returns true if `self` contains all values in `other`.",2,[[["set"],["self"]],["bool"]]],[11,"from","phf::map","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","phf::set","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","phf::map","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","phf::set","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"next_back","phf::map","",3,[[["self"]],["option"]]],[11,"next_back","","",4,[[["self"]],[["option"],["k"]]]],[11,"next_back","","",5,[[["self"]],[["option"],["v"]]]],[11,"next_back","phf::set","",6,[[["self"]],[["option"],["t"]]]],[11,"next","phf::map","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,[[["self"]]]],[11,"next","","",4,[[["self"]],[["option"],["k"]]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],[["option"],["v"]]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","phf::set","",6,[[["self"]],[["option"],["t"]]]],[11,"size_hint","","",6,[[["self"]]]],[11,"fmt","phf::map","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","phf::set","",2,[[["formatter"],["self"]],["result"]]],[11,"index","phf::map","",1,[[["self"],["t"]],["v"]]]],"p":[[8,"PhfHash"],[3,"Map"],[3,"Set"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"Iter"]]};
searchIndex["phf_shared"] = {"doc":"","i":[[3,"Hashes","phf_shared","",null,null],[12,"g","","",0,null],[12,"f1","","",0,null],[12,"f2","","",0,null],[5,"displace","","",null,[[["u32"]],["u32"]]],[5,"hash","","`key` is from `phf_generator::HashState`.",null,[[["t"],["hashkey"]],["hashes"]]],[5,"get_index","","Return an index into `phf_generator::HashState::map`.",null,[[["hashes"],["usize"]],["u32"]]],[6,"HashKey","","A central typedef for hash keys",null,null],[8,"PhfHash","","A trait implemented by types which can be used in PHF data…",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher…",1,[[["self"],["h"]]]],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",1,[[["h"]]]],[8,"FmtConst","","Trait for printing types with `const` constructors, used…",null,null],[10,"fmt_const","","Print a `const` expression representing this value.",2,[[["formatter"],["self"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]]],"p":[[3,"Hashes"],[8,"PhfHash"],[8,"FmtConst"]]};
searchIndex["physical_constants"] = {"doc":"Provides access to the [CODATA recommended values for…","i":[[17,"LATTICE_SPACING_220_OF_SILICON","physical_constants","{220} lattice spacing of silicon (unit: m)",null,null],[17,"ALPHA_PARTICLE_ELECTRON_MASS_RATIO","","alpha particle-electron mass ratio (dimensionless)",null,null],[17,"ALPHA_PARTICLE_MASS","","alpha particle mass (unit: kg)",null,null],[17,"ALPHA_PARTICLE_MASS_ENERGY_EQUIVALENT","","alpha particle mass energy equivalent (unit: J)",null,null],[17,"ALPHA_PARTICLE_MASS_ENERGY_EQUIVALENT_IN_MEV","","alpha particle mass energy equivalent in MeV (unit: MeV)",null,null],[17,"ALPHA_PARTICLE_MASS_IN_U","","alpha particle mass in u (unit: u)",null,null],[17,"ALPHA_PARTICLE_MOLAR_MASS","","alpha particle molar mass (unit: kg mol^-1)",null,null],[17,"ALPHA_PARTICLE_PROTON_MASS_RATIO","","alpha particle-proton mass ratio (dimensionless)",null,null],[17,"ANGSTROM_STAR","","Angstrom star (unit: m)",null,null],[17,"ATOMIC_MASS_CONSTANT","","atomic mass constant (unit: kg)",null,null],[17,"ATOMIC_MASS_CONSTANT_ENERGY_EQUIVALENT","","atomic mass constant energy equivalent (unit: J)",null,null],[17,"ATOMIC_MASS_CONSTANT_ENERGY_EQUIVALENT_IN_MEV","","atomic mass constant energy equivalent in MeV (unit: MeV)",null,null],[17,"ATOMIC_MASS_UNIT_ELECTRON_VOLT_RELATIONSHIP","","atomic mass unit-electron volt relationship (unit: eV)",null,null],[17,"ATOMIC_MASS_UNIT_HARTREE_RELATIONSHIP","","atomic mass unit-hartree relationship (unit: E_h)",null,null],[17,"ATOMIC_MASS_UNIT_HERTZ_RELATIONSHIP","","atomic mass unit-hertz relationship (unit: Hz)",null,null],[17,"ATOMIC_MASS_UNIT_INVERSE_METER_RELATIONSHIP","","atomic mass unit-inverse meter relationship (unit: m^-1)",null,null],[17,"ATOMIC_MASS_UNIT_JOULE_RELATIONSHIP","","atomic mass unit-joule relationship (unit: J)",null,null],[17,"ATOMIC_MASS_UNIT_KELVIN_RELATIONSHIP","","atomic mass unit-kelvin relationship (unit: K)",null,null],[17,"ATOMIC_MASS_UNIT_KILOGRAM_RELATIONSHIP","","atomic mass unit-kilogram relationship (unit: kg)",null,null],[17,"ATOMIC_UNIT_OF_1ST_HYPERPOLARIZABILITY","","atomic unit of 1st hyperpolarizability (unit: C^3 m^3 J^-2)",null,null],[17,"ATOMIC_UNIT_OF_2ND_HYPERPOLARIZABILITY","","atomic unit of 2nd hyperpolarizability (unit: C^4 m^4 J^-3)",null,null],[17,"ATOMIC_UNIT_OF_ACTION","","atomic unit of action (unit: J s)",null,null],[17,"ATOMIC_UNIT_OF_CHARGE","","atomic unit of charge (unit: C)",null,null],[17,"ATOMIC_UNIT_OF_CHARGE_DENSITY","","atomic unit of charge density (unit: C m^-3)",null,null],[17,"ATOMIC_UNIT_OF_CURRENT","","atomic unit of current (unit: A)",null,null],[17,"ATOMIC_UNIT_OF_ELECTRIC_DIPOLE_MOM","","atomic unit of electric dipole mom. (unit: C m)",null,null],[17,"ATOMIC_UNIT_OF_ELECTRIC_FIELD","","atomic unit of electric field (unit: V m^-1)",null,null],[17,"ATOMIC_UNIT_OF_ELECTRIC_FIELD_GRADIENT","","atomic unit of electric field gradient (unit: V m^-2)",null,null],[17,"ATOMIC_UNIT_OF_ELECTRIC_POLARIZABILITY","","atomic unit of electric polarizability (unit: C^2 m^2 J^-1)",null,null],[17,"ATOMIC_UNIT_OF_ELECTRIC_POTENTIAL","","atomic unit of electric potential (unit: V)",null,null],[17,"ATOMIC_UNIT_OF_ELECTRIC_QUADRUPOLE_MOM","","atomic unit of electric quadrupole mom. (unit: C m^2)",null,null],[17,"ATOMIC_UNIT_OF_ENERGY","","atomic unit of energy (unit: J)",null,null],[17,"ATOMIC_UNIT_OF_FORCE","","atomic unit of force (unit: N)",null,null],[17,"ATOMIC_UNIT_OF_LENGTH","","atomic unit of length (unit: m)",null,null],[17,"ATOMIC_UNIT_OF_MAG_DIPOLE_MOM","","atomic unit of mag. dipole mom. (unit: J T^-1)",null,null],[17,"ATOMIC_UNIT_OF_MAG_FLUX_DENSITY","","atomic unit of mag. flux density (unit: T)",null,null],[17,"ATOMIC_UNIT_OF_MAGNETIZABILITY","","atomic unit of magnetizability (unit: J T^-2)",null,null],[17,"ATOMIC_UNIT_OF_MASS","","atomic unit of mass (unit: kg)",null,null],[17,"ATOMIC_UNIT_OF_MOMENTUM","","atomic unit of mom.um (unit: kg m s^-1)",null,null],[17,"ATOMIC_UNIT_OF_PERMITTIVITY","","atomic unit of permittivity (unit: F m^-1)",null,null],[17,"ATOMIC_UNIT_OF_TIME","","atomic unit of time (unit: s)",null,null],[17,"ATOMIC_UNIT_OF_VELOCITY","","atomic unit of velocity (unit: m s^-1)",null,null],[17,"AVOGADRO_CONSTANT","","Avogadro constant (unit: mol^-1)",null,null],[17,"BOHR_MAGNETON","","Bohr magneton (unit: J T^-1)",null,null],[17,"BOHR_MAGNETON_IN_EV_PER_T","","Bohr magneton in eV/T (unit: eV T^-1)",null,null],[17,"BOHR_MAGNETON_IN_HZ_PER_T","","Bohr magneton in Hz/T (unit: Hz T^-1)",null,null],[17,"BOHR_MAGNETON_IN_INVERSE_METERS_PER_TESLA","","Bohr magneton in inverse meters per tesla (unit: m^-1 T^-1)",null,null],[17,"BOHR_MAGNETON_IN_K_PER_T","","Bohr magneton in K/T (unit: K T^-1)",null,null],[17,"BOHR_RADIUS","","Bohr radius (unit: m)",null,null],[17,"BOLTZMANN_CONSTANT","","Boltzmann constant (unit: J K^-1)",null,null],[17,"BOLTZMANN_CONSTANT_IN_EV_PER_K","","Boltzmann constant in eV/K (unit: eV K^-1)",null,null],[17,"BOLTZMANN_CONSTANT_IN_HZ_PER_K","","Boltzmann constant in Hz/K (unit: Hz K^-1)",null,null],[17,"BOLTZMANN_CONSTANT_IN_INVERSE_METERS_PER_KELVIN","","Boltzmann constant in inverse meters per kelvin (unit:…",null,null],[17,"CHARACTERISTIC_IMPEDANCE_OF_VACUUM","","characteristic impedance of vacuum (unit: ohm)",null,null],[17,"CLASSICAL_ELECTRON_RADIUS","","classical electron radius (unit: m)",null,null],[17,"COMPTON_WAVELENGTH","","Compton wavelength (unit: m)",null,null],[17,"COMPTON_WAVELENGTH_OVER_2_PI","","Compton wavelength over 2 pi (unit: m)",null,null],[17,"CONDUCTANCE_QUANTUM","","conductance quantum (unit: S)",null,null],[17,"CONVENTIONAL_VALUE_OF_JOSEPHSON_CONSTANT","","conventional value of Josephson constant (unit: Hz V^-1)",null,null],[17,"CONVENTIONAL_VALUE_OF_VON_KLITZING_CONSTANT","","conventional value of von Klitzing constant (unit: ohm)",null,null],[17,"CU_X_UNIT","","Cu x unit (unit: m)",null,null],[17,"DEUTERON_ELECTRON_MAG_MOM_RATIO","","deuteron-electron mag. mom. ratio (dimensionless)",null,null],[17,"DEUTERON_ELECTRON_MASS_RATIO","","deuteron-electron mass ratio (dimensionless)",null,null],[17,"DEUTERON_G_FACTOR","","deuteron g factor (dimensionless)",null,null],[17,"DEUTERON_MAG_MOM","","deuteron mag. mom. (unit: J T^-1)",null,null],[17,"DEUTERON_MAG_MOM_TO_BOHR_MAGNETON_RATIO","","deuteron mag. mom. to Bohr magneton ratio (dimensionless)",null,null],[17,"DEUTERON_MAG_MOM_TO_NUCLEAR_MAGNETON_RATIO","","deuteron mag. mom. to nuclear magneton ratio (dimensionless)",null,null],[17,"DEUTERON_MASS","","deuteron mass (unit: kg)",null,null],[17,"DEUTERON_MASS_ENERGY_EQUIVALENT","","deuteron mass energy equivalent (unit: J)",null,null],[17,"DEUTERON_MASS_ENERGY_EQUIVALENT_IN_MEV","","deuteron mass energy equivalent in MeV (unit: MeV)",null,null],[17,"DEUTERON_MASS_IN_U","","deuteron mass in u (unit: u)",null,null],[17,"DEUTERON_MOLAR_MASS","","deuteron molar mass (unit: kg mol^-1)",null,null],[17,"DEUTERON_NEUTRON_MAG_MOM_RATIO","","deuteron-neutron mag. mom. ratio (dimensionless)",null,null],[17,"DEUTERON_PROTON_MAG_MOM_RATIO","","deuteron-proton mag. mom. ratio (dimensionless)",null,null],[17,"DEUTERON_PROTON_MASS_RATIO","","deuteron-proton mass ratio (dimensionless)",null,null],[17,"DEUTERON_RMS_CHARGE_RADIUS","","deuteron rms charge radius (unit: m)",null,null],[17,"ELECTRIC_CONSTANT","","electric constant (unit: F m^-1)",null,null],[17,"ELECTRON_CHARGE_TO_MASS_QUOTIENT","","electron charge to mass quotient (unit: C kg^-1)",null,null],[17,"ELECTRON_DEUTERON_MAG_MOM_RATIO","","electron-deuteron mag. mom. ratio (dimensionless)",null,null],[17,"ELECTRON_DEUTERON_MASS_RATIO","","electron-deuteron mass ratio (dimensionless)",null,null],[17,"ELECTRON_G_FACTOR","","electron g factor (dimensionless)",null,null],[17,"ELECTRON_GYROMAG_RATIO","","electron gyromag. ratio (unit: s^-1 T^-1)",null,null],[17,"ELECTRON_GYROMAG_RATIO_OVER_2_PI","","electron gyromag. ratio over 2 pi (unit: MHz T^-1)",null,null],[17,"ELECTRON_HELION_MASS_RATIO","","electron-helion mass ratio (dimensionless)",null,null],[17,"ELECTRON_MAG_MOM","","electron mag. mom. (unit: J T^-1)",null,null],[17,"ELECTRON_MAG_MOM_ANOMALY","","electron mag. mom. anomaly (dimensionless)",null,null],[17,"ELECTRON_MAG_MOM_TO_BOHR_MAGNETON_RATIO","","electron mag. mom. to Bohr magneton ratio (dimensionless)",null,null],[17,"ELECTRON_MAG_MOM_TO_NUCLEAR_MAGNETON_RATIO","","electron mag. mom. to nuclear magneton ratio (dimensionless)",null,null],[17,"ELECTRON_MASS","","electron mass (unit: kg)",null,null],[17,"ELECTRON_MASS_ENERGY_EQUIVALENT","","electron mass energy equivalent (unit: J)",null,null],[17,"ELECTRON_MASS_ENERGY_EQUIVALENT_IN_MEV","","electron mass energy equivalent in MeV (unit: MeV)",null,null],[17,"ELECTRON_MASS_IN_U","","electron mass in u (unit: u)",null,null],[17,"ELECTRON_MOLAR_MASS","","electron molar mass (unit: kg mol^-1)",null,null],[17,"ELECTRON_MUON_MAG_MOM_RATIO","","electron-muon mag. mom. ratio (dimensionless)",null,null],[17,"ELECTRON_MUON_MASS_RATIO","","electron-muon mass ratio (dimensionless)",null,null],[17,"ELECTRON_NEUTRON_MAG_MOM_RATIO","","electron-neutron mag. mom. ratio (dimensionless)",null,null],[17,"ELECTRON_NEUTRON_MASS_RATIO","","electron-neutron mass ratio (dimensionless)",null,null],[17,"ELECTRON_PROTON_MAG_MOM_RATIO","","electron-proton mag. mom. ratio (dimensionless)",null,null],[17,"ELECTRON_PROTON_MASS_RATIO","","electron-proton mass ratio (dimensionless)",null,null],[17,"ELECTRON_TAU_MASS_RATIO","","electron-tau mass ratio (dimensionless)",null,null],[17,"ELECTRON_TO_ALPHA_PARTICLE_MASS_RATIO","","electron to alpha particle mass ratio (dimensionless)",null,null],[17,"ELECTRON_TO_SHIELDED_HELION_MAG_MOM_RATIO","","electron to shielded helion mag. mom. ratio (dimensionless)",null,null],[17,"ELECTRON_TO_SHIELDED_PROTON_MAG_MOM_RATIO","","electron to shielded proton mag. mom. ratio (dimensionless)",null,null],[17,"ELECTRON_TRITON_MASS_RATIO","","electron-triton mass ratio (dimensionless)",null,null],[17,"ELECTRON_VOLT","","electron volt (unit: J)",null,null],[17,"ELECTRON_VOLT_ATOMIC_MASS_UNIT_RELATIONSHIP","","electron volt-atomic mass unit relationship (unit: u)",null,null],[17,"ELECTRON_VOLT_HARTREE_RELATIONSHIP","","electron volt-hartree relationship (unit: E_h)",null,null],[17,"ELECTRON_VOLT_HERTZ_RELATIONSHIP","","electron volt-hertz relationship (unit: Hz)",null,null],[17,"ELECTRON_VOLT_INVERSE_METER_RELATIONSHIP","","electron volt-inverse meter relationship (unit: m^-1)",null,null],[17,"ELECTRON_VOLT_JOULE_RELATIONSHIP","","electron volt-joule relationship (unit: J)",null,null],[17,"ELECTRON_VOLT_KELVIN_RELATIONSHIP","","electron volt-kelvin relationship (unit: K)",null,null],[17,"ELECTRON_VOLT_KILOGRAM_RELATIONSHIP","","electron volt-kilogram relationship (unit: kg)",null,null],[17,"ELEMENTARY_CHARGE","","elementary charge (unit: C)",null,null],[17,"ELEMENTARY_CHARGE_OVER_H","","elementary charge over h (unit: A J^-1)",null,null],[17,"FARADAY_CONSTANT","","Faraday constant (unit: C mol^-1)",null,null],[17,"FARADAY_CONSTANT_FOR_CONVENTIONAL_ELECTRIC_CURRENT","","Faraday constant for conventional electric current (unit:…",null,null],[17,"FERMI_COUPLING_CONSTANT","","Fermi coupling constant (unit: GeV^-2)",null,null],[17,"FINE_STRUCTURE_CONSTANT","","fine-structure constant (dimensionless)",null,null],[17,"FIRST_RADIATION_CONSTANT","","first radiation constant (unit: W m^2)",null,null],[17,"FIRST_RADIATION_CONSTANT_FOR_SPECTRAL_RADIANCE","","first radiation constant for spectral radiance (unit: W…",null,null],[17,"HARTREE_ATOMIC_MASS_UNIT_RELATIONSHIP","","hartree-atomic mass unit relationship (unit: u)",null,null],[17,"HARTREE_ELECTRON_VOLT_RELATIONSHIP","","hartree-electron volt relationship (unit: eV)",null,null],[17,"HARTREE_ENERGY","","Hartree energy (unit: J)",null,null],[17,"HARTREE_ENERGY_IN_EV","","Hartree energy in eV (unit: eV)",null,null],[17,"HARTREE_HERTZ_RELATIONSHIP","","hartree-hertz relationship (unit: Hz)",null,null],[17,"HARTREE_INVERSE_METER_RELATIONSHIP","","hartree-inverse meter relationship (unit: m^-1)",null,null],[17,"HARTREE_JOULE_RELATIONSHIP","","hartree-joule relationship (unit: J)",null,null],[17,"HARTREE_KELVIN_RELATIONSHIP","","hartree-kelvin relationship (unit: K)",null,null],[17,"HARTREE_KILOGRAM_RELATIONSHIP","","hartree-kilogram relationship (unit: kg)",null,null],[17,"HELION_ELECTRON_MASS_RATIO","","helion-electron mass ratio (dimensionless)",null,null],[17,"HELION_G_FACTOR","","helion g factor (dimensionless)",null,null],[17,"HELION_MAG_MOM","","helion mag. mom. (unit: J T^-1)",null,null],[17,"HELION_MAG_MOM_TO_BOHR_MAGNETON_RATIO","","helion mag. mom. to Bohr magneton ratio (dimensionless)",null,null],[17,"HELION_MAG_MOM_TO_NUCLEAR_MAGNETON_RATIO","","helion mag. mom. to nuclear magneton ratio (dimensionless)",null,null],[17,"HELION_MASS","","helion mass (unit: kg)",null,null],[17,"HELION_MASS_ENERGY_EQUIVALENT","","helion mass energy equivalent (unit: J)",null,null],[17,"HELION_MASS_ENERGY_EQUIVALENT_IN_MEV","","helion mass energy equivalent in MeV (unit: MeV)",null,null],[17,"HELION_MASS_IN_U","","helion mass in u (unit: u)",null,null],[17,"HELION_MOLAR_MASS","","helion molar mass (unit: kg mol^-1)",null,null],[17,"HELION_PROTON_MASS_RATIO","","helion-proton mass ratio (dimensionless)",null,null],[17,"HERTZ_ATOMIC_MASS_UNIT_RELATIONSHIP","","hertz-atomic mass unit relationship (unit: u)",null,null],[17,"HERTZ_ELECTRON_VOLT_RELATIONSHIP","","hertz-electron volt relationship (unit: eV)",null,null],[17,"HERTZ_HARTREE_RELATIONSHIP","","hertz-hartree relationship (unit: E_h)",null,null],[17,"HERTZ_INVERSE_METER_RELATIONSHIP","","hertz-inverse meter relationship (unit: m^-1)",null,null],[17,"HERTZ_JOULE_RELATIONSHIP","","hertz-joule relationship (unit: J)",null,null],[17,"HERTZ_KELVIN_RELATIONSHIP","","hertz-kelvin relationship (unit: K)",null,null],[17,"HERTZ_KILOGRAM_RELATIONSHIP","","hertz-kilogram relationship (unit: kg)",null,null],[17,"INVERSE_FINE_STRUCTURE_CONSTANT","","inverse fine-structure constant (dimensionless)",null,null],[17,"INVERSE_METER_ATOMIC_MASS_UNIT_RELATIONSHIP","","inverse meter-atomic mass unit relationship (unit: u)",null,null],[17,"INVERSE_METER_ELECTRON_VOLT_RELATIONSHIP","","inverse meter-electron volt relationship (unit: eV)",null,null],[17,"INVERSE_METER_HARTREE_RELATIONSHIP","","inverse meter-hartree relationship (unit: E_h)",null,null],[17,"INVERSE_METER_HERTZ_RELATIONSHIP","","inverse meter-hertz relationship (unit: Hz)",null,null],[17,"INVERSE_METER_JOULE_RELATIONSHIP","","inverse meter-joule relationship (unit: J)",null,null],[17,"INVERSE_METER_KELVIN_RELATIONSHIP","","inverse meter-kelvin relationship (unit: K)",null,null],[17,"INVERSE_METER_KILOGRAM_RELATIONSHIP","","inverse meter-kilogram relationship (unit: kg)",null,null],[17,"INVERSE_OF_CONDUCTANCE_QUANTUM","","inverse of conductance quantum (unit: ohm)",null,null],[17,"JOSEPHSON_CONSTANT","","Josephson constant (unit: Hz V^-1)",null,null],[17,"JOULE_ATOMIC_MASS_UNIT_RELATIONSHIP","","joule-atomic mass unit relationship (unit: u)",null,null],[17,"JOULE_ELECTRON_VOLT_RELATIONSHIP","","joule-electron volt relationship (unit: eV)",null,null],[17,"JOULE_HARTREE_RELATIONSHIP","","joule-hartree relationship (unit: E_h)",null,null],[17,"JOULE_HERTZ_RELATIONSHIP","","joule-hertz relationship (unit: Hz)",null,null],[17,"JOULE_INVERSE_METER_RELATIONSHIP","","joule-inverse meter relationship (unit: m^-1)",null,null],[17,"JOULE_KELVIN_RELATIONSHIP","","joule-kelvin relationship (unit: K)",null,null],[17,"JOULE_KILOGRAM_RELATIONSHIP","","joule-kilogram relationship (unit: kg)",null,null],[17,"KELVIN_ATOMIC_MASS_UNIT_RELATIONSHIP","","kelvin-atomic mass unit relationship (unit: u)",null,null],[17,"KELVIN_ELECTRON_VOLT_RELATIONSHIP","","kelvin-electron volt relationship (unit: eV)",null,null],[17,"KELVIN_HARTREE_RELATIONSHIP","","kelvin-hartree relationship (unit: E_h)",null,null],[17,"KELVIN_HERTZ_RELATIONSHIP","","kelvin-hertz relationship (unit: Hz)",null,null],[17,"KELVIN_INVERSE_METER_RELATIONSHIP","","kelvin-inverse meter relationship (unit: m^-1)",null,null],[17,"KELVIN_JOULE_RELATIONSHIP","","kelvin-joule relationship (unit: J)",null,null],[17,"KELVIN_KILOGRAM_RELATIONSHIP","","kelvin-kilogram relationship (unit: kg)",null,null],[17,"KILOGRAM_ATOMIC_MASS_UNIT_RELATIONSHIP","","kilogram-atomic mass unit relationship (unit: u)",null,null],[17,"KILOGRAM_ELECTRON_VOLT_RELATIONSHIP","","kilogram-electron volt relationship (unit: eV)",null,null],[17,"KILOGRAM_HARTREE_RELATIONSHIP","","kilogram-hartree relationship (unit: E_h)",null,null],[17,"KILOGRAM_HERTZ_RELATIONSHIP","","kilogram-hertz relationship (unit: Hz)",null,null],[17,"KILOGRAM_INVERSE_METER_RELATIONSHIP","","kilogram-inverse meter relationship (unit: m^-1)",null,null],[17,"KILOGRAM_JOULE_RELATIONSHIP","","kilogram-joule relationship (unit: J)",null,null],[17,"KILOGRAM_KELVIN_RELATIONSHIP","","kilogram-kelvin relationship (unit: K)",null,null],[17,"LATTICE_PARAMETER_OF_SILICON","","lattice parameter of silicon (unit: m)",null,null],[17,"LOSCHMIDT_CONSTANT_27315_K_100_KPA","","Loschmidt constant (273.15 K, 100 kPa) (unit: m^-3)",null,null],[17,"LOSCHMIDT_CONSTANT_27315_K_101325_KPA","","Loschmidt constant (273.15 K, 101.325 kPa) (unit: m^-3)",null,null],[17,"MAG_CONSTANT","","mag. constant (unit: N A^-2)",null,null],[17,"MAG_FLUX_QUANTUM","","mag. flux quantum (unit: Wb)",null,null],[17,"MOLAR_GAS_CONSTANT","","molar gas constant (unit: J mol^-1 K^-1)",null,null],[17,"MOLAR_MASS_CONSTANT","","molar mass constant (unit: kg mol^-1)",null,null],[17,"MOLAR_MASS_OF_CARBON_12","","molar mass of carbon-12 (unit: kg mol^-1)",null,null],[17,"MOLAR_PLANCK_CONSTANT","","molar Planck constant (unit: J s mol^-1)",null,null],[17,"MOLAR_PLANCK_CONSTANT_TIMES_C","","molar Planck constant times c (unit: J m mol^-1)",null,null],[17,"MOLAR_VOLUME_OF_IDEAL_GAS_27315_K_100_KPA","","molar volume of ideal gas (273.15 K, 100 kPa) (unit: m^3…",null,null],[17,"MOLAR_VOLUME_OF_IDEAL_GAS_27315_K_101325_KPA","","molar volume of ideal gas (273.15 K, 101.325 kPa) (unit:…",null,null],[17,"MOLAR_VOLUME_OF_SILICON","","molar volume of silicon (unit: m^3 mol^-1)",null,null],[17,"MO_X_UNIT","","Mo x unit (unit: m)",null,null],[17,"MUON_COMPTON_WAVELENGTH","","muon Compton wavelength (unit: m)",null,null],[17,"MUON_COMPTON_WAVELENGTH_OVER_2_PI","","muon Compton wavelength over 2 pi (unit: m)",null,null],[17,"MUON_ELECTRON_MASS_RATIO","","muon-electron mass ratio (dimensionless)",null,null],[17,"MUON_G_FACTOR","","muon g factor (dimensionless)",null,null],[17,"MUON_MAG_MOM","","muon mag. mom. (unit: J T^-1)",null,null],[17,"MUON_MAG_MOM_ANOMALY","","muon mag. mom. anomaly (dimensionless)",null,null],[17,"MUON_MAG_MOM_TO_BOHR_MAGNETON_RATIO","","muon mag. mom. to Bohr magneton ratio (dimensionless)",null,null],[17,"MUON_MAG_MOM_TO_NUCLEAR_MAGNETON_RATIO","","muon mag. mom. to nuclear magneton ratio (dimensionless)",null,null],[17,"MUON_MASS","","muon mass (unit: kg)",null,null],[17,"MUON_MASS_ENERGY_EQUIVALENT","","muon mass energy equivalent (unit: J)",null,null],[17,"MUON_MASS_ENERGY_EQUIVALENT_IN_MEV","","muon mass energy equivalent in MeV (unit: MeV)",null,null],[17,"MUON_MASS_IN_U","","muon mass in u (unit: u)",null,null],[17,"MUON_MOLAR_MASS","","muon molar mass (unit: kg mol^-1)",null,null],[17,"MUON_NEUTRON_MASS_RATIO","","muon-neutron mass ratio (dimensionless)",null,null],[17,"MUON_PROTON_MAG_MOM_RATIO","","muon-proton mag. mom. ratio (dimensionless)",null,null],[17,"MUON_PROTON_MASS_RATIO","","muon-proton mass ratio (dimensionless)",null,null],[17,"MUON_TAU_MASS_RATIO","","muon-tau mass ratio (dimensionless)",null,null],[17,"NATURAL_UNIT_OF_ACTION","","natural unit of action (unit: J s)",null,null],[17,"NATURAL_UNIT_OF_ACTION_IN_EV_S","","natural unit of action in eV s (unit: eV s)",null,null],[17,"NATURAL_UNIT_OF_ENERGY","","natural unit of energy (unit: J)",null,null],[17,"NATURAL_UNIT_OF_ENERGY_IN_MEV","","natural unit of energy in MeV (unit: MeV)",null,null],[17,"NATURAL_UNIT_OF_LENGTH","","natural unit of length (unit: m)",null,null],[17,"NATURAL_UNIT_OF_MASS","","natural unit of mass (unit: kg)",null,null],[17,"NATURAL_UNIT_OF_MOMENTUM","","natural unit of mom.um (unit: kg m s^-1)",null,null],[17,"NATURAL_UNIT_OF_MOMENTUM_IN_MEV_PER_C","","natural unit of mom.um in MeV/c (unit: MeV/c)",null,null],[17,"NATURAL_UNIT_OF_TIME","","natural unit of time (unit: s)",null,null],[17,"NATURAL_UNIT_OF_VELOCITY","","natural unit of velocity (unit: m s^-1)",null,null],[17,"NEUTRON_COMPTON_WAVELENGTH","","neutron Compton wavelength (unit: m)",null,null],[17,"NEUTRON_COMPTON_WAVELENGTH_OVER_2_PI","","neutron Compton wavelength over 2 pi (unit: m)",null,null],[17,"NEUTRON_ELECTRON_MAG_MOM_RATIO","","neutron-electron mag. mom. ratio (dimensionless)",null,null],[17,"NEUTRON_ELECTRON_MASS_RATIO","","neutron-electron mass ratio (dimensionless)",null,null],[17,"NEUTRON_G_FACTOR","","neutron g factor (dimensionless)",null,null],[17,"NEUTRON_GYROMAG_RATIO","","neutron gyromag. ratio (unit: s^-1 T^-1)",null,null],[17,"NEUTRON_GYROMAG_RATIO_OVER_2_PI","","neutron gyromag. ratio over 2 pi (unit: MHz T^-1)",null,null],[17,"NEUTRON_MAG_MOM","","neutron mag. mom. (unit: J T^-1)",null,null],[17,"NEUTRON_MAG_MOM_TO_BOHR_MAGNETON_RATIO","","neutron mag. mom. to Bohr magneton ratio (dimensionless)",null,null],[17,"NEUTRON_MAG_MOM_TO_NUCLEAR_MAGNETON_RATIO","","neutron mag. mom. to nuclear magneton ratio (dimensionless)",null,null],[17,"NEUTRON_MASS","","neutron mass (unit: kg)",null,null],[17,"NEUTRON_MASS_ENERGY_EQUIVALENT","","neutron mass energy equivalent (unit: J)",null,null],[17,"NEUTRON_MASS_ENERGY_EQUIVALENT_IN_MEV","","neutron mass energy equivalent in MeV (unit: MeV)",null,null],[17,"NEUTRON_MASS_IN_U","","neutron mass in u (unit: u)",null,null],[17,"NEUTRON_MOLAR_MASS","","neutron molar mass (unit: kg mol^-1)",null,null],[17,"NEUTRON_MUON_MASS_RATIO","","neutron-muon mass ratio (dimensionless)",null,null],[17,"NEUTRON_PROTON_MAG_MOM_RATIO","","neutron-proton mag. mom. ratio (dimensionless)",null,null],[17,"NEUTRON_PROTON_MASS_DIFFERENCE","","neutron-proton mass difference (dimensionless)",null,null],[17,"NEUTRON_PROTON_MASS_DIFFERENCE_ENERGY_EQUIVALENT","","neutron-proton mass difference energy equivalent…",null,null],[17,"NEUTRON_PROTON_MASS_DIFFERENCE_ENERGY_EQUIVALENT_IN_MEV","","neutron-proton mass difference energy equivalent in MeV…",null,null],[17,"NEUTRON_PROTON_MASS_DIFFERENCE_IN_U","","neutron-proton mass difference in u (dimensionless)",null,null],[17,"NEUTRON_PROTON_MASS_RATIO","","neutron-proton mass ratio (dimensionless)",null,null],[17,"NEUTRON_TAU_MASS_RATIO","","neutron-tau mass ratio (dimensionless)",null,null],[17,"NEUTRON_TO_SHIELDED_PROTON_MAG_MOM_RATIO","","neutron to shielded proton mag. mom. ratio (dimensionless)",null,null],[17,"NEWTONIAN_CONSTANT_OF_GRAVITATION","","Newtonian constant of gravitation (unit: m^3 kg^-1 s^-2)",null,null],[17,"NEWTONIAN_CONSTANT_OF_GRAVITATION_OVER_H_BAR_C","","Newtonian constant of gravitation over h-bar c (unit:…",null,null],[17,"NUCLEAR_MAGNETON","","nuclear magneton (unit: J T^-1)",null,null],[17,"NUCLEAR_MAGNETON_IN_EV_PER_T","","nuclear magneton in eV/T (unit: eV T^-1)",null,null],[17,"NUCLEAR_MAGNETON_IN_INVERSE_METERS_PER_TESLA","","nuclear magneton in inverse meters per tesla (unit: m^-1…",null,null],[17,"NUCLEAR_MAGNETON_IN_K_PER_T","","nuclear magneton in K/T (unit: K T^-1)",null,null],[17,"NUCLEAR_MAGNETON_IN_MHZ_PER_T","","nuclear magneton in MHz/T (unit: MHz T^-1)",null,null],[17,"PLANCK_CONSTANT","","Planck constant (unit: J s)",null,null],[17,"PLANCK_CONSTANT_IN_EV_S","","Planck constant in eV s (unit: eV s)",null,null],[17,"PLANCK_CONSTANT_OVER_2_PI","","Planck constant over 2 pi (unit: J s)",null,null],[17,"PLANCK_CONSTANT_OVER_2_PI_IN_EV_S","","Planck constant over 2 pi in eV s (unit: eV s)",null,null],[17,"PLANCK_CONSTANT_OVER_2_PI_TIMES_C_IN_MEV_FM","","Planck constant over 2 pi times c in MeV fm (unit: MeV fm)",null,null],[17,"PLANCK_LENGTH","","Planck length (unit: m)",null,null],[17,"PLANCK_MASS","","Planck mass (unit: kg)",null,null],[17,"PLANCK_MASS_ENERGY_EQUIVALENT_IN_GEV","","Planck mass energy equivalent in GeV (unit: GeV)",null,null],[17,"PLANCK_TEMPERATURE","","Planck temperature (unit: K)",null,null],[17,"PLANCK_TIME","","Planck time (unit: s)",null,null],[17,"PROTON_CHARGE_TO_MASS_QUOTIENT","","proton charge to mass quotient (unit: C kg^-1)",null,null],[17,"PROTON_COMPTON_WAVELENGTH","","proton Compton wavelength (unit: m)",null,null],[17,"PROTON_COMPTON_WAVELENGTH_OVER_2_PI","","proton Compton wavelength over 2 pi (unit: m)",null,null],[17,"PROTON_ELECTRON_MASS_RATIO","","proton-electron mass ratio (dimensionless)",null,null],[17,"PROTON_G_FACTOR","","proton g factor (dimensionless)",null,null],[17,"PROTON_GYROMAG_RATIO","","proton gyromag. ratio (unit: s^-1 T^-1)",null,null],[17,"PROTON_GYROMAG_RATIO_OVER_2_PI","","proton gyromag. ratio over 2 pi (unit: MHz T^-1)",null,null],[17,"PROTON_MAG_MOM","","proton mag. mom. (unit: J T^-1)",null,null],[17,"PROTON_MAG_MOM_TO_BOHR_MAGNETON_RATIO","","proton mag. mom. to Bohr magneton ratio (dimensionless)",null,null],[17,"PROTON_MAG_MOM_TO_NUCLEAR_MAGNETON_RATIO","","proton mag. mom. to nuclear magneton ratio (dimensionless)",null,null],[17,"PROTON_MAG_SHIELDING_CORRECTION","","proton mag. shielding correction (dimensionless)",null,null],[17,"PROTON_MASS","","proton mass (unit: kg)",null,null],[17,"PROTON_MASS_ENERGY_EQUIVALENT","","proton mass energy equivalent (unit: J)",null,null],[17,"PROTON_MASS_ENERGY_EQUIVALENT_IN_MEV","","proton mass energy equivalent in MeV (unit: MeV)",null,null],[17,"PROTON_MASS_IN_U","","proton mass in u (unit: u)",null,null],[17,"PROTON_MOLAR_MASS","","proton molar mass (unit: kg mol^-1)",null,null],[17,"PROTON_MUON_MASS_RATIO","","proton-muon mass ratio (dimensionless)",null,null],[17,"PROTON_NEUTRON_MAG_MOM_RATIO","","proton-neutron mag. mom. ratio (dimensionless)",null,null],[17,"PROTON_NEUTRON_MASS_RATIO","","proton-neutron mass ratio (dimensionless)",null,null],[17,"PROTON_RMS_CHARGE_RADIUS","","proton rms charge radius (unit: m)",null,null],[17,"PROTON_TAU_MASS_RATIO","","proton-tau mass ratio (dimensionless)",null,null],[17,"QUANTUM_OF_CIRCULATION","","quantum of circulation (unit: m^2 s^-1)",null,null],[17,"QUANTUM_OF_CIRCULATION_TIMES_2","","quantum of circulation times 2 (unit: m^2 s^-1)",null,null],[17,"RYDBERG_CONSTANT","","Rydberg constant (unit: m^-1)",null,null],[17,"RYDBERG_CONSTANT_TIMES_C_IN_HZ","","Rydberg constant times c in Hz (unit: Hz)",null,null],[17,"RYDBERG_CONSTANT_TIMES_HC_IN_EV","","Rydberg constant times hc in eV (unit: eV)",null,null],[17,"RYDBERG_CONSTANT_TIMES_HC_IN_J","","Rydberg constant times hc in J (unit: J)",null,null],[17,"SACKUR_TETRODE_CONSTANT_1_K_100_KPA","","Sackur-Tetrode constant (1 K, 100 kPa) (dimensionless)",null,null],[17,"SACKUR_TETRODE_CONSTANT_1_K_101325_KPA","","Sackur-Tetrode constant (1 K, 101.325 kPa) (dimensionless)",null,null],[17,"SECOND_RADIATION_CONSTANT","","second radiation constant (unit: m K)",null,null],[17,"SHIELDED_HELION_GYROMAG_RATIO","","shielded helion gyromag. ratio (unit: s^-1 T^-1)",null,null],[17,"SHIELDED_HELION_GYROMAG_RATIO_OVER_2_PI","","shielded helion gyromag. ratio over 2 pi (unit: MHz T^-1)",null,null],[17,"SHIELDED_HELION_MAG_MOM","","shielded helion mag. mom. (unit: J T^-1)",null,null],[17,"SHIELDED_HELION_MAG_MOM_TO_BOHR_MAGNETON_RATIO","","shielded helion mag. mom. to Bohr magneton ratio…",null,null],[17,"SHIELDED_HELION_MAG_MOM_TO_NUCLEAR_MAGNETON_RATIO","","shielded helion mag. mom. to nuclear magneton ratio…",null,null],[17,"SHIELDED_HELION_TO_PROTON_MAG_MOM_RATIO","","shielded helion to proton mag. mom. ratio (dimensionless)",null,null],[17,"SHIELDED_HELION_TO_SHIELDED_PROTON_MAG_MOM_RATIO","","shielded helion to shielded proton mag. mom. ratio…",null,null],[17,"SHIELDED_PROTON_GYROMAG_RATIO","","shielded proton gyromag. ratio (unit: s^-1 T^-1)",null,null],[17,"SHIELDED_PROTON_GYROMAG_RATIO_OVER_2_PI","","shielded proton gyromag. ratio over 2 pi (unit: MHz T^-1)",null,null],[17,"SHIELDED_PROTON_MAG_MOM","","shielded proton mag. mom. (unit: J T^-1)",null,null],[17,"SHIELDED_PROTON_MAG_MOM_TO_BOHR_MAGNETON_RATIO","","shielded proton mag. mom. to Bohr magneton ratio…",null,null],[17,"SHIELDED_PROTON_MAG_MOM_TO_NUCLEAR_MAGNETON_RATIO","","shielded proton mag. mom. to nuclear magneton ratio…",null,null],[17,"SPEED_OF_LIGHT_IN_VACUUM","","speed of light in vacuum (unit: m s^-1)",null,null],[17,"STANDARD_ACCELERATION_OF_GRAVITY","","standard acceleration of gravity (unit: m s^-2)",null,null],[17,"STANDARD_ATMOSPHERE","","standard atmosphere (unit: Pa)",null,null],[17,"STANDARD_STATE_PRESSURE","","standard-state pressure (unit: Pa)",null,null],[17,"STEFAN_BOLTZMANN_CONSTANT","","Stefan-Boltzmann constant (unit: W m^-2 K^-4)",null,null],[17,"TAU_COMPTON_WAVELENGTH","","tau Compton wavelength (unit: m)",null,null],[17,"TAU_COMPTON_WAVELENGTH_OVER_2_PI","","tau Compton wavelength over 2 pi (unit: m)",null,null],[17,"TAU_ELECTRON_MASS_RATIO","","tau-electron mass ratio (dimensionless)",null,null],[17,"TAU_MASS","","tau mass (unit: kg)",null,null],[17,"TAU_MASS_ENERGY_EQUIVALENT","","tau mass energy equivalent (unit: J)",null,null],[17,"TAU_MASS_ENERGY_EQUIVALENT_IN_MEV","","tau mass energy equivalent in MeV (unit: MeV)",null,null],[17,"TAU_MASS_IN_U","","tau mass in u (unit: u)",null,null],[17,"TAU_MOLAR_MASS","","tau molar mass (unit: kg mol^-1)",null,null],[17,"TAU_MUON_MASS_RATIO","","tau-muon mass ratio (dimensionless)",null,null],[17,"TAU_NEUTRON_MASS_RATIO","","tau-neutron mass ratio (dimensionless)",null,null],[17,"TAU_PROTON_MASS_RATIO","","tau-proton mass ratio (dimensionless)",null,null],[17,"THOMSON_CROSS_SECTION","","Thomson cross section (unit: m^2)",null,null],[17,"TRITON_ELECTRON_MASS_RATIO","","triton-electron mass ratio (dimensionless)",null,null],[17,"TRITON_G_FACTOR","","triton g factor (dimensionless)",null,null],[17,"TRITON_MAG_MOM","","triton mag. mom. (unit: J T^-1)",null,null],[17,"TRITON_MAG_MOM_TO_BOHR_MAGNETON_RATIO","","triton mag. mom. to Bohr magneton ratio (dimensionless)",null,null],[17,"TRITON_MAG_MOM_TO_NUCLEAR_MAGNETON_RATIO","","triton mag. mom. to nuclear magneton ratio (dimensionless)",null,null],[17,"TRITON_MASS","","triton mass (unit: kg)",null,null],[17,"TRITON_MASS_ENERGY_EQUIVALENT","","triton mass energy equivalent (unit: J)",null,null],[17,"TRITON_MASS_ENERGY_EQUIVALENT_IN_MEV","","triton mass energy equivalent in MeV (unit: MeV)",null,null],[17,"TRITON_MASS_IN_U","","triton mass in u (unit: u)",null,null],[17,"TRITON_MOLAR_MASS","","triton molar mass (unit: kg mol^-1)",null,null],[17,"TRITON_PROTON_MASS_RATIO","","triton-proton mass ratio (dimensionless)",null,null],[17,"UNIFIED_ATOMIC_MASS_UNIT","","unified atomic mass unit (unit: kg)",null,null],[17,"VON_KLITZING_CONSTANT","","von Klitzing constant (unit: ohm)",null,null],[17,"WEAK_MIXING_ANGLE","","weak mixing angle (dimensionless)",null,null],[17,"WIEN_FREQUENCY_DISPLACEMENT_LAW_CONSTANT","","Wien frequency displacement law constant (unit: Hz K^-1)",null,null],[17,"WIEN_WAVELENGTH_DISPLACEMENT_LAW_CONSTANT","","Wien wavelength displacement law constant (unit: m K)",null,null]],"p":[]};
searchIndex["piestimator"] = {"doc":"","i":[[5,"main","piestimator","Estimate the value of PI.",null,[[]]],[17,"SAMPLES","","Number of samples to take.",null,null]],"p":[]};
searchIndex["player"] = {"doc":"Player binary.","i":[[5,"main","player","Main function.",null,[[]]],[5,"init","","Initialise the command line arguments and directories.",null,[[]]]],"p":[]};
searchIndex["png"] = {"doc":"PNG encoder and decoder This crate contains a PNG encoder…","i":[[3,"PixelDimensions","png","Pixel dimensions information",null,null],[12,"xppu","","Pixels per unit, X axis",0,null],[12,"yppu","","Pixels per unit, Y axis",0,null],[12,"unit","","Either Meter or Unspecified",0,null],[3,"FrameControl","","Frame control information",null,null],[12,"sequence_number","","Sequence number of the animation chunk, starting from 0",1,null],[12,"width","","Width of the following frame",1,null],[12,"height","","Height of the following frame",1,null],[12,"x_offset","","X position at which to render the following frame",1,null],[12,"y_offset","","Y position at which to render the following frame",1,null],[12,"delay_num","","Frame delay fraction numerator",1,null],[12,"delay_den","","Frame delay fraction denominator",1,null],[12,"dispose_op","","Type of frame area disposal to be done after rendering…",1,null],[12,"blend_op","","Type of frame area rendering for this frame",1,null],[3,"AnimationControl","","Animation control information",null,null],[12,"num_frames","","Number of frames",2,null],[12,"num_plays","","Number of times to loop this APNG. 0 indicates infinite…",2,null],[3,"Info","","PNG info struct",null,null],[12,"width","","",3,null],[12,"height","","",3,null],[12,"bit_depth","","",3,null],[12,"color_type","","",3,null],[12,"interlaced","","",3,null],[12,"trns","","",3,null],[12,"pixel_dims","","",3,null],[12,"palette","","",3,null],[12,"frame_control","","",3,null],[12,"animation_control","","",3,null],[12,"compression","","",3,null],[12,"filter","","",3,null],[3,"Transformations","","Output transformations",null,null],[3,"Decoder","","PNG Decoder",null,null],[3,"Limits","","Limits on the resources the `Decoder` is allowed too use",null,null],[12,"bytes","","maximum number of bytes the decoder is allowed to…",4,null],[3,"OutputInfo","","Output info",null,null],[12,"width","","",5,null],[12,"height","","",5,null],[12,"color_type","","",5,null],[12,"bit_depth","","",5,null],[12,"line_size","","",5,null],[3,"Reader","","PNG reader (mostly high-level interface)",null,null],[3,"StreamingDecoder","","PNG StreamingDecoder (low-level interface)",null,null],[3,"Encoder","","PNG Encoder",null,null],[3,"StreamWriter","","Streaming png writer",null,null],[3,"Writer","","PNG writer",null,null],[4,"ColorType","","Describes the layout of samples in a pixel",null,null],[13,"Grayscale","","",6,null],[13,"RGB","","",6,null],[13,"Indexed","","",6,null],[13,"GrayscaleAlpha","","",6,null],[13,"RGBA","","",6,null],[4,"BitDepth","","Bit depth of the png file",null,null],[13,"One","","",7,null],[13,"Two","","",7,null],[13,"Four","","",7,null],[13,"Eight","","",7,null],[13,"Sixteen","","",7,null],[4,"Unit","","Physical unit of the pixel dimensions",null,null],[13,"Unspecified","","",8,null],[13,"Meter","","",8,null],[4,"DisposeOp","","How to reset buffer of an animated png (APNG) at the end…",null,null],[13,"None","","Leave the buffer unchanged.",9,null],[13,"Background","","Clear buffer with the background color.",9,null],[13,"Previous","","Reset the buffer to the state before the current frame.",9,null],[4,"BlendOp","","How pixels are written into the buffer.",null,null],[13,"Source","","Pixels overwrite the value at their position.",10,null],[13,"Over","","The new pixels are blended into the current state based on…",10,null],[4,"Compression","","The type and strength of applied compression.",null,null],[13,"Default","","Default level  ",11,null],[13,"Fast","","Fast minimal compression",11,null],[13,"Best","","Higher compression level  ",11,null],[13,"Huffman","","",11,null],[13,"Rle","","",11,null],[4,"Decoded","","Result of the decoding process",null,null],[13,"Nothing","","Nothing decoded yet",12,null],[13,"Header","","",12,null],[13,"ChunkBegin","","",12,null],[13,"ChunkComplete","","",12,null],[13,"PixelDimensions","","",12,null],[13,"AnimationControl","","",12,null],[13,"FrameControl","","",12,null],[13,"ImageData","","Decoded raw image data.",12,null],[13,"PartialChunk","","",12,null],[13,"ImageEnd","","",12,null],[4,"DecodingError","","",null,null],[13,"IoError","","",13,null],[13,"Format","","",13,null],[13,"InvalidSignature","","",13,null],[13,"CrcMismatch","","",13,null],[12,"recover","png::DecodingError","bytes to skip to try to recover from this error",14,null],[12,"crc_val","","Stored CRC32 value",14,null],[12,"crc_sum","","Calculated CRC32 sum",14,null],[12,"chunk","","",14,null],[13,"Other","png","",13,null],[13,"CorruptFlateStream","","",13,null],[13,"LimitsExceeded","","",13,null],[4,"EncodingError","","",null,null],[13,"IoError","","",15,null],[13,"Format","","",15,null],[4,"FilterType","","The byte level filter applied to scanlines to prepare them…",null,null],[13,"NoFilter","","",16,null],[13,"Sub","","",16,null],[13,"Up","","",16,null],[13,"Avg","","",16,null],[13,"Paeth","","",16,null],[0,"chunk","","Chunk types and functions",null,null],[5,"is_critical","png::chunk","Returns true if the chunk is critical.",null,[[["chunktype"]],["bool"]]],[5,"is_private","","Returns true if the chunk is private.",null,[[["chunktype"]],["bool"]]],[5,"reserved_set","","Checks whether the reserved bit of the chunk name is set.…",null,[[["chunktype"]],["bool"]]],[5,"safe_to_copy","","Returns true if the chunk is safe to copy if unknown.",null,[[["chunktype"]],["bool"]]],[6,"ChunkType","","",null,null],[17,"IHDR","","Image header",null,null],[17,"PLTE","","Palette",null,null],[17,"IDAT","","Image data",null,null],[17,"IEND","","Image trailer",null,null],[17,"tRNS","","Transparency",null,null],[17,"bKGD","","Background colour",null,null],[17,"tIME","","Image last-modification time",null,null],[17,"pHYs","","Physical pixel dimensions",null,null],[17,"acTL","","Animation control",null,null],[17,"fcTL","","Frame control",null,null],[17,"fdAT","","Frame data",null,null],[11,"samples","png","Returns the number of samples used per pixel of `ColorType`",6,[[["self"]],["usize"]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",6,[[["u8"]],[["option",["colortype"]],["colortype"]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",7,[[["u8"]],[["bitdepth"],["option",["bitdepth"]]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",8,[[["u8"]],[["option",["unit"]],["unit"]]]],[11,"from_u8","","u8 -> Self. Using enum_primitive or transmute is probably…",9,[[["u8"]],[["option",["disposeop"]],["disposeop"]]]],[11,"from_u8","","u8 -> Self. Using enum_primitive or transmute is probably…",10,[[["u8"]],[["option",["blendop"]],["blendop"]]]],[11,"set_seq_num","","",1,[[["self"],["u32"]]]],[11,"inc_seq_num","","",1,[[["self"],["u32"]]]],[11,"size","","Size of the image",3,[[["self"]]]],[11,"is_animated","","Returns true if the image is an APNG image.",3,[[["self"]],["bool"]]],[11,"animation_control","","Returns the frame control information of the image",3,[[["self"]],[["animationcontrol"],["option",["animationcontrol"]]]]],[11,"frame_control","","Returns the frame control information of the current frame",3,[[["self"]],[["option",["framecontrol"]],["framecontrol"]]]],[11,"bits_per_pixel","","Returns the bits per pixel",3,[[["self"]],["usize"]]],[11,"bytes_per_pixel","","Returns the bytes per pixel",3,[[["self"]],["usize"]]],[11,"raw_bytes","","Returns the number of bytes needed for one deinterlaced…",3,[[["self"]],["usize"]]],[11,"raw_row_length","","Returns the number of bytes needed for one deinterlaced row",3,[[["self"]],["usize"]]],[11,"raw_row_length_from_width","","Returns the number of bytes needed for one deinterlaced…",3,[[["u32"],["self"]],["usize"]]],[18,"IDENTITY","","No transformation",17,null],[18,"STRIP_16","","Strip 16-bit samples to 8 bits",17,null],[18,"STRIP_ALPHA","","Discard the alpha channel",17,null],[18,"PACKING","","Expand 1; 2 and 4-bit samples to bytes",17,null],[18,"PACKSWAP","","Change order of packed pixels to LSB first",17,null],[18,"EXPAND","","Expand paletted images to RGB; expand grayscale images of…",17,null],[18,"INVERT_MONO","","Invert monochrome images",17,null],[18,"SHIFT","","Normalize pixels to the sBIT depth",17,null],[18,"BGR","","Flip RGB to BGR; RGBA to BGRA",17,null],[18,"SWAP_ALPHA","","Flip RGBA to ARGB or GA to AG",17,null],[18,"SWAP_ENDIAN","","Byte-swap 16-bit samples",17,null],[18,"INVERT_ALPHA","","Change alpha from opacity to transparency",17,null],[18,"STRIP_FILLER","","",17,null],[18,"STRIP_FILLER_BEFORE","","",17,null],[18,"STRIP_FILLER_AFTER","","",17,null],[18,"GRAY_TO_RGB","","",17,null],[18,"EXPAND_16","","",17,null],[18,"SCALE_16","","",17,null],[11,"empty","","Returns an empty set of flags",17,[[],["transformations"]]],[11,"all","","Returns the set containing all flags.",17,[[],["transformations"]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",17,[[["u32"]],[["option",["transformations"]],["transformations"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",17,[[["u32"]],["transformations"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",17,[[["u32"]],["transformations"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",17,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",17,[[["self"],["transformations"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",17,[[["self"],["transformations"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["self"],["transformations"]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["self"],["transformations"]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["self"],["transformations"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",17,[[["bool"],["self"],["transformations"]]]],[11,"new","","Creates a new StreamingDecoder",18,[[],["streamingdecoder"]]],[11,"reset","","Resets the StreamingDecoder",18,[[["self"]]]],[11,"update","","Low level StreamingDecoder interface.",18,[[["self"],["vec"]],[["result",["decodingerror"]],["decodingerror"]]]],[11,"buffer_size","","Returns the size needed to hold a decoded frame",5,[[["self"]],["usize"]]],[11,"new","","",19,[[["r"]],["decoder"]]],[11,"new_with_limits","","",19,[[["limits"],["r"]],["decoder"]]],[11,"set_limits","","Limit resource usage",19,[[["self"],["limits"]]]],[11,"read_info","","Reads all meta data until the first IDAT chunk",19,[[],[["result",["decodingerror"]],["decodingerror"]]]],[11,"set_transformations","","Set the allowed and performed transformations.",19,[[["self"],["transformations"]]]],[11,"info","","",20,[[["self"]],["info"]]],[11,"next_frame","","Decodes the next frame into `buf`",20,[[["self"]],[["result",["decodingerror"]],["decodingerror"]]]],[11,"next_row","","Returns the next processed row of the image",20,[[["self"]],[["decodingerror"],["result",["option","decodingerror"]],["option"]]]],[11,"next_interlaced_row","","Returns the next processed row of the image",20,[[["self"]],[["result",["option","decodingerror"]],["decodingerror"],["option"]]]],[11,"output_color_type","","Returns the color type and the number of bits per sample…",20,[[["self"]]]],[11,"output_buffer_size","","Returns the number of bytes required to hold a…",20,[[["self"]],["usize"]]],[11,"output_line_size","","Returns the number of bytes required to hold a…",20,[[["u32"],["self"]],["usize"]]],[11,"new","","",21,[[["w"],["u32"]],["encoder"]]],[11,"write_header","","",21,[[],[["writer"],["result",["writer","encodingerror"]],["encodingerror"]]]],[11,"set_color","","Set the color of the encoded image.",21,[[["colortype"],["self"]]]],[11,"set_depth","","Set the indicated depth of the image data.",21,[[["bitdepth"],["self"]]]],[11,"set_compression","","Set compression parameters.",21,[[["self"],["into",["compression"]],["compression"]]]],[11,"set_filter","","Set the used filter type.",21,[[["self"],["filtertype"]]]],[11,"write_chunk","","",22,[[["self"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"write_image_data","","Writes the image data.",22,[[["self"]],[["encodingerror"],["result",["encodingerror"]]]]],[11,"stream_writer","","Create an stream writer.",22,[[["self"]],["streamwriter"]]],[11,"stream_writer_with_size","","Create a stream writer with custom buffer size.",22,[[["self"],["usize"]],["streamwriter"]]],[11,"into_stream_writer","","Turn this into a stream writer for image data.",22,[[],["streamwriter"]]],[11,"into_stream_writer_with_size","","Turn this into a stream writer with custom buffer size.",22,[[["usize"]],["streamwriter"]]],[11,"finish","","",23,[[],[["encodingerror"],["result",["encodingerror"]]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",16,[[["u8"]],[["filtertype"],["option",["filtertype"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"drop","","",22,[[["self"]]]],[11,"drop","","",23,[[["self"]]]],[11,"from","","",11,[[["compression"]],["self"]]],[11,"from","","",13,[[["error"]],["decodingerror"]]],[11,"from","","",13,[[["string"]],["decodingerror"]]],[11,"from","","",15,[[["error"]],["encodingerror"]]],[11,"extend","","",17,[[["self"],["intoiterator"]]]],[11,"clone","","",6,[[["self"]],["colortype"]]],[11,"clone","","",7,[[["self"]],["bitdepth"]]],[11,"clone","","",0,[[["self"]],["pixeldimensions"]]],[11,"clone","","",8,[[["self"]],["unit"]]],[11,"clone","","",9,[[["self"]],["disposeop"]]],[11,"clone","","",10,[[["self"]],["blendop"]]],[11,"clone","","",1,[[["self"]],["framecontrol"]]],[11,"clone","","",2,[[["self"]],["animationcontrol"]]],[11,"clone","","",11,[[["self"]],["compression"]]],[11,"clone","","",17,[[["self"]],["transformations"]]],[11,"clone","","",4,[[["self"]],["limits"]]],[11,"clone","","",16,[[["self"]],["filtertype"]]],[11,"default","","",1,[[],["framecontrol"]]],[11,"default","","",3,[[],["info"]]],[11,"default","","",4,[[],["limits"]]],[11,"cmp","","",17,[[["self"],["transformations"]],["ordering"]]],[11,"eq","","",6,[[["self"],["colortype"]],["bool"]]],[11,"eq","","",7,[[["self"],["bitdepth"]],["bool"]]],[11,"eq","","",8,[[["self"],["unit"]],["bool"]]],[11,"eq","","",9,[[["disposeop"],["self"]],["bool"]]],[11,"eq","","",10,[[["self"],["blendop"]],["bool"]]],[11,"eq","","",17,[[["self"],["transformations"]],["bool"]]],[11,"ne","","",17,[[["self"],["transformations"]],["bool"]]],[11,"eq","","",16,[[["self"],["filtertype"]],["bool"]]],[11,"partial_cmp","","",17,[[["self"],["transformations"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",17,[[["self"],["transformations"]],["bool"]]],[11,"le","","",17,[[["self"],["transformations"]],["bool"]]],[11,"gt","","",17,[[["self"],["transformations"]],["bool"]]],[11,"ge","","",17,[[["self"],["transformations"]],["bool"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",15,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"sub","","Returns the set difference of the two sets of flags.",17,[[["transformations"]],["transformations"]]],[11,"sub_assign","","Disables all flags enabled in the set.",17,[[["self"],["transformations"]]]],[11,"not","","Returns the complement of this set of flags.",17,[[],["transformations"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",17,[[["transformations"]],["transformations"]]],[11,"bitor","","Returns the union of the two sets of flags.",17,[[["transformations"]],["transformations"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",17,[[["transformations"]],["transformations"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",17,[[["self"],["transformations"]]]],[11,"bitor_assign","","Adds the set of flags.",17,[[["self"],["transformations"]]]],[11,"bitxor_assign","","Toggles the set of flags.",17,[[["self"],["transformations"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"from_iter","","",17,[[["intoiterator"]],["transformations"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"cause","","",13,[[["self"]],[["error"],["option",["error"]]]]],[11,"cause","","",15,[[["self"]],[["error"],["option",["error"]]]]],[11,"write","","",23,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",23,[[["self"]],["result"]]]],"p":[[3,"PixelDimensions"],[3,"FrameControl"],[3,"AnimationControl"],[3,"Info"],[3,"Limits"],[3,"OutputInfo"],[4,"ColorType"],[4,"BitDepth"],[4,"Unit"],[4,"DisposeOp"],[4,"BlendOp"],[4,"Compression"],[4,"Decoded"],[4,"DecodingError"],[13,"CrcMismatch"],[4,"EncodingError"],[4,"FilterType"],[3,"Transformations"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[3,"Writer"],[3,"StreamWriter"]]};
searchIndex["ppv_lite86"] = {"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the…",null,null],[19,"vec256_storage","","",null,null],[19,"vec512_storage","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but use…",null,null],[6,"AVX2","","",null,null],[11,"new128","","",0,[[],["self"]]],[11,"split128","","",0,[[]]],[11,"new128","","",1,[[],["self"]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[],["self"]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[],["self"]]],[10,"rotate_each_word_right8","","",4,[[],["self"]]],[10,"rotate_each_word_right11","","",4,[[],["self"]]],[10,"rotate_each_word_right12","","",4,[[],["self"]]],[10,"rotate_each_word_right16","","",4,[[],["self"]]],[10,"rotate_each_word_right20","","",4,[[],["self"]]],[10,"rotate_each_word_right24","","",4,[[],["self"]]],[10,"rotate_each_word_right25","","",4,[[],["self"]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[],["self"]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[["t"]],["self"]]],[8,"Vec2","","A vector composed of two elements, which may be words or…",null,null],[10,"extract","","",7,[[["u32"]],["w"]]],[10,"insert","","",7,[[["w"],["u32"]],["self"]]],[8,"Vec4","","A vector composed of four elements, which may be words or…",null,null],[10,"extract","","",8,[[["u32"]],["w"]]],[10,"insert","","",8,[[["w"],["u32"]],["self"]]],[8,"Words4","","A vector composed of four words; depending on their size,…",null,null],[10,"shuffle1230","","",9,[[],["self"]]],[10,"shuffle2301","","",9,[[],["self"]]],[10,"shuffle3012","","",9,[[],["self"]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four…",null,null],[10,"shuffle_lane_words1230","","",10,[[],["self"]]],[10,"shuffle_lane_words2301","","",10,[[],["self"]]],[10,"shuffle_lane_words3012","","",10,[[],["self"]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",11,[[],["self"]]],[10,"swap2","","",11,[[],["self"]]],[10,"swap4","","",11,[[],["self"]]],[10,"swap8","","",11,[[],["self"]]],[10,"swap16","","",11,[[],["self"]]],[10,"swap32","","",11,[[],["self"]]],[10,"swap64","","",11,[[],["self"]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",12,[[],["lanes"]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",12,[[["lanes"]],["self"]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",13,[[],["v"]]],[8,"Machine","","",null,null],[16,"u32x4","","",14,null],[16,"u64x2","","",14,null],[16,"u128x1","","",14,null],[16,"u32x4x2","","",14,null],[16,"u64x2x2","","",14,null],[16,"u64x4","","",14,null],[16,"u128x2","","",14,null],[16,"u32x4x4","","",14,null],[16,"u64x2x4","","",14,null],[16,"u128x4","","",14,null],[11,"unpack","","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]],[10,"instance","","",14,[[],["self"]]],[8,"Store","","",null,null],[10,"unpack","","",15,[[["s"]],["self"]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","",16,[[],["self"]]],[10,"unsafe_read_be","","",16,[[],["self"]]],[10,"write_le","","",16,[[]]],[10,"write_be","","",16,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to take…",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be…",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be…",null,null],[11,"from","ppv_lite86::x86_64","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"instance","","",27,[[],["self"]]],[11,"instance","","",28,[[],["self"]]],[11,"unpack","","",29,[[["vec128_storage"]],["self"]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",17,[[["self"]],["yess3"]]],[11,"clone","","",18,[[["self"]],["nos3"]]],[11,"clone","","",19,[[["self"]],["yess4"]]],[11,"clone","","",20,[[["self"]],["nos4"]]],[11,"clone","","",21,[[["self"]],["yesa1"]]],[11,"clone","","",22,[[["self"]],["noa1"]]],[11,"clone","","",23,[[["self"]],["yesa2"]]],[11,"clone","","",24,[[["self"]],["noa2"]]],[11,"clone","","",25,[[["self"]],["yesni"]]],[11,"clone","","",26,[[["self"]],["noni"]]],[11,"clone","","",27,[[["self"]],["ssemachine"]]],[11,"clone","","",28,[[["self"]],["avx2machine"]]],[11,"clone","","",29,[[["self"]],["vec128_storage"]]],[11,"clone","","",0,[[["self"]],["vec256_storage"]]],[11,"clone","","",1,[[["self"]],["vec512_storage"]]],[11,"default","","",29,[[],["self"]]],[11,"default","","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"unpack","ppv_lite86","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]};
searchIndex["proc"] = {"doc":"Support library of procedural macros.","i":[[24,"HelloMacro","proc","Create the procedural macro `HelloMacro`.",null,null],[24,"Input","","Create the procedural macro Input.",null,null],[24,"Load","","Create the procedural macro Load.",null,null],[24,"Output","","Create the procedural macro Output.",null,null],[24,"Save","","Create the procedural macro Save.",null,null]],"p":[]};
searchIndex["proc_macro2"] = {"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"join","","Create a new span encompassing `self` and `other`.",4,[[["self"],["span"]],[["span"],["option",["span"]]]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"span_open","","Returns the span pointing to the opening delimiter of this…",5,[[["self"]],["span"]]],[11,"span_close","","Returns the span pointing to the closing delimiter of this…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["spacing"],["char"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["self"],["span"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"string","","String literal.",8,[[["str"]],["literal"]]],[11,"character","","Character literal.",8,[[["char"]],["literal"]]],[11,"byte_string","","Byte string literal.",8,[[],["literal"]]],[11,"span","","Returns the span encompassing this literal.",8,[[["self"]],["span"]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["self"],["span"]]]],[11,"subspan","","Returns a `Span` that is a subset of `self.span()`…",8,[[["rangebounds",["usize"]],["self"],["usize"]],[["span"],["option",["span"]]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","proc_macro2::token_stream","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","proc_macro2","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",3,[[["tokentree"]],["self"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"extend","","",3,[[["intoiterator"],["self"]]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"into_iter","","",3,[[],["intoiter"]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],[["tokentree"],["option",["tokentree"]]]]],[11,"clone","proc_macro2","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"clone","proc_macro2::token_stream","",10,[[["self"]],["intoiter"]]],[11,"default","proc_macro2","",3,[[],["self"]]],[11,"cmp","","",7,[[["ident"],["self"]],["ordering"]]],[11,"eq","","",1,[[["delimiter"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["ident"],["self"]],["bool"]]],[11,"eq","","",7,[[["t"],["self"]],["bool"]]],[11,"partial_cmp","","",7,[[["ident"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_str","","",3,[[["str"]],[["result",["tokenstream","lexerror"]],["tokenstream"],["lexerror"]]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["proc_macro_hack"] = {"doc":"As of Rust 1.30, the language supports user-defined…","i":[[23,"proc_macro_hack","proc_macro_hack","",null,null]],"p":[]};
searchIndex["quote"] = {"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[["u"],["self"]]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter"],["self"]],["result"]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["option",["span"]],["span"]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream"],["self"]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["option",["span"]],["span"]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand","A marker trait used to indicate that an [`RngCore`] or…",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,[[["self"]],[["result",["error"]],["error"]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],[["error"],["result",["error"]]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",1,[[],["self"]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",null,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions",null,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[4,"BernoulliError","","Error type returned from `Bernoulli::new`.",null,null],[13,"InvalidProbability","","`p < 0` or `p > 1`.",2,null],[11,"new","","Construct a new `Bernoulli` with the given probability of…",3,[[["f64"]],[["bernoullierror"],["result",["bernoulli","bernoullierror"]],["bernoulli"]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",3,[[["u32"]],[["bernoullierror"],["result",["bernoulli","bernoullierror"]],["bernoulli"]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",4,[[["f64"],["u64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",5,[[["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",6,[[["into",["vec"]],["vec",["f64"]]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",6,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",7,[[["f64"]],["exp"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",8,[[["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",9,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",10,[[["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",11,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",12,[[["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",13,[[["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",14,[[["f64"]],["lognormal"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",15,[[["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",16,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",17,[[["f64"]],["triangular"]]],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",18,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",19,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",19,[[["b2"],["b1"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",19,[[["b2"],["b1"]],["self"]]],[10,"sample","","Sample a value.",19,[[["self"],["r"]]]],[11,"sample_single","","Sample a single value uniformly from a range with…",19,[[["b2"],["b1"],["r"]]]],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",null,null],[10,"borrow","","Immutably borrows from an owned value. See…",20,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `UnitCircle` distribution.",22,[[],["unitcircle"]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",23,[[],["unitspheresurface"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",24,[[["f64"]],["weibull"]]],[0,"weighted","","Weighted index sampling",null,null],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",25,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",25,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",25,null],[13,"TooMany","","Too many weights are provided (length greater than…",25,null],[0,"alias_method","","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",26,null],[18,"ZERO","","Element of `Self` equivalent to 0.",26,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",26,[[["u32"]],["option"]]],[11,"sum","","Sums all values in slice `values`.",26,[[],["self"]]],[11,"new","","Creates a new [`WeightedIndex`].",27,[[["vec"]],[["weightederror"],["result",["weightederror"]]]]],[11,"new","rand::distributions::weighted","Creates a new a `WeightedIndex` [`Distribution`] using the…",28,[[["i"]],[["result",["weightedindex","weightederror"]],["weightedindex"],["weightederror"]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",28,[[["self"]],[["weightederror"],["result",["weightederror"]]]]],[8,"Distribution","rand::distributions","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[["r"]],["distiter"]]],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[3,"OsRng","rand::rngs","A random number generator that retrieves randomness from…",null,null],[3,"EntropyRng","","An interface returning random data from external…",null,null],[3,"SmallRng","","A small-state, fast non-crypto PRNG",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","`ReadRng` error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",30,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",31,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",31,[[["self"]],[["result",["error"]],["error"]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",32,[[],["self"]]],[0,"mock","","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",33,[[["u64"]],["self"]]],[0,"seq","rand","Sequence-related functionality",null,null],[3,"SliceChooseIter","rand::seq","An iterator over multiple slice elements.",null,null],[0,"index","","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[["usize"],["r"]],["indexvec"]]],[11,"len","","Returns the number of indices",34,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the length is 0.",34,[[["self"]],["bool"]]],[11,"index","","Return the value at the given `index`.",34,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",34,[[],[["vec",["usize"]],["usize"]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",34,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",34,[[],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",35,null],[10,"choose","","Returns a reference to one random element of the slice, or…",35,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",35,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",35,[[["usize"],["self"],["r"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], but where the likelihood of each…",35,[[["f"],["self"],["r"]],[["weightederror"],["result",["weightederror"]]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], but where the likelihood of…",35,[[["self"],["f"],["r"]],[["weightederror"],["result",["weightederror"]]]]],[10,"shuffle","","Shuffle a mutable slice in place.",35,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",35,[[["self"],["usize"],["r"]]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",36,[[["r"]],["option"]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",36,[[["r"]],["usize"]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",36,[[["usize"],["r"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the [`Standard`]…",37,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",37,[[["b2"],["self"],["b1"]],["sampleuniform"]]],[11,"sample","","Sample a new value, using the given distribution.",37,[[["self"],["distribution"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",37,[[["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]],[["result",["error"]],["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",37,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",37,[[["self"],["u32"]],["bool"]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",38,[[["self"]]]],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",38,[[["self"]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","rand::distributions","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","rand::distributions::uniform","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","rand::distributions","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","rand::distributions::uniform","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","rand::distributions::weighted","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","rand::distributions::weighted::alias_method","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","rand::rngs","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","rand::rngs::adapter","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","rand::rngs::mock","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","rand::seq","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"into_iter","","",55,[[],["i"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","rand::seq::index","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"into_iter","","",57,[[],["i"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"vzip","","",57,[[],["v"]]],[11,"next_u32","rand::rngs","",50,[[["self"]],["u32"]]],[11,"next_u64","","",50,[[["self"]],["u64"]]],[11,"fill_bytes","","",50,[[["self"]]]],[11,"try_fill_bytes","","",50,[[["self"]],[["result",["error"]],["error"]]]],[11,"clone","","",50,[[["self"]],["osrng"]]],[11,"read","rand","",0,[[["self"]],[["result",["usize","error"]],["error"],["usize"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","rand::rngs","",50,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","rand","",39,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"from","","",39,[[["error"]],["error"]]],[11,"from","","",39,[[["nonzerou32"]],["error"]]],[11,"source","","",39,[[["self"]],[["error"],["option",["error"]]]]],[11,"default","rand::rngs","",50,[[],["osrng"]]],[11,"new","rand::distributions::uniform","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]],["duration"]]],[11,"sample","rand::distributions","",3,[[["self"],["r"]],["bool"]]],[11,"sample","","",4,[[["self"],["r"]],["u64"]]],[11,"sample","","",5,[[["self"],["r"]],["f64"]]],[11,"sample","","",6,[[["self"],["r"]],[["f64"],["vec",["f64"]]]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",7,[[["self"],["r"]],["f64"]]],[11,"sample","","",8,[[["self"],["r"]],["f64"]]],[11,"sample","","",9,[[["self"],["r"]],["f64"]]],[11,"sample","","",10,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["u64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::uniform","",21,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",22,[[["self"],["r"]]]],[11,"sample","","",23,[[["self"],["r"]]]],[11,"sample","","",24,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::weighted::alias_method","",27,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions::weighted","",28,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions","",46,[[["self"],["r"]],["f32"]]],[11,"sample","","",41,[[["self"],["r"]],["f32"]]],[11,"sample","","",40,[[["self"],["r"]],["f32"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",41,[[["self"],["r"]],["f64"]]],[11,"sample","","",40,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["u8"]]],[11,"sample","","",46,[[["self"],["r"]],["u16"]]],[11,"sample","","",46,[[["self"],["r"]],["u32"]]],[11,"sample","","",46,[[["self"],["r"]],["u64"]]],[11,"sample","","",46,[[["self"],["r"]],["u128"]]],[11,"sample","","",46,[[["self"],["r"]],["usize"]]],[11,"sample","","",46,[[["self"],["r"]],["i8"]]],[11,"sample","","",46,[[["self"],["r"]],["i16"]]],[11,"sample","","",46,[[["self"],["r"]],["i32"]]],[11,"sample","","",46,[[["self"],["r"]],["i64"]]],[11,"sample","","",46,[[["self"],["r"]],["i128"]]],[11,"sample","","",46,[[["self"],["r"]],["isize"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou8"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou16"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou32"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou64"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou128"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerousize"]]],[11,"sample","","",46,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",46,[[["self"],["r"]],["bool"]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]],["option"]]],[11,"sample","","",46,[[["self"],["r"]],["wrapping"]]],[11,"from","rand::distributions::uniform","",21,[[["range"]],["uniform"]]],[11,"from","","",21,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand::seq::index","",34,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from","","",34,[[["vec",["usize"]],["usize"]],["self"]]],[11,"len","rand::seq","",55,[[["self"]],["usize"]]],[11,"next","rand::distributions","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,[[["self"]]]],[11,"next","rand::seq::index","",56,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",56,[[["self"]]]],[11,"next","","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,[[["self"]]]],[11,"next","rand::seq","",55,[[["self"]],["option"]]],[11,"size_hint","","",55,[[["self"]]]],[11,"clone","rand::distributions","",3,[[["self"]],["bernoulli"]]],[11,"clone","","",2,[[["self"]],["bernoullierror"]]],[11,"clone","","",4,[[["self"]],["binomial"]]],[11,"clone","","",5,[[["self"]],["cauchy"]]],[11,"clone","","",6,[[["self"]],["dirichlet"]]],[11,"clone","","",43,[[["self"]],["exp1"]]],[11,"clone","","",7,[[["self"]],["exp"]]],[11,"clone","","",8,[[["self"]],["gamma"]]],[11,"clone","","",9,[[["self"]],["chisquared"]]],[11,"clone","","",10,[[["self"]],["fisherf"]]],[11,"clone","","",11,[[["self"]],["studentt"]]],[11,"clone","","",12,[[["self"]],["beta"]]],[11,"clone","","",44,[[["self"]],["standardnormal"]]],[11,"clone","","",13,[[["self"]],["normal"]]],[11,"clone","","",14,[[["self"]],["lognormal"]]],[11,"clone","","",15,[[["self"]],["pareto"]]],[11,"clone","","",16,[[["self"]],["poisson"]]],[11,"clone","","",17,[[["self"]],["triangular"]]],[11,"clone","rand::distributions::uniform","",21,[[["self"]],["uniform"]]],[11,"clone","","",47,[[["self"]],["uniformint"]]],[11,"clone","","",48,[[["self"]],["uniformfloat"]]],[11,"clone","","",49,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",22,[[["self"]],["unitcircle"]]],[11,"clone","","",23,[[["self"]],["unitspheresurface"]]],[11,"clone","","",24,[[["self"]],["weibull"]]],[11,"clone","rand::distributions::weighted::alias_method","",27,[[["self"]],["self"]]],[11,"clone","rand::distributions::weighted","",28,[[["self"]],["weightedindex"]]],[11,"clone","","",25,[[["self"]],["weightederror"]]],[11,"clone","rand::distributions","",41,[[["self"]],["openclosed01"]]],[11,"clone","","",40,[[["self"]],["open01"]]],[11,"clone","","",46,[[["self"]],["standard"]]],[11,"clone","rand::rngs::adapter","",31,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs::mock","",33,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",51,[[["self"]],["smallrng"]]],[11,"clone","","",52,[[["self"]],["stdrng"]]],[11,"clone","","",53,[[["self"]],["threadrng"]]],[11,"clone","rand::seq::index","",34,[[["self"]],["indexvec"]]],[11,"clone","","",57,[[["self"]],["indexvecintoiter"]]],[11,"default","rand::rngs","",32,[[],["self"]]],[11,"default","","",53,[[],["threadrng"]]],[11,"eq","rand::distributions","",2,[[["self"],["bernoullierror"]],["bool"]]],[11,"eq","rand::distributions::weighted","",25,[[["weightederror"],["self"]],["bool"]]],[11,"eq","rand::seq::index","",34,[[["indexvec"],["self"]],["bool"]]],[11,"fmt","rand::distributions","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::uniform","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted::alias_method","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::mock","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq::index","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",54,[[["formatter"],["self"]],["result"]]],[11,"source","","",54,[[["self"]],[["option",["error"]],["error"]]]],[11,"next_u32","","",30,[[["self"]],["u32"]]],[11,"next_u64","","",30,[[["self"]],["u64"]]],[11,"fill_bytes","","",30,[[["self"]]]],[11,"try_fill_bytes","","",30,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",31,[[["self"]],["u32"]]],[11,"next_u64","","",31,[[["self"]],["u64"]]],[11,"fill_bytes","","",31,[[["self"]]]],[11,"try_fill_bytes","","",31,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand::rngs","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,[[["self"]]]],[11,"try_fill_bytes","","",32,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand::rngs::mock","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,[[["self"]]]],[11,"try_fill_bytes","","",33,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand::rngs","",51,[[["self"]],["u32"]]],[11,"next_u64","","",51,[[["self"]],["u64"]]],[11,"fill_bytes","","",51,[[["self"]]]],[11,"try_fill_bytes","","",51,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,[[["self"]]]],[11,"try_fill_bytes","","",52,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",53,[[["self"]],["u32"]]],[11,"next_u64","","",53,[[["self"]],["u64"]]],[11,"fill_bytes","","",53,[[["self"]]]],[11,"try_fill_bytes","","",53,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",51,[[],["self"]]],[11,"from_rng","","",51,[[["rngcore"]],[["error"],["result",["error"]]]]],[11,"from_seed","","",52,[[],["self"]]],[11,"from_rng","","",52,[[["rngcore"]],[["error"],["result",["error"]]]]],[11,"new","rand","Construct from any type supporting `std::error::Error`",39,[[["e"]],["error"]]],[11,"inner","","Reference the inner error (`std` only)",39,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",39,[[],[["box",["error"]],["error"]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",39,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",39,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",39,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code","","Retrieve the error code, if any.",39,[[["self"]],[["nonzerou32"],["option",["nonzerou32"]]]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[4,"BernoulliError"],[3,"Bernoulli"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"UnitCircle"],[3,"UnitSphereSurface"],[3,"Weibull"],[4,"WeightedError"],[8,"Weight"],[3,"WeightedIndex"],[3,"WeightedIndex"],[8,"Distribution"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[3,"Error"],[3,"Open01"],[3,"OpenClosed01"],[3,"Alphanumeric"],[3,"Exp1"],[3,"StandardNormal"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"] = {"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that…",null,null],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",1,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",1,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",1,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",2,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",2,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",2,[[["self"],["u64"]]]],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",0,[[["chacha20core"]],["self"]]],[11,"from","","",1,[[["chacha12core"]],["self"]]],[11,"from","","",2,[[["chacha8core"]],["self"]]],[11,"clone","","",4,[[["self"]],["chacha20core"]]],[11,"clone","","",0,[[["self"]],["chacha20rng"]]],[11,"clone","","",3,[[["self"]],["chacha12core"]]],[11,"clone","","",1,[[["self"]],["chacha12rng"]]],[11,"clone","","",5,[[["self"]],["chacha8core"]]],[11,"clone","","",2,[[["self"]],["chacha8rng"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"generate","","",4,[[["self"]]]],[11,"generate","","",3,[[["self"]]]],[11,"generate","","",5,[[["self"]]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",4,[[],["self"]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_seed","","",3,[[],["self"]]],[11,"from_seed","","",1,[[],["self"]]],[11,"from_seed","","",5,[[],["self"]]],[11,"from_seed","","",2,[[],["self"]]]],"p":[[3,"ChaCha20Rng"],[3,"ChaCha12Rng"],[3,"ChaCha8Rng"],[3,"ChaCha12Core"],[3,"ChaCha20Core"],[3,"ChaCha8Core"]]};
searchIndex["rand_core"] = {"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[11,"new","","Construct from any type supporting `std::error::Error`",0,[[["e"]],["self"]]],[11,"inner","","Reference the inner error (`std` only)",0,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",0,[[],[["box",["error"]],["error"]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code","","Retrieve the error code, if any.",0,[[["self"]],[["option",["nonzerou32"]],["nonzerou32"]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",3,null],[16,"Results","","Results type. This is the 'block' an RNG implementing…",3,null],[10,"generate","","Generate a new block of results.",3,[[["self"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",1,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[["self"],["usize"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",2,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[["self"],["usize"]]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[["r"]]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",4,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[["self"]],[["result",["error"]],["error"]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",5,[[],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","rand_core::block","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand_core","",6,[[["self"]],["u32"]]],[11,"next_u64","","",6,[[["self"]],["u64"]]],[11,"fill_bytes","","",6,[[["self"]]]],[11,"try_fill_bytes","","",6,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","rand_core::block","",1,[[],["self"]]],[11,"seed_from_u64","","",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",2,[[],["self"]]],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from","rand_core","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"clone","rand_core::block","",1,[[["self"]],["blockrng"]]],[11,"clone","","",2,[[["self"]],["blockrng64"]]],[11,"clone","rand_core","",6,[[["self"]],["osrng"]]],[11,"default","","",6,[[],["osrng"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core::block","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"source","","",0,[[["self"]],[["option",["error"]],["error"]]]],[11,"read","","",4,[[["self"]],[["error"],["usize"],["result",["usize","error"]]]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"],[3,"OsRng"]]};
searchIndex["rand_distr"] = {"doc":"Generating random samples from probability distributions.","i":[[8,"Distribution","rand_distr","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",0,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",0,[[["r"]],["distiter"]]],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Bernoulli","","The Bernoulli distribution.",null,null],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand_distr::uniform","Sample values uniformly between two bounds.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",1,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",2,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",2,[[["b2"],["b1"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",2,[[["b2"],["b1"]],["self"]]],[10,"sample","","Sample a value.",2,[[["self"],["r"]]]],[11,"sample_single","","Sample a single value uniformly from a range with…",2,[[["b2"],["b1"],["r"]]]],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",null,null],[10,"borrow","","Immutably borrows from an owned value. See…",3,[[["self"]],["borrowed"]]],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[0,"weighted","rand_distr","Weighted index sampling",null,null],[0,"alias_method","rand_distr::weighted","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","rand_distr::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",4,null],[18,"ZERO","","Element of `Self` equivalent to 0.",4,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",4,[[["u32"]],["option"]]],[11,"sum","","Sums all values in slice `values`.",4,[[],["self"]]],[3,"WeightedIndex","rand_distr::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",5,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",5,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",5,null],[13,"TooMany","","Too many weights are provided (length greater than…",5,null],[3,"UnitSphere","rand_distr","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"UnitBall","","Samples uniformly from the unit ball (surface and…",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitDisc","","Samples uniformly from the unit disc in two dimensions.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Pert","","The PERT distribution.",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[4,"GammaError","","Error type returned from `Gamma::new`.",null,null],[13,"ShapeTooSmall","","`shape <= 0` or `nan`.",6,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",6,null],[13,"ScaleTooLarge","","`1 / scale == 0`.",6,null],[4,"ChiSquaredError","","Error type returned from `ChiSquared::new` and…",null,null],[13,"DoFTooSmall","","`0.5 * k <= 0` or `nan`.",7,null],[4,"FisherFError","","Error type returned from `FisherF::new`.",null,null],[13,"MTooSmall","","`m <= 0` or `nan`.",8,null],[13,"NTooSmall","","`n <= 0` or `nan`.",8,null],[4,"BetaError","","Error type returned from `Beta::new`.",null,null],[13,"AlphaTooSmall","","`alpha <= 0` or `nan`.",9,null],[13,"BetaTooSmall","","`beta <= 0` or `nan`.",9,null],[4,"NormalError","","Error type returned from `Normal::new` and `LogNormal::new`.",null,null],[13,"StdDevTooSmall","","`std_dev < 0` or `nan`.",10,null],[4,"ExpError","","Error type returned from `Exp::new`.",null,null],[13,"LambdaTooSmall","","`lambda <= 0` or `nan`.",11,null],[4,"ParetoError","","Error type returned from `Pareto::new`.",null,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",12,null],[13,"ShapeTooSmall","","`shape <= 0` or `nan`.",12,null],[4,"PertError","","Error type returned from [`Pert`] constructors.",null,null],[13,"RangeTooSmall","","`max < min` or `min` or `max` is NaN.",13,null],[13,"ModeRange","","`mode < min` or `mode > max` or `mode` is NaN.",13,null],[13,"ShapeTooSmall","","`shape < 0` or `shape` is NaN",13,null],[4,"PoissonError","","Error type returned from `Poisson::new`.",null,null],[13,"ShapeTooSmall","","`lambda <= 0` or `nan`.",14,null],[4,"BinomialError","","Error type returned from `Binomial::new`.",null,null],[13,"ProbabilityTooSmall","","`p < 0` or `nan`.",15,null],[13,"ProbabilityTooLarge","","`p > 1`.",15,null],[4,"CauchyError","","Error type returned from `Cauchy::new`.",null,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",16,null],[4,"DirichletError","","Error type returned from `Dirchlet::new`.",null,null],[13,"AlphaTooShort","","`alpha.len() < 2`.",17,null],[13,"AlphaTooSmall","","`alpha <= 0.0` or `nan`.",17,null],[13,"SizeTooSmall","","`size < 2`.",17,null],[4,"TriangularError","","Error type returned from [`Triangular::new`].",null,null],[13,"RangeTooSmall","","`max < min` or `min` or `max` is NaN.",18,null],[13,"ModeRange","","`mode < min` or `mode > max` or `mode` is NaN.",18,null],[4,"WeibullError","","Error type returned from `Weibull::new`.",null,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",19,null],[13,"ShapeTooSmall","","`shape <= 0` or `nan`.",19,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",20,[[["n"]],[["error"],["result",["gamma","error"]],["gamma"]]]],[11,"new","","Create a new chi-squared distribution with…",21,[[["n"]],[["chisquared"],["result",["chisquared","chisquarederror"]],["chisquarederror"]]]],[11,"new","","Create a new `FisherF` distribution, with the given…",22,[[["n"]],[["fisherferror"],["fisherf"],["result",["fisherf","fisherferror"]]]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",23,[[["n"]],[["chisquarederror"],["result",["studentt","chisquarederror"]],["studentt"]]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",24,[[["n"]],[["beta"],["betaerror"],["result",["beta","betaerror"]]]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",25,[[["n"]],[["result",["normal","error"]],["normal"],["error"]]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",26,[[["n"]],[["error"],["result",["lognormal","error"]],["lognormal"]]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",27,[[["n"]],[["exp"],["result",["exp","error"]],["error"]]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",28,[[["n"]],[["error"],["result",["pareto","error"]],["pareto"]]]],[11,"new","","Set up the PERT distribution with defined `min`, `max` and…",29,[[["n"]],[["perterror"],["result",["pert","perterror"]],["pert"]]]],[11,"new_with_shape","","Set up the PERT distribution with defined `min`, `max`,…",29,[[["n"]],[["perterror"],["result",["pert","perterror"]],["pert"]]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",30,[[["n"]],[["result",["poisson","error"]],["poisson"],["error"]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",31,[[["f64"],["u64"]],[["result",["binomial","error"]],["binomial"],["error"]]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",32,[[["n"]],[["cauchy"],["error"],["result",["cauchy","error"]]]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",33,[[["vec"],["into",["vec"]]],[["dirichlet"],["result",["dirichlet","error"]],["error"]]]],[11,"new_with_size","","Construct a new `Dirichlet` with the given shape parameter…",33,[[["usize"],["n"]],[["dirichlet"],["result",["dirichlet","error"]],["error"]]]],[11,"new","","Set up the Triangular distribution with defined `min`,…",34,[[["n"]],[["triangular"],["triangularerror"],["result",["triangular","triangularerror"]]]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",35,[[["n"]],[["error"],["result",["weibull","error"]],["weibull"]]]],[8,"Float","","Trait for floating-point scalar types",null,null],[10,"pi","","The constant π",36,[[],["self"]]],[10,"from","","Support approximate representation of a f64 value",36,[[["f64"]],["self"]]],[10,"to_u64","","Support converting to an unsigned integer.",36,[[],[["option",["u64"]],["u64"]]]],[10,"abs","","Take the absolute value of self",36,[[],["self"]]],[10,"floor","","Take the largest integer less than or equal to self",36,[[],["self"]]],[10,"exp","","Take the exponential of self",36,[[],["self"]]],[10,"ln","","Take the natural logarithm of self",36,[[],["self"]]],[10,"sqrt","","Take square root of self",36,[[],["self"]]],[10,"powf","","Take self to a floating-point power",36,[[],["self"]]],[10,"tan","","Take the tangent of self",36,[[],["self"]]],[10,"log_gamma","","Take the logarithm of the gamma function of self",36,[[],["self"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","rand_distr::uniform","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","rand_distr","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","rand_distr::uniform","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","rand_distr::weighted::alias_method","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","rand_distr::weighted","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","rand_distr","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"size_hint","","",37,[[["self"]]]],[11,"new","rand_distr::uniform","",44,[[["b2"],["b1"]],[["isize"],["uniformint",["isize"]]]]],[11,"new_inclusive","","",44,[[["b2"],["b1"]],[["isize"],["uniformint",["isize"]]]]],[11,"sample","","",44,[[["self"],["r"]]]],[11,"sample_single","","",44,[[["b2"],["b1"],["r"]]]],[11,"new","","",44,[[["b2"],["b1"]],[["i32"],["uniformint",["i32"]]]]],[11,"new_inclusive","","",44,[[["b2"],["b1"]],[["i32"],["uniformint",["i32"]]]]],[11,"sample","","",44,[[["self"],["r"]]]],[11,"sample_single","","",44,[[["b2"],["b1"],["r"]]]],[11,"new","","",44,[[["b2"],["b1"]],[["u8"],["uniformint",["u8"]]]]],[11,"new_inclusive","","",44,[[["b2"],["b1"]],[["u8"],["uniformint",["u8"]]]]],[11,"sample","","",44,[[["self"],["r"]]]],[11,"sample_single","","",44,[[["b2"],["b1"],["r"]]]],[11,"new","","",44,[[["b2"],["b1"]],[["uniformint",["i8"]],["i8"]]]],[11,"new_inclusive","","",44,[[["b2"],["b1"]],[["uniformint",["i8"]],["i8"]]]],[11,"sample","","",44,[[["self"],["r"]]]],[11,"sample_single","","",44,[[["b2"],["b1"],["r"]]]],[11,"new","","",44,[[["b2"],["b1"]],[["u16"],["uniformint",["u16"]]]]],[11,"new_inclusive","","",44,[[["b2"],["b1"]],[["u16"],["uniformint",["u16"]]]]],[11,"sample","","",44,[[["self"],["r"]]]],[11,"sample_single","","",44,[[["b2"],["b1"],["r"]]]],[11,"new","","",44,[[["b2"],["b1"]],[["i64"],["uniformint",["i64"]]]]],[11,"new_inclusive","","",44,[[["b2"],["b1"]],[["i64"],["uniformint",["i64"]]]]],[11,"sample","","",44,[[["self"],["r"]]]],[11,"sample_single","","",44,[[["b2"],["b1"],["r"]]]],[11,"new","","",44,[[["b2"],["b1"]],[["i16"],["uniformint",["i16"]]]]],[11,"new_inclusive","","",44,[[["b2"],["b1"]],[["i16"],["uniformint",["i16"]]]]],[11,"sample","","",44,[[["self"],["r"]]]],[11,"sample_single","","",44,[[["b2"],["b1"],["r"]]]],[11,"new","","",44,[[["b2"],["b1"]],[["uniformint",["u128"]],["u128"]]]],[11,"new_inclusive","","",44,[[["b2"],["b1"]],[["uniformint",["u128"]],["u128"]]]],[11,"sample","","",44,[[["self"],["r"]]]],[11,"sample_single","","",44,[[["b2"],["b1"],["r"]]]],[11,"new","","",46,[[["b2"],["b1"]],["uniformduration"]]],[11,"new_inclusive","","",46,[[["b2"],["b1"]],["uniformduration"]]],[11,"sample","","",46,[[["self"],["r"]],["duration"]]],[11,"new","","",44,[[["b2"],["b1"]],[["u32"],["uniformint",["u32"]]]]],[11,"new_inclusive","","",44,[[["b2"],["b1"]],[["u32"],["uniformint",["u32"]]]]],[11,"sample","","",44,[[["self"],["r"]]]],[11,"sample_single","","",44,[[["b2"],["b1"],["r"]]]],[11,"new","","",44,[[["b2"],["b1"]],[["usize"],["uniformint",["usize"]]]]],[11,"new_inclusive","","",44,[[["b2"],["b1"]],[["usize"],["uniformint",["usize"]]]]],[11,"sample","","",44,[[["self"],["r"]]]],[11,"sample_single","","",44,[[["b2"],["b1"],["r"]]]],[11,"new","","",44,[[["b2"],["b1"]],[["uniformint",["i128"]],["i128"]]]],[11,"new_inclusive","","",44,[[["b2"],["b1"]],[["uniformint",["i128"]],["i128"]]]],[11,"sample","","",44,[[["self"],["r"]]]],[11,"sample_single","","",44,[[["b2"],["b1"],["r"]]]],[11,"new","","",45,[[["b2"],["b1"]],[["f32"],["uniformfloat",["f32"]]]]],[11,"new_inclusive","","",45,[[["b2"],["b1"]],[["f32"],["uniformfloat",["f32"]]]]],[11,"sample","","",45,[[["self"],["r"]]]],[11,"sample_single","","",45,[[["b2"],["b1"],["r"]]]],[11,"new","","",45,[[["b2"],["b1"]],[["f64"],["uniformfloat",["f64"]]]]],[11,"new_inclusive","","",45,[[["b2"],["b1"]],[["f64"],["uniformfloat",["f64"]]]]],[11,"sample","","",45,[[["self"],["r"]]]],[11,"sample_single","","",45,[[["b2"],["b1"],["r"]]]],[11,"new","","",44,[[["b2"],["b1"]],[["uniformint",["u64"]],["u64"]]]],[11,"new_inclusive","","",44,[[["b2"],["b1"]],[["uniformint",["u64"]],["u64"]]]],[11,"sample","","",44,[[["self"],["r"]]]],[11,"sample_single","","",44,[[["b2"],["b1"],["r"]]]],[11,"sample","rand_distr","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]],["char"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",39,[[["self"],["r"]],["char"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]],["i64"]]],[11,"sample","","",38,[[["self"],["r"]],["i16"]]],[11,"sample","","",42,[[["self"],["r"]],["f32"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]],["u128"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","rand_distr::uniform","",40,[[["self"],["r"]],["x"]]],[11,"sample","rand_distr","",38,[[["self"],["r"]],["u8"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]],["i128"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]],["u16"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",42,[[["self"],["r"]],["f64"]]],[11,"sample","","",38,[[["self"],["r"]],["bool"]]],[11,"sample","","",38,[[["self"],["r"]],["f32"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]],["f64"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","rand_distr::weighted","",48,[[["self"],["r"]],["usize"]]],[11,"sample","rand_distr","",38,[[["self"],["r"]],["nonzerousize"]]],[11,"sample","","",38,[[["self"],["r"]],["wrapping"]]],[11,"sample","","",38,[[["self"],["r"]],["nonzerou16"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]],["i32"]]],[11,"sample","","",38,[[["self"],["r"]],["nonzerou32"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",43,[[["self"],["r"]],["bool"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",41,[[["self"],["r"]],["f64"]]],[11,"sample","","",38,[[["self"],["r"]],["nonzerou64"]]],[11,"sample","","",38,[[["self"],["r"]],["isize"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]],["nonzerou128"]]],[11,"sample","","",38,[[["self"],["r"]],["u32"]]],[11,"sample","","",38,[[["self"],["r"]],["usize"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]],["i8"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]],["u64"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","","",38,[[["self"],["r"]],["nonzerou8"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"sample","rand_distr::weighted::alias_method","",47,[[["self"],["r"]],["usize"]]],[11,"sample","rand_distr","",38,[[["self"],["r"]]]],[11,"sample","","",41,[[["self"],["r"]],["f32"]]],[11,"sample","","",38,[[["self"],["r"]],["option"]]],[11,"sample","","",38,[[["self"],["r"]]]],[11,"eq","rand_distr::weighted","",5,[[["self"],["weightederror"]],["bool"]]],[11,"fmt","rand_distr::uniform","",44,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",40,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",46,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","rand_distr::weighted","",5,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","rand_distr","",37,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","rand_distr::uniform","",45,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","rand_distr::weighted","",48,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","rand_distr","",43,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",38,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",41,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","rand_distr::weighted::alias_method","",47,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","rand_distr","",42,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","rand_distr::weighted","",5,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"clone","rand_distr::uniform","",40,[[["self"]],["uniform"]]],[11,"clone","rand_distr::weighted","",48,[[["self"]],["weightedindex"]]],[11,"clone","rand_distr","",41,[[["self"]],["openclosed01"]]],[11,"clone","rand_distr::weighted","",5,[[["self"]],["weightederror"]]],[11,"clone","rand_distr::uniform","",46,[[["self"]],["uniformduration"]]],[11,"clone","rand_distr","",43,[[["self"]],["bernoulli"]]],[11,"clone","","",38,[[["self"]],["standard"]]],[11,"clone","rand_distr::uniform","",44,[[["self"]],["uniformint"]]],[11,"clone","","",45,[[["self"]],["uniformfloat"]]],[11,"clone","rand_distr::weighted::alias_method","",47,[[["self"]],["weightedindex"]]],[11,"clone","rand_distr","",42,[[["self"]],["open01"]]],[11,"from","rand_distr::uniform","",40,[[["range"]],["uniform"]]],[11,"from","","",40,[[["rangeinclusive"]],["uniform"]]],[11,"clone","rand_distr","",49,[[["self"]],["unitsphere"]]],[11,"clone","","",50,[[["self"]],["unitball"]]],[11,"clone","","",51,[[["self"]],["unitcircle"]]],[11,"clone","","",52,[[["self"]],["unitdisc"]]],[11,"clone","","",20,[[["self"]],["gamma"]]],[11,"clone","","",6,[[["self"]],["error"]]],[11,"clone","","",21,[[["self"]],["chisquared"]]],[11,"clone","","",7,[[["self"]],["chisquarederror"]]],[11,"clone","","",22,[[["self"]],["fisherf"]]],[11,"clone","","",8,[[["self"]],["fisherferror"]]],[11,"clone","","",23,[[["self"]],["studentt"]]],[11,"clone","","",24,[[["self"]],["beta"]]],[11,"clone","","",9,[[["self"]],["betaerror"]]],[11,"clone","","",53,[[["self"]],["standardnormal"]]],[11,"clone","","",25,[[["self"]],["normal"]]],[11,"clone","","",10,[[["self"]],["error"]]],[11,"clone","","",26,[[["self"]],["lognormal"]]],[11,"clone","","",54,[[["self"]],["exp1"]]],[11,"clone","","",27,[[["self"]],["exp"]]],[11,"clone","","",11,[[["self"]],["error"]]],[11,"clone","","",28,[[["self"]],["pareto"]]],[11,"clone","","",12,[[["self"]],["error"]]],[11,"clone","","",29,[[["self"]],["pert"]]],[11,"clone","","",13,[[["self"]],["perterror"]]],[11,"clone","","",30,[[["self"]],["poisson"]]],[11,"clone","","",14,[[["self"]],["error"]]],[11,"clone","","",31,[[["self"]],["binomial"]]],[11,"clone","","",15,[[["self"]],["error"]]],[11,"clone","","",32,[[["self"]],["cauchy"]]],[11,"clone","","",16,[[["self"]],["error"]]],[11,"clone","","",33,[[["self"]],["dirichlet"]]],[11,"clone","","",17,[[["self"]],["error"]]],[11,"clone","","",34,[[["self"]],["triangular"]]],[11,"clone","","",18,[[["self"]],["triangularerror"]]],[11,"clone","","",35,[[["self"]],["weibull"]]],[11,"clone","","",19,[[["self"]],["error"]]],[11,"eq","","",6,[[["error"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["chisquarederror"]],["bool"]]],[11,"eq","","",8,[[["fisherferror"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["betaerror"]],["bool"]]],[11,"eq","","",10,[[["error"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["error"]],["bool"]]],[11,"eq","","",12,[[["error"],["self"]],["bool"]]],[11,"eq","","",13,[[["perterror"],["self"]],["bool"]]],[11,"eq","","",14,[[["error"],["self"]],["bool"]]],[11,"eq","","",15,[[["error"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["error"]],["bool"]]],[11,"eq","","",17,[[["self"],["error"]],["bool"]]],[11,"eq","","",18,[[["self"],["triangularerror"]],["bool"]]],[11,"eq","","",19,[[["error"],["self"]],["bool"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"sample","","",49,[[["self"],["r"]]]],[11,"sample","","",50,[[["self"],["r"]]]],[11,"sample","","",51,[[["self"],["r"]]]],[11,"sample","","",52,[[["self"],["r"]]]],[11,"sample","","",20,[[["self"],["r"]],["n"]]],[11,"sample","","",21,[[["self"],["r"]],["n"]]],[11,"sample","","",22,[[["self"],["r"]],["n"]]],[11,"sample","","",23,[[["self"],["r"]],["n"]]],[11,"sample","","",24,[[["self"],["r"]],["n"]]],[11,"sample","","",53,[[["self"],["r"]],["f32"]]],[11,"sample","","",53,[[["self"],["r"]],["f64"]]],[11,"sample","","",25,[[["self"],["r"]],["n"]]],[11,"sample","","",26,[[["self"],["r"]],["n"]]],[11,"sample","","",54,[[["self"],["r"]],["f32"]]],[11,"sample","","",54,[[["self"],["r"]],["f64"]]],[11,"sample","","",27,[[["self"],["r"]],["n"]]],[11,"sample","","",28,[[["self"],["r"]],["n"]]],[11,"sample","","",29,[[["self"],["r"]],["n"]]],[11,"sample","","",30,[[["self"],["r"]],["n"]]],[11,"sample","","",30,[[["self"],["r"]],["u64"]]],[11,"sample","","",31,[[["self"],["r"]],["u64"]]],[11,"sample","","",32,[[["self"],["r"]],["n"]]],[11,"sample","","",33,[[["self"],["r"]],["vec"]]],[11,"sample","","",34,[[["self"],["r"]],["n"]]],[11,"sample","","",35,[[["self"],["r"]],["n"]]],[11,"new","rand_distr::uniform","Create a new `Uniform` instance which samples uniformly…",40,[[["b2"],["b1"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",40,[[["b2"],["b1"]],["uniform"]]],[11,"new","rand_distr","Construct a new `Bernoulli` with the given probability of…",43,[[["f64"]],[["bernoulli"],["result",["bernoulli","bernoullierror"]],["bernoullierror"]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",43,[[["u32"]],[["bernoulli"],["result",["bernoulli","bernoullierror"]],["bernoullierror"]]]],[11,"new","rand_distr::weighted::alias_method","Creates a new [`WeightedIndex`].",47,[[["vec"]],[["weightederror"],["result",["weightedindex","weightederror"]],["weightedindex"]]]],[11,"new","rand_distr::weighted","Creates a new a `WeightedIndex` [`Distribution`] using the…",48,[[["i"]],[["weightederror"],["weightedindex"],["result",["weightedindex","weightederror"]]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",48,[[["self"]],[["weightederror"],["result",["weightederror"]]]]]],"p":[[8,"Distribution"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[8,"Weight"],[4,"WeightedError"],[4,"GammaError"],[4,"ChiSquaredError"],[4,"FisherFError"],[4,"BetaError"],[4,"NormalError"],[4,"ExpError"],[4,"ParetoError"],[4,"PertError"],[4,"PoissonError"],[4,"BinomialError"],[4,"CauchyError"],[4,"DirichletError"],[4,"TriangularError"],[4,"WeibullError"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Pert"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,"Float"],[3,"DistIter"],[3,"Standard"],[3,"Alphanumeric"],[3,"Uniform"],[3,"OpenClosed01"],[3,"Open01"],[3,"Bernoulli"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"WeightedIndex"],[3,"WeightedIndex"],[3,"UnitSphere"],[3,"UnitBall"],[3,"UnitCircle"],[3,"UnitDisc"],[3,"StandardNormal"],[3,"Exp1"]]};
searchIndex["rand_pcg"] = {"doc":"The PCG random number generators.","i":[[3,"Lcg64Xsh32","rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",null,null],[3,"Lcg128Xsl64","","A PCG random number generator (XSL RR 128/64 (LCG) variant).",null,null],[3,"Mcg128Xsl64","","A PCG random number generator (XSL 128/64 (MCG) variant).",null,null],[11,"new","","Construct an instance compatible with PCG seed and stream.",0,[[["u64"]],["self"]]],[11,"new","","Construct an instance compatible with PCG seed and stream.",1,[[["u128"]],["self"]]],[11,"new","","Construct an instance compatible with PCG seed.",2,[[["u128"]],["self"]]],[6,"Pcg32","","`Lcg64Xsh32` is also officially known as `pcg32`.",null,null],[6,"Pcg64","","`Lcg128Xsl64` is also officially known as `pcg64`.",null,null],[6,"Pcg64Mcg","","A friendly name for `Mcg128Xsl64` (also known as…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["lcg64xsh32"]]],[11,"clone","","",1,[[["self"]],["lcg128xsl64"]]],[11,"clone","","",2,[[["self"]],["mcg128xsl64"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["error"],["result",["error"]]]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_seed","","",1,[[],["self"]]],[11,"from_seed","","",2,[[],["self"]]]],"p":[[3,"Lcg64Xsh32"],[3,"Lcg128Xsl64"],[3,"Mcg128Xsl64"]]};
searchIndex["rawpointer"] = {"doc":"","i":[[5,"ptrdistance","rawpointer","Return the number of elements of `T` from `start` to…",null,[[],["usize"]]],[8,"PointerExt","","Extension methods for raw pointers",null,null],[10,"offset","","",0,[[["isize"]],["self"]]],[11,"pre_inc","","Increment the pointer by 1, and return its new value.",0,[[["self"]],["self"]]],[11,"post_inc","","Increment the pointer by 1, but return its old value.",0,[[["self"]],["self"]]],[11,"pre_dec","","Decrement the pointer by 1, and return its new value.",0,[[["self"]],["self"]]],[11,"post_dec","","Decrement the pointer by 1, but return its old value.",0,[[["self"]],["self"]]],[11,"inc","","Increment by 1",0,[[["self"]]]],[11,"dec","","Decrement by 1",0,[[["self"]]]],[11,"stride_offset","","Offset the pointer by `s` multiplied by `index`.",0,[[["isize"],["usize"]],["self"]]]],"p":[[8,"PointerExt"]]};
searchIndex["rayon"] = {"doc":"Data-parallelism library that makes it easy to convert…","i":[[3,"FnContext","rayon","Provides the calling context to a closure called by…",null,null],[3,"ThreadBuilder","","Thread builder used for customization via…",null,null],[3,"ThreadPool","","Represents a user created [thread-pool].",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",null,null],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[],["usize"]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],[["option",["usize"]],["usize"]]]],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[["a"],["b"]]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[["a"],["b"]]]],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure…",null,[[["op"]],["r"]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"scope_fifo","","Create a \"fork-join\" scope `s` with FIFO order, and…",null,[[["op"]],["r"]]],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[0,"collections","","Parallel iterator types for [standard…",null,null],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps…",null,null],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a binary…",null,null],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",null,null],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash map",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",null,null],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash set",null,null],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a linked…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a linked list",null,null],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a…",null,null],[0,"iter","rayon","Traits for writing parallel programs using an…",null,null],[4,"Either","rayon::iter","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[3,"IterBridge","","`IterBridge` is a parallel iterator that wraps a…",null,null],[3,"Chain","","`Chain` is an iterator that joins `b` after `a` in one…",null,null],[3,"Chunks","","`Chunks` is an iterator that groups elements of an…",null,null],[3,"Enumerate","","`Enumerate` is an iterator that returns the current count…",null,null],[3,"Filter","","`Filter` takes a predicate `filter_op` and filters out…",null,null],[3,"FilterMap","","`FilterMap` creates an iterator that uses `filter_op` to…",null,null],[3,"FlatMap","","`FlatMap` maps each element to an iterator, then flattens…",null,null],[3,"Flatten","","`Flatten` turns each element to an iterator, then flattens…",null,null],[3,"Fold","","`Fold` is an iterator that applies a function over an…",null,null],[3,"FoldWith","","`FoldWith` is an iterator that applies a function over an…",null,null],[3,"TryFold","","`TryFold` is an iterator that applies a function over an…",null,null],[3,"TryFoldWith","","`TryFoldWith` is an iterator that applies a function over…",null,null],[3,"Skip","","`Skip` is an iterator that skips over the first `n`…",null,null],[3,"Split","","`Split` is a parallel iterator using arbitrary data and a…",null,null],[3,"Take","","`Take` is an iterator that iterates over the first `n`…",null,null],[3,"Map","","`Map` is an iterator that transforms the elements of an…",null,null],[3,"MapInit","","`MapInit` is an iterator that transforms the elements of…",null,null],[3,"MapWith","","`MapWith` is an iterator that transforms the elements of…",null,null],[3,"Zip","","`Zip` is an iterator that zips up `a` and `b` into a…",null,null],[3,"ZipEq","","An [`IndexedParallelIterator`] that iterates over two…",null,null],[3,"MultiZip","","`MultiZip` is an iterator that zips up a tuple of parallel…",null,null],[3,"Interleave","","`Interleave` is an iterator that interleaves elements of…",null,null],[3,"InterleaveShortest","","`InterleaveShortest` is an iterator that works similarly…",null,null],[3,"Intersperse","","`Intersperse` is an iterator that inserts a particular…",null,null],[3,"Update","","`Update` is an iterator that mutates the elements of an…",null,null],[3,"Rev","","`Rev` is an iterator that produces elements in reverse…",null,null],[3,"MaxLen","","`MaxLen` is an iterator that imposes a maximum length on…",null,null],[3,"MinLen","","`MinLen` is an iterator that imposes a minimum length on…",null,null],[3,"Cloned","","`Cloned` is an iterator that clones the elements of an…",null,null],[3,"Copied","","`Copied` is an iterator that copies the elements of an…",null,null],[3,"Inspect","","`Inspect` is an iterator that calls a function with a…",null,null],[3,"PanicFuse","","`PanicFuse` is an adaptor that wraps an iterator with a…",null,null],[3,"WhileSome","","`WhileSome` is an iterator that yields the `Some` elements…",null,null],[3,"Repeat","","Iterator adaptor for the `repeat()` function.",null,null],[3,"RepeatN","","Iterator adaptor for the `repeatn()` function.",null,null],[3,"Empty","","Iterator adaptor for the `empty()` function.",null,null],[3,"Once","","Iterator adaptor for the `once()` function.",null,null],[5,"split","","The `split` function takes arbitrary data and a closure…",null,[[["d"],["s"]],["split"]]],[5,"repeat","","Creates a parallel iterator that endlessly repeats `elt`…",null,[[["send"],["clone"]],[["repeat"],["send"],["clone"]]]],[5,"repeatn","","Creates a parallel iterator that produces `n` repeats of…",null,[[["send"],["clone"],["usize"]],[["send"],["clone"],["repeatn"]]]],[5,"empty","","Creates a parallel iterator that produces nothing.",null,[[],[["send"],["empty"]]]],[5,"once","","Creates a parallel iterator that produces an element…",null,[[["send"]],[["once"],["send"]]]],[0,"plumbing","","Traits and functions used to implement parallel iteration.…",null,null],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel…",null,[[["c"],["i"]]]],[5,"bridge_producer_consumer","","This helper function is used to \"connect\" a producer and a…",null,[[["c"],["usize"],["p"]]]],[5,"bridge_unindexed","","A variant of [`bridge_producer_consumer`] where the…",null,[[["c"],["p"]]]],[8,"ProducerCallback","","The `ProducerCallback` trait is a kind of generic closure,…",null,null],[16,"Output","","The type of value returned by this callback. Analogous to…",1,null],[10,"callback","","Invokes the callback with the given producer as argument.…",1,[[["p"]]]],[8,"Producer","","A `Producer` is effectively a \"splittable `IntoIterator`\".…",null,null],[16,"Item","","The type of item that will be produced by this producer…",2,null],[16,"IntoIter","","The type of iterator we will become.",2,null],[10,"into_iter","","Convert `self` into an iterator; at this point, no more…",2,[[]]],[11,"min_len","","The minimum number of items that we will process…",2,[[["self"]],["usize"]]],[11,"max_len","","The maximum number of items that we will process…",2,[[["self"]],["usize"]]],[10,"split_at","","Split into two producers; one produces items `0..index`,…",2,[[["usize"]]]],[11,"fold_with","","Iterate the producer, feeding each element to `folder`,…",2,[[["f"]],["f"]]],[8,"Consumer","","A consumer is effectively a [generalized \"fold\"…",null,null],[16,"Folder","","The type of folder that this consumer can be converted into.",3,null],[16,"Reducer","","The type of reducer that is produced if this consumer is…",3,null],[16,"Result","","The type of result that this consumer will ultimately…",3,null],[10,"split_at","","Divide the consumer into two consumers, one processing…",3,[[["usize"]]]],[10,"into_folder","","Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full","","Hint whether this `Consumer` would like to stop processing…",3,[[["self"]],["bool"]]],[8,"Folder","","The `Folder` trait encapsulates [the standard fold…",null,null],[16,"Result","","The type of result that will ultimately be produced by the…",4,null],[10,"consume","","Consume next item and return new sequential state.",4,[[["item"]],["self"]]],[11,"consume_iter","","Consume items from the iterator until full, and return new…",4,[[["i"]],["self"]]],[10,"complete","","Finish consuming items, produce final result.",4,[[]]],[10,"full","","Hint whether this `Folder` would like to stop processing…",4,[[["self"]],["bool"]]],[8,"Reducer","","The reducer is the final step of a `Consumer` -- after a…",null,null],[10,"reduce","","Reduce two final results into one; this is executed after…",5,[[["result"]],["result"]]],[8,"UnindexedConsumer","","A stateless consumer can be freely copied. These consumers…",null,null],[10,"split_off_left","","Splits off a \"left\" consumer and returns it. The `self`…",6,[[["self"]],["self"]]],[10,"to_reducer","","Creates a reducer that can be used to combine the results…",6,[[["self"]]]],[8,"UnindexedProducer","","A variant on `Producer` which does not know its exact…",null,null],[16,"Item","","The type of item returned by this producer.",7,null],[10,"split","","Split midway into a new producer if possible, otherwise…",7,[[]]],[10,"fold_with","","Iterate the producer, feeding each element to `folder`,…",7,[[["f"]],["f"]]],[11,"take","rayon::iter","Take only `n` repeats of the element, similar to the…",8,[[["usize"]],["repeatn"]]],[11,"zip","","Iterate tuples repeating the element with items from…",8,[[["z"]],[["zip",["repeatn"]],["repeatn"]]]],[8,"ParallelBridge","","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge"]]],[8,"IntoParallelIterator","","`IntoParallelIterator` implements the conversion to a…",null,null],[16,"Iter","","The parallel iterator type that will be created.",10,null],[16,"Item","","The type of item that the parallel iterator will produce.",10,null],[10,"into_par_iter","","Converts `self` into a parallel iterator.",10,[[]]],[8,"IntoParallelRefIterator","","`IntoParallelRefIterator` implements the conversion to a…",null,null],[16,"Iter","","The type of the parallel iterator that will be returned.",11,null],[16,"Item","","The type of item that the parallel iterator will produce.…",11,null],[10,"par_iter","","Converts `self` into a parallel iterator.",11,[[["self"]]]],[8,"IntoParallelRefMutIterator","","`IntoParallelRefMutIterator` implements the conversion to…",null,null],[16,"Iter","","The type of iterator that will be created.",12,null],[16,"Item","","The type of item that will be produced; this is typically…",12,null],[10,"par_iter_mut","","Creates the parallel iterator from `self`.",12,[[["self"]]]],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",null,null],[16,"Item","","The type of item that this parallel iterator produces. For…",13,null],[11,"for_each","","Executes `OP` on each item produced by the iterator, in…",13,[[["op"]]]],[11,"for_each_with","","Executes `OP` on the given `init` value with each item…",13,[[["op"],["t"]]]],[11,"for_each_init","","Executes `OP` on a value returned by `init` with each item…",13,[[["op"],["init"]]]],[11,"try_for_each","","Executes a fallible `OP` on each item produced by the…",13,[[["op"]],["r"]]],[11,"try_for_each_with","","Executes a fallible `OP` on the given `init` value with…",13,[[["op"],["t"]],["r"]]],[11,"try_for_each_init","","Executes a fallible `OP` on a value returned by `init`…",13,[[["op"],["init"]],["r"]]],[11,"count","","Counts the number of items in this parallel iterator.",13,[[],["usize"]]],[11,"map","","Applies `map_op` to each item of this iterator, producing…",13,[[["f"]],["map"]]],[11,"map_with","","Applies `map_op` to the given `init` value with each item…",13,[[["t"],["f"]],["mapwith"]]],[11,"map_init","","Applies `map_op` to a value returned by `init` with each…",13,[[["init"],["f"]],["mapinit"]]],[11,"cloned","","Creates an iterator which clones all of its elements. This…",13,[[],["cloned"]]],[11,"copied","","Creates an iterator which copies all of its elements. This…",13,[[],["copied"]]],[11,"inspect","","Applies `inspect_op` to a reference to each item of this…",13,[[["op"]],["inspect"]]],[11,"update","","Mutates each item of this iterator before yielding it.",13,[[["f"]],["update"]]],[11,"filter","","Applies `filter_op` to each item of this iterator,…",13,[[["p"]],["filter"]]],[11,"filter_map","","Applies `filter_op` to each item of this iterator to get…",13,[[["p"]],["filtermap"]]],[11,"flat_map","","Applies `map_op` to each item of this iterator to get…",13,[[["f"]],["flatmap"]]],[11,"flatten","","An adaptor that flattens iterable `Item`s into one large…",13,[[],["flatten"]]],[11,"reduce","","Reduces the items in the iterator into one item using…",13,[[["op"],["id"]]]],[11,"reduce_with","","Reduces the items in the iterator into one item using…",13,[[["op"]],["option"]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a…",13,[[["op"],["id"]]]],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a…",13,[[["op"]],["option"]]],[11,"fold","","Parallel fold is similar to sequential fold except that…",13,[[["id"],["f"]],["fold"]]],[11,"fold_with","","Applies `fold_op` to the given `init` value with each item…",13,[[["t"],["f"]],["foldwith"]]],[11,"try_fold","","Perform a fallible parallel fold.",13,[[["id"],["f"]],["tryfold"]]],[11,"try_fold_with","","Perform a fallible parallel fold with a cloneable `init`…",13,[[["t"],["f"]],["tryfoldwith"]]],[11,"sum","","Sums up the items in the iterator.",13,[[],["s"]]],[11,"product","","Multiplies all the items in the iterator.",13,[[],["p"]]],[11,"min","","Computes the minimum of all the items in the iterator. If…",13,[[],["option"]]],[11,"min_by","","Computes the minimum of all the items in the iterator with…",13,[[["f"]],["option"]]],[11,"min_by_key","","Computes the item that yields the minimum value for the…",13,[[["f"]],["option"]]],[11,"max","","Computes the maximum of all the items in the iterator. If…",13,[[],["option"]]],[11,"max_by","","Computes the maximum of all the items in the iterator with…",13,[[["f"]],["option"]]],[11,"max_by_key","","Computes the item that yields the maximum value for the…",13,[[["f"]],["option"]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",13,[[["c"]],["chain"]]],[11,"find_any","","Searches for some item in the parallel iterator that…",13,[[["p"]],["option"]]],[11,"find_first","","Searches for the sequentially first item in the parallel…",13,[[["p"]],["option"]]],[11,"find_last","","Searches for the sequentially last item in the parallel…",13,[[["p"]],["option"]]],[11,"find_map_any","","Applies the given predicate to the items in the parallel…",13,[[["p"]],["option"]]],[11,"find_map_first","","Applies the given predicate to the items in the parallel…",13,[[["p"]],["option"]]],[11,"find_map_last","","Applies the given predicate to the items in the parallel…",13,[[["p"]],["option"]]],[11,"any","","Searches for some item in the parallel iterator that…",13,[[["p"]],["bool"]]],[11,"all","","Tests that every item in the parallel iterator matches the…",13,[[["p"]],["bool"]]],[11,"while_some","","Creates an iterator over the `Some` items of this…",13,[[],["whilesome"]]],[11,"panic_fuse","","Wraps an iterator with a fuse in case of panics, to halt…",13,[[],["panicfuse"]]],[11,"collect","","Create a fresh collection containing all the element…",13,[[],["c"]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition","","Partitions the items of a parallel iterator into a pair of…",13,[[["p"]]]],[11,"partition_map","","Partitions and maps the items of a parallel iterator into…",13,[[["p"]]]],[11,"intersperse","","Intersperses clones of an element between items of this…",13,[[],["intersperse"]]],[10,"drive_unindexed","","Internal method used to define the behavior of this…",13,[[["c"]]]],[11,"opt_len","","Internal method used to define the behavior of this…",13,[[["self"]],[["usize"],["option",["usize"]]]]],[8,"IndexedParallelIterator","","An iterator that supports \"random access\" to its data,…",null,null],[11,"collect_into_vec","","Collects the results of the iterator into the specified…",14,[[["vec"]]]],[11,"unzip_into_vecs","","Unzips the results of the iterator into the specified…",14,[[["vec"],["vec"]]]],[11,"zip","","Iterate over tuples `(A, B)`, where the items `A` are from…",14,[[["z"]],["zip"]]],[11,"zip_eq","","The same as `Zip`, but requires that both iterators have…",14,[[["z"]],["zipeq"]]],[11,"interleave","","Interleave elements of this iterator and the other given…",14,[[["i"]],["interleave"]]],[11,"interleave_shortest","","Interleave elements of this iterator and the other given…",14,[[["i"]],["interleaveshortest"]]],[11,"chunks","","Split an iterator up into fixed-size chunks.",14,[[["usize"]],["chunks"]]],[11,"cmp","","Lexicographically compares the elements of this…",14,[[["i"]],["ordering"]]],[11,"partial_cmp","","Lexicographically compares the elements of this…",14,[[["i"]],[["ordering"],["option",["ordering"]]]]],[11,"eq","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"ne","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"lt","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"le","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"gt","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"ge","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"enumerate","","Yields an index along with each item.",14,[[],["enumerate"]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",14,[[["usize"]],["skip"]]],[11,"take","","Creates an iterator that yields the first `n` elements.",14,[[["usize"]],["take"]]],[11,"position_any","","Searches for some item in the parallel iterator that…",14,[[["p"]],[["usize"],["option",["usize"]]]]],[11,"position_first","","Searches for the sequentially first item in the parallel…",14,[[["p"]],[["usize"],["option",["usize"]]]]],[11,"position_last","","Searches for the sequentially last item in the parallel…",14,[[["p"]],[["usize"],["option",["usize"]]]]],[11,"rev","","Produces a new iterator with the elements of this iterator…",14,[[],["rev"]]],[11,"with_min_len","","Sets the minimum length of iterators desired to process in…",14,[[["usize"]],["minlen"]]],[11,"with_max_len","","Sets the maximum length of iterators desired to process in…",14,[[["usize"]],["maxlen"]]],[10,"len","","Produces an exact count of how many items this iterator…",14,[[["self"]],["usize"]]],[10,"drive","","Internal method used to define the behavior of this…",14,[[["consumer"]]]],[10,"with_producer","","Internal method used to define the behavior of this…",14,[[["producercallback"]]]],[8,"FromParallelIterator","","`FromParallelIterator` implements the creation of a…",null,null],[10,"from_par_iter","","Creates an instance of the collection from the parallel…",15,[[["i"]],["self"]]],[8,"ParallelExtend","","`ParallelExtend` extends an existing collection with items…",null,null],[10,"par_extend","","Extends an instance of the collection with the elements…",16,[[["self"],["i"]]]],[0,"option","rayon","Parallel iterator types for [options][std::option]",null,null],[3,"IntoIter","rayon::option","A parallel iterator over the value in [`Some`] variant of…",null,null],[3,"Iter","","A parallel iterator over a reference to the [`Some`]…",null,null],[3,"IterMut","","A parallel iterator over a mutable reference to the…",null,null],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",null,null],[8,"ParallelBridge","rayon::prelude","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge"]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type…",null,null],[3,"Iter","rayon::range","Parallel iterator over a range, implemented for all…",null,null],[0,"range_inclusive","rayon","Parallel iterator types for [inclusive…",null,null],[3,"Iter","rayon::range_inclusive","Parallel iterator over an inclusive range, implemented for…",null,null],[0,"result","rayon","Parallel iterator types for [results][std::result]",null,null],[3,"IntoIter","rayon::result","Parallel iterator over a result",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a result",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a result",null,null],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",null,null],[3,"Iter","rayon::slice","Parallel iterator over immutable items in a slice",null,null],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks of…",null,null],[3,"Windows","","Parallel iterator over immutable overlapping windows of a…",null,null],[3,"IterMut","","Parallel iterator over mutable items in a slice",null,null],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of a…",null,null],[3,"Split","","Parallel iterator over slices separated by a predicate",null,null],[3,"SplitMut","","Parallel iterator over mutable slices separated by a…",null,null],[8,"ParallelSlice","","Parallel extensions for slices.",null,null],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the rest…",17,[[["self"]]]],[11,"par_split","","Returns a parallel iterator over subslices separated by…",17,[[["self"],["p"]],["split"]]],[11,"par_windows","","Returns a parallel iterator over all contiguous windows of…",17,[[["self"],["usize"]],["windows"]]],[11,"par_chunks","","Returns a parallel iterator over at most `chunk_size`…",17,[[["self"],["usize"]],["chunks"]]],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",null,null],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement…",18,[[["self"]]]],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices…",18,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut","","Returns a parallel iterator over at most `chunk_size`…",18,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort","","Sorts the slice in parallel.",18,[[["self"]]]],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",18,[[["self"],["f"]]]],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction function.",18,[[["self"],["f"]]]],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the…",18,[[["self"]]]],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function,…",18,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction…",18,[[["self"],["f"]]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",null,null],[3,"Chars","rayon::str","Parallel iterator over the characters of a string",null,null],[3,"CharIndices","","Parallel iterator over the characters of a string, with…",null,null],[3,"Bytes","","Parallel iterator over the bytes of a string",null,null],[3,"EncodeUtf16","","Parallel iterator over a string encoded as UTF-16",null,null],[3,"Split","","Parallel iterator over substrings separated by a pattern",null,null],[3,"SplitTerminator","","Parallel iterator over substrings separated by a…",null,null],[3,"Lines","","Parallel iterator over lines in a string",null,null],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",null,null],[3,"Matches","","Parallel iterator over substrings that match a pattern",null,null],[3,"MatchIndices","","Parallel iterator over substrings that match a pattern,…",null,null],[8,"ParallelString","","Parallel extensions for strings.",null,null],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement…",19,[[["self"]],["str"]]],[11,"par_chars","","Returns a parallel iterator over the characters of a string.",19,[[["self"]],["chars"]]],[11,"par_char_indices","","Returns a parallel iterator over the characters of a…",19,[[["self"]],["charindices"]]],[11,"par_bytes","","Returns a parallel iterator over the bytes of a string.",19,[[["self"]],["bytes"]]],[11,"par_encode_utf16","","Returns a parallel iterator over a string encoded as UTF-16.",19,[[["self"]],["encodeutf16"]]],[11,"par_split","","Returns a parallel iterator over substrings separated by a…",19,[[["self"],["pattern"]],[["split"],["pattern"]]]],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by…",19,[[["self"],["pattern"]],[["splitterminator"],["pattern"]]]],[11,"par_lines","","Returns a parallel iterator over the lines of a string,…",19,[[["self"]],["lines"]]],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a…",19,[[["self"]],["splitwhitespace"]]],[11,"par_matches","","Returns a parallel iterator over substrings that match a…",19,[[["self"],["pattern"]],[["matches"],["pattern"]]]],[11,"par_match_indices","","Returns a parallel iterator over substrings that match a…",19,[[["self"],["pattern"]],[["matchindices"],["pattern"]]]],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",null,null],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",null,null],[11,"from","rayon","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::binary_heap","",27,[[],["t"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"into_par_iter","","",28,[[],["t"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_map","",29,[[],["t"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"into_par_iter","","",30,[[],["t"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"into_par_iter","","",31,[[],["t"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_set","",32,[[],["t"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"into_par_iter","","",33,[[],["t"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_map","",34,[[],["t"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"into_par_iter","","",35,[[],["t"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"into_par_iter","","",36,[[],["t"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_set","",37,[[],["t"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"into_par_iter","","",38,[[],["t"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::linked_list","",39,[[],["t"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"into_par_iter","","",40,[[],["t"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"into_par_iter","","",41,[[],["t"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::vec_deque","",42,[[],["t"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"into_par_iter","","",43,[[],["t"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"into_par_iter","","",44,[[],["t"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::iter","",0,[[],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into_par_iter","","",45,[[],["t"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"into_par_iter","","",46,[[],["t"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"into_par_iter","","",47,[[],["t"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"into_par_iter","","",48,[[],["t"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"into_par_iter","","",49,[[],["t"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"into_par_iter","","",50,[[],["t"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"into_par_iter","","",51,[[],["t"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"into_par_iter","","",52,[[],["t"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"into_par_iter","","",53,[[],["t"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"into_par_iter","","",54,[[],["t"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"into_par_iter","","",55,[[],["t"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"into_par_iter","","",56,[[],["t"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"into_par_iter","","",57,[[],["t"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"into_par_iter","","",58,[[],["t"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"into_par_iter","","",59,[[],["t"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"into_par_iter","","",60,[[],["t"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"into_par_iter","","",61,[[],["t"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"into_par_iter","","",62,[[],["t"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"into_par_iter","","",63,[[],["t"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"into_par_iter","","",64,[[],["t"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"into_par_iter","","",65,[[],["t"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"into_par_iter","","",66,[[],["t"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"into_par_iter","","",67,[[],["t"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"into_par_iter","","",68,[[],["t"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"into_par_iter","","",69,[[],["t"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"into_par_iter","","",70,[[],["t"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"into_par_iter","","",71,[[],["t"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"into_par_iter","","",72,[[],["t"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"into_par_iter","","",73,[[],["t"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"into_par_iter","","",74,[[],["t"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"into_par_iter","","",75,[[],["t"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"into_par_iter","","",76,[[],["t"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"into_par_iter","","",77,[[],["t"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"into_par_iter","","",8,[[],["t"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_par_iter","","",78,[[],["t"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"into_par_iter","","",79,[[],["t"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"into_par_iter","","",80,[[],["t"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::option","",81,[[],["t"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"into_par_iter","","",82,[[],["t"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"into_par_iter","","",83,[[],["t"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::range","",84,[[],["t"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::range_inclusive","",85,[[],["t"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::result","",86,[[],["t"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"into_par_iter","","",87,[[],["t"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"into_par_iter","","",88,[[],["t"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::slice","",89,[[],["t"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"into_par_iter","","",90,[[],["t"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"into_par_iter","","",91,[[],["t"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"into_par_iter","","",92,[[],["t"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"into_par_iter","","",93,[[],["t"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"into_par_iter","","",94,[[],["t"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"into_par_iter","","",95,[[],["t"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::str","",96,[[],["t"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"into_par_iter","","",97,[[],["t"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"into_par_iter","","",98,[[],["t"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"into_par_iter","","",99,[[],["t"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"into_par_iter","","",100,[[],["t"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"into_par_iter","","",101,[[],["t"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"into_par_iter","","",102,[[],["t"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"into_par_iter","","",103,[[],["t"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"into_par_iter","","",104,[[],["t"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"into_par_iter","","",105,[[],["t"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::vec","",106,[[],["t"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"as_mut","rayon::iter","",0,[[["self"]]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"deref","","",0,[[["self"]]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"partial_cmp","","",0,[[["self"],["either"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"into","","",0,[[],["result"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"fmt","rayon","",22,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",26,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",21,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",25,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",23,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",20,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",23,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"drop","","",22,[[["self"]]]],[11,"description","","",23,[[["self"]],["str"]]],[11,"default","","",24,[[],[["defaultspawn"],["threadpoolbuilder",["defaultspawn"]]]]],[11,"drive_unindexed","rayon::collections::binary_heap","",27,[[["c"]]]],[11,"opt_len","","",27,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",28,[[["c"]]]],[11,"opt_len","","",28,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","rayon::collections::btree_map","",29,[[["c"]]]],[11,"opt_len","","",29,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",30,[[["c"]]]],[11,"opt_len","","",30,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",31,[[["c"]]]],[11,"opt_len","","",31,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","rayon::collections::btree_set","",32,[[["c"]]]],[11,"opt_len","","",32,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",33,[[["c"]]]],[11,"opt_len","","",33,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","rayon::collections::hash_map","",34,[[["c"]]]],[11,"opt_len","","",34,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",35,[[["c"]]]],[11,"opt_len","","",35,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",36,[[["c"]]]],[11,"opt_len","","",36,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","rayon::collections::hash_set","",37,[[["c"]]]],[11,"opt_len","","",37,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",38,[[["c"]]]],[11,"opt_len","","",38,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","rayon::collections::linked_list","",39,[[["c"]]]],[11,"opt_len","","",39,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",40,[[["c"]]]],[11,"opt_len","","",40,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",41,[[["c"]]]],[11,"opt_len","","",41,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","rayon::collections::vec_deque","",42,[[["c"]]]],[11,"opt_len","","",42,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",43,[[["c"]]]],[11,"opt_len","","",43,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",44,[[["c"]]]],[11,"opt_len","","",44,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","rayon::iter","",45,[[["c"]]]],[11,"drive_unindexed","","",46,[[["c"]]]],[11,"opt_len","","",46,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",47,[[["c"]]]],[11,"opt_len","","",47,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",48,[[["c"]]]],[11,"opt_len","","",48,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",49,[[["c"]]]],[11,"drive_unindexed","","",50,[[["c"]]]],[11,"drive_unindexed","","",51,[[["c"]]]],[11,"drive_unindexed","","",52,[[["c"]]]],[11,"drive_unindexed","","",53,[[["c"]]]],[11,"drive_unindexed","","",54,[[["c"]]]],[11,"drive_unindexed","","",55,[[["c"]]]],[11,"drive_unindexed","","",56,[[["c"]]]],[11,"drive_unindexed","","",57,[[["c"]]]],[11,"opt_len","","",57,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",58,[[["c"]]]],[11,"drive_unindexed","","",59,[[["c"]]]],[11,"opt_len","","",59,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",60,[[["c"]]]],[11,"opt_len","","",60,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",62,[[["c"]]]],[11,"opt_len","","",62,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",61,[[["c"]]]],[11,"opt_len","","",61,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",63,[[["c"]]]],[11,"opt_len","","",63,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",64,[[["c"]]]],[11,"opt_len","","",64,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",66,[[["c"]]]],[11,"opt_len","","",66,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",67,[[["c"]]]],[11,"opt_len","","",67,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",68,[[["c"]]]],[11,"opt_len","","",68,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",69,[[["c"]]]],[11,"opt_len","","",69,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",70,[[["c"]]]],[11,"opt_len","","",70,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",72,[[["c"]]]],[11,"opt_len","","",72,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",71,[[["c"]]]],[11,"opt_len","","",71,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",73,[[["c"]]]],[11,"opt_len","","",73,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",74,[[["c"]]]],[11,"opt_len","","",74,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",75,[[["c"]]]],[11,"opt_len","","",75,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",76,[[["c"]]]],[11,"opt_len","","",76,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",77,[[["c"]]]],[11,"drive_unindexed","","",8,[[["c"]]]],[11,"drive_unindexed","","",78,[[["c"]]]],[11,"opt_len","","",78,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",79,[[["c"]]]],[11,"opt_len","","",79,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",80,[[["c"]]]],[11,"opt_len","","",80,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","rayon::option","",81,[[["c"]]]],[11,"opt_len","","",81,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",82,[[["c"]]]],[11,"opt_len","","",82,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",83,[[["c"]]]],[11,"opt_len","","",83,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","rayon::range","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","rayon::range_inclusive","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","rayon::result","",86,[[["c"]]]],[11,"opt_len","","",86,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",87,[[["c"]]]],[11,"opt_len","","",87,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",88,[[["c"]]]],[11,"opt_len","","",88,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","rayon::slice","",89,[[["c"]]]],[11,"opt_len","","",89,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",90,[[["c"]]]],[11,"opt_len","","",90,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",91,[[["c"]]]],[11,"opt_len","","",91,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",92,[[["c"]]]],[11,"opt_len","","",92,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",93,[[["c"]]]],[11,"opt_len","","",93,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","","",94,[[["c"]]]],[11,"drive_unindexed","","",95,[[["c"]]]],[11,"drive_unindexed","rayon::str","",96,[[["c"]]]],[11,"drive_unindexed","","",97,[[["c"]]]],[11,"drive_unindexed","","",98,[[["c"]]]],[11,"drive_unindexed","","",99,[[["c"]]]],[11,"drive_unindexed","","",100,[[["c"]]]],[11,"drive_unindexed","","",101,[[["c"]]]],[11,"drive_unindexed","","",102,[[["c"]]]],[11,"drive_unindexed","","",103,[[["c"]]]],[11,"drive_unindexed","","",104,[[["c"]]]],[11,"drive_unindexed","","",105,[[["c"]]]],[11,"drive_unindexed","rayon::vec","",106,[[["c"]]]],[11,"opt_len","","",106,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive_unindexed","rayon::iter","",0,[[["c"]]]],[11,"opt_len","","",0,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"drive","rayon::collections::binary_heap","",27,[[["c"]]]],[11,"len","","",27,[[["self"]],["usize"]]],[11,"with_producer","","",27,[[["cb"]]]],[11,"drive","","",28,[[["c"]]]],[11,"len","","",28,[[["self"]],["usize"]]],[11,"with_producer","","",28,[[["cb"]]]],[11,"drive","rayon::collections::vec_deque","",42,[[["c"]]]],[11,"len","","",42,[[["self"]],["usize"]]],[11,"with_producer","","",42,[[["cb"]]]],[11,"drive","","",43,[[["c"]]]],[11,"len","","",43,[[["self"]],["usize"]]],[11,"with_producer","","",43,[[["cb"]]]],[11,"drive","","",44,[[["c"]]]],[11,"len","","",44,[[["self"]],["usize"]]],[11,"with_producer","","",44,[[["cb"]]]],[11,"drive","rayon::iter","",46,[[["c"]]]],[11,"len","","",46,[[["self"]],["usize"]]],[11,"with_producer","","",46,[[["cb"]]]],[11,"drive","","",47,[[["c"]]]],[11,"len","","",47,[[["self"]],["usize"]]],[11,"with_producer","","",47,[[["cb"]]]],[11,"drive","","",48,[[["consumer"]]]],[11,"len","","",48,[[["self"]],["usize"]]],[11,"with_producer","","",48,[[["cb"]]]],[11,"len","","",57,[[["self"]],["usize"]]],[11,"drive","","",57,[[["consumer"]]]],[11,"with_producer","","",57,[[["cb"]]]],[11,"len","","",59,[[["self"]],["usize"]]],[11,"drive","","",59,[[["consumer"]]]],[11,"with_producer","","",59,[[["cb"]]]],[11,"drive","","",60,[[["c"]]]],[11,"len","","",60,[[["self"]],["usize"]]],[11,"with_producer","","",60,[[["cb"]]]],[11,"drive","","",62,[[["c"]]]],[11,"len","","",62,[[["self"]],["usize"]]],[11,"with_producer","","",62,[[["cb"]]]],[11,"drive","","",61,[[["c"]]]],[11,"len","","",61,[[["self"]],["usize"]]],[11,"with_producer","","",61,[[["cb"]]]],[11,"drive","","",63,[[["c"]]]],[11,"len","","",63,[[["self"]],["usize"]]],[11,"with_producer","","",63,[[["cb"]]]],[11,"drive","","",64,[[["c"]]]],[11,"len","","",64,[[["self"]],["usize"]]],[11,"with_producer","","",64,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",66,[[["c"]]]],[11,"len","","",66,[[["self"]],["usize"]]],[11,"with_producer","","",66,[[["cb"]]]],[11,"drive","","",67,[[["c"]]]],[11,"len","","",67,[[["self"]],["usize"]]],[11,"with_producer","","",67,[[["cb"]]]],[11,"drive","","",68,[[["c"]]]],[11,"len","","",68,[[["self"]],["usize"]]],[11,"with_producer","","",68,[[["cb"]]]],[11,"drive","","",69,[[["c"]]]],[11,"len","","",69,[[["self"]],["usize"]]],[11,"with_producer","","",69,[[["cb"]]]],[11,"drive","","",70,[[["consumer"]]]],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,[[["cb"]]]],[11,"drive","","",72,[[["consumer"]]]],[11,"len","","",72,[[["self"]],["usize"]]],[11,"with_producer","","",72,[[["cb"]]]],[11,"drive","","",71,[[["consumer"]]]],[11,"len","","",71,[[["self"]],["usize"]]],[11,"with_producer","","",71,[[["cb"]]]],[11,"drive","","",73,[[["c"]]]],[11,"len","","",73,[[["self"]],["usize"]]],[11,"with_producer","","",73,[[["cb"]]]],[11,"drive","","",74,[[["c"]]]],[11,"len","","",74,[[["self"]],["usize"]]],[11,"with_producer","","",74,[[["cb"]]]],[11,"drive","","",75,[[["c"]]]],[11,"len","","",75,[[["self"]],["usize"]]],[11,"with_producer","","",75,[[["cb"]]]],[11,"drive","","",76,[[["c"]]]],[11,"len","","",76,[[["self"]],["usize"]]],[11,"with_producer","","",76,[[["cb"]]]],[11,"drive","","",78,[[["c"]]]],[11,"with_producer","","",78,[[["cb"]]]],[11,"len","","",78,[[["self"]],["usize"]]],[11,"drive","","",79,[[["c"]]]],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,[[["cb"]]]],[11,"drive","","",80,[[["c"]]]],[11,"len","","",80,[[["self"]],["usize"]]],[11,"with_producer","","",80,[[["cb"]]]],[11,"drive","rayon::option","",81,[[["c"]]]],[11,"len","","",81,[[["self"]],["usize"]]],[11,"with_producer","","",81,[[["cb"]]]],[11,"drive","","",82,[[["c"]]]],[11,"len","","",82,[[["self"]],["usize"]]],[11,"with_producer","","",82,[[["cb"]]]],[11,"drive","","",83,[[["c"]]]],[11,"len","","",83,[[["self"]],["usize"]]],[11,"with_producer","","",83,[[["cb"]]]],[11,"drive","rayon::range","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","rayon::range_inclusive","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","rayon::result","",86,[[["c"]]]],[11,"len","","",86,[[["self"]],["usize"]]],[11,"with_producer","","",86,[[["cb"]]]],[11,"drive","","",87,[[["c"]]]],[11,"len","","",87,[[["self"]],["usize"]]],[11,"with_producer","","",87,[[["cb"]]]],[11,"drive","","",88,[[["c"]]]],[11,"len","","",88,[[["self"]],["usize"]]],[11,"with_producer","","",88,[[["cb"]]]],[11,"drive","rayon::slice","",89,[[["c"]]]],[11,"len","","",89,[[["self"]],["usize"]]],[11,"with_producer","","",89,[[["cb"]]]],[11,"drive","","",90,[[["c"]]]],[11,"len","","",90,[[["self"]],["usize"]]],[11,"with_producer","","",90,[[["cb"]]]],[11,"drive","","",91,[[["c"]]]],[11,"len","","",91,[[["self"]],["usize"]]],[11,"with_producer","","",91,[[["cb"]]]],[11,"drive","","",92,[[["c"]]]],[11,"len","","",92,[[["self"]],["usize"]]],[11,"with_producer","","",92,[[["cb"]]]],[11,"drive","","",93,[[["c"]]]],[11,"len","","",93,[[["self"]],["usize"]]],[11,"with_producer","","",93,[[["cb"]]]],[11,"drive","rayon::vec","",106,[[["c"]]]],[11,"len","","",106,[[["self"]],["usize"]]],[11,"with_producer","","",106,[[["cb"]]]],[11,"drive","rayon::iter","",0,[[["c"]]]],[11,"len","","",0,[[["self"]],["usize"]]],[11,"with_producer","","",0,[[["cb"]]]],[11,"par_extend","","",0,[[["self"],["i"]]]],[11,"clone","rayon::collections::binary_heap","",27,[[["self"]],["intoiter"]]],[11,"clone","","",28,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_map","",30,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_set","",33,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_map","",35,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_set","",38,[[["self"]],["self"]]],[11,"clone","rayon::collections::linked_list","",39,[[["self"]],["intoiter"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","rayon::collections::vec_deque","",42,[[["self"]],["intoiter"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","rayon::iter","",45,[[["self"]],["iterbridge"]]],[11,"clone","","",46,[[["self"]],["chain"]]],[11,"clone","","",47,[[["self"]],["chunks"]]],[11,"clone","","",48,[[["self"]],["enumerate"]]],[11,"clone","","",49,[[["self"]],["filter"]]],[11,"clone","","",50,[[["self"]],["filtermap"]]],[11,"clone","","",51,[[["self"]],["flatmap"]]],[11,"clone","","",52,[[["self"]],["flatten"]]],[11,"clone","","",53,[[["self"]],["fold"]]],[11,"clone","","",54,[[["self"]],["foldwith"]]],[11,"clone","","",55,[[["self"]],["tryfold"]]],[11,"clone","","",56,[[["self"]],["tryfoldwith"]]],[11,"clone","","",57,[[["self"]],["skip"]]],[11,"clone","","",58,[[["self"]],["split"]]],[11,"clone","","",59,[[["self"]],["take"]]],[11,"clone","","",60,[[["self"]],["map"]]],[11,"clone","","",62,[[["self"]],["mapwith"]]],[11,"clone","","",61,[[["self"]],["mapinit"]]],[11,"clone","","",63,[[["self"]],["zip"]]],[11,"clone","","",64,[[["self"]],["zipeq"]]],[11,"clone","","",65,[[["self"]],["multizip"]]],[11,"clone","","",66,[[["self"]],["interleave"]]],[11,"clone","","",67,[[["self"]],["interleaveshortest"]]],[11,"clone","","",68,[[["self"]],["intersperse"]]],[11,"clone","","",69,[[["self"]],["update"]]],[11,"clone","","",70,[[["self"]],["rev"]]],[11,"clone","","",72,[[["self"]],["minlen"]]],[11,"clone","","",71,[[["self"]],["maxlen"]]],[11,"clone","","",73,[[["self"]],["cloned"]]],[11,"clone","","",74,[[["self"]],["copied"]]],[11,"clone","","",75,[[["self"]],["inspect"]]],[11,"clone","","",76,[[["self"]],["panicfuse"]]],[11,"clone","","",77,[[["self"]],["whilesome"]]],[11,"clone","","",8,[[["self"]],["repeat"]]],[11,"clone","","",78,[[["self"]],["repeatn"]]],[11,"clone","","",79,[[["self"]],["self"]]],[11,"clone","","",80,[[["self"]],["once"]]],[11,"clone","rayon::option","",81,[[["self"]],["intoiter"]]],[11,"clone","","",82,[[["self"]],["self"]]],[11,"clone","rayon::range","",84,[[["self"]],["iter"]]],[11,"clone","rayon::range_inclusive","",85,[[["self"]],["iter"]]],[11,"clone","rayon::result","",86,[[["self"]],["intoiter"]]],[11,"clone","","",87,[[["self"]],["self"]]],[11,"clone","rayon::slice","",89,[[["self"]],["self"]]],[11,"clone","","",90,[[["self"]],["self"]]],[11,"clone","","",91,[[["self"]],["self"]]],[11,"clone","","",94,[[["self"]],["self"]]],[11,"clone","rayon::str","",96,[[["self"]],["chars"]]],[11,"clone","","",97,[[["self"]],["charindices"]]],[11,"clone","","",98,[[["self"]],["bytes"]]],[11,"clone","","",99,[[["self"]],["encodeutf16"]]],[11,"clone","","",100,[[["self"]],["split"]]],[11,"clone","","",101,[[["self"]],["splitterminator"]]],[11,"clone","","",102,[[["self"]],["lines"]]],[11,"clone","","",103,[[["self"]],["splitwhitespace"]]],[11,"clone","","",104,[[["self"]],["matches"]]],[11,"clone","","",105,[[["self"]],["matchindices"]]],[11,"clone","rayon::vec","",106,[[["self"]],["intoiter"]]],[11,"fmt","rayon::collections::binary_heap","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::btree_map","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::btree_set","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::hash_map","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::hash_set","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::linked_list","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::vec_deque","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::iter","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::option","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::range","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::range_inclusive","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::result","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::slice","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::str","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::vec","",106,[[["formatter"],["self"]],["result"]]],[11,"migrated","rayon","Returns `true` if the closure was called from a different…",20,[[["self"]],["bool"]]],[11,"index","","Get the index of this thread in the pool, within…",21,[[["self"]],["usize"]]],[11,"name","","Get the string that was specified by…",21,[[["self"]],[["str"],["option",["str"]]]]],[11,"stack_size","","Get the value that was specified by…",21,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"run","","Execute the main loop for this thread. This will not…",21,[[]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",22,[[["configuration"]],[["threadpool"],["box",["error"]],["result",["threadpool","box"]]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",22,[[["op"],["self"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",22,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",22,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",22,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",22,[[["a"],["self"],["b"]]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",22,[[["op"],["self"]],["r"]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",22,[[["op"],["self"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",22,[[["op"],["self"]]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",22,[[["op"],["self"]]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",24,[[],[["defaultspawn"],["threadpoolbuilder",["defaultspawn"]]]]],[11,"build","","Create a new `ThreadPool` initialized using this…",24,[[],[["threadpool"],["threadpoolbuilderror"],["result",["threadpool","threadpoolbuilderror"]]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",24,[[],[["threadpoolbuilderror"],["result",["threadpoolbuilderror"]]]]],[11,"build_scoped","","Create a scoped `ThreadPool` initialized using this…",24,[[["w"],["f"]],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"spawn_handler","","Set a custom function for spawning threads.",24,[[["f"]],[["customspawn"],["threadpoolbuilder",["customspawn"]]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",24,[[["f"]],["threadpoolbuilder"]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",24,[[["usize"]],["threadpoolbuilder"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",24,[[["h"]],["threadpoolbuilder"]]],[11,"stack_size","","Set the stack size of the worker threads",24,[[["usize"]],["threadpoolbuilder"]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",24,[[],["threadpoolbuilder"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",24,[[["h"]],["threadpoolbuilder"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",24,[[["h"]],["threadpoolbuilder"]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",25,[[["self"],["body"]]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",26,[[["self"],["body"]]]],[11,"is_left","rayon::iter","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["l"],["either"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]]],"p":[[4,"Either"],[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[3,"Repeat"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[8,"ParallelString"],[3,"FnContext"],[3,"ThreadBuilder"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[3,"ThreadPoolBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapInit"],[3,"MapWith"],[3,"Zip"],[3,"ZipEq"],[3,"MultiZip"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"Update"],[3,"Rev"],[3,"MaxLen"],[3,"MinLen"],[3,"Cloned"],[3,"Copied"],[3,"Inspect"],[3,"PanicFuse"],[3,"WhileSome"],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"IntoIter"]]};
searchIndex["rayon_core"] = {"doc":"Under construction","i":[[3,"ThreadBuilder","rayon_core","Thread builder used for customization via…",null,null],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ThreadPool","","Represents a user created [thread-pool].",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",null,null],[3,"Configuration","","Contains the rayon thread pool configuration. Use…",null,null],[3,"FnContext","","Provides the calling context to a closure called by…",null,null],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[["a"],["b"]]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[["a"],["b"]]]],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure…",null,[[["op"]],["r"]]],[5,"scope_fifo","","Create a \"fork-join\" scope `s` with FIFO order, and…",null,[[["op"]],["r"]]],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether…",null,[[],[["bool"],["option",["bool"]]]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],[["usize"],["option",["usize"]]]]],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[],["usize"]]],[5,"initialize","","Deprecated in favor of `ThreadPoolBuilder::build_global`.",null,[[["configuration"]],[["box",["error"]],["result",["box"]]]]],[11,"index","","Get the index of this thread in the pool, within…",0,[[["self"]],["usize"]]],[11,"name","","Get the string that was specified by…",0,[[["self"]],[["str"],["option",["str"]]]]],[11,"stack_size","","Get the value that was specified by…",0,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"run","","Execute the main loop for this thread. This will not…",0,[[]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",1,[[["self"],["body"]]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",2,[[["self"],["body"]]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",3,[[["configuration"]],[["box",["error"]],["threadpool"],["result",["threadpool","box"]]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",3,[[["op"],["self"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",3,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",3,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",3,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",3,[[["a"],["self"],["b"]]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",3,[[["op"],["self"]],["r"]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",3,[[["op"],["self"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",3,[[["op"],["self"]]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",3,[[["op"],["self"]]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",4,[[],["self"]]],[11,"build","","Create a new `ThreadPool` initialized using this…",4,[[],[["result",["threadpool","threadpoolbuilderror"]],["threadpool"],["threadpoolbuilderror"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",4,[[],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"build_scoped","","Create a scoped `ThreadPool` initialized using this…",4,[[["w"],["f"]],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"spawn_handler","","Set a custom function for spawning threads.",4,[[["f"]],[["customspawn"],["threadpoolbuilder",["customspawn"]]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",4,[[["f"]],["self"]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",4,[[["usize"]],["self"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",4,[[["h"]],["self"]]],[11,"stack_size","","Set the stack size of the worker threads",4,[[["usize"]],["self"]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",4,[[],["self"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",4,[[["h"]],["self"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",4,[[["h"]],["self"]]],[11,"new","","Creates and return a valid rayon thread pool…",5,[[],["configuration"]]],[11,"build","","Deprecated in favor of `ThreadPoolBuilder::build`.",5,[[],[["threadpool"],["result",["threadpool","box"]],["box",["error"]]]]],[11,"thread_name","","Deprecated in favor of `ThreadPoolBuilder::thread_name`.",5,[[["f"]],["self"]]],[11,"num_threads","","Deprecated in favor of `ThreadPoolBuilder::num_threads`.",5,[[["usize"]],["configuration"]]],[11,"panic_handler","","Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",5,[[["h"]],["configuration"]]],[11,"stack_size","","Deprecated in favor of `ThreadPoolBuilder::stack_size`.",5,[[["usize"]],["self"]]],[11,"breadth_first","","Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",5,[[],["self"]]],[11,"start_handler","","Deprecated in favor of `ThreadPoolBuilder::start_handler`.",5,[[["h"]],["configuration"]]],[11,"exit_handler","","Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",5,[[["h"]],["configuration"]]],[11,"migrated","","Returns `true` if the closure was called from a different…",6,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"drop","","",3,[[["self"]]]],[11,"default","","",4,[[],["self"]]],[11,"default","","",5,[[],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]]],"p":[[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"],[3,"ThreadPoolBuildError"]]};
searchIndex["regex"] = {"doc":"This crate provides a library for parsing, compiling, and…","i":[[3,"RegexSetBuilder","regex","A configurable builder for a set of regular expressions.",null,null],[3,"RegexBuilder","","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured strings for a…",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[4,"Error","","An error that occurred during parsing or compiling a…",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The…",1,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[["str"]],["string"]]],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,[[["captures"],["self"],["vec"]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,[[["self"]],[["cow"],["option",["cow"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"new","","Create a new regular expression builder with the given…",4,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",4,[[["self"]],[["regex"],["error"],["result",["regex","error"]]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",4,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",5,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",5,[[["self"]],[["regex"],["result",["regex","error"]],["error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",5,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex::bytes","Create a new regular expression builder with the given…",6,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",6,[[["self"]],[["result",["regexset","error"]],["regexset"],["error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",6,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",7,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",7,[[["self"]],[["result",["regexset","error"]],["error"],["regexset"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",7,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,[[["self"]],[["cow"],["option",["cow"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"start","","Returns the starting byte offset of the match in the…",8,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,[[["self"]],["usize"]]],[11,"range","","Returns the range over the starting and ending byte…",8,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"as_bytes","","Returns the matched text.",8,[[["self"]]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",9,[[["str"]],[["regex"],["error"],["result",["regex","error"]]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",9,[[["self"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",9,[[["self"]],[["match"],["option",["match"]]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",9,[[["self"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the…",9,[[["self"]],[["option",["captures"]],["captures"]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",9,[[["self"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",9,[[["self"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",9,[[["self"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",9,[[["self"],["replacer"]],["cow"]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",9,[[["self"],["replacer"]],["cow"]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",9,[[["usize"],["replacer"],["self"]],["cow"]]],[11,"shortest_match","","Returns the end location of a match in the text given.",9,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",9,[[["self"],["usize"]],[["usize"],["option",["usize"]]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",9,[[["self"],["usize"]],["bool"]]],[11,"find_at","","Returns the same as find, but starts the search at the…",9,[[["self"],["usize"]],[["match"],["option",["match"]]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",9,[[["self"],["capturelocations"]],[["match"],["option",["match"]]]]],[11,"captures_read_at","","Returns the same as `captures_read`, but starts the search…",9,[[["usize"],["self"],["capturelocations"]],[["match"],["option",["match"]]]]],[11,"as_str","","Returns the original string of this regex.",9,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",9,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",9,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",9,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",10,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",10,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",11,[[["self"],["usize"]],[["match"],["option",["match"]]]]],[11,"name","","Returns the match for the capture group named `name`. If…",11,[[["str"],["self"]],[["match"],["option",["match"]]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",11,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",11,[[["vec"],["self"]]]],[11,"len","","Returns the number of captured groups.",11,[[["self"]],["usize"]]],[11,"new","regex","Create a new regex set with the given regular expressions.",12,[[["i"]],[["result",["regexset","error"]],["error"],["regexset"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",12,[[["str"],["self"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the…",12,[[["str"],["self"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",12,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",12,[[["self"]]]],[11,"matched_any","","Whether this set contains any matches.",13,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",13,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",13,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",13,[[["self"]],["setmatchesiter"]]],[11,"new","regex::bytes","Create a new regex set with the given regular expressions.",14,[[["i"]],[["result",["regexset","error"]],["regexset"],["error"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",14,[[["self"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the…",14,[[["self"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",14,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",14,[[["self"]]]],[11,"matched_any","","Whether this set contains any matches.",15,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",15,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",15,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",15,[[["self"]],["setmatchesiter"]]],[11,"start","regex","Returns the starting byte offset of the match in the…",16,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",16,[[["self"]],["usize"]]],[11,"range","","Returns the range over the starting and ending byte…",16,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"as_str","","Returns the matched text.",16,[[["self"]],["str"]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",17,[[["str"]],[["regex"],["result",["regex","error"]],["error"]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",17,[[["str"],["self"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",17,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",17,[[["str"],["self"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the…",17,[[["str"],["self"]],[["option",["captures"]],["captures"]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",17,[[["str"],["self"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",17,[[["str"],["self"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",17,[[["str"],["self"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",17,[[["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",17,[[["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",17,[[["usize"],["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,"shortest_match","","Returns the end location of a match in the text given.",17,[[["str"],["self"]],[["usize"],["option",["usize"]]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",17,[[["str"],["self"],["usize"]],[["usize"],["option",["usize"]]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",17,[[["str"],["self"],["usize"]],["bool"]]],[11,"find_at","","Returns the same as find, but starts the search at the…",17,[[["str"],["self"],["usize"]],[["option",["match"]],["match"]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",17,[[["str"],["self"],["capturelocations"]],[["option",["match"]],["match"]]]],[11,"captures_read_at","","Returns the same as captures, but starts the search at the…",17,[[["usize"],["capturelocations"],["str"],["self"]],[["option",["match"]],["match"]]]],[11,"as_str","","Returns the original string of this regex.",17,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",17,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",17,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",17,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",18,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",18,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",19,[[["self"],["usize"]],[["option",["match"]],["match"]]]],[11,"name","","Returns the match for the capture group named `name`. If…",19,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",19,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",19,[[["str"],["string"],["self"]]]],[11,"len","","Returns the number of captured groups.",19,[[["self"]],["usize"]]],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",20,[[["captures"],["self"],["string"]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","regex::bytes","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"into_iter","","",34,[[],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"into_iter","","",35,[[],["i"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"replace_append","","",36,[[["captures"],["self"],["vec"]]]],[11,"no_expansion","","",36,[[["self"]],[["cow"],["option",["cow"]]]]],[11,"replace_append","","",2,[[["captures"],["self"],["vec"]]]],[11,"no_expansion","","",2,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"replace_append","regex","",26,[[["captures"],["self"],["string"]]]],[11,"no_expansion","","",26,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"replace_append","","",0,[[["captures"],["self"],["string"]]]],[11,"no_expansion","","",0,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"next_back","","",21,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_back","","",22,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_back","regex::bytes","",37,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_back","","",38,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"into_iter","regex","",13,[[]]],[11,"into_iter","regex::bytes","",15,[[]]],[11,"next","","",30,[[["self"]],[["match"],["option",["match"]]]]],[11,"next","","",31,[[["self"]],[["option",["captures"]],["captures"]]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"next","","",34,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,"size_hint","","",34,[[["self"]]]],[11,"next","","",35,[[["self"]],[["option",["option"]],["option",["match"]]]]],[11,"next","regex","",21,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",22,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",22,[[["self"]]]],[11,"next","regex::bytes","",37,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",37,[[["self"]]]],[11,"next","","",38,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",38,[[["self"]]]],[11,"next","regex","",24,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,"size_hint","","",24,[[["self"]]]],[11,"next","","",27,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",28,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",29,[[["self"]],[["option",["match"]],["option",["option"]]]]],[11,"next","","",23,[[["self"]],[["option",["captures"]],["captures"]]]],[11,"next","","",25,[[["self"]],[["option",["match"]],["match"]]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"clone","regex::bytes","",8,[[["self"]],["match"]]],[11,"clone","","",9,[[["self"]],["regex"]]],[11,"clone","","",10,[[["self"]],["capturelocations"]]],[11,"clone","regex","",12,[[["self"]],["regexset"]]],[11,"clone","","",13,[[["self"]],["setmatches"]]],[11,"clone","","",22,[[["self"]],["setmatchesiter"]]],[11,"clone","regex::bytes","",14,[[["self"]],["regexset"]]],[11,"clone","","",15,[[["self"]],["setmatches"]]],[11,"clone","","",38,[[["self"]],["setmatchesiter"]]],[11,"clone","regex","",16,[[["self"]],["match"]]],[11,"clone","","",17,[[["self"]],["regex"]]],[11,"clone","","",18,[[["self"]],["capturelocations"]]],[11,"eq","","",1,[[["error"],["self"]],["bool"]]],[11,"ne","","",1,[[["error"],["self"]],["bool"]]],[11,"eq","regex::bytes","",8,[[["match"],["self"]],["bool"]]],[11,"ne","","",8,[[["match"],["self"]],["bool"]]],[11,"eq","regex","",16,[[["self"],["match"]],["bool"]]],[11,"ne","","",16,[[["self"],["match"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","Shows the original regular expression.",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","Shows the original regular expression.",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","Shows the original regular expression.",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","Shows the original regular expression.",17,[[["formatter"],["self"]],["result"]]],[11,"index","regex::bytes","",11,[[["self"],["usize"]]]],[11,"index","","",11,[[["str"],["self"]]]],[11,"index","regex","",19,[[["self"],["usize"]],["str"]]],[11,"index","","",19,[[["str"],["self"]],["str"]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",9,[[["str"]],[["regex"],["error"],["result",["regex","error"]]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",17,[[["str"]],[["regex"],["result",["regex","error"]],["error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[8,"Replacer"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"CaptureMatches"],[3,"CaptureNames"],[3,"Matches"],[3,"ReplacerRef"],[3,"Split"],[3,"SplitN"],[3,"SubCaptureMatches"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"]]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a robust regular expression parser.","i":[[3,"Parser","regex_syntax","A convenience parser for regular expressions.",null,null],[3,"ParserBuilder","","A builder for a regular expression parser.",null,null],[3,"UnicodeWordError","","An error that occurs when the Unicode-aware `\\w` class is…",null,null],[4,"Error","","This error type encompasses any error that can be returned…",null,null],[13,"Parse","","An error that occurred while translating concrete syntax…",0,null],[13,"Translate","","An error that occurred while translating abstract syntax…",0,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[["str"]],["string"]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the…",null,[[["str"],["string"]]]],[5,"is_meta_character","","Returns true if the give character has significance in a…",null,[[["char"]],["bool"]]],[5,"is_word_character","","Returns true if and only if the given character is a…",null,[[["char"]],["bool"]]],[5,"try_is_word_character","","Returns true if and only if the given character is a…",null,[[["char"]],[["unicodeworderror"],["result",["bool","unicodeworderror"]],["bool"]]]],[5,"is_word_byte","","Returns true if and only if the given character is an…",null,[[["u8"]],["bool"]]],[0,"ast","","Defines an abstract syntax for regular expressions.",null,null],[3,"Error","regex_syntax::ast","An error that occurred while parsing a regular expression…",null,null],[3,"Span","","Span represents the position information of a single AST…",null,null],[12,"start","","The start byte offset.",1,null],[12,"end","","The end byte offset.",1,null],[3,"Position","","A single position in a regular expression.",null,null],[12,"offset","","The absolute offset of this position, starting at `0` from…",2,null],[12,"line","","The line number, starting at `1`.",2,null],[12,"column","","The approximate column number, starting at `1`.",2,null],[3,"WithComments","","An abstract syntax tree for a singular expression along…",null,null],[12,"ast","","The actual ast.",3,null],[12,"comments","","All comments found in the original regular expression.",3,null],[3,"Comment","","A comment from a regular expression with an associated span.",null,null],[12,"span","","The span of this comment, including the beginning `#` and…",4,null],[12,"comment","","The comment text, starting with the first character…",4,null],[3,"Alternation","","An alternation of regular expressions.",null,null],[12,"span","","The span of this alternation.",5,null],[12,"asts","","The alternate regular expressions.",5,null],[3,"Concat","","A concatenation of regular expressions.",null,null],[12,"span","","The span of this concatenation.",6,null],[12,"asts","","The concatenation regular expressions.",6,null],[3,"Literal","","A single literal expression.",null,null],[12,"span","","The span of this literal.",7,null],[12,"kind","","The kind of this literal.",7,null],[12,"c","","The Unicode scalar value corresponding to this literal.",7,null],[3,"ClassPerl","","A Perl character class.",null,null],[12,"span","","The span of this class.",8,null],[12,"kind","","The kind of Perl class.",8,null],[12,"negated","","Whether the class is negated or not. e.g., `\\d` is not…",8,null],[3,"ClassAscii","","An ASCII character class.",null,null],[12,"span","","The span of this class.",9,null],[12,"kind","","The kind of ASCII class.",9,null],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,null],[3,"ClassUnicode","","A Unicode character class.",null,null],[12,"span","","The span of this class.",10,null],[12,"negated","","Whether this class is negated or not.",10,null],[12,"kind","","The kind of Unicode class.",10,null],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",null,null],[12,"span","","The span of this class.",11,null],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not…",11,null],[12,"kind","","The type of this set. A set is either a normal union of…",11,null],[3,"ClassSetRange","","A single character class range in a set.",null,null],[12,"span","","The span of this range.",12,null],[12,"start","","The start of this range.",12,null],[12,"end","","The end of this range.",12,null],[3,"ClassSetUnion","","A union of items inside a character class set.",null,null],[12,"span","","The span of the items in this operation. e.g., the…",13,null],[12,"items","","The sequence of items that make up this union.",13,null],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",null,null],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in…",14,null],[12,"kind","","The type of this set operation.",14,null],[12,"lhs","","The left hand side of the operation.",14,null],[12,"rhs","","The right hand side of the operation.",14,null],[3,"Assertion","","A single zero-width assertion.",null,null],[12,"span","","The span of this assertion.",15,null],[12,"kind","","The assertion kind, e.g., `\\b` or `^`.",15,null],[3,"Repetition","","A repetition operation applied to a regular expression.",null,null],[12,"span","","The span of this operation.",16,null],[12,"op","","The actual operation.",16,null],[12,"greedy","","Whether this operation was applied greedily or not.",16,null],[12,"ast","","The regular expression under repetition.",16,null],[3,"RepetitionOp","","The repetition operator itself.",null,null],[12,"span","","The span of this operator. This includes things like `+`,…",17,null],[12,"kind","","The type of operation.",17,null],[3,"Group","","A grouped regular expression.",null,null],[12,"span","","The span of this group.",18,null],[12,"kind","","The kind of this group.",18,null],[12,"ast","","The regular expression in this group.",18,null],[3,"CaptureName","","A capture name.",null,null],[12,"span","","The span of this capture name.",19,null],[12,"name","","The capture name.",19,null],[12,"index","","The capture index.",19,null],[3,"SetFlags","","A group of flags that is not applied to a particular…",null,null],[12,"span","","The span of these flags, including the grouping parentheses.",20,null],[12,"flags","","The actual sequence of flags.",20,null],[3,"Flags","","A group of flags.",null,null],[12,"span","","The span of this group of flags.",21,null],[12,"items","","A sequence of flag items. Each item is either a flag or a…",21,null],[3,"FlagsItem","","A single item in a group of flags.",null,null],[12,"span","","The span of this item.",22,null],[12,"kind","","The kind of this item.",22,null],[4,"ErrorKind","","The type of an error that occurred while building an AST.",null,null],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",23,null],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class…",23,null],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid…",23,null],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class.…",23,null],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",23,null],[13,"DecimalEmpty","","Note that this error variant is no longer used. Namely, a…",23,null],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",23,null],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",23,null],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode…",23,null],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",23,null],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",23,null],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",23,null],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",23,null],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position…",24,null],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error…",25,null],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",23,null],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",23,null],[13,"GroupNameDuplicate","","A duplicate capture name was found.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture…",26,null],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",23,null],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name.…",23,null],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",23,null],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",23,null],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",23,null],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the…",23,null],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is…",23,null],[13,"RepetitionCountDecimalEmpty","","An opening `{` was not followed by a valid decimal value.…",23,null],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",23,null],[13,"RepetitionMissing","","A repetition operator was applied to a missing…",23,null],[13,"UnicodeClassInvalid","","The Unicode class is not valid. This typically occurs when…",23,null],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced…",23,null],[13,"UnsupportedLookAround","","When syntax similar to PCRE's look-around is used, this…",23,null],[4,"Ast","","An abstract syntax tree for a single regular expression.",null,null],[13,"Empty","","An empty regex that matches everything.",27,null],[13,"Flags","","A set of flags, e.g., `(?is)`.",27,null],[13,"Literal","","A single character literal, which includes escape sequences.",27,null],[13,"Dot","","The \"any character\" class.",27,null],[13,"Assertion","","A single zero-width assertion.",27,null],[13,"Class","","A single character class. This includes all forms of…",27,null],[13,"Repetition","","A repetition operator applied to an arbitrary regular…",27,null],[13,"Group","","A grouped regular expression.",27,null],[13,"Alternation","","An alternation of regular expressions.",27,null],[13,"Concat","","A concatenation of regular expressions.",27,null],[4,"LiteralKind","","The kind of a single literal expression.",null,null],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",28,null],[13,"Punctuation","","The literal is written as an escape because it is…",28,null],[13,"Octal","","The literal is written as an octal escape, e.g., `\\141`.",28,null],[13,"HexFixed","","The literal is written as a hex code with a fixed number…",28,null],[13,"HexBrace","","The literal is written as a hex code with a bracketed…",28,null],[13,"Special","","The literal is written as a specially recognized escape,…",28,null],[4,"SpecialLiteralKind","","The type of a special literal.",null,null],[13,"Bell","","Bell, spelled `\\a` (`\\x07`).",29,null],[13,"FormFeed","","Form feed, spelled `\\f` (`\\x0C`).",29,null],[13,"Tab","","Tab, spelled `\\t` (`\\x09`).",29,null],[13,"LineFeed","","Line feed, spelled `\\n` (`\\x0A`).",29,null],[13,"CarriageReturn","","Carriage return, spelled `\\r` (`\\x0D`).",29,null],[13,"VerticalTab","","Vertical tab, spelled `\\v` (`\\x0B`).",29,null],[13,"Space","","Space, spelled `\\ ` (`\\x20`). Note that this can only…",29,null],[4,"HexLiteralKind","","The type of a Unicode hex literal.",null,null],[13,"X","","A `\\x` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeShort","","A `\\u` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeLong","","A `\\U` prefix. When used without brackets, this form is…",30,null],[4,"Class","","A single character class expression.",null,null],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",31,null],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",31,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",31,null],[4,"ClassPerlKind","","The available Perl character classes.",null,null],[13,"Digit","","Decimal numbers.",32,null],[13,"Space","","Whitespace.",32,null],[13,"Word","","Word characters.",32,null],[4,"ClassAsciiKind","","The available ASCII character classes.",null,null],[13,"Alnum","","`[0-9A-Za-z]`",33,null],[13,"Alpha","","`[A-Za-z]`",33,null],[13,"Ascii","","`[\\x00-\\x7F]`",33,null],[13,"Blank","","`[ \\t]`",33,null],[13,"Cntrl","","`[\\x00-\\x1F\\x7F]`",33,null],[13,"Digit","","`[0-9]`",33,null],[13,"Graph","","`[!-~]`",33,null],[13,"Lower","","`[a-z]`",33,null],[13,"Print","","`[ -~]`",33,null],[13,"Punct","","`[!-/:-@\\[-`{-~]`",33,null],[13,"Space","","`[\\t\\n\\v\\f\\r ]`",33,null],[13,"Upper","","`[A-Z]`",33,null],[13,"Word","","`[0-9A-Za-z_]`",33,null],[13,"Xdigit","","`[0-9A-Fa-f]`",33,null],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",null,null],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\pN`.",34,null],[13,"Named","","A binary property, general category or script. The string…",34,null],[13,"NamedValue","","A property name and an associated value.",34,null],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",35,null],[12,"name","","The property name (which may be empty).",35,null],[12,"value","","The property value (which may be empty).",35,null],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",null,null],[13,"Equal","","A property set to a specific value, e.g.,…",36,null],[13,"Colon","","A property set to a specific value using a colon, e.g.,…",36,null],[13,"NotEqual","","A property that isn't a particular value, e.g.,…",36,null],[4,"ClassSet","","A character class set.",null,null],[13,"Item","","An item, which can be a single literal, range, nested…",37,null],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",37,null],[4,"ClassSetItem","","A single component of a character class set.",null,null],[13,"Empty","","An empty item.",38,null],[13,"Literal","","A single literal.",38,null],[13,"Range","","A range between two literals.",38,null],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",38,null],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",38,null],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",38,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",38,null],[13,"Union","","A union of items.",38,null],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",null,null],[13,"Intersection","","The intersection of two sets, e.g., `\\pN&&[a-z]`.",39,null],[13,"Difference","","The difference of two sets, e.g., `\\pN--[0-9]`.",39,null],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric…",39,null],[4,"AssertionKind","","An assertion kind.",null,null],[13,"StartLine","","`^`",40,null],[13,"EndLine","","`$`",40,null],[13,"StartText","","`\\A`",40,null],[13,"EndText","","`\\z`",40,null],[13,"WordBoundary","","`\\b`",40,null],[13,"NotWordBoundary","","`\\B`",40,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","`?`",41,null],[13,"ZeroOrMore","","`*`",41,null],[13,"OneOrMore","","`+`",41,null],[13,"Range","","`{m,n}`",41,null],[4,"RepetitionRange","","A range repetition operator.",null,null],[13,"Exactly","","`{m}`",42,null],[13,"AtLeast","","`{m,}`",42,null],[13,"Bounded","","`{m,n}`",42,null],[4,"GroupKind","","The kind of a group.",null,null],[13,"CaptureIndex","","`(a)`",43,null],[13,"CaptureName","","`(?P<name>a)`",43,null],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",43,null],[4,"FlagsItemKind","","The kind of an item in a group of flags.",null,null],[13,"Negation","","A negation operator applied to all subsequent flags in the…",44,null],[13,"Flag","","A single flag in a group.",44,null],[4,"Flag","","A single flag.",null,null],[13,"CaseInsensitive","","`i`",45,null],[13,"MultiLine","","`m`",45,null],[13,"DotMatchesNewLine","","`s`",45,null],[13,"SwapGreed","","`U`",45,null],[13,"Unicode","","`u`",45,null],[13,"IgnoreWhitespace","","`x`",45,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["visitor"],["ast"]],["result"]]],[0,"parse","","This module provides a regular expression parser.",null,null],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",null,null],[3,"Parser","","A regular expression parser.",null,null],[11,"new","","Create a new parser builder with a default configuration.",46,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",46,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",46,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",46,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",46,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",47,[[],["parser"]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",47,[[["str"],["self"]],[["error"],["result",["ast","error"]],["ast"]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax…",47,[[["str"],["self"]],[["error"],["result",["withcomments","error"]],["withcomments"]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",null,null],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",null,null],[11,"new","","Create a new printer.",48,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",48,[[["self"],["write"],["ast"]],["result"]]],[8,"Visitor","regex_syntax::ast","A trait for visiting an abstract syntax tree (AST) in…",null,null],[16,"Output","","The result of visiting an AST.",49,null],[16,"Err","","An error that visiting an AST might return.",49,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",49,[[],["result"]]],[11,"start","","This method is called before beginning traversal of the AST.",49,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["self"],["ast"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["self"],["ast"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"kind","","Return the type of this error.",50,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",50,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",50,[[["self"]],["span"]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some…",50,[[["self"]],[["span"],["option",["span"]]]]],[11,"new","","Create a new span with the given positions.",1,[[["position"]],["span"]]],[11,"splat","","Create a new span using the given position as the start…",1,[[["position"]],["span"]]],[11,"with_start","","Create a new span by replacing the starting the position…",1,[[["position"]],["span"]]],[11,"with_end","","Create a new span by replacing the ending the position…",1,[[["position"]],["span"]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single…",1,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if and only if this span is empty. That is,…",1,[[["self"]],["bool"]]],[11,"new","","Create a new position with the given information.",2,[[["usize"]],["position"]]],[11,"span","","Return the span of this abstract syntax tree.",27,[[["self"]],["span"]]],[11,"is_empty","","Return true if and only if this Ast is empty.",27,[[["self"]],["bool"]]],[11,"into_ast","","Return this alternation as an AST.",5,[[],["ast"]]],[11,"into_ast","","Return this concatenation as an AST.",6,[[],["ast"]]],[11,"byte","","If this literal was written as a `\\x` hex escape, then…",7,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"digits","","The number of digits that must be used with this literal…",30,[[["self"]],["u32"]]],[11,"span","","Return the span of this character class.",31,[[["self"]],["span"]]],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the…",33,[[["str"]],[["option",["classasciikind"]],["classasciikind"]]]],[11,"is_negated","","Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,"is_equal","","Whether the op is an equality op or not.",36,[[["self"]],["bool"]]],[11,"union","","Build a set from a union.",37,[[["classsetunion"]],["classset"]]],[11,"span","","Return the span of this character class set.",37,[[["self"]],["span"]]],[11,"span","","Return the span of this character class set item.",38,[[["self"]],["span"]]],[11,"is_valid","","Returns true if and only if this character class range is…",12,[[["self"]],["bool"]]],[11,"push","","Push a new item in this union.",13,[[["classsetitem"],["self"]]]],[11,"into_item","","Return this union as a character class set item.",13,[[],["classsetitem"]]],[11,"is_valid","","Returns true if and only if this repetition range is valid.",42,[[["self"]],["bool"]]],[11,"flags","","If this group is non-capturing, then this returns the…",18,[[["self"]],[["option",["flags"]],["flags"]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index","","Returns the capture index of this group, if this is a…",18,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"add_item","","Add the given item to this sequence of flags.",21,[[["self"],["flagsitem"]],[["usize"],["option",["usize"]]]]],[11,"flag_state","","Returns the state of the given flag in this set.",21,[[["self"],["flag"]],[["bool"],["option",["bool"]]]]],[11,"is_negation","","Returns true if and only if this item is a negation…",44,[[["self"]],["bool"]]],[0,"hir","regex_syntax","Defines a high-level intermediate representation for…",null,null],[3,"CaseFoldError","regex_syntax::hir","An error that occurs when Unicode-aware simple case…",null,null],[3,"Error","","An error that can occur while translating an `Ast` to a…",null,null],[3,"Hir","","A high-level intermediate representation (HIR) for a…",null,null],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",null,null],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",null,null],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar…",null,null],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where…",null,null],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",null,null],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",null,null],[3,"Group","","The high-level intermediate representation for a group.",null,null],[12,"kind","","The kind of this group. If it is a capturing group, then…",51,null],[12,"hir","","The expression inside the capturing group, which may be…",51,null],[3,"Repetition","","The high-level intermediate representation of a repetition…",null,null],[12,"kind","","The kind of this repetition operator.",52,null],[12,"greedy","","Whether this repetition operator is greedy or not. A…",52,null],[12,"hir","","The expression being repeated.",52,null],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",null,null],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when…",53,null],[13,"InvalidUtf8","","This error occurs when translating a pattern that could…",53,null],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name…",53,null],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value…",53,null],[13,"UnicodePerlClassNotFound","","This occurs when a Unicode-aware Perl character class…",53,null],[13,"UnicodeCaseUnavailable","","This occurs when the Unicode simple case mapping tables…",53,null],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a…",53,null],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",null,null],[13,"Empty","","The empty regular expression, which matches everything,…",54,null],[13,"Literal","","A single literal character that matches exactly this…",54,null],[13,"Class","","A single character class that matches any of the…",54,null],[13,"Anchor","","An anchor assertion. An anchor assertion match always has…",54,null],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode…",54,null],[13,"Repetition","","A repetition operation applied to a child expression.",54,null],[13,"Group","","A possibly capturing group, which contains a child…",54,null],[13,"Concat","","A concatenation of expressions. A concatenation always has…",54,null],[13,"Alternation","","An alternation of expressions. An alternation always has…",54,null],[4,"Literal","","The high-level intermediate representation of a literal.",null,null],[13,"Unicode","","A single character represented by a Unicode scalar value.",55,null],[13,"Byte","","A single character represented by an arbitrary byte.",55,null],[4,"Class","","The high-level intermediate representation of a character…",null,null],[13,"Unicode","","A set of characters represented by Unicode scalar values.",56,null],[13,"Bytes","","A set of characters represented by arbitrary bytes (one…",56,null],[4,"Anchor","","The high-level intermediate representation for an anchor…",null,null],[13,"StartLine","","Match the beginning of a line or the beginning of text.…",57,null],[13,"EndLine","","Match the end of a line or the end of text. Specifically,…",57,null],[13,"StartText","","Match the beginning of text. Specifically, this matches at…",57,null],[13,"EndText","","Match the end of text. Specifically, this matches at the…",57,null],[4,"WordBoundary","","The high-level intermediate representation for a…",null,null],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches…",58,null],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",58,null],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a…",58,null],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",58,null],[4,"GroupKind","","The kind of group.",null,null],[13,"CaptureIndex","","A normal unnamed capturing group.",59,null],[13,"CaptureName","","A named capturing group.",59,null],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",60,null],[12,"index","","The capture index of the group.",60,null],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",59,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",61,null],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",61,null],[13,"OneOrMore","","Matches a sub-expression one or more times.",61,null],[13,"Range","","Matches a sub-expression within a bounded range of times.",61,null],[4,"RepetitionRange","","The kind of a counted repetition operator.",null,null],[13,"Exactly","","Matches a sub-expression exactly this many times.",62,null],[13,"AtLeast","","Matches a sub-expression at least this many times.",62,null],[13,"Bounded","","Matches a sub-expression at least `m` times and at most…",62,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["hir"],["visitor"]],["result"]]],[0,"literal","","Provides routines for extracting literal prefixes and…",null,null],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular…",null,null],[3,"Literal","","A single member of a set of literals extracted from a…",null,null],[11,"empty","","Returns a new empty set of literals using default limits.",63,[[],["literals"]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the given…",63,[[["hir"]],["literals"]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the given…",63,[[["hir"]],["literals"]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",63,[[["self"]],["usize"]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",63,[[["self"],["usize"]],["literals"]]],[11,"limit_class","","Get the character class size limit for this set.",63,[[["self"]],["usize"]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",63,[[["self"],["usize"]],["literals"]]],[11,"literals","","Returns the set of literals as a slice. Its order is…",63,[[["self"]]]],[11,"min_len","","Returns the length of the smallest literal.",63,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"all_complete","","Returns true if all members in this set are complete.",63,[[["self"]],["bool"]]],[11,"any_complete","","Returns true if any member in this set is complete.",63,[[["self"]],["bool"]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",63,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if this set is empty or if all of its members…",63,[[["self"]],["bool"]]],[11,"to_empty","","Returns a new empty set of literals using this set's limits.",63,[[["self"]],["literals"]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this…",63,[[["self"]]]],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this…",63,[[["self"]]]],[11,"trim_suffix","","Returns a new set of literals with the given number of…",63,[[["self"],["usize"]],[["option",["literals"]],["literals"]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that…",63,[[["self"]],["literals"]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that…",63,[[["self"]],["literals"]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",63,[[["self"],["hir"]],["bool"]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",63,[[["self"],["hir"]],["bool"]]],[11,"union","","Unions this set with another set.",63,[[["literals"],["self"]],["bool"]]],[11,"cross_product","","Extends this set with another set.",63,[[["self"],["literals"]],["bool"]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",63,[[["self"]],["bool"]]],[11,"add","","Adds the given literal to this set.",63,[[["literal"],["self"]],["bool"]]],[11,"add_char_class","","Extends each literal in this set with the character class…",63,[[["self"],["classunicode"]],["bool"]]],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",63,[[["classbytes"],["self"]],["bool"]]],[11,"cut","","Cuts every member of this set. When a member is cut, it…",63,[[["self"]]]],[11,"reverse","","Reverses all members in place.",63,[[["self"]]]],[11,"clear","","Clears this set of all members.",63,[[["self"]]]],[11,"new","","Returns a new complete literal with the bytes given.",64,[[["vec",["u8"]],["u8"]],["literal"]]],[11,"empty","","Returns a new complete empty literal.",64,[[],["literal"]]],[11,"is_cut","","Returns true if this literal was \"cut.\"",64,[[["self"]],["bool"]]],[11,"cut","","Cuts this literal.",64,[[["self"]]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",null,null],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression's high-level…",null,null],[11,"new","","Create a new printer.",65,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",65,[[["self"],["hir"],["write"]],["result"]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",null,null],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",null,null],[3,"Translator","","A translator maps abstract syntax to a high level…",null,null],[11,"new","","Create a new translator builder with a default c…",66,[[],["translatorbuilder"]]],[11,"build","","Build a translator using the current configuration.",66,[[["self"]],["translator"]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag (`U`) by default.",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"new","","Create a new translator using the default configuration.",67,[[],["translator"]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a high…",67,[[["str"],["self"],["ast"]],[["result",["hir","error"]],["hir"],["error"]]]],[8,"Visitor","regex_syntax::hir","A trait for visiting the high-level IR (HIR) in depth…",null,null],[16,"Output","","The result of visiting an HIR.",68,null],[16,"Err","","An error that visiting an HIR might return.",68,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",68,[[],["result"]]],[11,"start","","This method is called before beginning traversal of the HIR.",68,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["self"],["hir"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["self"],["hir"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[["self"]],["result"]]],[11,"kind","","Return the type of this error.",69,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",69,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",69,[[["self"]],["span"]]],[11,"kind","","Returns a reference to the underlying HIR kind.",70,[[["self"]],["hirkind"]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its…",70,[[],["hirkind"]]],[11,"empty","","Returns an empty HIR expression.",70,[[],["hir"]]],[11,"literal","","Creates a literal HIR expression.",70,[[["literal"]],["hir"]]],[11,"class","","Creates a class HIR expression.",70,[[["class"]],["hir"]]],[11,"anchor","","Creates an anchor assertion HIR expression.",70,[[["anchor"]],["hir"]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",70,[[["wordboundary"]],["hir"]]],[11,"repetition","","Creates a repetition HIR expression.",70,[[["repetition"]],["hir"]]],[11,"group","","Creates a group HIR expression.",70,[[["group"]],["hir"]]],[11,"concat","","Returns the concatenation of the given expressions.",70,[[["vec",["hir"]],["hir"]],["hir"]]],[11,"alternation","","Returns the alternation of the given expressions.",70,[[["vec",["hir"]],["hir"]],["hir"]]],[11,"dot","","Build an HIR expression for `.`.",70,[[["bool"]],["hir"]]],[11,"any","","Build an HIR expression for `(?s).`.",70,[[["bool"]],["hir"]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match…",70,[[["self"]],["bool"]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is…",70,[[["self"]],["bool"]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_line_anchored_start","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_line_anchored_end","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any…",70,[[["self"]],["bool"]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any…",70,[[["self"]],["bool"]]],[11,"is_match_empty","","Return true if and only if the empty string is part of the…",70,[[["self"]],["bool"]]],[11,"is_literal","","Return true if and only if this HIR is a simple literal.…",70,[[["self"]],["bool"]]],[11,"is_alternation_literal","","Return true if and only if this HIR is either a simple…",70,[[["self"]],["bool"]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular…",54,[[["self"]],["bool"]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including…",54,[[["self"]],["bool"]]],[11,"is_unicode","","Returns true if and only if this literal corresponds to a…",55,[[["self"]],["bool"]]],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class,…",56,[[["self"]]]],[11,"negate","","Negate this character class in place.",56,[[["self"]]]],[11,"is_always_utf8","","Returns true if and only if this character class will only…",56,[[["self"]],["bool"]]],[11,"new","","Create a new class from a sequence of ranges.",71,[[["i"]],["classunicode"]]],[11,"empty","","Create a new class with no ranges.",71,[[],["classunicode"]]],[11,"push","","Add a new range to this set.",71,[[["self"],["classunicoderange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",71,[[["self"]],["classunicodeiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",71,[[["self"]]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",71,[[["self"]]]],[11,"try_case_fold_simple","","Expand this character class such that it contains all case…",71,[[["self"]],[["result",["casefolderror"]],["casefolderror"]]]],[11,"negate","","Negate this character class.",71,[[["self"]]]],[11,"union","","Union this character class with the given character class,…",71,[[["self"],["classunicode"]]]],[11,"intersect","","Intersect this character class with the given character…",71,[[["self"],["classunicode"]]]],[11,"difference","","Subtract the given character class from this character…",71,[[["self"],["classunicode"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character…",71,[[["self"],["classunicode"]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",71,[[["self"]],["bool"]]],[11,"new","","Create a new Unicode scalar value range for a character…",72,[[["char"]],["classunicoderange"]]],[11,"start","","Return the start of this range.",72,[[["self"]],["char"]]],[11,"end","","Return the end of this range.",72,[[["self"]],["char"]]],[11,"new","","Create a new class from a sequence of ranges.",73,[[["i"]],["classbytes"]]],[11,"empty","","Create a new class with no ranges.",73,[[],["classbytes"]]],[11,"push","","Add a new range to this set.",73,[[["self"],["classbytesrange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",73,[[["self"]],["classbytesiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",73,[[["self"]]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",73,[[["self"]]]],[11,"negate","","Negate this byte class.",73,[[["self"]]]],[11,"union","","Union this byte class with the given byte class, in place.",73,[[["self"],["classbytes"]]]],[11,"intersect","","Intersect this byte class with the given byte class, in…",73,[[["self"],["classbytes"]]]],[11,"difference","","Subtract the given byte class from this byte class, in…",73,[[["self"],["classbytes"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte…",73,[[["self"],["classbytes"]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",73,[[["self"]],["bool"]]],[11,"new","","Create a new byte range for a character class.",74,[[["u8"]],["classbytesrange"]]],[11,"start","","Return the start of this range.",74,[[["self"]],["u8"]]],[11,"end","","Return the end of this range.",74,[[["self"]],["u8"]]],[11,"is_negated","","Returns true if and only if this word boundary assertion…",58,[[["self"]],["bool"]]],[11,"is_match_empty","","Returns true if and only if this repetition operator makes…",52,[[["self"]],["bool"]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",75,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",75,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",75,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a…",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag by…",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",76,[[],["parser"]]],[11,"parse","","Parse the regular expression into a high level…",76,[[["str"],["self"]],[["result",["hir"]],["hir"]]]],[0,"utf8","","Converts ranges of Unicode scalar values to equivalent…",null,null],[3,"Utf8Range","regex_syntax::utf8","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",77,null],[12,"end","","End of byte range (inclusive).",77,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",78,null],[13,"Two","","Two successive byte ranges.",78,null],[13,"Three","","Three successive byte ranges.",78,null],[13,"Four","","Four successive byte ranges.",78,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",78,[[["self"]]]],[11,"len","","Returns the number of byte ranges in this sequence.",78,[[["self"]],["usize"]]],[11,"reverse","","Reverses the ranges in this sequence.",78,[[["self"]]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches…",78,[[["self"]],["bool"]]],[11,"matches","","Returns true if and only if the given byte is in this range.",77,[[["self"],["u8"]],["bool"]]],[11,"new","","Create a new iterator over UTF-8 byte ranges for the…",79,[[["char"]],["self"]]],[6,"Result","regex_syntax","A type alias for dealing with errors returned by this crate.",null,null],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_string","","",80,[[["self"]],["string"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::parse","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::print","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_string","","",81,[[["self"]],["string"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"to_string","","",70,[[["self"]],["string"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"into_iter","","",82,[[],["i"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"into_iter","","",83,[[],["i"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::literal","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::print","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::translate","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","regex_syntax::utf8","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"into_iter","","",79,[[],["i"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"drop","regex_syntax::ast","",27,[[["self"]]]],[11,"drop","","",37,[[["self"]]]],[11,"drop","regex_syntax::hir","",70,[[["self"]]]],[11,"as_ref","regex_syntax::hir::literal","",64,[[["self"]]]],[11,"from","regex_syntax","",0,[[["error"]],["error"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"next","regex_syntax::hir","",82,[[["self"]],[["option",["classunicoderange"]],["classunicoderange"]]]],[11,"next","","",83,[[["self"]],[["option",["classbytesrange"]],["classbytesrange"]]]],[11,"next","regex_syntax::utf8","",79,[[["self"]],["option"]]],[11,"clone","regex_syntax::ast::parse","",46,[[["self"]],["parserbuilder"]]],[11,"clone","","",47,[[["self"]],["parser"]]],[11,"clone","regex_syntax::ast","",50,[[["self"]],["error"]]],[11,"clone","","",23,[[["self"]],["errorkind"]]],[11,"clone","","",1,[[["self"]],["span"]]],[11,"clone","","",2,[[["self"]],["position"]]],[11,"clone","","",3,[[["self"]],["withcomments"]]],[11,"clone","","",4,[[["self"]],["comment"]]],[11,"clone","","",27,[[["self"]],["ast"]]],[11,"clone","","",5,[[["self"]],["alternation"]]],[11,"clone","","",6,[[["self"]],["concat"]]],[11,"clone","","",7,[[["self"]],["literal"]]],[11,"clone","","",28,[[["self"]],["literalkind"]]],[11,"clone","","",29,[[["self"]],["specialliteralkind"]]],[11,"clone","","",30,[[["self"]],["hexliteralkind"]]],[11,"clone","","",31,[[["self"]],["class"]]],[11,"clone","","",8,[[["self"]],["classperl"]]],[11,"clone","","",32,[[["self"]],["classperlkind"]]],[11,"clone","","",9,[[["self"]],["classascii"]]],[11,"clone","","",33,[[["self"]],["classasciikind"]]],[11,"clone","","",10,[[["self"]],["classunicode"]]],[11,"clone","","",34,[[["self"]],["classunicodekind"]]],[11,"clone","","",36,[[["self"]],["classunicodeopkind"]]],[11,"clone","","",11,[[["self"]],["classbracketed"]]],[11,"clone","","",37,[[["self"]],["classset"]]],[11,"clone","","",38,[[["self"]],["classsetitem"]]],[11,"clone","","",12,[[["self"]],["classsetrange"]]],[11,"clone","","",13,[[["self"]],["classsetunion"]]],[11,"clone","","",14,[[["self"]],["classsetbinaryop"]]],[11,"clone","","",39,[[["self"]],["classsetbinaryopkind"]]],[11,"clone","","",15,[[["self"]],["assertion"]]],[11,"clone","","",40,[[["self"]],["assertionkind"]]],[11,"clone","","",16,[[["self"]],["repetition"]]],[11,"clone","","",17,[[["self"]],["repetitionop"]]],[11,"clone","","",41,[[["self"]],["repetitionkind"]]],[11,"clone","","",42,[[["self"]],["repetitionrange"]]],[11,"clone","","",18,[[["self"]],["group"]]],[11,"clone","","",43,[[["self"]],["groupkind"]]],[11,"clone","","",19,[[["self"]],["capturename"]]],[11,"clone","","",20,[[["self"]],["setflags"]]],[11,"clone","","",21,[[["self"]],["flags"]]],[11,"clone","","",22,[[["self"]],["flagsitem"]]],[11,"clone","","",44,[[["self"]],["flagsitemkind"]]],[11,"clone","","",45,[[["self"]],["flag"]]],[11,"clone","regex_syntax","",0,[[["self"]],["error"]]],[11,"clone","regex_syntax::hir::literal","",63,[[["self"]],["literals"]]],[11,"clone","","",64,[[["self"]],["literal"]]],[11,"clone","regex_syntax::hir::translate","",66,[[["self"]],["translatorbuilder"]]],[11,"clone","","",67,[[["self"]],["translator"]]],[11,"clone","regex_syntax::hir","",69,[[["self"]],["error"]]],[11,"clone","","",53,[[["self"]],["errorkind"]]],[11,"clone","","",70,[[["self"]],["hir"]]],[11,"clone","","",54,[[["self"]],["hirkind"]]],[11,"clone","","",55,[[["self"]],["literal"]]],[11,"clone","","",56,[[["self"]],["class"]]],[11,"clone","","",71,[[["self"]],["classunicode"]]],[11,"clone","","",72,[[["self"]],["classunicoderange"]]],[11,"clone","","",73,[[["self"]],["classbytes"]]],[11,"clone","","",74,[[["self"]],["classbytesrange"]]],[11,"clone","","",57,[[["self"]],["anchor"]]],[11,"clone","","",58,[[["self"]],["wordboundary"]]],[11,"clone","","",51,[[["self"]],["group"]]],[11,"clone","","",59,[[["self"]],["groupkind"]]],[11,"clone","","",52,[[["self"]],["repetition"]]],[11,"clone","","",61,[[["self"]],["repetitionkind"]]],[11,"clone","","",62,[[["self"]],["repetitionrange"]]],[11,"clone","regex_syntax","",75,[[["self"]],["parserbuilder"]]],[11,"clone","","",76,[[["self"]],["parser"]]],[11,"clone","regex_syntax::utf8","",78,[[["self"]],["utf8sequence"]]],[11,"clone","","",77,[[["self"]],["utf8range"]]],[11,"default","regex_syntax::ast::parse","",46,[[],["parserbuilder"]]],[11,"default","regex_syntax::hir::translate","",66,[[],["translatorbuilder"]]],[11,"default","regex_syntax::hir","",72,[[],["classunicoderange"]]],[11,"default","","",74,[[],["classbytesrange"]]],[11,"default","regex_syntax","",75,[[],["parserbuilder"]]],[11,"cmp","regex_syntax::ast","",1,[[["self"],["span"]],["ordering"]]],[11,"cmp","","",2,[[["position"],["self"]],["ordering"]]],[11,"cmp","regex_syntax::hir::literal","",64,[[["self"],["literal"]],["ordering"]]],[11,"cmp","regex_syntax::hir","",72,[[["self"],["classunicoderange"]],["ordering"]]],[11,"cmp","","",74,[[["self"],["classbytesrange"]],["ordering"]]],[11,"cmp","regex_syntax::utf8","",78,[[["utf8sequence"],["self"]],["ordering"]]],[11,"cmp","","",77,[[["self"],["utf8range"]],["ordering"]]],[11,"eq","regex_syntax::ast","",50,[[["error"],["self"]],["bool"]]],[11,"ne","","",50,[[["error"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",1,[[["self"],["span"]],["bool"]]],[11,"ne","","",1,[[["self"],["span"]],["bool"]]],[11,"eq","","",2,[[["position"],["self"]],["bool"]]],[11,"ne","","",2,[[["position"],["self"]],["bool"]]],[11,"eq","","",3,[[["withcomments"],["self"]],["bool"]]],[11,"ne","","",3,[[["withcomments"],["self"]],["bool"]]],[11,"eq","","",4,[[["comment"],["self"]],["bool"]]],[11,"ne","","",4,[[["comment"],["self"]],["bool"]]],[11,"eq","","",27,[[["self"],["ast"]],["bool"]]],[11,"ne","","",27,[[["self"],["ast"]],["bool"]]],[11,"eq","","",5,[[["self"],["alternation"]],["bool"]]],[11,"ne","","",5,[[["self"],["alternation"]],["bool"]]],[11,"eq","","",6,[[["concat"],["self"]],["bool"]]],[11,"ne","","",6,[[["concat"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["literal"]],["bool"]]],[11,"ne","","",7,[[["self"],["literal"]],["bool"]]],[11,"eq","","",28,[[["self"],["literalkind"]],["bool"]]],[11,"ne","","",28,[[["self"],["literalkind"]],["bool"]]],[11,"eq","","",29,[[["self"],["specialliteralkind"]],["bool"]]],[11,"eq","","",30,[[["hexliteralkind"],["self"]],["bool"]]],[11,"eq","","",31,[[["self"],["class"]],["bool"]]],[11,"ne","","",31,[[["self"],["class"]],["bool"]]],[11,"eq","","",8,[[["classperl"],["self"]],["bool"]]],[11,"ne","","",8,[[["classperl"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["classperlkind"]],["bool"]]],[11,"eq","","",9,[[["classascii"],["self"]],["bool"]]],[11,"ne","","",9,[[["classascii"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["classasciikind"]],["bool"]]],[11,"eq","","",10,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",10,[[["self"],["classunicode"]],["bool"]]],[11,"eq","","",34,[[["classunicodekind"],["self"]],["bool"]]],[11,"ne","","",34,[[["classunicodekind"],["self"]],["bool"]]],[11,"eq","","",36,[[["self"],["classunicodeopkind"]],["bool"]]],[11,"eq","","",11,[[["classbracketed"],["self"]],["bool"]]],[11,"ne","","",11,[[["classbracketed"],["self"]],["bool"]]],[11,"eq","","",37,[[["classset"],["self"]],["bool"]]],[11,"ne","","",37,[[["classset"],["self"]],["bool"]]],[11,"eq","","",38,[[["self"],["classsetitem"]],["bool"]]],[11,"ne","","",38,[[["self"],["classsetitem"]],["bool"]]],[11,"eq","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"ne","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"eq","","",13,[[["self"],["classsetunion"]],["bool"]]],[11,"ne","","",13,[[["self"],["classsetunion"]],["bool"]]],[11,"eq","","",14,[[["classsetbinaryop"],["self"]],["bool"]]],[11,"ne","","",14,[[["classsetbinaryop"],["self"]],["bool"]]],[11,"eq","","",39,[[["self"],["classsetbinaryopkind"]],["bool"]]],[11,"eq","","",15,[[["self"],["assertion"]],["bool"]]],[11,"ne","","",15,[[["self"],["assertion"]],["bool"]]],[11,"eq","","",40,[[["self"],["assertionkind"]],["bool"]]],[11,"eq","","",16,[[["repetition"],["self"]],["bool"]]],[11,"ne","","",16,[[["repetition"],["self"]],["bool"]]],[11,"eq","","",17,[[["repetitionop"],["self"]],["bool"]]],[11,"ne","","",17,[[["repetitionop"],["self"]],["bool"]]],[11,"eq","","",41,[[["repetitionkind"],["self"]],["bool"]]],[11,"ne","","",41,[[["repetitionkind"],["self"]],["bool"]]],[11,"eq","","",42,[[["self"],["repetitionrange"]],["bool"]]],[11,"ne","","",42,[[["self"],["repetitionrange"]],["bool"]]],[11,"eq","","",18,[[["self"],["group"]],["bool"]]],[11,"ne","","",18,[[["self"],["group"]],["bool"]]],[11,"eq","","",43,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",43,[[["self"],["groupkind"]],["bool"]]],[11,"eq","","",19,[[["self"],["capturename"]],["bool"]]],[11,"ne","","",19,[[["self"],["capturename"]],["bool"]]],[11,"eq","","",20,[[["self"],["setflags"]],["bool"]]],[11,"ne","","",20,[[["self"],["setflags"]],["bool"]]],[11,"eq","","",21,[[["self"],["flags"]],["bool"]]],[11,"ne","","",21,[[["self"],["flags"]],["bool"]]],[11,"eq","","",22,[[["flagsitem"],["self"]],["bool"]]],[11,"ne","","",22,[[["flagsitem"],["self"]],["bool"]]],[11,"eq","","",44,[[["self"],["flagsitemkind"]],["bool"]]],[11,"ne","","",44,[[["self"],["flagsitemkind"]],["bool"]]],[11,"eq","","",45,[[["flag"],["self"]],["bool"]]],[11,"eq","regex_syntax","",0,[[["error"],["self"]],["bool"]]],[11,"ne","","",0,[[["error"],["self"]],["bool"]]],[11,"eq","regex_syntax::hir::literal","",63,[[["self"],["literals"]],["bool"]]],[11,"ne","","",63,[[["self"],["literals"]],["bool"]]],[11,"eq","","",64,[[["self"],["literal"]],["bool"]]],[11,"eq","regex_syntax::hir","",69,[[["self"],["error"]],["bool"]]],[11,"ne","","",69,[[["self"],["error"]],["bool"]]],[11,"eq","","",53,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",70,[[["self"],["hir"]],["bool"]]],[11,"ne","","",70,[[["self"],["hir"]],["bool"]]],[11,"eq","","",54,[[["hirkind"],["self"]],["bool"]]],[11,"ne","","",54,[[["hirkind"],["self"]],["bool"]]],[11,"eq","","",55,[[["literal"],["self"]],["bool"]]],[11,"ne","","",55,[[["literal"],["self"]],["bool"]]],[11,"eq","","",56,[[["class"],["self"]],["bool"]]],[11,"ne","","",56,[[["class"],["self"]],["bool"]]],[11,"eq","","",71,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",71,[[["self"],["classunicode"]],["bool"]]],[11,"eq","","",72,[[["self"],["classunicoderange"]],["bool"]]],[11,"ne","","",72,[[["self"],["classunicoderange"]],["bool"]]],[11,"eq","","",73,[[["self"],["classbytes"]],["bool"]]],[11,"ne","","",73,[[["self"],["classbytes"]],["bool"]]],[11,"eq","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"ne","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"eq","","",57,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",58,[[["wordboundary"],["self"]],["bool"]]],[11,"eq","","",51,[[["group"],["self"]],["bool"]]],[11,"ne","","",51,[[["group"],["self"]],["bool"]]],[11,"eq","","",59,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",59,[[["self"],["groupkind"]],["bool"]]],[11,"eq","","",52,[[["repetition"],["self"]],["bool"]]],[11,"ne","","",52,[[["repetition"],["self"]],["bool"]]],[11,"eq","","",61,[[["self"],["repetitionkind"]],["bool"]]],[11,"ne","","",61,[[["self"],["repetitionkind"]],["bool"]]],[11,"eq","","",62,[[["repetitionrange"],["self"]],["bool"]]],[11,"ne","","",62,[[["repetitionrange"],["self"]],["bool"]]],[11,"eq","regex_syntax::utf8","",78,[[["utf8sequence"],["self"]],["bool"]]],[11,"ne","","",78,[[["utf8sequence"],["self"]],["bool"]]],[11,"eq","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"ne","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"partial_cmp","regex_syntax::ast","",1,[[["self"],["span"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",2,[[["position"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","regex_syntax::hir::literal","",64,[[["self"],["literal"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","regex_syntax::hir","",72,[[["self"],["classunicoderange"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",72,[[["self"],["classunicoderange"]],["bool"]]],[11,"le","","",72,[[["self"],["classunicoderange"]],["bool"]]],[11,"gt","","",72,[[["self"],["classunicoderange"]],["bool"]]],[11,"ge","","",72,[[["self"],["classunicoderange"]],["bool"]]],[11,"partial_cmp","","",74,[[["self"],["classbytesrange"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"le","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"gt","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"ge","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"partial_cmp","regex_syntax::utf8","",78,[[["utf8sequence"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",78,[[["utf8sequence"],["self"]],["bool"]]],[11,"le","","",78,[[["utf8sequence"],["self"]],["bool"]]],[11,"gt","","",78,[[["utf8sequence"],["self"]],["bool"]]],[11,"ge","","",78,[[["utf8sequence"],["self"]],["bool"]]],[11,"partial_cmp","","",77,[[["self"],["utf8range"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"le","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"gt","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"ge","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"deref","regex_syntax::hir::literal","",64,[[["self"]],["vec"]]],[11,"deref_mut","","",64,[[["self"]],["vec"]]],[11,"fmt","regex_syntax::ast::parse","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast::print","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::literal","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::print","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::translate","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::utf8","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",80,[[["formatter"],["self"]],["result"]]],[11,"description","regex_syntax::ast","",50,[[["self"]],["str"]]],[11,"description","regex_syntax","",0,[[["self"]],["str"]]],[11,"description","regex_syntax::hir","",69,[[["self"]],["str"]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",49,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["self"],["ast"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["self"],["ast"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",68,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["self"],["hir"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["self"],["hir"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[["self"]],["result"]]]],"p":[[4,"Error"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"Repetition"],[3,"RepetitionOp"],[3,"Group"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"ErrorKind"],[13,"FlagDuplicate"],[13,"FlagRepeatedNegation"],[13,"GroupNameDuplicate"],[4,"Ast"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[4,"ClassPerlKind"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[13,"NamedValue"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[4,"FlagsItemKind"],[4,"Flag"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,"Repetition"],[4,"ErrorKind"],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,"WordBoundary"],[4,"GroupKind"],[13,"CaptureName"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[3,"ParserBuilder"],[3,"Parser"],[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"],[3,"UnicodeWordError"],[3,"CaseFoldError"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"]]};
searchIndex["render"] = {"doc":"Render binary.","i":[[3,"Parameters","render","Input parameters.",null,null],[12,"tree","","Adaptive mesh settings.",0,null],[12,"render","","Render runtime settings.",0,null],[12,"surfs","","Surfaces map.",0,null],[12,"cols","","Colour map.",0,null],[12,"attrs","","Attributes map.",0,null],[5,"main","","Main function.",null,[[]]],[5,"init","","Initialise the command line arguments and directories.",null,[[]]],[5,"input","","Load the input files.",null,[[["path"]],["parameters"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",0,[[["m"]],["d"]]],[11,"convert_into","","",0,[[],["u"]]],[11,"convert_unclamped_into","","",0,[[],["u"]]],[11,"try_convert_into","","",0,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"vzip","","",0,[[],["v"]]],[11,"bg","","",0,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",0,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"load","","",0,[[["path"]],[["error"],["result",["error"]]]]],[11,"deserialize","","",0,[[["__d"]],["result"]]]],"p":[[3,"Parameters"]]};
searchIndex["rgb"] = {"doc":"Basic struct for `RGB` and `RGBA` pixels. Packed, with red…","i":[[3,"RGB","rgb","The RGB pixel",null,null],[12,"r","","Red",0,null],[12,"g","","Green",0,null],[12,"b","","Blue",0,null],[3,"RGBA","","The RGBA pixel",null,null],[12,"r","","Red",1,null],[12,"g","","Green",1,null],[12,"b","","Blue",1,null],[12,"a","","Alpha",1,null],[11,"new","","Convenience function for creating a new pixel The order of…",0,[[["t"]],["self"]]],[11,"iter","","Iterate over color components (R, G, and B)",0,[[["self"]],[["iter"],["cloned",["iter"]]]]],[11,"alpha","","Convenience function for converting to RGBA",0,[[["self"],["t"]],["rgba"]]],[11,"new_alpha","","Convenience function for converting to RGBA with alpha…",0,[[["a"],["self"]],["rgba"]]],[11,"new","","Convenience function for creating a new pixel The order of…",1,[[["t"]],["self"]]],[11,"new_alpha","","Convenience function for creating a new pixel The order of…",1,[[["a"],["t"]],["self"]]],[11,"rgb_mut","","Provide a mutable view of only RGB components (leaving out…",1,[[["self"]],["rgb"]]],[11,"rgb","","Copy RGB components out of the RGBA struct",1,[[["self"]],["rgb"]]],[11,"iter","","Iterate over all components (length=4)",1,[[["self"]],[["iter"],["cloned",["iter"]]]]],[11,"bgr","","Copy RGB components out of the RGBA struct",1,[[["self"]],["bgr"]]],[11,"map_rgb","","Create new RGBA with the same alpha value, but different…",1,[[["self"],["f"]],["rgba"]]],[11,"alpha","","Create a new RGBA with the new alpha value, but same RGB…",1,[[["a"],["self"]],["self"]]],[11,"map_alpha","","Create a new RGBA with a new alpha value created by the…",1,[[["self"],["f"]],["rgba"]]],[0,"alt","","BGR/BGRA alernative layouts & grayscale",null,null],[3,"BGR","rgb::alt","RGB in reverse byte order",null,null],[12,"b","","Blue first",2,null],[12,"g","","Green",2,null],[12,"r","","Red last",2,null],[3,"BGRA","","BGR+A",null,null],[12,"b","","Blue first",3,null],[12,"g","","Green",3,null],[12,"r","","Red",3,null],[12,"a","","Alpha last",3,null],[3,"Gray","","Grayscale. Use `.0` or `*` (deref) to access the value.",null,null],[12,"0","","brightness level",4,null],[3,"GrayAlpha","","Grayscale with alpha. Use `.0`/`.1` to access.",null,null],[12,"0","","brightness level",5,null],[12,"1","","alpha",5,null],[6,"BGR8","","8-bit BGR",null,null],[6,"BGR16","","16-bit BGR in machine's native endian",null,null],[6,"BGRA8","","8-bit BGRA",null,null],[6,"BGRA16","","16-bit BGR in machine's native endian",null,null],[6,"GRAY8","","8-bit gray",null,null],[6,"GRAY16","","16-bit gray in machine's native endian",null,null],[6,"GRAYA8","","8-bit gray with alpha in machine's native endian",null,null],[6,"GRAYA16","","16-bit gray with alpha in machine's native endian",null,null],[11,"gray","","Copy `Gray` component out of the `GrayAlpha` struct",5,[[["self"]],["gray"]]],[11,"gray_mut","","Provide a mutable view of only `Gray` component (leaving…",5,[[["self"]],["gray"]]],[11,"alpha","","Create a new `GrayAlpha` with the new alpha value, but…",5,[[["a"],["self"]],["self"]]],[11,"map_alpha","","Create a new `GrayAlpha` with a new alpha value created by…",5,[[["self"],["f"]],["grayalpha"]]],[11,"map_gray","","Create new `GrayAlpha` with the same alpha value, but…",5,[[["self"],["f"]],["grayalpha"]]],[6,"RGB8","rgb","8-bit RGB",null,null],[6,"RGB16","","16-bit RGB in machine's native endian",null,null],[6,"RGBA8","","8-bit RGBA, alpha is last. 0 = transparent, 255 = opaque.",null,null],[6,"RGBA16","","16-bit RGB in machine's native endian. 0 = transparent,…",null,null],[8,"AsPixels","","Casts a slice of bytes into a slice of pixels, e.g. `[u8]`…",null,null],[10,"as_pixels","","Reinterpret the slice as a read-only/shared slice of…",6,[[["self"]]]],[10,"as_pixels_mut","","Reinterpret the slice as a mutable/exclusive slice of…",6,[[["self"]]]],[8,"FromSlice","","Cast a slice of component values (bytes) as a slice of…",null,null],[10,"as_rgb","","Reinterpert slice as RGB pixels",7,[[["self"]]]],[10,"as_rgba","","Reinterpert slice as RGBA pixels",7,[[["self"]]]],[10,"as_rgb_mut","","Reinterpert mutable slice as RGB pixels",7,[[["self"]]]],[10,"as_rgba_mut","","Reinterpert mutable slice as RGBA pixels",7,[[["self"]]]],[10,"as_bgr","","Reinterpert slice as reverse-order BGR pixels",7,[[["self"]]]],[10,"as_bgra","","Reinterpert slice as reverse-order BGRA pixels",7,[[["self"]]]],[10,"as_bgr_mut","","Reinterpert ntable slice as reverse-order BGR pixels",7,[[["self"]]]],[10,"as_bgra_mut","","Reinterpert mutable slice as reverse-order BGRA pixels",7,[[["self"]]]],[8,"ComponentSlice","","Casting the struct to slices of its components",null,null],[10,"as_slice","","The components interpreted as an array, e.g. one `RGB`…",8,[[["self"]]]],[10,"as_mut_slice","","The components interpreted as a mutable array, e.g. one…",8,[[["self"]]]],[8,"ComponentBytes","","Casting a slice of `RGB/A` values to a slice of `u8`",null,null],[11,"as_bytes","","The components interpreted as raw bytes, in machine's…",9,[[["self"]]]],[11,"as_bytes_mut","","The components interpreted as raw bytes, in machine's…",9,[[["self"]]]],[8,"ComponentMap","","Applying operation to every component",null,null],[10,"map","","Convenience function (equivalent of…",10,[[["self"],["callback"]],["destpixel"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","rgb::alt","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[],["t"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"as_slice","rgb","",0,[[["self"]]]],[11,"as_mut_slice","","",0,[[["self"]]]],[11,"as_slice","rgb::alt","",2,[[["self"]]]],[11,"as_mut_slice","","",2,[[["self"]]]],[11,"as_slice","rgb","",1,[[["self"]]]],[11,"as_mut_slice","","",1,[[["self"]]]],[11,"as_slice","rgb::alt","",3,[[["self"]]]],[11,"as_mut_slice","","",3,[[["self"]]]],[11,"as_slice","","",5,[[["self"]]]],[11,"as_mut_slice","","",5,[[["self"]]]],[11,"as_slice","","",4,[[["self"]]]],[11,"as_mut_slice","","",4,[[["self"]]]],[11,"map","rgb","",0,[[["self"],["f"]],["rgb"]]],[11,"map","rgb::alt","",2,[[["self"],["f"]],["bgr"]]],[11,"map","rgb","",1,[[["self"],["f"]],["rgba"]]],[11,"map","rgb::alt","",3,[[["self"],["f"]],["bgra"]]],[11,"map","","",5,[[["self"],["f"]],["grayalpha"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"from","rgb","",0,[[],["self"]]],[11,"from","","",1,[[],["self"]]],[11,"from","rgb::alt","",2,[[],["self"]]],[11,"from","","",3,[[],["self"]]],[11,"from","rgb","",0,[[],["self"]]],[11,"from","","",1,[[],["self"]]],[11,"from","rgb::alt","",2,[[],["self"]]],[11,"from","","",3,[[],["self"]]],[11,"from","rgb","",0,[[["rgb",["u8"]],["u8"]],["self"]]],[11,"from","","",0,[[["u16"],["rgb",["u16"]]],["self"]]],[11,"from","","",0,[[["rgb",["u8"]],["u8"]],["self"]]],[11,"from","","",0,[[["rgb",["u8"]],["u8"]],["self"]]],[11,"from","","",0,[[["u16"],["rgb",["u16"]]],["self"]]],[11,"from","","",0,[[["u16"],["rgb",["u16"]]],["self"]]],[11,"from","","",0,[[["rgb",["i16"]],["i16"]],["self"]]],[11,"from","","",0,[[["rgb",["i16"]],["i16"]],["self"]]],[11,"from","","",0,[[["rgb",["i32"]],["i32"]],["self"]]],[11,"from","","",0,[[["f32"],["rgb",["f32"]]],["self"]]],[11,"from","","",1,[[["u16"],["rgba",["u16"]]],["self"]]],[11,"from","","",1,[[["rgba",["u8"]],["u8"]],["self"]]],[11,"from","","",1,[[["rgba",["u8"]],["u8"]],["self"]]],[11,"from","","",1,[[["u16"],["rgba",["u16"]]],["self"]]],[11,"from","","",1,[[["u16"],["rgba",["u16"]]],["self"]]],[11,"from","","",1,[[["rgba",["i16"]],["i16"]],["self"]]],[11,"from","","",1,[[["rgba",["i16"]],["i16"]],["self"]]],[11,"from","","",1,[[["rgba",["i32"]],["i32"]],["self"]]],[11,"from","","",1,[[["f32"],["rgba",["f32"]]],["self"]]],[11,"from","","",0,[[["gray"]],["self"]]],[11,"from","","",1,[[["grayalpha"]],["self"]]],[11,"from","rgb::alt","",2,[[["rgb"]],["self"]]],[11,"from","","",3,[[["rgba"]],["self"]]],[11,"from","rgb","",0,[[["bgr"]],["self"]]],[11,"from","","",1,[[["bgra"]],["self"]]],[11,"from","rgb::alt","",3,[[["bgr"]],["self"]]],[11,"from","","",3,[[["bgr"]],["self"]]],[11,"from","","",3,[[["rgb"]],["self"]]],[11,"from","","",3,[[["rgb"]],["self"]]],[11,"from","rgb","",1,[[["bgr"]],["self"]]],[11,"from","","",1,[[["bgr"]],["self"]]],[11,"from","","",1,[[["rgb"]],["self"]]],[11,"from","","",1,[[["rgb"]],["self"]]],[11,"from","rgb::alt","",4,[[["t"]],["self"]]],[11,"from","","",5,[[["gray"]],["self"]]],[11,"from","","",5,[[["gray"]],["self"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","rgb","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","rgb::alt","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","rgb","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","rgb::alt","",3,[[["self"],["formatter"]],["result"]]],[11,"sub","rgb","",0,[[["rgb"]]]],[11,"sub","","",0,[[["t"]]]],[11,"sub","","",1,[[["rgba"]]]],[11,"sub","","",1,[[["t"]]]],[11,"eq","rgb::alt","",2,[[["self"],["bgr"]],["bool"]]],[11,"ne","","",2,[[["self"],["bgr"]],["bool"]]],[11,"eq","","",3,[[["bgra"],["self"]],["bool"]]],[11,"ne","","",3,[[["bgra"],["self"]],["bool"]]],[11,"eq","","",4,[[["gray"],["self"]],["bool"]]],[11,"ne","","",4,[[["gray"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["grayalpha"]],["bool"]]],[11,"ne","","",5,[[["self"],["grayalpha"]],["bool"]]],[11,"eq","rgb","",0,[[["rgb"],["self"]],["bool"]]],[11,"ne","","",0,[[["rgb"],["self"]],["bool"]]],[11,"eq","","",1,[[["rgba"],["self"]],["bool"]]],[11,"ne","","",1,[[["rgba"],["self"]],["bool"]]],[11,"cmp","rgb::alt","",2,[[["self"],["bgr"]],["ordering"]]],[11,"cmp","","",3,[[["bgra"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["gray"],["self"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["grayalpha"]],["ordering"]]],[11,"cmp","rgb","",0,[[["rgb"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["rgba"],["self"]],["ordering"]]],[11,"partial_cmp","rgb::alt","",2,[[["self"],["bgr"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["self"],["bgr"]],["bool"]]],[11,"le","","",2,[[["self"],["bgr"]],["bool"]]],[11,"gt","","",2,[[["self"],["bgr"]],["bool"]]],[11,"ge","","",2,[[["self"],["bgr"]],["bool"]]],[11,"partial_cmp","","",3,[[["bgra"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["bgra"],["self"]],["bool"]]],[11,"le","","",3,[[["bgra"],["self"]],["bool"]]],[11,"gt","","",3,[[["bgra"],["self"]],["bool"]]],[11,"ge","","",3,[[["bgra"],["self"]],["bool"]]],[11,"partial_cmp","","",4,[[["gray"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",4,[[["gray"],["self"]],["bool"]]],[11,"le","","",4,[[["gray"],["self"]],["bool"]]],[11,"gt","","",4,[[["gray"],["self"]],["bool"]]],[11,"ge","","",4,[[["gray"],["self"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["grayalpha"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["self"],["grayalpha"]],["bool"]]],[11,"le","","",5,[[["self"],["grayalpha"]],["bool"]]],[11,"gt","","",5,[[["self"],["grayalpha"]],["bool"]]],[11,"ge","","",5,[[["self"],["grayalpha"]],["bool"]]],[11,"partial_cmp","rgb","",0,[[["rgb"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["rgb"],["self"]],["bool"]]],[11,"le","","",0,[[["rgb"],["self"]],["bool"]]],[11,"gt","","",0,[[["rgb"],["self"]],["bool"]]],[11,"ge","","",0,[[["rgb"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["rgba"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["rgba"],["self"]],["bool"]]],[11,"le","","",1,[[["rgba"],["self"]],["bool"]]],[11,"gt","","",1,[[["rgba"],["self"]],["bool"]]],[11,"ge","","",1,[[["rgba"],["self"]],["bool"]]],[11,"add","","",0,[[["rgb"]]]],[11,"add","","",0,[[["t"]]]],[11,"add","","",1,[[["rgba"]]]],[11,"add","","",1,[[["t"]]]],[11,"mul","","",0,[[["t"]]]],[11,"mul","","",1,[[["t"]]]],[11,"add_assign","","",0,[[["self"],["rgb"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",1,[[["self"],["rgba"]]]],[11,"add_assign","","",1,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["rgb"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",1,[[["self"],["rgba"]]]],[11,"sub_assign","","",1,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",1,[[["self"],["t"]]]],[11,"hash","rgb::alt","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","rgb","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"from_iter","","Takes exactly 3 elements from the iterator and creates a…",0,[[["intoiterator"]],["self"]]],[11,"from_iter","","Takes exactly 4 elements from the iterator and creates a…",1,[[["intoiterator"]],["self"]]],[11,"as_ref","rgb::alt","",4,[[["self"]],["t"]]],[11,"as_ref","rgb","",0,[[["self"]]]],[11,"as_ref","","",1,[[["self"]]]],[11,"as_ref","rgb::alt","",5,[[["self"]],["t"]]],[11,"as_mut","","",4,[[["self"]],["t"]]],[11,"as_mut","rgb","",0,[[["self"]]]],[11,"as_mut","","",1,[[["self"]]]],[11,"as_mut","rgb::alt","",5,[[["self"]],["t"]]],[11,"into","rgb","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","rgb::alt","",2,[[]]],[11,"into","","",3,[[]]],[11,"into","rgb","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","rgb::alt","",2,[[]]],[11,"into","","",3,[[]]],[11,"fmt","rgb","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","rgb::alt","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","rgb","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","rgb::alt","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["bgr"]]],[11,"clone","","",3,[[["self"]],["bgra"]]],[11,"clone","","",4,[[["self"]],["gray"]]],[11,"clone","","",5,[[["self"]],["grayalpha"]]],[11,"clone","rgb","",0,[[["self"]],["rgb"]]],[11,"clone","","",1,[[["self"]],["rgba"]]],[11,"default","rgb::alt","",2,[[],["bgr"]]],[11,"default","","",3,[[],["bgra"]]],[11,"default","","",4,[[],["gray"]]],[11,"default","","",5,[[],["grayalpha"]]],[11,"default","rgb","",0,[[],["rgb"]]],[11,"default","","",1,[[],["rgba"]]],[11,"as_bytes","","The components interpreted as raw bytes, in machine's…",9,[[["self"]]]],[11,"as_bytes_mut","","The components interpreted as raw bytes, in machine's…",9,[[["self"]]]],[11,"new","rgb::alt","Convenience function for creating a new pixel Wargning:…",2,[[["t"]],["self"]]],[11,"iter","","Iterate over color components (R, G, and B)",2,[[["self"]],[["iter"],["cloned",["iter"]]]]],[11,"alpha","","Convenience function for converting to RGBA",2,[[["self"],["t"]],["bgra"]]],[11,"new_alpha","","Convenience function for converting to RGBA with alpha…",2,[[["a"],["self"]],["bgra"]]],[11,"new","","Convenience function for creating a new pixel Warning: The…",3,[[["t"]],["self"]]],[11,"new_alpha","","Convenience function for creating a new pixel Warning: The…",3,[[["a"],["t"]],["self"]]],[11,"rgb_mut","","Provide a mutable view of only RGB components (leaving out…",3,[[["self"]],["bgr"]]],[11,"bgr_mut","","Provide a mutable view of only RGB components (leaving out…",3,[[["self"]],["bgr"]]],[11,"rgb","","Copy RGB components out of the RGBA struct",3,[[["self"]],["bgr"]]],[11,"iter","","Iterate over all components (length=4)",3,[[["self"]],[["iter"],["cloned",["iter"]]]]],[11,"bgr","","Copy RGB components out of the RGBA struct",3,[[["self"]],["bgr"]]],[11,"map_rgb","","Create new RGBA with the same alpha value, but different…",3,[[["self"],["f"]],["bgra"]]],[11,"alpha","","Create a new RGBA with the new alpha value, but same RGB…",3,[[["a"],["self"]],["self"]]],[11,"map_alpha","","Create a new RGBA with a new alpha value created by the…",3,[[["self"],["f"]],["bgra"]]]],"p":[[3,"RGB"],[3,"RGBA"],[3,"BGR"],[3,"BGRA"],[3,"Gray"],[3,"GrayAlpha"],[8,"AsPixels"],[8,"FromSlice"],[8,"ComponentSlice"],[8,"ComponentBytes"],[8,"ComponentMap"]]};
searchIndex["rng"] = {"doc":"Formula testing binary.","i":[[3,"Parameters","rng","Input parameters.",null,null],[12,"samples","","Number of sample to take of the distribution.",0,null],[12,"block_size","","Block size.",0,null],[12,"min","","Histogram minimum bound.",0,null],[12,"max","","Histogram maximum bound.",0,null],[12,"bins","","Number of bins.",0,null],[12,"dist","","Probability distribution.",0,null],[3,"Input","","Runtime parameters.",null,null],[12,"samples","","Number of sample to take of the distribution.",1,null],[12,"block_size","","Block size.",1,null],[12,"min","","Histogram minimum bound.",1,null],[12,"max","","Histogram maximum bound.",1,null],[12,"bins","","Number of bins.",1,null],[12,"dist","","Probability distribution.",1,null],[5,"main","","Main function.",null,[[]]],[5,"init","","Initialise the command line arguments and directories.",null,[[]]],[5,"input","","Load the input files.",null,[[["path"]],["parameters"]]],[5,"build","","Build instances.",null,[[["path"],["parameters"]],["input"]]],[5,"simulate","","Run the simulation.",null,[[["input"]],["histogram"]]],[5,"single_thread","","Simulate on a single thread.",null,[[["input"],["usize"],["arc"]],["histogram"]]],[5,"save","","Save the output data.",null,[[["path"],["histogram"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",0,[[["m"]],["d"]]],[11,"convert_into","","",0,[[],["u"]]],[11,"convert_unclamped_into","","",0,[[],["u"]]],[11,"try_convert_into","","",0,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"vzip","","",0,[[],["v"]]],[11,"bg","","",0,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",0,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",1,[[["m"]],["d"]]],[11,"convert_into","","",1,[[],["u"]]],[11,"convert_unclamped_into","","",1,[[],["u"]]],[11,"try_convert_into","","",1,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"vzip","","",1,[[],["v"]]],[11,"bg","","",1,[[["rgb",["u8"]],["u8"]],["withbackground"]]],[11,"fg","","",1,[[["rgb",["u8"]],["u8"]],["withforeground"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"load","","",0,[[["path"]],[["error"],["result",["error"]]]]],[11,"deserialize","","",0,[[["__d"]],["result"]]]],"p":[[3,"Parameters"],[3,"Input"]]};
searchIndex["rustc_demangle"] = {"doc":"Demangle Rust compiler symbol names.","i":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when…",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,[[["str"]],["demangle"]]],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the…",null,[[["str"]],[["trydemangleerror"],["result",["demangle","trydemangleerror"]],["demangle"]]]],[11,"as_str","","Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["trydemangleerror"]]]],"p":[[3,"Demangle"],[3,"TryDemangleError"]]};
searchIndex["ryu"] = {"doc":"Pure Rust implementation of Ryū, an algorithm to quickly…","i":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",null,null],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["self"]]],[11,"format","","Print a floating point number into this buffer and return…",0,[[["float"],["self"]],["str"]]],[11,"format_finite","","Print a floating point number into this buffer and return…",0,[[["float"],["self"]],["str"]]],[0,"raw","","Unsafe functions that mirror the API of the C…",null,null],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes…",null,[[["f32"]],["usize"]]],[5,"format64","","Print f64 to the given buffer and return number of bytes…",null,[[["f64"]],["usize"]]],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["buffer"]]],[11,"default","","",0,[[],["self"]]]],"p":[[3,"Buffer"]]};
searchIndex["scopeguard"] = {"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected…",null,null],[4,"Always","","Always run on scope exit.",null,null],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred…",null,[[["t"],["f"]],[["always"],["scopeguard",["always"]]]]],[8,"Strategy","","Controls in which cases the associated code should be run",null,null],[10,"should_run","","Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through…",1,[[["t"],["f"]],["scopeguard"]]],[11,"into_inner","","“Defuse” the guard and extract the value without calling…",1,[[],["t"]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"should_run","","",2,[[],["bool"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"drop","","",1,[[["self"]]]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]};
searchIndex["serde"] = {"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not…",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input…",0,null],[0,"value","","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["formatter"],["self"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,[[],["result"]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,[[],["result"]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",13,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],[["result",["option"]],["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],[["usize"],["option",["usize"]]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],[["result",["option"]],["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],[["result",["option"]],["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],[["result",["option"]],["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],[["option"],["result",["option"]]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],[["usize"],["option",["usize"]]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,null],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[["v"]],["result"]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["k"],["self"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde::de::value","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde::ser","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],[["ignoredany"],["result",["ignoredany"]]]]],[11,"deserialize_bool","serde::de::value","",30,[[["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["v"]],["result"]]],[11,"deserialize_char","","",30,[[["v"]],["result"]]],[11,"deserialize_str","","",30,[[["v"]],["result"]]],[11,"deserialize_string","","",30,[[["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["v"]],["result"]]],[11,"deserialize_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",30,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["v"]],["result"]]],[11,"deserialize_any","","",30,[[["v"]],["result"]]],[11,"deserialize_option","","",30,[[["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["v"]],["result"]]],[11,"deserialize_char","","",31,[[["v"]],["result"]]],[11,"deserialize_str","","",31,[[["v"]],["result"]]],[11,"deserialize_string","","",31,[[["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["v"]],["result"]]],[11,"deserialize_option","","",31,[[["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["v"]],["result"]]],[11,"deserialize_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",31,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["v"]],["result"]]],[11,"deserialize_any","","",31,[[["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["v"]],["result"]]],[11,"deserialize_char","","",32,[[["v"]],["result"]]],[11,"deserialize_str","","",32,[[["v"]],["result"]]],[11,"deserialize_string","","",32,[[["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["v"]],["result"]]],[11,"deserialize_option","","",32,[[["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["v"]],["result"]]],[11,"deserialize_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",32,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["v"]],["result"]]],[11,"deserialize_any","","",32,[[["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["v"]],["result"]]],[11,"deserialize_char","","",33,[[["v"]],["result"]]],[11,"deserialize_str","","",33,[[["v"]],["result"]]],[11,"deserialize_string","","",33,[[["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["v"]],["result"]]],[11,"deserialize_option","","",33,[[["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["v"]],["result"]]],[11,"deserialize_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",33,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["v"]],["result"]]],[11,"deserialize_any","","",33,[[["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["v"]],["result"]]],[11,"deserialize_char","","",34,[[["v"]],["result"]]],[11,"deserialize_str","","",34,[[["v"]],["result"]]],[11,"deserialize_string","","",34,[[["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["v"]],["result"]]],[11,"deserialize_option","","",34,[[["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["v"]],["result"]]],[11,"deserialize_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",34,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["v"]],["result"]]],[11,"deserialize_any","","",34,[[["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["v"]],["result"]]],[11,"deserialize_char","","",35,[[["v"]],["result"]]],[11,"deserialize_str","","",35,[[["v"]],["result"]]],[11,"deserialize_string","","",35,[[["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["v"]],["result"]]],[11,"deserialize_option","","",35,[[["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["v"]],["result"]]],[11,"deserialize_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",35,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["v"]],["result"]]],[11,"deserialize_any","","",35,[[["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["v"]],["result"]]],[11,"deserialize_char","","",36,[[["v"]],["result"]]],[11,"deserialize_str","","",36,[[["v"]],["result"]]],[11,"deserialize_string","","",36,[[["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["v"]],["result"]]],[11,"deserialize_option","","",36,[[["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["v"]],["result"]]],[11,"deserialize_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",36,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["v"]],["result"]]],[11,"deserialize_any","","",36,[[["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["v"]],["result"]]],[11,"deserialize_char","","",37,[[["v"]],["result"]]],[11,"deserialize_str","","",37,[[["v"]],["result"]]],[11,"deserialize_string","","",37,[[["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["v"]],["result"]]],[11,"deserialize_option","","",37,[[["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["v"]],["result"]]],[11,"deserialize_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",37,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["v"]],["result"]]],[11,"deserialize_any","","",37,[[["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["v"]],["result"]]],[11,"deserialize_char","","",38,[[["v"]],["result"]]],[11,"deserialize_str","","",38,[[["v"]],["result"]]],[11,"deserialize_string","","",38,[[["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["v"]],["result"]]],[11,"deserialize_option","","",38,[[["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["v"]],["result"]]],[11,"deserialize_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",38,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["v"]],["result"]]],[11,"deserialize_any","","",38,[[["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["v"]],["result"]]],[11,"deserialize_char","","",39,[[["v"]],["result"]]],[11,"deserialize_str","","",39,[[["v"]],["result"]]],[11,"deserialize_string","","",39,[[["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["v"]],["result"]]],[11,"deserialize_option","","",39,[[["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["v"]],["result"]]],[11,"deserialize_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",39,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["v"]],["result"]]],[11,"deserialize_any","","",39,[[["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["v"]],["result"]]],[11,"deserialize_char","","",40,[[["v"]],["result"]]],[11,"deserialize_str","","",40,[[["v"]],["result"]]],[11,"deserialize_string","","",40,[[["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["v"]],["result"]]],[11,"deserialize_option","","",40,[[["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["v"]],["result"]]],[11,"deserialize_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",40,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["v"]],["result"]]],[11,"deserialize_any","","",40,[[["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["v"]],["result"]]],[11,"deserialize_char","","",41,[[["v"]],["result"]]],[11,"deserialize_str","","",41,[[["v"]],["result"]]],[11,"deserialize_string","","",41,[[["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["v"]],["result"]]],[11,"deserialize_option","","",41,[[["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["v"]],["result"]]],[11,"deserialize_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",41,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["v"]],["result"]]],[11,"deserialize_any","","",41,[[["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["v"]],["result"]]],[11,"deserialize_char","","",42,[[["v"]],["result"]]],[11,"deserialize_str","","",42,[[["v"]],["result"]]],[11,"deserialize_string","","",42,[[["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["v"]],["result"]]],[11,"deserialize_option","","",42,[[["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["v"]],["result"]]],[11,"deserialize_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",42,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["v"]],["result"]]],[11,"deserialize_any","","",42,[[["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["v"]],["result"]]],[11,"deserialize_char","","",43,[[["v"]],["result"]]],[11,"deserialize_str","","",43,[[["v"]],["result"]]],[11,"deserialize_string","","",43,[[["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["v"]],["result"]]],[11,"deserialize_option","","",43,[[["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["v"]],["result"]]],[11,"deserialize_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",43,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["v"]],["result"]]],[11,"deserialize_any","","",43,[[["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["v"]],["result"]]],[11,"deserialize_char","","",44,[[["v"]],["result"]]],[11,"deserialize_str","","",44,[[["v"]],["result"]]],[11,"deserialize_string","","",44,[[["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["v"]],["result"]]],[11,"deserialize_option","","",44,[[["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["v"]],["result"]]],[11,"deserialize_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",44,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["v"]],["result"]]],[11,"deserialize_any","","",44,[[["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["v"]],["result"]]],[11,"deserialize_char","","",45,[[["v"]],["result"]]],[11,"deserialize_str","","",45,[[["v"]],["result"]]],[11,"deserialize_string","","",45,[[["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["v"]],["result"]]],[11,"deserialize_option","","",45,[[["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["v"]],["result"]]],[11,"deserialize_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",45,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["v"]],["result"]]],[11,"deserialize_any","","",45,[[["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["v"]],["result"]]],[11,"deserialize_char","","",46,[[["v"]],["result"]]],[11,"deserialize_str","","",46,[[["v"]],["result"]]],[11,"deserialize_string","","",46,[[["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["v"]],["result"]]],[11,"deserialize_option","","",46,[[["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["v"]],["result"]]],[11,"deserialize_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",46,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["v"]],["result"]]],[11,"deserialize_any","","",46,[[["v"]],["result"]]],[11,"deserialize_enum","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",47,[[["v"]],["result"]]],[11,"deserialize_enum","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",47,[[["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["v"]],["result"]]],[11,"deserialize_char","","",47,[[["v"]],["result"]]],[11,"deserialize_str","","",47,[[["v"]],["result"]]],[11,"deserialize_string","","",47,[[["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["v"]],["result"]]],[11,"deserialize_option","","",47,[[["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["v"]],["result"]]],[11,"deserialize_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",47,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["v"]],["result"]]],[11,"deserialize_any","","",1,[[["v"]],["result"]]],[11,"deserialize_enum","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",1,[[["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["v"]],["result"]]],[11,"deserialize_char","","",1,[[["v"]],["result"]]],[11,"deserialize_str","","",1,[[["v"]],["result"]]],[11,"deserialize_string","","",1,[[["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["v"]],["result"]]],[11,"deserialize_option","","",1,[[["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["v"]],["result"]]],[11,"deserialize_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",1,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["v"]],["result"]]],[11,"deserialize_any","","",48,[[["v"]],["result"]]],[11,"deserialize_enum","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",48,[[["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["v"]],["result"]]],[11,"deserialize_char","","",48,[[["v"]],["result"]]],[11,"deserialize_str","","",48,[[["v"]],["result"]]],[11,"deserialize_string","","",48,[[["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["v"]],["result"]]],[11,"deserialize_option","","",48,[[["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["v"]],["result"]]],[11,"deserialize_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",48,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["v"]],["result"]]],[11,"deserialize_any","","",49,[[["v"]],["result"]]],[11,"deserialize_enum","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",49,[[["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["v"]],["result"]]],[11,"deserialize_char","","",49,[[["v"]],["result"]]],[11,"deserialize_str","","",49,[[["v"]],["result"]]],[11,"deserialize_string","","",49,[[["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["v"]],["result"]]],[11,"deserialize_option","","",49,[[["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["v"]],["result"]]],[11,"deserialize_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",49,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["v"]],["result"]]],[11,"deserialize_any","","",2,[[["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["v"]],["result"]]],[11,"deserialize_char","","",2,[[["v"]],["result"]]],[11,"deserialize_str","","",2,[[["v"]],["result"]]],[11,"deserialize_string","","",2,[[["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["v"]],["result"]]],[11,"deserialize_option","","",2,[[["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["v"]],["result"]]],[11,"deserialize_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",2,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["v"]],["result"]]],[11,"deserialize_enum","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",3,[[["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["v"]],["result"]]],[11,"deserialize_char","","",3,[[["v"]],["result"]]],[11,"deserialize_str","","",3,[[["v"]],["result"]]],[11,"deserialize_string","","",3,[[["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["v"]],["result"]]],[11,"deserialize_option","","",3,[[["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["v"]],["result"]]],[11,"deserialize_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",3,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["v"]],["result"]]],[11,"deserialize_any","","",4,[[["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["v"]],["result"]]],[11,"deserialize_char","","",4,[[["v"]],["result"]]],[11,"deserialize_str","","",4,[[["v"]],["result"]]],[11,"deserialize_string","","",4,[[["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["v"]],["result"]]],[11,"deserialize_option","","",4,[[["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["v"]],["result"]]],[11,"deserialize_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",4,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["v"]],["result"]]],[11,"deserialize_any","","",5,[[["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["v"]],["result"]]],[11,"deserialize_char","","",5,[[["v"]],["result"]]],[11,"deserialize_str","","",5,[[["v"]],["result"]]],[11,"deserialize_string","","",5,[[["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["v"]],["result"]]],[11,"deserialize_option","","",5,[[["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["v"]],["result"]]],[11,"deserialize_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",5,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["v"]],["result"]]],[11,"deserialize_any","","",6,[[["v"]],["result"]]],[11,"deserialize_enum","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["v"]],["result"]]],[11,"deserialize_char","","",6,[[["v"]],["result"]]],[11,"deserialize_str","","",6,[[["v"]],["result"]]],[11,"deserialize_string","","",6,[[["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["v"]],["result"]]],[11,"deserialize_option","","",6,[[["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["v"]],["result"]]],[11,"deserialize_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",6,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","",28,[[["bool"]],["result"]]],[11,"visit_i64","","",28,[[["i64"]],["result"]]],[11,"visit_u64","","",28,[[["u64"]],["result"]]],[11,"visit_f64","","",28,[[["f64"]],["result"]]],[11,"visit_str","","",28,[[["str"]],["result"]]],[11,"visit_none","","",28,[[],["result"]]],[11,"visit_some","","",28,[[["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["d"]],["result"]]],[11,"visit_unit","","",28,[[],["result"]]],[11,"visit_seq","","",28,[[["a"]],["result"]]],[11,"visit_map","","",28,[[["a"]],["result"]]],[11,"visit_bytes","","",28,[[],["result"]]],[11,"visit_enum","","",28,[[["a"]],["result"]]],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],[["option"],["result",["option"]]]]],[11,"size_hint","","",3,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"size_hint","","",5,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["tv"],["self"],["tk"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",5,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"variant_seed","","",46,[[["t"]],["result"]]],[11,"variant_seed","","",47,[[["t"]],["result"]]],[11,"variant_seed","","",1,[[["t"]],["result"]]],[11,"variant_seed","","",48,[[["t"]],["result"]]],[11,"variant_seed","","",49,[[["t"]],["result"]]],[11,"variant_seed","","",6,[[["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"clone","","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"eq","serde::de::value","",29,[[["self"],["error"]],["bool"]]],[11,"ne","","",29,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",0,[[["unexpected"],["self"]],["bool"]]],[11,"ne","","",0,[[["unexpected"],["self"]],["bool"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","serde::de","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"p":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["serde_derive"] = {"doc":"This crate provides Serde's two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]};
searchIndex["serde_json"] = {"doc":"Serde JSON","i":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[3,"Error","","This type represents all possible errors that can occur…",null,null],[3,"Serializer","","A structure for serializing Rust values into JSON.",null,null],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result"]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[["str"]],["result"]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[["t"]],[["result",["string"]],["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["string"]],["string"]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[["w"],["t"]],["result"]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value"]],[["error"],["result",["error"]]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[["t"]],[["error"],["result",["value","error"]],["value"]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",null,null],[3,"SliceRead","serde_json::de","JSON input source that reads from a slice of bytes.",null,null],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",null,null],[3,"IoRead","","JSON input source that reads from a std::io input stream.",null,null],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result"]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[["str"]],["result"]]],[8,"Read","","Trait used by the deserializer for iterating over input.…",null,null],[11,"new","","Create a JSON deserializer from one of the possible…",1,[[["r"]],["self"]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,[[],["self"]]],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end","","The `Deserializer::end` method should be called after a…",1,[[["self"]],["result"]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of…",1,[[],["streamdeserializer"]]],[11,"new","","Create a JSON stream deserializer from one of the possible…",2,[[["r"]],["self"]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a…",2,[[["self"]],["usize"]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",null,null],[3,"Error","serde_json::error","This type represents all possible errors that can occur…",null,null],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes…",3,null],[13,"Syntax","","The error was caused by input that was not syntactically…",3,null],[13,"Data","","The error was caused by input data that was semantically…",3,null],[13,"Eof","","The error was caused by prematurely reaching the end of…",3,null],[6,"Result","","Alias for a `Result` with the error type…",null,null],[11,"line","","One-based line number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"column","","One-based column number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"classify","","Categorizes the cause of this error.",4,[[["self"]],["category"]]],[11,"is_io","","Returns true if this error was caused by a failure to read…",4,[[["self"]],["bool"]]],[11,"is_syntax","","Returns true if this error was caused by input that was…",4,[[["self"]],["bool"]]],[11,"is_data","","Returns true if this error was caused by input data that…",4,[[["self"]],["bool"]]],[11,"is_eof","","Returns true if this error was caused by prematurely…",4,[[["self"]],["bool"]]],[0,"map","serde_json","A map of String to serde_json::Value.",null,null],[3,"Map","serde_json::map","Represents a JSON key/value type.",null,null],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",null,null],[3,"Iter","","An iterator over a serde_json::Map's entries.",null,null],[3,"IterMut","","A mutable iterator over a serde_json::Map's entries.",null,null],[3,"IntoIter","","An owning iterator over a serde_json::Map's entries.",null,null],[3,"Keys","","An iterator over a serde_json::Map's keys.",null,null],[3,"Values","","An iterator over a serde_json::Map's values.",null,null],[3,"ValuesMut","","A mutable iterator over a serde_json::Map's values.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry.",5,null],[13,"Occupied","","An occupied Entry.",5,null],[11,"new","","Makes a new empty Map.",6,[[],["self"]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",6,[[["usize"]],["self"]]],[11,"clear","","Clears the map, removing all values.",6,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",6,[[["self"],["q"]],[["value"],["option",["value"]]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",6,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",6,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"insert","","Inserts a key-value pair into the map.",6,[[["self"],["value"],["string"]],[["option",["value"]],["value"]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",6,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"append","","Moves all elements from other into Self, leaving other…",6,[[["self"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",6,[[["self"],["s"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",6,[[["self"]],["bool"]]],[11,"iter","","Gets an iterator over the entries of the map.",6,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",6,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map.",6,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map.",6,[[["self"]],["values"]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",6,[[["self"]],["valuesmut"]]],[11,"key","","Returns a reference to this entry's key.",5,[[["self"]],["string"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",5,[[["value"]],["value"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",5,[[["f"]],["value"]]],[11,"key","","Gets a reference to the key that would be used when…",7,[[["self"]],["string"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",7,[[["value"]],["value"]]],[11,"key","","Gets a reference to the key in the entry.",8,[[["self"]],["string"]]],[11,"get","","Gets a reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",8,[[],["value"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s…",8,[[["self"],["value"]],["value"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",8,[[],["value"]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra…",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human…",null,null],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",null,null],[13,"Quote","","An escaped quote `\"`",9,null],[13,"ReverseSolidus","","An escaped reverse solidus `\\`",9,null],[13,"Solidus","","An escaped solidus `/`",9,null],[13,"Backspace","","An escaped backspace character (usually escaped as `\\b`)",9,null],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\f`)",9,null],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\n`)",9,null],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as…",9,null],[13,"Tab","","An escaped tab character (usually escaped as `\\t`)",9,null],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped…",9,null],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[["w"],["t"]],["result"]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[["t"]],[["result",["string"]],["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["string"]],["string"]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control…",null,null],[11,"write_null","","Writes a `null` value to the specified writer.",10,[[["w"],["self"]],["result"]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",10,[[["w"],["self"],["bool"]],["result"]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i8"]],["result"]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i16"]],["result"]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i32"]],["result"]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i64"]],["result"]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u8"]],["result"]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u16"]],["result"]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u32"]],["result"]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u64"]],["result"]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the…",10,[[["w"],["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the…",10,[[["w"],["self"],["f64"]],["result"]]],[11,"write_number_str","","Writes a number that has already been rendered to a string.",10,[[["w"],["self"],["str"]],["result"]]],[11,"begin_string","","Called before each series of `write_string_fragment` and…",10,[[["w"],["self"]],["result"]]],[11,"end_string","","Called after each series of `write_string_fragment` and…",10,[[["w"],["self"]],["result"]]],[11,"write_string_fragment","","Writes a string fragment that doesn't need any escaping to…",10,[[["w"],["self"],["str"]],["result"]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["w"],["self"],["charescape"]],["result"]]],[11,"begin_array","","Called before every array. Writes a `[` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"end_array","","Called after every array. Writes a `]` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"begin_array_value","","Called before every array value. Writes a `,` if needed to…",10,[[["w"],["self"],["bool"]],["result"]]],[11,"end_array_value","","Called after every array value.",10,[[["w"],["self"]],["result"]]],[11,"begin_object","","Called before every object. Writes a `{` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"end_object","","Called after every object. Writes a `}` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"begin_object_key","","Called before every object key.",10,[[["w"],["self"],["bool"]],["result"]]],[11,"end_object_key","","Called after every object key. A `:` should be written to…",10,[[["w"],["self"]],["result"]]],[11,"begin_object_value","","Called before every object value. A `:` should be written…",10,[[["w"],["self"]],["result"]]],[11,"end_object_value","","Called after every object value.",10,[[["w"],["self"]],["result"]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn't need any escaping…",10,[[["w"],["self"],["str"]],["result"]]],[11,"new","","Creates a new JSON serializer.",11,[[["w"]],["self"]]],[11,"pretty","","Creates a new JSON pretty print serializer.",11,[[["w"]],["self"]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to…",11,[[["w"],["f"]],["self"]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",11,[[],["w"]]],[11,"new","","Construct a pretty printer formatter that defaults to…",12,[[],["self"]]],[11,"with_indent","","Construct a pretty printer formatter that uses the…",12,[[],["self"]]],[0,"value","serde_json","The Value enum, a loosely typed way of representing any…",null,null],[3,"Serializer","serde_json::value","Serializer whose output is a `Value`.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[["t"]],[["error"],["result",["value","error"]],["value"]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value"]],[["error"],["result",["error"]]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",null,null],[11,"get","","Index into a JSON array or map. A string index can be used…",0,[[["self"],["index"]],[["value"],["option",["value"]]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",0,[[["self"],["index"]],[["option",["value"]],["value"]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],[["option",["map"]],["map"]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",0,[[["self"]],[["map"],["option",["map"]]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[["self"]],[["str"],["option",["str"]]]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],["option"]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[["str"],["self"]],[["value"],["option",["value"]]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",0,[[["str"],["self"]],[["option",["value"]],["value"]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",0,[[["self"]],["value"]]],[11,"is_i64","serde_json","Returns true if the `Number` is an integer between…",13,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",13,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",13,[[["self"]],["bool"]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",13,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",13,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",13,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[["f64"]],[["number"],["option",["number"]]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input…",14,[[["r"]],["self"]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,[[],["self"]]],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[["str"]],["self"]]],[6,"Result","serde_json","Alias for a `Result` with the error type…",null,null],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",null,null],[11,"from","serde_json::de","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","serde_json::map","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde_json","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","serde_json::value","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde_json::de","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","serde_json::map","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","serde_json::value","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"begin_array","serde_json::ser","",12,[[["w"],["self"]],["result"]]],[11,"end_array","","",12,[[["w"],["self"]],["result"]]],[11,"begin_array_value","","",12,[[["w"],["self"],["bool"]],["result"]]],[11,"end_array_value","","",12,[[["w"],["self"]],["result"]]],[11,"begin_object","","",12,[[["w"],["self"]],["result"]]],[11,"end_object","","",12,[[["w"],["self"]],["result"]]],[11,"begin_object_key","","",12,[[["w"],["self"],["bool"]],["result"]]],[11,"begin_object_value","","",12,[[["w"],["self"]],["result"]]],[11,"end_object_value","","",12,[[["w"],["self"]],["result"]]],[11,"next","serde_json::de","",14,[[["self"]],[["result",["option"]],["option",["u8"]]]]],[11,"peek","","",14,[[["self"]],[["result",["option"]],["option",["u8"]]]]],[11,"discard","","",14,[[["self"]]]],[11,"position","","",14,[[["self"]],["position"]]],[11,"peek_position","","",14,[[["self"]],["position"]]],[11,"byte_offset","","",14,[[["self"]],["usize"]]],[11,"parse_str","","",14,[[["vec"],["self"]],[["result",["reference"]],["reference",["str"]]]]],[11,"parse_str_raw","","",14,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",14,[[["self"]],["result"]]],[11,"decode_hex_escape","","",14,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"set_failed","","",14,[[["self"],["bool"]]]],[11,"next","","",15,[[["self"]],[["result",["option"]],["option",["u8"]]]]],[11,"peek","","",15,[[["self"]],[["result",["option"]],["option",["u8"]]]]],[11,"discard","","",15,[[["self"]]]],[11,"position","","",15,[[["self"]],["position"]]],[11,"peek_position","","",15,[[["self"]],["position"]]],[11,"byte_offset","","",15,[[["self"]],["usize"]]],[11,"parse_str","","",15,[[["vec"],["self"]],[["reference",["str"]],["result",["reference"]]]]],[11,"parse_str_raw","","",15,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",15,[[["self"]],["result"]]],[11,"decode_hex_escape","","",15,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"set_failed","","",15,[[["self"],["bool"]]]],[11,"next","","",16,[[["self"]],[["result",["option"]],["option",["u8"]]]]],[11,"peek","","",16,[[["self"]],[["result",["option"]],["option",["u8"]]]]],[11,"discard","","",16,[[["self"]]]],[11,"position","","",16,[[["self"]],["position"]]],[11,"peek_position","","",16,[[["self"]],["position"]]],[11,"byte_offset","","",16,[[["self"]],["usize"]]],[11,"parse_str","","",16,[[["vec"],["self"]],[["reference",["str"]],["result",["reference"]]]]],[11,"parse_str_raw","","",16,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",16,[[["self"]],["result"]]],[11,"decode_hex_escape","","",16,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"set_failed","","",16,[[["self"],["bool"]]]],[11,"from","serde_json::value","",0,[[["i8"]],["self"]]],[11,"from","","",0,[[["i16"]],["self"]]],[11,"from","","",0,[[["i32"]],["self"]]],[11,"from","","",0,[[["i64"]],["self"]]],[11,"from","","",0,[[["isize"]],["self"]]],[11,"from","","",0,[[["u8"]],["self"]]],[11,"from","","",0,[[["u16"]],["self"]]],[11,"from","","",0,[[["u32"]],["self"]]],[11,"from","","",0,[[["u64"]],["self"]]],[11,"from","","",0,[[["usize"]],["self"]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from","","Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from","","Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from","","Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["str"],["cow",["str"]]],["self"]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["map",["string","value"]],["value"],["string"]],["self"]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from","","Convert a slice to `Value`",0,[[],["self"]]],[11,"from","","Convert `()` to `Value`",0,[[],["self"]]],[11,"from","serde_json","",13,[[["u8"]],["self"]]],[11,"from","","",13,[[["u16"]],["self"]]],[11,"from","","",13,[[["u32"]],["self"]]],[11,"from","","",13,[[["u64"]],["self"]]],[11,"from","","",13,[[["usize"]],["self"]]],[11,"from","","",13,[[["i8"]],["self"]]],[11,"from","","",13,[[["i16"]],["self"]]],[11,"from","","",13,[[["i32"]],["self"]]],[11,"from","","",13,[[["i64"]],["self"]]],[11,"from","","",13,[[["isize"]],["self"]]],[11,"next_back","serde_json::map","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","","",21,[[["self"]],["option"]]],[11,"next_back","","",22,[[["self"]],["option"]]],[11,"len","","",17,[[["self"]],["usize"]]],[11,"len","","",18,[[["self"]],["usize"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"len","","",20,[[["self"]],["usize"]]],[11,"len","","",21,[[["self"]],["usize"]]],[11,"len","","",22,[[["self"]],["usize"]]],[11,"extend","","",6,[[["self"],["t"]]]],[11,"into_iter","","",6,[[]]],[11,"next","serde_json::de","",2,[[["self"]],[["option",["result"]],["result"]]]],[11,"next","serde_json::map","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,[[["self"]]]],[11,"clone","serde_json::error","",3,[[["self"]],["category"]]],[11,"clone","serde_json::map","",6,[[["self"]],["self"]]],[11,"clone","serde_json::ser","",23,[[["self"]],["compactformatter"]]],[11,"clone","","",12,[[["self"]],["prettyformatter"]]],[11,"clone","serde_json::value","",0,[[["self"]],["value"]]],[11,"clone","serde_json","",13,[[["self"]],["number"]]],[11,"default","serde_json::map","",6,[[],["self"]]],[11,"default","serde_json::ser","",12,[[],["self"]]],[11,"default","serde_json::value","",0,[[],["value"]]],[11,"eq","serde_json::error","",3,[[["self"],["category"]],["bool"]]],[11,"eq","serde_json::map","",6,[[["self"]],["bool"]]],[11,"eq","serde_json::value","",0,[[["value"],["self"]],["bool"]]],[11,"ne","","",0,[[["value"],["self"]],["bool"]]],[11,"eq","","",0,[[["str"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["string"],["self"]],["bool"]]],[11,"eq","","",0,[[["i8"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["i16"]],["bool"]]],[11,"eq","","",0,[[["self"],["i32"]],["bool"]]],[11,"eq","","",0,[[["i64"],["self"]],["bool"]]],[11,"eq","","",0,[[["isize"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["u8"]],["bool"]]],[11,"eq","","",0,[[["u16"],["self"]],["bool"]]],[11,"eq","","",0,[[["u32"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["u64"]],["bool"]]],[11,"eq","","",0,[[["self"],["usize"]],["bool"]]],[11,"eq","","",0,[[["f32"],["self"]],["bool"]]],[11,"eq","","",0,[[["f64"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["bool"]],["bool"]]],[11,"eq","serde_json","",13,[[["number"],["self"]],["bool"]]],[11,"ne","","",13,[[["number"],["self"]],["bool"]]],[11,"fmt","serde_json::error","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::map","",6,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","serde_json::ser","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::value","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::error","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::value","Display a JSON value as a string.",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json","",13,[[["formatter"],["self"]],["result"]]],[11,"index","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index","serde_json::value","Index into a `serde_json::Value` using the syntax…",0,[[["i"],["self"]],["value"]]],[11,"index_mut","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index_mut","serde_json::value","Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"from_iter","serde_json::map","",6,[[["t"]],["self"]]],[11,"from_iter","serde_json::value","Convert an iteratable type to a `Value`",0,[[["intoiterator"]],["self"]]],[11,"from_str","serde_json","",13,[[["str"]],["result"]]],[11,"from_str","serde_json::value","",0,[[["str"]],[["error"],["result",["value","error"]],["value"]]]],[11,"source","serde_json::error","",4,[[["self"]],[["error"],["option",["error"]]]]],[11,"deserialize_any","serde_json::value","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i8","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i16","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u8","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u16","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i128","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u128","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_option","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_enum","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_newtype_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bool","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_char","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_str","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_string","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bytes","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_byte_buf","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_unit","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_unit_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_seq","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_tuple","","",0,[[["usize"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_tuple_struct","","",0,[[["str"],["usize"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_map","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_identifier","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_ignored_any","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_any","serde_json","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i8","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i16","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u8","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u16","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i128","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u128","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bool","","",13,[[["v"]],["result"]]],[11,"deserialize_char","","",13,[[["v"]],["result"]]],[11,"deserialize_str","","",13,[[["v"]],["result"]]],[11,"deserialize_string","","",13,[[["v"]],["result"]]],[11,"deserialize_bytes","","",13,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",13,[[["v"]],["result"]]],[11,"deserialize_option","","",13,[[["v"]],["result"]]],[11,"deserialize_unit","","",13,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",13,[[["v"]],["result"]]],[11,"deserialize_tuple","","",13,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",13,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",13,[[["v"]],["result"]]],[11,"deserialize_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",13,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",13,[[["v"]],["result"]]],[11,"into_deserializer","serde_json::value","",0,[[]]],[11,"custom","serde_json::error","",4,[[["display"]],["error"]]],[11,"serialize","serde_json::map","",6,[[["s"],["self"]],["result"]]],[11,"serialize","serde_json::value","",0,[[["s"],["self"]],["result"]]],[11,"serialize","serde_json","",13,[[["s"],["self"]],["result"]]],[11,"serialize_bool","serde_json::value","",24,[[["bool"]],[["result",["value"]],["value"]]]],[11,"serialize_i8","","",24,[[["i8"]],[["result",["value"]],["value"]]]],[11,"serialize_i16","","",24,[[["i16"]],[["result",["value"]],["value"]]]],[11,"serialize_i32","","",24,[[["i32"]],[["result",["value"]],["value"]]]],[11,"serialize_i64","","",24,[[["i64"]],[["result",["value"]],["value"]]]],[11,"serialize_u8","","",24,[[["u8"]],[["result",["value"]],["value"]]]],[11,"serialize_u16","","",24,[[["u16"]],[["result",["value"]],["value"]]]],[11,"serialize_u32","","",24,[[["u32"]],[["result",["value"]],["value"]]]],[11,"serialize_u64","","",24,[[["u64"]],[["result",["value"]],["value"]]]],[11,"serialize_f32","","",24,[[["f32"]],[["result",["value"]],["value"]]]],[11,"serialize_f64","","",24,[[["f64"]],[["result",["value"]],["value"]]]],[11,"serialize_char","","",24,[[["char"]],[["result",["value"]],["value"]]]],[11,"serialize_str","","",24,[[["str"]],[["result",["value"]],["value"]]]],[11,"serialize_bytes","","",24,[[],[["result",["value"]],["value"]]]],[11,"serialize_unit","","",24,[[],[["result",["value"]],["value"]]]],[11,"serialize_unit_struct","","",24,[[["str"]],[["result",["value"]],["value"]]]],[11,"serialize_unit_variant","","",24,[[["str"],["u32"]],[["result",["value"]],["value"]]]],[11,"serialize_newtype_struct","","",24,[[["str"],["t"]],[["result",["value"]],["value"]]]],[11,"serialize_newtype_variant","","",24,[[["str"],["u32"],["t"]],[["result",["value"]],["value"]]]],[11,"serialize_none","","",24,[[],[["result",["value"]],["value"]]]],[11,"serialize_some","","",24,[[["t"]],[["result",["value"]],["value"]]]],[11,"serialize_seq","","",24,[[["usize"],["option",["usize"]]],["result"]]],[11,"serialize_tuple","","",24,[[["usize"]],["result"]]],[11,"serialize_tuple_struct","","",24,[[["str"],["usize"]],["result"]]],[11,"serialize_tuple_variant","","",24,[[["str"],["u32"],["usize"]],["result"]]],[11,"serialize_map","","",24,[[["usize"],["option",["usize"]]],["result"]]],[11,"serialize_struct","","",24,[[["str"],["usize"]],["result"]]],[11,"serialize_struct_variant","","",24,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_str","","",24,[[["t"]],[["result",["value"]],["value"]]]],[11,"deserialize","serde_json::map","",6,[[["d"]],["result"]]],[11,"deserialize","serde_json::value","",0,[[["d"]],[["result",["value"]],["value"]]]],[11,"deserialize","serde_json","",13,[[["d"]],[["result",["number"]],["number"]]]],[11,"custom","serde_json::error","",4,[[["display"]],["error"]]],[11,"invalid_type","","",4,[[["expected"],["unexpected"]],["self"]]]],"p":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"],[3,"Serializer"]]};
searchIndex["simba"] = {"doc":"Simba is a crate defining a set of trait for writing code…","i":[[0,"scalar","simba","Traits implemented by scalar, non-SIMD, types.",null,null],[8,"ComplexField","simba::scalar","Trait shared by all complex fields and its subfields (like…",null,null],[16,"RealField","","",0,null],[10,"from_real","","Builds a pure-real complex number from the given value.",0,[[],["self"]]],[10,"real","","The real part of this complex number.",0,[[]]],[10,"imaginary","","The imaginary part of this complex number.",0,[[]]],[10,"modulus","","The modulus of this complex number.",0,[[]]],[10,"modulus_squared","","The squared modulus of this complex number.",0,[[]]],[10,"argument","","The argument of this complex number.",0,[[]]],[10,"norm1","","The sum of the absolute value of this complex number's…",0,[[]]],[10,"scale","","Multiplies this complex number by `factor`.",0,[[],["self"]]],[10,"unscale","","Divides this complex number by `factor`.",0,[[],["self"]]],[11,"to_polar","","The polar form of this complex number: (modulus, arg)",0,[[]]],[11,"to_exp","","The exponential form of this complex number: (modulus,…",0,[[]]],[11,"signum","","The exponential part of this complex number: `self /…",0,[[],["self"]]],[10,"floor","","",0,[[],["self"]]],[10,"ceil","","",0,[[],["self"]]],[10,"round","","",0,[[],["self"]]],[10,"trunc","","",0,[[],["self"]]],[10,"fract","","",0,[[],["self"]]],[10,"mul_add","","",0,[[],["self"]]],[10,"abs","","The absolute value of this complex number: `self /…",0,[[]]],[10,"hypot","","Computes (self.conjugate() * self + other.conjugate() *…",0,[[]]],[10,"recip","","",0,[[],["self"]]],[10,"conjugate","","",0,[[],["self"]]],[10,"sin","","",0,[[],["self"]]],[10,"cos","","",0,[[],["self"]]],[10,"sin_cos","","",0,[[]]],[11,"sinh_cosh","","",0,[[]]],[10,"tan","","",0,[[],["self"]]],[10,"asin","","",0,[[],["self"]]],[10,"acos","","",0,[[],["self"]]],[10,"atan","","",0,[[],["self"]]],[10,"sinh","","",0,[[],["self"]]],[10,"cosh","","",0,[[],["self"]]],[10,"tanh","","",0,[[],["self"]]],[10,"asinh","","",0,[[],["self"]]],[10,"acosh","","",0,[[],["self"]]],[10,"atanh","","",0,[[],["self"]]],[11,"sinc","","Cardinal sine",0,[[],["self"]]],[11,"sinhc","","",0,[[],["self"]]],[11,"cosc","","Cardinal cos",0,[[],["self"]]],[11,"coshc","","",0,[[],["self"]]],[10,"log","","",0,[[],["self"]]],[10,"log2","","",0,[[],["self"]]],[10,"log10","","",0,[[],["self"]]],[10,"ln","","",0,[[],["self"]]],[10,"ln_1p","","",0,[[],["self"]]],[10,"sqrt","","",0,[[],["self"]]],[10,"exp","","",0,[[],["self"]]],[10,"exp2","","",0,[[],["self"]]],[10,"exp_m1","","",0,[[],["self"]]],[10,"powi","","",0,[[["i32"]],["self"]]],[10,"powf","","",0,[[],["self"]]],[10,"powc","","",0,[[],["self"]]],[10,"cbrt","","",0,[[],["self"]]],[10,"is_finite","","",0,[[["self"]],["bool"]]],[10,"try_sqrt","","",0,[[],["option"]]],[8,"ClosedAdd","","Trait alias for `Add` and `AddAssign` with result of type…",null,null],[8,"ClosedDiv","","Trait alias for `Div` and `DivAssign` with result of type…",null,null],[8,"ClosedMul","","Trait alias for `Mul` and `MulAssign` with result of type…",null,null],[8,"ClosedNeg","","Trait alias for `Neg` with result of type `Self`.",null,null],[8,"ClosedSub","","Trait alias for `Sub` and `SubAssign` with result of type…",null,null],[8,"Field","","Trait implemented by fields, i.e., complex numbers and…",null,null],[8,"RealField","","Trait shared by all reals.",null,null],[10,"is_sign_positive","","Is the sign of this real number positive?",1,[[],["bool"]]],[10,"is_sign_negative","","Is the sign of this real number negative?",1,[[],["bool"]]],[10,"max","","",1,[[],["self"]]],[10,"min","","",1,[[],["self"]]],[10,"clamp","","",1,[[],["self"]]],[10,"atan2","","",1,[[],["self"]]],[10,"pi","","",1,[[],["self"]]],[10,"two_pi","","",1,[[],["self"]]],[10,"frac_pi_2","","",1,[[],["self"]]],[10,"frac_pi_3","","",1,[[],["self"]]],[10,"frac_pi_4","","",1,[[],["self"]]],[10,"frac_pi_6","","",1,[[],["self"]]],[10,"frac_pi_8","","",1,[[],["self"]]],[10,"frac_1_pi","","",1,[[],["self"]]],[10,"frac_2_pi","","",1,[[],["self"]]],[10,"frac_2_sqrt_pi","","",1,[[],["self"]]],[10,"e","","",1,[[],["self"]]],[10,"log2_e","","",1,[[],["self"]]],[10,"log10_e","","",1,[[],["self"]]],[10,"ln_2","","",1,[[],["self"]]],[10,"ln_10","","",1,[[],["self"]]],[8,"SubsetOf","","Nested sets and conversions between them (using an…",null,null],[10,"to_superset","","The inclusion map: converts `self` to the equivalent…",2,[[["self"]],["t"]]],[11,"from_superset","","The inverse inclusion map: attempts to construct `self`…",2,[[["t"]],["option"]]],[10,"from_superset_unchecked","","Use with care! Same as `self.to_superset` but without any…",2,[[["t"]],["self"]]],[10,"is_in_subset","","Checks if `element` is actually part of the subset `Self`…",2,[[["t"]],["bool"]]],[8,"SupersetOf","","Nested sets and conversions between them. Useful to work…",null,null],[11,"to_subset","","The inverse inclusion map: attempts to construct `self`…",3,[[["self"]],["option"]]],[10,"is_in_subset","","Checks if `self` is actually part of its subset `T` (and…",3,[[["self"]],["bool"]]],[10,"to_subset_unchecked","","Use with care! Same as `self.to_subset` but without any…",3,[[["self"]],["t"]]],[10,"from_subset","","The inclusion map: converts `self` to the equivalent…",3,[[["t"]],["self"]]],[0,"simd","simba","Traits implemented by SIMD types and non-SIMD types.",null,null],[3,"SimdOption","simba::simd","Generalization of Option for SIMD computation.",null,null],[11,"new","","Creates a new SIMD option by combining a value and a mask…",4,[[["v"]],["self"]]],[11,"mask","","Return the underlying SIMD boolean mask.",4,[[["self"]]]],[11,"value","","Return the underlying unfiltered value.",4,[[["self"]],["v"]]],[11,"option","","Converts this SIMD option to a strandard Option.",4,[[],["option"]]],[11,"simd_unwrap","","Retrieve the underlying value if all the bits of…",4,[[],["v"]]],[11,"simd_unwrap_or","","Merges the value of `self` with the value of `other`.",4,[[],["v"]]],[8,"SimdBool","","Lane-wise generalization of `bool` for SIMD booleans.",null,null],[10,"and","","Lane-wise bitwise and of the vector elements.",5,[[],["bool"]]],[10,"or","","Lane-wise bitwise or of the vector elements.",5,[[],["bool"]]],[10,"xor","","Lane-wise bitwise xor of the vector elements.",5,[[],["bool"]]],[10,"all","","Are all vector lanes true?",5,[[],["bool"]]],[10,"any","","Is any vector lane true?",5,[[],["bool"]]],[10,"none","","Are all vector lanes false?",5,[[],["bool"]]],[10,"if_else","","Merges the value of `if_value()` and `else_value()`…",5,[[],["simdvalue"]]],[10,"if_else2","","Merges the value of `if_value()` and `else_if.1()` and…",5,[[],["simdvalue"]]],[10,"if_else3","","Merges the value of `if_value()` and `else_if.1()` and…",5,[[],["simdvalue"]]],[8,"SimdComplexField","","Lane-wise generalisation of `ComplexField` for SIMD…",null,null],[16,"SimdRealField","","Type of the coefficients of a complex number.",6,null],[10,"from_simd_real","","Builds a pure-real complex number from the given value.",6,[[],["self"]]],[10,"simd_real","","The real part of this complex number.",6,[[]]],[10,"simd_imaginary","","The imaginary part of this complex number.",6,[[]]],[10,"simd_modulus","","The modulus of this complex number.",6,[[]]],[10,"simd_modulus_squared","","The squared modulus of this complex number.",6,[[]]],[10,"simd_argument","","The argument of this complex number.",6,[[]]],[10,"simd_norm1","","The sum of the absolute value of this complex number's…",6,[[]]],[10,"simd_scale","","Multiplies this complex number by `factor`.",6,[[],["self"]]],[10,"simd_unscale","","Divides this complex number by `factor`.",6,[[],["self"]]],[11,"simd_to_polar","","The polar form of this complex number: (modulus, arg)",6,[[]]],[11,"simd_to_exp","","The exponential form of this complex number: (modulus,…",6,[[]]],[11,"simd_signum","","The exponential part of this complex number: `self /…",6,[[],["self"]]],[10,"simd_floor","","",6,[[],["self"]]],[10,"simd_ceil","","",6,[[],["self"]]],[10,"simd_round","","",6,[[],["self"]]],[10,"simd_trunc","","",6,[[],["self"]]],[10,"simd_fract","","",6,[[],["self"]]],[10,"simd_mul_add","","",6,[[],["self"]]],[10,"simd_abs","","The absolute value of this complex number: `self /…",6,[[]]],[10,"simd_hypot","","Computes (self.conjugate() * self + other.conjugate() *…",6,[[]]],[10,"simd_recip","","",6,[[],["self"]]],[10,"simd_conjugate","","",6,[[],["self"]]],[10,"simd_sin","","",6,[[],["self"]]],[10,"simd_cos","","",6,[[],["self"]]],[10,"simd_sin_cos","","",6,[[]]],[11,"simd_sinh_cosh","","",6,[[]]],[10,"simd_tan","","",6,[[],["self"]]],[10,"simd_asin","","",6,[[],["self"]]],[10,"simd_acos","","",6,[[],["self"]]],[10,"simd_atan","","",6,[[],["self"]]],[10,"simd_sinh","","",6,[[],["self"]]],[10,"simd_cosh","","",6,[[],["self"]]],[10,"simd_tanh","","",6,[[],["self"]]],[10,"simd_asinh","","",6,[[],["self"]]],[10,"simd_acosh","","",6,[[],["self"]]],[10,"simd_atanh","","",6,[[],["self"]]],[11,"simd_sinc","","Cardinal sine",6,[[],["self"]]],[11,"simd_sinhc","","",6,[[],["self"]]],[11,"simd_cosc","","Cardinal cos",6,[[],["self"]]],[11,"simd_coshc","","",6,[[],["self"]]],[10,"simd_log","","",6,[[],["self"]]],[10,"simd_log2","","",6,[[],["self"]]],[10,"simd_log10","","",6,[[],["self"]]],[10,"simd_ln","","",6,[[],["self"]]],[10,"simd_ln_1p","","",6,[[],["self"]]],[10,"simd_sqrt","","",6,[[],["self"]]],[10,"simd_exp","","",6,[[],["self"]]],[10,"simd_exp2","","",6,[[],["self"]]],[10,"simd_exp_m1","","",6,[[],["self"]]],[10,"simd_powi","","",6,[[["i32"]],["self"]]],[10,"simd_powf","","",6,[[],["self"]]],[10,"simd_powc","","",6,[[],["self"]]],[10,"simd_cbrt","","",6,[[],["self"]]],[8,"SimdPartialOrd","","Lane-wise generalization of the standard `PartialOrd` for…",null,null],[10,"simd_gt","","Lanewise greater than `>` comparison.",7,[[]]],[10,"simd_lt","","Lanewise less than `<` comparison.",7,[[]]],[10,"simd_ge","","Lanewise greater or equal `>=` comparison.",7,[[]]],[10,"simd_le","","Lanewise less or equal `<=` comparison.",7,[[]]],[10,"simd_eq","","Lanewise equal `==` comparison.",7,[[]]],[10,"simd_ne","","Lanewise not equal `!=` comparison.",7,[[]]],[10,"simd_max","","Lanewise max value.",7,[[],["self"]]],[10,"simd_min","","Lanewise min value.",7,[[],["self"]]],[10,"simd_clamp","","Clamps each lane of `self` between the correspondin lane…",7,[[],["self"]]],[8,"SimdRealField","","Lanewise generalization of `RealField` for SIMD reals.",null,null],[10,"simd_atan2","","",8,[[],["self"]]],[10,"simd_default_epsilon","","",8,[[],["self"]]],[10,"simd_pi","","",8,[[],["self"]]],[10,"simd_two_pi","","",8,[[],["self"]]],[10,"simd_frac_pi_2","","",8,[[],["self"]]],[10,"simd_frac_pi_3","","",8,[[],["self"]]],[10,"simd_frac_pi_4","","",8,[[],["self"]]],[10,"simd_frac_pi_6","","",8,[[],["self"]]],[10,"simd_frac_pi_8","","",8,[[],["self"]]],[10,"simd_frac_1_pi","","",8,[[],["self"]]],[10,"simd_frac_2_pi","","",8,[[],["self"]]],[10,"simd_frac_2_sqrt_pi","","",8,[[],["self"]]],[10,"simd_e","","",8,[[],["self"]]],[10,"simd_log2_e","","",8,[[],["self"]]],[10,"simd_log10_e","","",8,[[],["self"]]],[10,"simd_ln_2","","",8,[[],["self"]]],[10,"simd_ln_10","","",8,[[],["self"]]],[8,"SimdSigned","","A lane-wise generalization of `num::Signed` for SIMD values.",null,null],[10,"simd_abs","","The absolute value of each lane of `self`.",9,[[["self"]],["self"]]],[10,"simd_abs_sub","","The absolute difference of each lane of `self`.",9,[[["self"]],["self"]]],[10,"simd_signum","","The signum of each lane of `Self`.",9,[[["self"]],["self"]]],[10,"is_simd_positive","","Tests which lane is positive.",9,[[["self"]]]],[10,"is_simd_negative","","Tests which lane is negative.",9,[[["self"]]]],[8,"PrimitiveSimdValue","","Marker trait implemented by SIMD and non-SIMD primitive…",null,null],[8,"SimdValue","","Base trait for every SIMD types.",null,null],[16,"Element","","The type of the elements of each lane of this SIMD value.",10,null],[16,"SimdBool","","Type of the result of comparing two SIMD values like `self`.",10,null],[10,"lanes","","The number of lanes of this SIMD value.",10,[[],["usize"]]],[10,"splat","","Initializes an SIMD value with each lanes set to `val`.",10,[[],["self"]]],[10,"extract","","Extracts the i-th lane of `self`.",10,[[["self"],["usize"]]]],[10,"extract_unchecked","","Extracts the i-th lane of `self` without bound-checking.",10,[[["self"],["usize"]]]],[10,"replace","","Replaces the i-th lane of `self` by `val`.",10,[[["self"],["usize"]]]],[10,"replace_unchecked","","Replaces the i-th lane of `self` by `val` without…",10,[[["self"],["usize"]]]],[10,"select","","Merges `self` and `other` depending on the lanes of `cond`.",10,[[],["self"]]],[11,"map_lanes","","Applies a function to each lane of `self`.",10,[[],["self"]]],[11,"zip_map_lanes","","Applies a function to each lane of `self` paired with the…",10,[[],["self"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_polar","simba::scalar","The polar form of this complex number: (modulus, arg)",0,[[]]],[11,"to_exp","","The exponential form of this complex number: (modulus,…",0,[[]]],[11,"signum","","The exponential part of this complex number: `self /…",0,[[],["self"]]],[11,"sinh_cosh","","",0,[[]]],[11,"sinc","","Cardinal sine",0,[[],["self"]]],[11,"sinhc","","",0,[[],["self"]]],[11,"cosc","","Cardinal cos",0,[[],["self"]]],[11,"coshc","","",0,[[],["self"]]],[11,"from_superset","","The inverse inclusion map: attempts to construct `self`…",2,[[["t"]],["option"]]],[11,"to_subset","","The inverse inclusion map: attempts to construct `self`…",3,[[["self"]],["option"]]],[11,"simd_to_polar","simba::simd","The polar form of this complex number: (modulus, arg)",6,[[]]],[11,"simd_to_exp","","The exponential form of this complex number: (modulus,…",6,[[]]],[11,"simd_signum","","The exponential part of this complex number: `self /…",6,[[],["self"]]],[11,"simd_sinh_cosh","","",6,[[]]],[11,"simd_sinc","","Cardinal sine",6,[[],["self"]]],[11,"simd_sinhc","","",6,[[],["self"]]],[11,"simd_cosc","","Cardinal cos",6,[[],["self"]]],[11,"simd_coshc","","",6,[[],["self"]]],[11,"map_lanes","","Applies a function to each lane of `self`.",10,[[],["self"]]],[11,"zip_map_lanes","","Applies a function to each lane of `self` paired with the…",10,[[],["self"]]]],"p":[[8,"ComplexField"],[8,"RealField"],[8,"SubsetOf"],[8,"SupersetOf"],[3,"SimdOption"],[8,"SimdBool"],[8,"SimdComplexField"],[8,"SimdPartialOrd"],[8,"SimdRealField"],[8,"SimdSigned"],[8,"SimdValue"]]};
searchIndex["siphasher"] = {"doc":"","i":[[0,"sip","siphasher","An implementation of SipHash.",null,null],[3,"SipHasher13","siphasher::sip","An implementation of SipHash 1-3.",null,null],[3,"SipHasher24","","An implementation of SipHash 2-4.",null,null],[3,"SipHasher","","An implementation of SipHash 2-4.",null,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to…",0,[[],["siphasher"]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",0,[[["u64"]],["siphasher"]]],[11,"keys","","Get the keys used by this hasher",0,[[["self"]]]],[11,"new","","Creates a new `SipHasher13` with the two initial keys set…",1,[[],["siphasher13"]]],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",1,[[["u64"]],["siphasher13"]]],[11,"keys","","Get the keys used by this hasher",1,[[["self"]]]],[11,"new","","Creates a new `SipHasher24` with the two initial keys set…",2,[[],["siphasher24"]]],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",2,[[["u64"]],["siphasher24"]]],[11,"keys","","Get the keys used by this hasher",2,[[["self"]]]],[0,"sip128","siphasher","An implementation of SipHash with a 128-bit output.",null,null],[3,"Hash128","siphasher::sip128","A 128-bit (2x64) hash output",null,null],[12,"h1","","",3,null],[12,"h2","","",3,null],[3,"SipHasher13","","An implementation of SipHash128 1-3.",null,null],[3,"SipHasher24","","An implementation of SipHash128 2-4.",null,null],[3,"SipHasher","","An implementation of SipHash128 2-4.",null,null],[8,"Hasher128","","",null,null],[10,"finish128","","Return a 128-bit hash",4,[[["self"]],["hash128"]]],[11,"new","","Creates a new `SipHasher` with the two initial keys set to…",5,[[],["siphasher"]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",5,[[["u64"]],["siphasher"]]],[11,"keys","","Get the keys used by this hasher",5,[[["self"]]]],[11,"new","","Creates a new `SipHasher13` with the two initial keys set…",6,[[],["siphasher13"]]],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",6,[[["u64"]],["siphasher13"]]],[11,"keys","","Get the keys used by this hasher",6,[[["self"]]]],[11,"new","","Creates a new `SipHasher24` with the two initial keys set…",7,[[],["siphasher24"]]],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",7,[[["u64"]],["siphasher24"]]],[11,"keys","","Get the keys used by this hasher",7,[[["self"]]]],[11,"as_bytes","","Convert into a 16-bytes vector",3,[[["self"]]]],[11,"as_u128","","Convert into a `u128`",3,[[["self"]],["u128"]]],[11,"as_u64","","Convert into `(u64, u64)`",3,[[["self"]]]],[11,"from","siphasher::sip","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","siphasher::sip128","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"finish128","","Return a 128-bit hash",5,[[["self"]],["hash128"]]],[11,"finish128","","Return a 128-bit hash",6,[[["self"]],["hash128"]]],[11,"finish128","","Return a 128-bit hash",7,[[["self"]],["hash128"]]],[11,"from","","",3,[[["u128"]],["self"]]],[11,"fmt","siphasher::sip","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","siphasher::sip128","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"write","siphasher::sip","",0,[[["self"]]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",1,[[["self"]]]],[11,"finish","","",1,[[["self"]],["u64"]]],[11,"write","","",2,[[["self"]]]],[11,"finish","","",2,[[["self"]],["u64"]]],[11,"write","siphasher::sip128","",5,[[["self"]]]],[11,"finish","","",5,[[["self"]],["u64"]]],[11,"write","","",6,[[["self"]]]],[11,"finish","","",6,[[["self"]],["u64"]]],[11,"write","","",7,[[["self"]]]],[11,"finish","","",7,[[["self"]],["u64"]]],[11,"into","","",3,[[],["u128"]]],[11,"clone","siphasher::sip","",1,[[["self"]],["siphasher13"]]],[11,"clone","","",2,[[["self"]],["siphasher24"]]],[11,"clone","","",0,[[["self"]],["siphasher"]]],[11,"clone","siphasher::sip128","",3,[[["self"]],["hash128"]]],[11,"clone","","",6,[[["self"]],["siphasher13"]]],[11,"clone","","",7,[[["self"]],["siphasher24"]]],[11,"clone","","",5,[[["self"]],["siphasher"]]],[11,"default","siphasher::sip","",1,[[],["siphasher13"]]],[11,"default","","",2,[[],["siphasher24"]]],[11,"default","","",0,[[],["siphasher"]]],[11,"default","siphasher::sip128","",3,[[],["hash128"]]],[11,"default","","",6,[[],["siphasher13"]]],[11,"default","","",7,[[],["siphasher24"]]],[11,"default","","",5,[[],["siphasher"]]]],"p":[[3,"SipHasher"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"Hash128"],[8,"Hasher128"],[3,"SipHasher"],[3,"SipHasher13"],[3,"SipHasher24"]]};
searchIndex["slice_of_array"] = {"doc":"Extension traits for viewing a slice as a slice of arrays…","i":[[0,"prelude","slice_of_array","",null,null],[8,"IsSliceomorphic","","Marker trait used in bounds of `Slice{Flat,Nest,Array}Ext`.",null,null],[16,"Element","","",0,null],[18,"LEN","","",0,null],[8,"SliceFlatExt","","Permits viewing a slice of arrays as a flat slice.",null,null],[10,"flat","","View `&[[T; n]]` as `&[T]`.",1,[[["self"]]]],[10,"flat_mut","","View `&mut [[T; n]]` as `&mut [T]`",1,[[["self"]]]],[8,"SliceNestExt","","Permits viewing a slice as a slice of arrays.",null,null],[10,"nest","","View `&[T]` as `&[[T; n]]` without copying.",2,[[["self"]]]],[10,"nest_mut","","View `&mut [T]` as `&mut [[T; n]]` without copying.",2,[[["self"]]]],[8,"SliceArrayExt","","Permits viewing a slice as an array.",null,null],[10,"as_array","","View `&[T]` as `&[T; n]`.",3,[[["self"]],["v"]]],[10,"as_mut_array","","View `&mut [T]` as `&mut [T; n]`.",3,[[["self"]],["v"]]],[11,"to_array","","Clone `&[T]` to `[T; n]`.",3,[[["self"]],["issliceomorphic"]]]],"p":[[8,"IsSliceomorphic"],[8,"SliceFlatExt"],[8,"SliceNestExt"],[8,"SliceArrayExt"]]};
searchIndex["syn"] = {"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tokens","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",null,null],[12,"attrs","","",10,null],[12,"pat","","",10,null],[12,"guard","","",10,null],[12,"fat_arrow_token","","",10,null],[12,"body","","",10,null],[12,"comma","","",10,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",11,null],[12,"member","","Name or index of the field.",11,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",11,null],[12,"expr","","Value of the field.",11,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",12,null],[12,"colon_token","","",12,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",null,null],[12,"colon2_token","","",13,null],[12,"lt_token","","",13,null],[12,"args","","",13,null],[12,"gt_token","","",13,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",14,null],[12,"bracket_token","","",14,null],[12,"elems","","",14,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",15,null],[12,"left","","",15,null],[12,"eq_token","","",15,null],[12,"right","","",15,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",16,null],[12,"left","","",16,null],[12,"op","","",16,null],[12,"right","","",16,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[12,"attrs","","",17,null],[12,"async_token","","",17,null],[12,"capture","","",17,null],[12,"block","","",17,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[12,"attrs","","",18,null],[12,"base","","",18,null],[12,"dot_token","","",18,null],[12,"await_token","","",18,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",19,null],[12,"left","","",19,null],[12,"op","","",19,null],[12,"right","","",19,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",20,null],[12,"label","","",20,null],[12,"block","","",20,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",21,null],[12,"box_token","","",21,null],[12,"expr","","",21,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[12,"attrs","","",22,null],[12,"break_token","","",22,null],[12,"label","","",22,null],[12,"expr","","",22,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",23,null],[12,"func","","",23,null],[12,"paren_token","","",23,null],[12,"args","","",23,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",24,null],[12,"expr","","",24,null],[12,"as_token","","",24,null],[12,"ty","","",24,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",25,null],[12,"asyncness","","",25,null],[12,"movability","","",25,null],[12,"capture","","",25,null],[12,"or1_token","","",25,null],[12,"inputs","","",25,null],[12,"or2_token","","",25,null],[12,"output","","",25,null],[12,"body","","",25,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",26,null],[12,"continue_token","","",26,null],[12,"label","","",26,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",27,null],[12,"base","","",27,null],[12,"dot_token","","",27,null],[12,"member","","",27,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",28,null],[12,"label","","",28,null],[12,"for_token","","",28,null],[12,"pat","","",28,null],[12,"in_token","","",28,null],[12,"expr","","",28,null],[12,"body","","",28,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",29,null],[12,"group_token","","",29,null],[12,"expr","","",29,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[12,"attrs","","",30,null],[12,"if_token","","",30,null],[12,"cond","","",30,null],[12,"then_branch","","",30,null],[12,"else_branch","","",30,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",31,null],[12,"expr","","",31,null],[12,"bracket_token","","",31,null],[12,"index","","",31,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[12,"attrs","","",32,null],[12,"let_token","","",32,null],[12,"pat","","",32,null],[12,"eq_token","","",32,null],[12,"expr","","",32,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",null,null],[12,"attrs","","",33,null],[12,"lit","","",33,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",34,null],[12,"label","","",34,null],[12,"loop_token","","",34,null],[12,"body","","",34,null],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",null,null],[12,"attrs","","",35,null],[12,"mac","","",35,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[12,"attrs","","",36,null],[12,"match_token","","",36,null],[12,"expr","","",36,null],[12,"brace_token","","",36,null],[12,"arms","","",36,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",37,null],[12,"receiver","","",37,null],[12,"dot_token","","",37,null],[12,"method","","",37,null],[12,"turbofish","","",37,null],[12,"paren_token","","",37,null],[12,"args","","",37,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",38,null],[12,"paren_token","","",38,null],[12,"expr","","",38,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",39,null],[12,"qself","","",39,null],[12,"path","","",39,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",40,null],[12,"from","","",40,null],[12,"limits","","",40,null],[12,"to","","",40,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",41,null],[12,"and_token","","",41,null],[12,"raw","","",41,null],[12,"mutability","","",41,null],[12,"expr","","",41,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[12,"attrs","","",42,null],[12,"bracket_token","","",42,null],[12,"expr","","",42,null],[12,"semi_token","","",42,null],[12,"len","","",42,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",43,null],[12,"return_token","","",43,null],[12,"expr","","",43,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",44,null],[12,"path","","",44,null],[12,"brace_token","","",44,null],[12,"fields","","",44,null],[12,"dot2_token","","",44,null],[12,"rest","","",44,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",45,null],[12,"expr","","",45,null],[12,"question_token","","",45,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[12,"attrs","","",46,null],[12,"try_token","","",46,null],[12,"block","","",46,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",47,null],[12,"paren_token","","",47,null],[12,"elems","","",47,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",48,null],[12,"expr","","",48,null],[12,"colon_token","","",48,null],[12,"ty","","",48,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",49,null],[12,"op","","",49,null],[12,"expr","","",49,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",50,null],[12,"unsafe_token","","",50,null],[12,"block","","",50,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",51,null],[12,"label","","",51,null],[12,"while_token","","",51,null],[12,"cond","","",51,null],[12,"body","","",51,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",52,null],[12,"yield_token","","",52,null],[12,"expr","","",52,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",53,null],[12,"span","","",53,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",null,null],[12,"for_token","","",54,null],[12,"lt_token","","",54,null],[12,"lifetimes","","",54,null],[12,"gt_token","","",54,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",55,null],[12,"const_token","","",55,null],[12,"ident","","",55,null],[12,"colon_token","","",55,null],[12,"ty","","",55,null],[12,"eq_token","","",55,null],[12,"default","","",55,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",56,null],[12,"params","","",56,null],[12,"gt_token","","",56,null],[12,"where_clause","","",56,null],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",null,null],[12,"attrs","","",57,null],[12,"lifetime","","",57,null],[12,"colon_token","","",57,null],[12,"bounds","","",57,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",58,null],[12,"eq_token","","",58,null],[12,"rhs_ty","","",58,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",null,null],[12,"lifetime","","",59,null],[12,"colon_token","","",59,null],[12,"bounds","","",59,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",60,null],[12,"bounded_ty","","The type being bounded",60,null],[12,"colon_token","","",60,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",60,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",61,null],[12,"modifier","","",61,null],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",61,null],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",61,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",62,null],[12,"ident","","",62,null],[12,"colon_token","","",62,null],[12,"bounds","","",62,null],[12,"eq_token","","",62,null],[12,"default","","",62,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",63,null],[12,"predicates","","",63,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",64,null],[12,"vis","","",64,null],[12,"sig","","",64,null],[12,"semi_token","","",64,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",65,null],[12,"mac","","",65,null],[12,"semi_token","","",65,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",null,null],[12,"attrs","","",66,null],[12,"vis","","",66,null],[12,"static_token","","",66,null],[12,"mutability","","",66,null],[12,"ident","","",66,null],[12,"colon_token","","",66,null],[12,"ty","","",66,null],[12,"semi_token","","",66,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",67,null],[12,"vis","","",67,null],[12,"type_token","","",67,null],[12,"ident","","",67,null],[12,"semi_token","","",67,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",68,null],[12,"vis","","",68,null],[12,"defaultness","","",68,null],[12,"const_token","","",68,null],[12,"ident","","",68,null],[12,"colon_token","","",68,null],[12,"ty","","",68,null],[12,"eq_token","","",68,null],[12,"expr","","",68,null],[12,"semi_token","","",68,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",69,null],[12,"mac","","",69,null],[12,"semi_token","","",69,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",70,null],[12,"vis","","",70,null],[12,"defaultness","","",70,null],[12,"sig","","",70,null],[12,"block","","",70,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",71,null],[12,"vis","","",71,null],[12,"defaultness","","",71,null],[12,"type_token","","",71,null],[12,"ident","","",71,null],[12,"generics","","",71,null],[12,"eq_token","","",71,null],[12,"ty","","",71,null],[12,"semi_token","","",71,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",72,null],[12,"vis","","",72,null],[12,"const_token","","",72,null],[12,"ident","","",72,null],[12,"colon_token","","",72,null],[12,"ty","","",72,null],[12,"eq_token","","",72,null],[12,"expr","","",72,null],[12,"semi_token","","",72,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",null,null],[12,"attrs","","",73,null],[12,"vis","","",73,null],[12,"enum_token","","",73,null],[12,"ident","","",73,null],[12,"generics","","",73,null],[12,"brace_token","","",73,null],[12,"variants","","",73,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",74,null],[12,"vis","","",74,null],[12,"extern_token","","",74,null],[12,"crate_token","","",74,null],[12,"ident","","",74,null],[12,"rename","","",74,null],[12,"semi_token","","",74,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",75,null],[12,"vis","","",75,null],[12,"sig","","",75,null],[12,"block","","",75,null],[3,"ItemForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",null,null],[12,"attrs","","",76,null],[12,"abi","","",76,null],[12,"brace_token","","",76,null],[12,"items","","",76,null],[3,"ItemImpl","","An impl block providing trait or associated items:…",null,null],[12,"attrs","","",77,null],[12,"defaultness","","",77,null],[12,"unsafety","","",77,null],[12,"impl_token","","",77,null],[12,"generics","","",77,null],[12,"trait_","","Trait this impl implements.",77,null],[12,"self_ty","","The Self type of the impl.",77,null],[12,"brace_token","","",77,null],[12,"items","","",77,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",null,null],[12,"attrs","","",78,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",78,null],[12,"mac","","",78,null],[12,"semi_token","","",78,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",null,null],[12,"attrs","","",79,null],[12,"vis","","",79,null],[12,"macro_token","","",79,null],[12,"ident","","",79,null],[12,"rules","","",79,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",80,null],[12,"vis","","",80,null],[12,"mod_token","","",80,null],[12,"ident","","",80,null],[12,"content","","",80,null],[12,"semi","","",80,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",81,null],[12,"vis","","",81,null],[12,"static_token","","",81,null],[12,"mutability","","",81,null],[12,"ident","","",81,null],[12,"colon_token","","",81,null],[12,"ty","","",81,null],[12,"eq_token","","",81,null],[12,"expr","","",81,null],[12,"semi_token","","",81,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",82,null],[12,"vis","","",82,null],[12,"struct_token","","",82,null],[12,"ident","","",82,null],[12,"generics","","",82,null],[12,"fields","","",82,null],[12,"semi_token","","",82,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",83,null],[12,"vis","","",83,null],[12,"unsafety","","",83,null],[12,"auto_token","","",83,null],[12,"trait_token","","",83,null],[12,"ident","","",83,null],[12,"generics","","",83,null],[12,"colon_token","","",83,null],[12,"supertraits","","",83,null],[12,"brace_token","","",83,null],[12,"items","","",83,null],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",null,null],[12,"attrs","","",84,null],[12,"vis","","",84,null],[12,"trait_token","","",84,null],[12,"ident","","",84,null],[12,"generics","","",84,null],[12,"eq_token","","",84,null],[12,"bounds","","",84,null],[12,"semi_token","","",84,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",null,null],[12,"attrs","","",85,null],[12,"vis","","",85,null],[12,"type_token","","",85,null],[12,"ident","","",85,null],[12,"generics","","",85,null],[12,"eq_token","","",85,null],[12,"ty","","",85,null],[12,"semi_token","","",85,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",86,null],[12,"vis","","",86,null],[12,"union_token","","",86,null],[12,"ident","","",86,null],[12,"generics","","",86,null],[12,"fields","","",86,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",87,null],[12,"vis","","",87,null],[12,"use_token","","",87,null],[12,"leading_colon","","",87,null],[12,"tree","","",87,null],[12,"semi_token","","",87,null],[3,"Receiver","","The `self` argument of an associated method, whether taken…",null,null],[12,"attrs","","",88,null],[12,"reference","","",88,null],[12,"mutability","","",88,null],[12,"self_token","","",88,null],[3,"Signature","","A function signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",89,null],[12,"asyncness","","",89,null],[12,"unsafety","","",89,null],[12,"abi","","",89,null],[12,"fn_token","","",89,null],[12,"ident","","",89,null],[12,"generics","","",89,null],[12,"paren_token","","",89,null],[12,"inputs","","",89,null],[12,"variadic","","",89,null],[12,"output","","",89,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",90,null],[12,"const_token","","",90,null],[12,"ident","","",90,null],[12,"colon_token","","",90,null],[12,"ty","","",90,null],[12,"default","","",90,null],[12,"semi_token","","",90,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",91,null],[12,"mac","","",91,null],[12,"semi_token","","",91,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",92,null],[12,"sig","","",92,null],[12,"default","","",92,null],[12,"semi_token","","",92,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",93,null],[12,"type_token","","",93,null],[12,"ident","","",93,null],[12,"generics","","",93,null],[12,"colon_token","","",93,null],[12,"bounds","","",93,null],[12,"default","","",93,null],[12,"semi_token","","",93,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",94,null],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",95,null],[12,"items","","",95,null],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",null,null],[12,"ident","","",96,null],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",null,null],[12,"ident","","",97,null],[12,"colon2_token","","",97,null],[12,"tree","","",97,null],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",null,null],[12,"ident","","",98,null],[12,"as_token","","",98,null],[12,"rename","","",98,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",99,null],[12,"attrs","","",99,null],[12,"items","","",99,null],[3,"Lifetime","","A Rust lifetime: `'a`.",null,null],[12,"apostrophe","","",100,null],[12,"ident","","",100,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",101,null],[12,"span","","",101,null],[3,"LitByte","","A byte literal: `b'f'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",null,null],[3,"LitChar","","A character literal: `'a'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",null,null],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",null,null],[12,"path","","",102,null],[12,"bang_token","","",102,null],[12,"delimiter","","",102,null],[12,"tokens","","",102,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",103,null],[12,"brace_token","","",103,null],[12,"variants","","",103,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",104,null],[12,"fields","","",104,null],[12,"semi_token","","",104,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",105,null],[12,"fields","","",105,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",106,null],[12,"vis","","Visibility of the struct or enum.",106,null],[12,"ident","","Name of the struct or enum.",106,null],[12,"generics","","Generics required to complete the definition.",106,null],[12,"data","","Data within the struct or enum.",106,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",107,null],[12,"stmts","","Statements in a block",107,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",108,null],[12,"let_token","","",108,null],[12,"pat","","",108,null],[12,"init","","",108,null],[12,"semi_token","","",108,null],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",null,null],[12,"extern_token","","",109,null],[12,"name","","",109,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",110,null],[12,"name","","",110,null],[12,"ty","","",110,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",111,null],[12,"elem","","",111,null],[12,"semi_token","","",111,null],[12,"len","","",111,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",112,null],[12,"unsafety","","",112,null],[12,"abi","","",112,null],[12,"fn_token","","",112,null],[12,"paren_token","","",112,null],[12,"inputs","","",112,null],[12,"variadic","","",112,null],[12,"output","","",112,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",113,null],[12,"elem","","",113,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",114,null],[12,"bounds","","",114,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",115,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",116,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",117,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",118,null],[12,"elem","","",118,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",119,null],[12,"path","","",119,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",120,null],[12,"const_token","","",120,null],[12,"mutability","","",120,null],[12,"elem","","",120,null],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",null,null],[12,"and_token","","",121,null],[12,"lifetime","","",121,null],[12,"mutability","","",121,null],[12,"elem","","",121,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",122,null],[12,"elem","","",122,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",123,null],[12,"bounds","","",123,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",124,null],[12,"elems","","",124,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",125,null],[12,"dots","","",125,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",126,null],[12,"member","","",126,null],[12,"colon_token","","",126,null],[12,"pat","","",126,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"attrs","","",127,null],[12,"box_token","","",127,null],[12,"pat","","",127,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"attrs","","",128,null],[12,"by_ref","","",128,null],[12,"mutability","","",128,null],[12,"ident","","",128,null],[12,"subpat","","",128,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"attrs","","",129,null],[12,"expr","","",129,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",130,null],[12,"mac","","",130,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",131,null],[12,"leading_vert","","",131,null],[12,"cases","","",131,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",null,null],[12,"attrs","","",132,null],[12,"qself","","",132,null],[12,"path","","",132,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"attrs","","",133,null],[12,"lo","","",133,null],[12,"limits","","",133,null],[12,"hi","","",133,null],[3,"PatReference","","A reference pattern: `&mut var`.",null,null],[12,"attrs","","",134,null],[12,"and_token","","",134,null],[12,"mutability","","",134,null],[12,"pat","","",134,null],[3,"PatRest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",null,null],[12,"attrs","","",135,null],[12,"dot2_token","","",135,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",null,null],[12,"attrs","","",136,null],[12,"bracket_token","","",136,null],[12,"elems","","",136,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"attrs","","",137,null],[12,"path","","",137,null],[12,"brace_token","","",137,null],[12,"fields","","",137,null],[12,"dot2_token","","",137,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"attrs","","",138,null],[12,"paren_token","","",138,null],[12,"elems","","",138,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"attrs","","",139,null],[12,"path","","",139,null],[12,"pat","","",139,null],[3,"PatType","","A type ascription pattern: `foo: f64`.",null,null],[12,"attrs","","",140,null],[12,"pat","","",140,null],[12,"colon_token","","",140,null],[12,"ty","","",140,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"attrs","","",141,null],[12,"underscore_token","","",141,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",142,null],[12,"lt_token","","",142,null],[12,"args","","",142,null],[12,"gt_token","","",142,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",143,null],[12,"eq_token","","",143,null],[12,"ty","","",143,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",144,null],[12,"colon_token","","",144,null],[12,"bounds","","",144,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",145,null],[12,"inputs","","`(A, B)`",145,null],[12,"output","","`C`",145,null],[3,"Path","","A path at which a named item is exported:…",null,null],[12,"leading_colon","","",146,null],[12,"segments","","",146,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",147,null],[12,"arguments","","",147,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",148,null],[12,"ty","","",148,null],[12,"position","","",148,null],[12,"as_token","","",148,null],[12,"gt_token","","",148,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",149,null],[13,"Inner","","",149,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",150,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",150,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",150,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",151,null],[13,"Lit","","A Rust literal, like the `\"new_name\"` in…",151,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",152,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",152,null],[13,"Unit","","Unit struct or unit variant such as `None`.",152,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",153,null],[13,"Crate","","A crate-level visibility: `crate`.",153,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",153,null],[13,"Inherited","","An inherited visibility, which usually means private.",153,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",154,null],[13,"Const","","A const expression. Must be inside of a block.",154,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",155,null],[13,"Closed","","Inclusive at the beginning and end.",155,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",156,null],[13,"Assign","","An assignment expression: `a = compute()`.",156,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",156,null],[13,"Async","","An async block: `async { ... }`.",156,null],[13,"Await","","An await expression: `fut.await`.",156,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",156,null],[13,"Block","","A blocked scope: `{ ... }`.",156,null],[13,"Box","","A box expression: `box f`.",156,null],[13,"Break","","A `break`, with an optional label to break and an optional…",156,null],[13,"Call","","A function call expression: `invoke(a, b)`.",156,null],[13,"Cast","","A cast expression: `foo as f64`.",156,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",156,null],[13,"Continue","","A `continue`, with an optional label.",156,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",156,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",156,null],[13,"Group","","An expression contained within invisible delimiters.",156,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",156,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",156,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",156,null],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",156,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",156,null],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",156,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",156,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",156,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",156,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",156,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",156,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",156,null],[13,"Repeat","","An array literal constructed from one repeated element:…",156,null],[13,"Return","","A `return`, with an optional value to be returned.",156,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",156,null],[13,"Try","","A try-expression: `expr?`.",156,null],[13,"TryBlock","","A try block: `try { ... }`.",156,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",156,null],[13,"Type","","A type ascription expression: `foo: f64`.",156,null],[13,"Unary","","A unary operation: `!x`, `*x`.",156,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",156,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",156,null],[13,"While","","A while loop: `while expr { ... }`.",156,null],[13,"Yield","","A yield expression: `yield expr`.",156,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",157,null],[13,"Unnamed","","An unnamed field like `self.0`.",157,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",158,null],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",158,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",158,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",159,null],[13,"Maybe","","",159,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",160,null],[13,"Lifetime","","",160,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",161,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",161,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",161,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"Receiver","","The `self` argument of an associated method, whether taken…",162,null],[13,"Typed","","A function argument accepted by pattern and type.",162,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",163,null],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",163,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",163,null],[13,"Macro","","A macro invocation within an extern block.",163,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",163,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",164,null],[13,"Method","","A method within an impl block.",164,null],[13,"Type","","An associated type within an impl block.",164,null],[13,"Macro","","A macro invocation within an impl block.",164,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",164,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",165,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",165,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",165,null],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",165,null],[13,"ForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",165,null],[13,"Impl","","An impl block providing trait or associated items:…",165,null],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",165,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",165,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",165,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",165,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",165,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",165,null],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",165,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",165,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",165,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",165,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",165,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",166,null],[13,"Method","","A trait method within the definition of a trait.",166,null],[13,"Type","","An associated type within the definition of a trait.",166,null],[13,"Macro","","A macro invocation within the definition of a trait.",166,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",166,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",null,null],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",167,null],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",167,null],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",167,null],[13,"Glob","","A glob import in a `use` item: `*`.",167,null],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",167,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",168,null],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",168,null],[13,"Byte","","A byte literal: `b'f'`.",168,null],[13,"Char","","A character literal: `'a'`.",168,null],[13,"Int","","An integer literal: `1` or `1u16`.",168,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",168,null],[13,"Bool","","A boolean literal: `true` or `false`.",168,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",168,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\"data\"`.",169,null],[13,"Raw","","A raw string like `r##\"data\"##`.",169,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",170,null],[13,"Brace","","",170,null],[13,"Bracket","","",170,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",171,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",171,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",171,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",172,null],[13,"Sub","","The `-` operator (subtraction)",172,null],[13,"Mul","","The `*` operator (multiplication)",172,null],[13,"Div","","The `/` operator (division)",172,null],[13,"Rem","","The `%` operator (modulus)",172,null],[13,"And","","The `&&` operator (logical and)",172,null],[13,"Or","","The `||` operator (logical or)",172,null],[13,"BitXor","","The `^` operator (bitwise xor)",172,null],[13,"BitAnd","","The `&` operator (bitwise and)",172,null],[13,"BitOr","","The `|` operator (bitwise or)",172,null],[13,"Shl","","The `<<` operator (shift left)",172,null],[13,"Shr","","The `>>` operator (shift right)",172,null],[13,"Eq","","The `==` operator (equality)",172,null],[13,"Lt","","The `<` operator (less than)",172,null],[13,"Le","","The `<=` operator (less than or equal to)",172,null],[13,"Ne","","The `!=` operator (not equal to)",172,null],[13,"Ge","","The `>=` operator (greater than or equal to)",172,null],[13,"Gt","","The `>` operator (greater than)",172,null],[13,"AddEq","","The `+=` operator",172,null],[13,"SubEq","","The `-=` operator",172,null],[13,"MulEq","","The `*=` operator",172,null],[13,"DivEq","","The `/=` operator",172,null],[13,"RemEq","","The `%=` operator",172,null],[13,"BitXorEq","","The `^=` operator",172,null],[13,"BitAndEq","","The `&=` operator",172,null],[13,"BitOrEq","","The `|=` operator",172,null],[13,"ShlEq","","The `<<=` operator",172,null],[13,"ShrEq","","The `>>=` operator",172,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",173,null],[13,"Not","","The `!` operator for logical inversion",173,null],[13,"Neg","","The `-` operator for negation",173,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",174,null],[13,"Item","","An item definition.",174,null],[13,"Expr","","Expr without trailing semicolon.",174,null],[13,"Semi","","Expression with trailing semicolon.",174,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",175,null],[13,"Type","","A particular type is returned.",175,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",176,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",176,null],[13,"Group","","A type contained within invisible delimiters.",176,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",176,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",176,null],[13,"Macro","","A macro in the type position.",176,null],[13,"Never","","The never type: `!`.",176,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",176,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",176,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",176,null],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",176,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",176,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",176,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",176,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",176,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Box","","A box pattern: `box v`.",177,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",177,null],[13,"Lit","","A literal pattern: `0`.",177,null],[13,"Macro","","A macro in pattern position.",177,null],[13,"Or","","A pattern that matches any one of a set of cases.",177,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",177,null],[13,"Range","","A range pattern: `1..=2`.",177,null],[13,"Reference","","A reference pattern: `&mut var`.",177,null],[13,"Rest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",177,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",177,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",177,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",177,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",177,null],[13,"Type","","A type ascription pattern: `foo: f64`.",177,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",177,null],[13,"Wild","","A pattern that matches any value: `_`.",177,null],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",178,null],[13,"Type","","A type argument.",178,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",178,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",178,null],[13,"Const","","A const expression. Must be inside of a block.",178,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",179,null],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",179,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",179,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[["str"]],[["parse"],["result"]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[["str"]],[["file"],["result",["file"]]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",180,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",181,null],[3,"As","","`as`",null,null],[12,"span","","",182,null],[3,"Async","","`async`",null,null],[12,"span","","",183,null],[3,"Auto","","`auto`",null,null],[12,"span","","",184,null],[3,"Await","","`await`",null,null],[12,"span","","",185,null],[3,"Become","","`become`",null,null],[12,"span","","",186,null],[3,"Box","","`box`",null,null],[12,"span","","",187,null],[3,"Break","","`break`",null,null],[12,"span","","",188,null],[3,"Const","","`const`",null,null],[12,"span","","",189,null],[3,"Continue","","`continue`",null,null],[12,"span","","",190,null],[3,"Crate","","`crate`",null,null],[12,"span","","",191,null],[3,"Default","","`default`",null,null],[12,"span","","",192,null],[3,"Do","","`do`",null,null],[12,"span","","",193,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",194,null],[3,"Else","","`else`",null,null],[12,"span","","",195,null],[3,"Enum","","`enum`",null,null],[12,"span","","",196,null],[3,"Extern","","`extern`",null,null],[12,"span","","",197,null],[3,"Final","","`final`",null,null],[12,"span","","",198,null],[3,"Fn","","`fn`",null,null],[12,"span","","",199,null],[3,"For","","`for`",null,null],[12,"span","","",200,null],[3,"If","","`if`",null,null],[12,"span","","",201,null],[3,"Impl","","`impl`",null,null],[12,"span","","",202,null],[3,"In","","`in`",null,null],[12,"span","","",203,null],[3,"Let","","`let`",null,null],[12,"span","","",204,null],[3,"Loop","","`loop`",null,null],[12,"span","","",205,null],[3,"Macro","","`macro`",null,null],[12,"span","","",206,null],[3,"Match","","`match`",null,null],[12,"span","","",207,null],[3,"Mod","","`mod`",null,null],[12,"span","","",208,null],[3,"Move","","`move`",null,null],[12,"span","","",209,null],[3,"Mut","","`mut`",null,null],[12,"span","","",210,null],[3,"Override","","`override`",null,null],[12,"span","","",211,null],[3,"Priv","","`priv`",null,null],[12,"span","","",212,null],[3,"Pub","","`pub`",null,null],[12,"span","","",213,null],[3,"Ref","","`ref`",null,null],[12,"span","","",214,null],[3,"Return","","`return`",null,null],[12,"span","","",215,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",216,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",217,null],[3,"Static","","`static`",null,null],[12,"span","","",218,null],[3,"Struct","","`struct`",null,null],[12,"span","","",219,null],[3,"Super","","`super`",null,null],[12,"span","","",220,null],[3,"Trait","","`trait`",null,null],[12,"span","","",221,null],[3,"Try","","`try`",null,null],[12,"span","","",222,null],[3,"Type","","`type`",null,null],[12,"span","","",223,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",224,null],[3,"Union","","`union`",null,null],[12,"span","","",225,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",226,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",227,null],[3,"Use","","`use`",null,null],[12,"span","","",228,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",229,null],[3,"Where","","`where`",null,null],[12,"span","","",230,null],[3,"While","","`while`",null,null],[12,"span","","",231,null],[3,"Yield","","`yield`",null,null],[12,"span","","",232,null],[3,"Add","","`+`",null,null],[12,"spans","","",233,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",234,null],[3,"And","","`&`",null,null],[12,"spans","","",235,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",236,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",237,null],[3,"At","","`@`",null,null],[12,"spans","","",238,null],[3,"Bang","","`!`",null,null],[12,"spans","","",239,null],[3,"Caret","","`^`",null,null],[12,"spans","","",240,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",241,null],[3,"Colon","","`:`",null,null],[12,"spans","","",242,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",243,null],[3,"Comma","","`,`",null,null],[12,"spans","","",244,null],[3,"Div","","`/`",null,null],[12,"spans","","",245,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",246,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",247,null],[3,"Dot","","`.`",null,null],[12,"spans","","",248,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",249,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",250,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",251,null],[3,"Eq","","`=`",null,null],[12,"spans","","",252,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",253,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",254,null],[3,"Gt","","`>`",null,null],[12,"spans","","",255,null],[3,"Le","","`<=`",null,null],[12,"spans","","",256,null],[3,"Lt","","`<`",null,null],[12,"spans","","",257,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",258,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",259,null],[3,"Or","","`|`",null,null],[12,"spans","","",260,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",261,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",262,null],[3,"Pound","","`#`",null,null],[12,"spans","","",263,null],[3,"Question","","`?`",null,null],[12,"spans","","",264,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",265,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",266,null],[3,"Rem","","`%`",null,null],[12,"spans","","",267,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",268,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",269,null],[3,"Semi","","`;`",null,null],[12,"spans","","",270,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",271,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",272,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",273,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",274,null],[3,"Star","","`*`",null,null],[12,"spans","","",275,null],[3,"Sub","","`-`",null,null],[12,"spans","","",276,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",277,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",278,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",279,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",280,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",281,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",282,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",279,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",280,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",281,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",282,[[["tokenstream"],["self"],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["result",["meta"]],["meta"]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",0,[[["self"]],[["parse"],["result"]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",0,[[["parser"],["self"]],["result"]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],[["result",["vec"]],["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],[["result",["vec"]],["vec"]]]],[11,"path","","Returns the identifier that begins this structured meta…",150,[[["self"]],["path"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",152,[[["self"]],[["field"],["iter",["field"]]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",152,[[["self"]],[["field"],["itermut",["field"]]]]],[11,"len","","Returns the number of fields.",152,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if there are zero fields.",152,[[["self"]],["bool"]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",56,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",56,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",56,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",56,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",56,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",56,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",56,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",56,[[["self"]]]],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",283,[[["self"]],["turbofish"]]],[11,"new","","",57,[[["lifetime"]],["self"]]],[11,"receiver","","A method's `self` receiver, such as `&self` or `self:…",89,[[["self"]],[["fnarg"],["option",["fnarg"]]]]],[11,"lifetime","","",88,[[["self"]],[["option",["lifetime"]],["lifetime"]]]],[11,"new","","Panics",100,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",168,[[["literal"]],["self"]]],[11,"new","","",284,[[["str"],["span"]],["self"]]],[11,"value","","",284,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",284,[[["self"]],[["parse"],["result"]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",284,[[["parser"],["self"]],["result"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"set_span","","",284,[[["self"],["span"]]]],[11,"suffix","","",284,[[["self"]],["str"]]],[11,"new","","",285,[[["span"]],["self"]]],[11,"value","","",285,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"set_span","","",285,[[["self"],["span"]]]],[11,"new","","",286,[[["span"],["u8"]],["self"]]],[11,"value","","",286,[[["self"]],["u8"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"set_span","","",286,[[["self"],["span"]]]],[11,"new","","",287,[[["char"],["span"]],["self"]]],[11,"value","","",287,[[["self"]],["char"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"set_span","","",287,[[["self"],["span"]]]],[11,"new","","",288,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",288,[[["self"]],["str"]]],[11,"base10_parse","","Parses the literal into a selected number type.",288,[[["self"]],["result"]]],[11,"suffix","","",288,[[["self"]],["str"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"set_span","","",288,[[["self"],["span"]]]],[11,"new","","",289,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",289,[[["self"]],["str"]]],[11,"base10_parse","","",289,[[["self"]],["result"]]],[11,"suffix","","",289,[[["self"]],["str"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"set_span","","",289,[[["self"],["span"]]]],[11,"parse_body","","Parse the tokens within the macro invocation's delimiters…",102,[[["self"]],[["parse"],["result"]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation's delimiters…",102,[[["parser"],["self"]],["result"]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",107,[[["parsestream"]],[["vec",["stmt"]],["result",["vec"]]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",176,[[["parsestream"]],["result"]]],[11,"without_plus","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["bool"],["parsestream"]],["result"]]],[11,"without_plus","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["bool"],["parsestream"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",146,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",146,[[["i"],["self"]],["bool"]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",146,[[["self"]],[["ident"],["option",["ident"]]]]],[11,"is_empty","","",179,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",290,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",291,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",291,[[],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",291,[[["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",291,[[],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",291,[[],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",291,[[],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",291,[[],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",291,[[],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",291,[[],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",291,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",292,[[["parsestream"]],["result"]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",292,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",292,[[["self"]],["ident"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",293,null],[13,"End","","",293,null],[11,"new","","Creates an empty punctuated sequence.",294,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",294,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",294,[[["self"]],["usize"]]],[11,"first","","Borrows the first element in this sequence.",294,[[["self"]],[["t"],["option"]]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",294,[[["self"]],[["option"],["t"]]]],[11,"last","","Borrows the last element in this sequence.",294,[[["self"]],[["t"],["option"]]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",294,[[["self"]],[["option"],["t"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",294,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",294,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",294,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",294,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",294,[[],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",294,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",294,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",294,[[["self"]],[["option",["pair"]],["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",294,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",294,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",294,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",294,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",294,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",294,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",294,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",294,[[["parsestream"]],["result"]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",293,[[],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",293,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",293,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",293,[[["self"]],[["option"],["p"]]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",293,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",293,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",295,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["abi"],["v"]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments"],["v"]]]],[5,"visit_arm","","",null,[[["arm"],["v"]]]],[5,"visit_attr_style","","",null,[[["v"],["attrstyle"]]]],[5,"visit_attribute","","",null,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg"],["v"]]]],[5,"visit_bin_op","","",null,[[["binop"],["v"]]]],[5,"visit_binding","","",null,[[["binding"],["v"]]]],[5,"visit_block","","",null,[[["v"],["block"]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes"],["v"]]]],[5,"visit_const_param","","",null,[[["constparam"],["v"]]]],[5,"visit_constraint","","",null,[[["v"],["constraint"]]]],[5,"visit_data","","",null,[[["data"],["v"]]]],[5,"visit_data_enum","","",null,[[["v"],["dataenum"]]]],[5,"visit_data_struct","","",null,[[["datastruct"],["v"]]]],[5,"visit_data_union","","",null,[[["v"],["dataunion"]]]],[5,"visit_derive_input","","",null,[[["v"],["deriveinput"]]]],[5,"visit_expr","","",null,[[["v"],["expr"]]]],[5,"visit_expr_array","","",null,[[["exprarray"],["v"]]]],[5,"visit_expr_assign","","",null,[[["v"],["exprassign"]]]],[5,"visit_expr_assign_op","","",null,[[["exprassignop"],["v"]]]],[5,"visit_expr_async","","",null,[[["exprasync"],["v"]]]],[5,"visit_expr_await","","",null,[[["exprawait"],["v"]]]],[5,"visit_expr_binary","","",null,[[["exprbinary"],["v"]]]],[5,"visit_expr_block","","",null,[[["v"],["exprblock"]]]],[5,"visit_expr_box","","",null,[[["v"],["exprbox"]]]],[5,"visit_expr_break","","",null,[[["v"],["exprbreak"]]]],[5,"visit_expr_call","","",null,[[["exprcall"],["v"]]]],[5,"visit_expr_cast","","",null,[[["v"],["exprcast"]]]],[5,"visit_expr_closure","","",null,[[["v"],["exprclosure"]]]],[5,"visit_expr_continue","","",null,[[["exprcontinue"],["v"]]]],[5,"visit_expr_field","","",null,[[["exprfield"],["v"]]]],[5,"visit_expr_for_loop","","",null,[[["exprforloop"],["v"]]]],[5,"visit_expr_group","","",null,[[["v"],["exprgroup"]]]],[5,"visit_expr_if","","",null,[[["exprif"],["v"]]]],[5,"visit_expr_index","","",null,[[["exprindex"],["v"]]]],[5,"visit_expr_let","","",null,[[["v"],["exprlet"]]]],[5,"visit_expr_lit","","",null,[[["v"],["exprlit"]]]],[5,"visit_expr_loop","","",null,[[["v"],["exprloop"]]]],[5,"visit_expr_macro","","",null,[[["v"],["exprmacro"]]]],[5,"visit_expr_match","","",null,[[["v"],["exprmatch"]]]],[5,"visit_expr_method_call","","",null,[[["v"],["exprmethodcall"]]]],[5,"visit_expr_paren","","",null,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",null,[[["exprpath"],["v"]]]],[5,"visit_expr_range","","",null,[[["exprrange"],["v"]]]],[5,"visit_expr_reference","","",null,[[["v"],["exprreference"]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat"],["v"]]]],[5,"visit_expr_return","","",null,[[["v"],["exprreturn"]]]],[5,"visit_expr_struct","","",null,[[["v"],["exprstruct"]]]],[5,"visit_expr_try","","",null,[[["exprtry"],["v"]]]],[5,"visit_expr_try_block","","",null,[[["exprtryblock"],["v"]]]],[5,"visit_expr_tuple","","",null,[[["exprtuple"],["v"]]]],[5,"visit_expr_type","","",null,[[["exprtype"],["v"]]]],[5,"visit_expr_unary","","",null,[[["v"],["exprunary"]]]],[5,"visit_expr_unsafe","","",null,[[["v"],["exprunsafe"]]]],[5,"visit_expr_while","","",null,[[["exprwhile"],["v"]]]],[5,"visit_expr_yield","","",null,[[["expryield"],["v"]]]],[5,"visit_field","","",null,[[["v"],["field"]]]],[5,"visit_field_pat","","",null,[[["v"],["fieldpat"]]]],[5,"visit_field_value","","",null,[[["fieldvalue"],["v"]]]],[5,"visit_fields","","",null,[[["v"],["fields"]]]],[5,"visit_fields_named","","",null,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed"],["v"]]]],[5,"visit_file","","",null,[[["file"],["v"]]]],[5,"visit_fn_arg","","",null,[[["v"],["fnarg"]]]],[5,"visit_foreign_item","","",null,[[["foreignitem"],["v"]]]],[5,"visit_foreign_item_fn","","",null,[[["foreignitemfn"],["v"]]]],[5,"visit_foreign_item_macro","","",null,[[["v"],["foreignitemmacro"]]]],[5,"visit_foreign_item_static","","",null,[[["v"],["foreignitemstatic"]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype"],["v"]]]],[5,"visit_generic_argument","","",null,[[["genericargument"],["v"]]]],[5,"visit_generic_method_argument","","",null,[[["v"],["genericmethodargument"]]]],[5,"visit_generic_param","","",null,[[["v"],["genericparam"]]]],[5,"visit_generics","","",null,[[["v"],["generics"]]]],[5,"visit_ident","","",null,[[["v"],["ident"]]]],[5,"visit_impl_item","","",null,[[["implitem"],["v"]]]],[5,"visit_impl_item_const","","",null,[[["v"],["implitemconst"]]]],[5,"visit_impl_item_macro","","",null,[[["v"],["implitemmacro"]]]],[5,"visit_impl_item_method","","",null,[[["v"],["implitemmethod"]]]],[5,"visit_impl_item_type","","",null,[[["v"],["implitemtype"]]]],[5,"visit_index","","",null,[[["v"],["index"]]]],[5,"visit_item","","",null,[[["item"],["v"]]]],[5,"visit_item_const","","",null,[[["itemconst"],["v"]]]],[5,"visit_item_enum","","",null,[[["itemenum"],["v"]]]],[5,"visit_item_extern_crate","","",null,[[["itemexterncrate"],["v"]]]],[5,"visit_item_fn","","",null,[[["itemfn"],["v"]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod"],["v"]]]],[5,"visit_item_impl","","",null,[[["v"],["itemimpl"]]]],[5,"visit_item_macro","","",null,[[["itemmacro"],["v"]]]],[5,"visit_item_macro2","","",null,[[["itemmacro2"],["v"]]]],[5,"visit_item_mod","","",null,[[["itemmod"],["v"]]]],[5,"visit_item_static","","",null,[[["v"],["itemstatic"]]]],[5,"visit_item_struct","","",null,[[["v"],["itemstruct"]]]],[5,"visit_item_trait","","",null,[[["itemtrait"],["v"]]]],[5,"visit_item_trait_alias","","",null,[[["v"],["itemtraitalias"]]]],[5,"visit_item_type","","",null,[[["v"],["itemtype"]]]],[5,"visit_item_union","","",null,[[["v"],["itemunion"]]]],[5,"visit_item_use","","",null,[[["itemuse"],["v"]]]],[5,"visit_label","","",null,[[["label"],["v"]]]],[5,"visit_lifetime","","",null,[[["lifetime"],["v"]]]],[5,"visit_lifetime_def","","",null,[[["v"],["lifetimedef"]]]],[5,"visit_lit","","",null,[[["lit"],["v"]]]],[5,"visit_lit_bool","","",null,[[["v"],["litbool"]]]],[5,"visit_lit_byte","","",null,[[["v"],["litbyte"]]]],[5,"visit_lit_byte_str","","",null,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",null,[[["litchar"],["v"]]]],[5,"visit_lit_float","","",null,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",null,[[["litint"],["v"]]]],[5,"visit_lit_str","","",null,[[["v"],["litstr"]]]],[5,"visit_local","","",null,[[["v"],["local"]]]],[5,"visit_macro","","",null,[[["macro"],["v"]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter"],["v"]]]],[5,"visit_member","","",null,[[["member"],["v"]]]],[5,"visit_meta","","",null,[[["v"],["meta"]]]],[5,"visit_meta_list","","",null,[[["metalist"],["v"]]]],[5,"visit_meta_name_value","","",null,[[["v"],["metanamevalue"]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish"],["v"]]]],[5,"visit_nested_meta","","",null,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_pat","","",null,[[["v"],["pat"]]]],[5,"visit_pat_box","","",null,[[["patbox"],["v"]]]],[5,"visit_pat_ident","","",null,[[["patident"],["v"]]]],[5,"visit_pat_lit","","",null,[[["v"],["patlit"]]]],[5,"visit_pat_macro","","",null,[[["patmacro"],["v"]]]],[5,"visit_pat_or","","",null,[[["v"],["pator"]]]],[5,"visit_pat_path","","",null,[[["v"],["patpath"]]]],[5,"visit_pat_range","","",null,[[["v"],["patrange"]]]],[5,"visit_pat_reference","","",null,[[["v"],["patreference"]]]],[5,"visit_pat_rest","","",null,[[["patrest"],["v"]]]],[5,"visit_pat_slice","","",null,[[["patslice"],["v"]]]],[5,"visit_pat_struct","","",null,[[["patstruct"],["v"]]]],[5,"visit_pat_tuple","","",null,[[["v"],["pattuple"]]]],[5,"visit_pat_tuple_struct","","",null,[[["v"],["pattuplestruct"]]]],[5,"visit_pat_type","","",null,[[["pattype"],["v"]]]],[5,"visit_pat_wild","","",null,[[["patwild"],["v"]]]],[5,"visit_path","","",null,[[["v"],["path"]]]],[5,"visit_path_arguments","","",null,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",null,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",null,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime"],["v"]]]],[5,"visit_predicate_type","","",null,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",null,[[["qself"],["v"]]]],[5,"visit_range_limits","","",null,[[["v"],["rangelimits"]]]],[5,"visit_receiver","","",null,[[["v"],["receiver"]]]],[5,"visit_return_type","","",null,[[["returntype"],["v"]]]],[5,"visit_signature","","",null,[[["signature"],["v"]]]],[5,"visit_span","","",null,[[["span"],["v"]]]],[5,"visit_stmt","","",null,[[["v"],["stmt"]]]],[5,"visit_trait_bound","","",null,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier"],["v"]]]],[5,"visit_trait_item","","",null,[[["traititem"],["v"]]]],[5,"visit_trait_item_const","","",null,[[["v"],["traititemconst"]]]],[5,"visit_trait_item_macro","","",null,[[["v"],["traititemmacro"]]]],[5,"visit_trait_item_method","","",null,[[["v"],["traititemmethod"]]]],[5,"visit_trait_item_type","","",null,[[["traititemtype"],["v"]]]],[5,"visit_type","","",null,[[["v"],["type"]]]],[5,"visit_type_array","","",null,[[["typearray"],["v"]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn"],["v"]]]],[5,"visit_type_group","","",null,[[["v"],["typegroup"]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait"],["v"]]]],[5,"visit_type_infer","","",null,[[["v"],["typeinfer"]]]],[5,"visit_type_macro","","",null,[[["typemacro"],["v"]]]],[5,"visit_type_never","","",null,[[["typenever"],["v"]]]],[5,"visit_type_param","","",null,[[["typeparam"],["v"]]]],[5,"visit_type_param_bound","","",null,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",null,[[["typeparen"],["v"]]]],[5,"visit_type_path","","",null,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",null,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",null,[[["typereference"],["v"]]]],[5,"visit_type_slice","","",null,[[["typeslice"],["v"]]]],[5,"visit_type_trait_object","","",null,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",null,[[["typetuple"],["v"]]]],[5,"visit_un_op","","",null,[[["v"],["unop"]]]],[5,"visit_use_glob","","",null,[[["useglob"],["v"]]]],[5,"visit_use_group","","",null,[[["v"],["usegroup"]]]],[5,"visit_use_name","","",null,[[["usename"],["v"]]]],[5,"visit_use_path","","",null,[[["usepath"],["v"]]]],[5,"visit_use_rename","","",null,[[["userename"],["v"]]]],[5,"visit_use_tree","","",null,[[["v"],["usetree"]]]],[5,"visit_variadic","","",null,[[["variadic"],["v"]]]],[5,"visit_variant","","",null,[[["v"],["variant"]]]],[5,"visit_vis_crate","","",null,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",null,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted"],["v"]]]],[5,"visit_visibility","","",null,[[["visibility"],["v"]]]],[5,"visit_where_clause","","",null,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate"],["v"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",296,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arm","","",296,[[["self"],["arm"]]]],[11,"visit_attr_style","","",296,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",296,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",296,[[["self"],["barefnarg"]]]],[11,"visit_bin_op","","",296,[[["self"],["binop"]]]],[11,"visit_binding","","",296,[[["self"],["binding"]]]],[11,"visit_block","","",296,[[["self"],["block"]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes"],["self"]]]],[11,"visit_const_param","","",296,[[["constparam"],["self"]]]],[11,"visit_constraint","","",296,[[["self"],["constraint"]]]],[11,"visit_data","","",296,[[["data"],["self"]]]],[11,"visit_data_enum","","",296,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",296,[[["datastruct"],["self"]]]],[11,"visit_data_union","","",296,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",296,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",296,[[["self"],["expr"]]]],[11,"visit_expr_array","","",296,[[["exprarray"],["self"]]]],[11,"visit_expr_assign","","",296,[[["self"],["exprassign"]]]],[11,"visit_expr_assign_op","","",296,[[["exprassignop"],["self"]]]],[11,"visit_expr_async","","",296,[[["self"],["exprasync"]]]],[11,"visit_expr_await","","",296,[[["self"],["exprawait"]]]],[11,"visit_expr_binary","","",296,[[["self"],["exprbinary"]]]],[11,"visit_expr_block","","",296,[[["self"],["exprblock"]]]],[11,"visit_expr_box","","",296,[[["self"],["exprbox"]]]],[11,"visit_expr_break","","",296,[[["self"],["exprbreak"]]]],[11,"visit_expr_call","","",296,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",296,[[["self"],["exprcast"]]]],[11,"visit_expr_closure","","",296,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",296,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",296,[[["exprfield"],["self"]]]],[11,"visit_expr_for_loop","","",296,[[["exprforloop"],["self"]]]],[11,"visit_expr_group","","",296,[[["self"],["exprgroup"]]]],[11,"visit_expr_if","","",296,[[["exprif"],["self"]]]],[11,"visit_expr_index","","",296,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",296,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",296,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",296,[[["self"],["exprloop"]]]],[11,"visit_expr_macro","","",296,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",296,[[["self"],["exprmatch"]]]],[11,"visit_expr_method_call","","",296,[[["self"],["exprmethodcall"]]]],[11,"visit_expr_paren","","",296,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",296,[[["exprpath"],["self"]]]],[11,"visit_expr_range","","",296,[[["exprrange"],["self"]]]],[11,"visit_expr_reference","","",296,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat","","",296,[[["exprrepeat"],["self"]]]],[11,"visit_expr_return","","",296,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",296,[[["self"],["exprstruct"]]]],[11,"visit_expr_try","","",296,[[["exprtry"],["self"]]]],[11,"visit_expr_try_block","","",296,[[["exprtryblock"],["self"]]]],[11,"visit_expr_tuple","","",296,[[["exprtuple"],["self"]]]],[11,"visit_expr_type","","",296,[[["exprtype"],["self"]]]],[11,"visit_expr_unary","","",296,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",296,[[["self"],["exprunsafe"]]]],[11,"visit_expr_while","","",296,[[["self"],["exprwhile"]]]],[11,"visit_expr_yield","","",296,[[["expryield"],["self"]]]],[11,"visit_field","","",296,[[["self"],["field"]]]],[11,"visit_field_pat","","",296,[[["self"],["fieldpat"]]]],[11,"visit_field_value","","",296,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",296,[[["self"],["fields"]]]],[11,"visit_fields_named","","",296,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",296,[[["fieldsunnamed"],["self"]]]],[11,"visit_file","","",296,[[["self"],["file"]]]],[11,"visit_fn_arg","","",296,[[["self"],["fnarg"]]]],[11,"visit_foreign_item","","",296,[[["foreignitem"],["self"]]]],[11,"visit_foreign_item_fn","","",296,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",296,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",296,[[["self"],["foreignitemstatic"]]]],[11,"visit_foreign_item_type","","",296,[[["foreignitemtype"],["self"]]]],[11,"visit_generic_argument","","",296,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",296,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",296,[[["self"],["genericparam"]]]],[11,"visit_generics","","",296,[[["self"],["generics"]]]],[11,"visit_ident","","",296,[[["self"],["ident"]]]],[11,"visit_impl_item","","",296,[[["self"],["implitem"]]]],[11,"visit_impl_item_const","","",296,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_macro","","",296,[[["self"],["implitemmacro"]]]],[11,"visit_impl_item_method","","",296,[[["self"],["implitemmethod"]]]],[11,"visit_impl_item_type","","",296,[[["self"],["implitemtype"]]]],[11,"visit_index","","",296,[[["self"],["index"]]]],[11,"visit_item","","",296,[[["self"],["item"]]]],[11,"visit_item_const","","",296,[[["self"],["itemconst"]]]],[11,"visit_item_enum","","",296,[[["self"],["itemenum"]]]],[11,"visit_item_extern_crate","","",296,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",296,[[["itemfn"],["self"]]]],[11,"visit_item_foreign_mod","","",296,[[["self"],["itemforeignmod"]]]],[11,"visit_item_impl","","",296,[[["self"],["itemimpl"]]]],[11,"visit_item_macro","","",296,[[["itemmacro"],["self"]]]],[11,"visit_item_macro2","","",296,[[["self"],["itemmacro2"]]]],[11,"visit_item_mod","","",296,[[["itemmod"],["self"]]]],[11,"visit_item_static","","",296,[[["self"],["itemstatic"]]]],[11,"visit_item_struct","","",296,[[["self"],["itemstruct"]]]],[11,"visit_item_trait","","",296,[[["itemtrait"],["self"]]]],[11,"visit_item_trait_alias","","",296,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type","","",296,[[["self"],["itemtype"]]]],[11,"visit_item_union","","",296,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",296,[[["self"],["itemuse"]]]],[11,"visit_label","","",296,[[["label"],["self"]]]],[11,"visit_lifetime","","",296,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",296,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",296,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",296,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",296,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",296,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",296,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",296,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",296,[[["litint"],["self"]]]],[11,"visit_lit_str","","",296,[[["self"],["litstr"]]]],[11,"visit_local","","",296,[[["self"],["local"]]]],[11,"visit_macro","","",296,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",296,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",296,[[["member"],["self"]]]],[11,"visit_meta","","",296,[[["self"],["meta"]]]],[11,"visit_meta_list","","",296,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",296,[[["self"],["metanamevalue"]]]],[11,"visit_method_turbofish","","",296,[[["methodturbofish"],["self"]]]],[11,"visit_nested_meta","","",296,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",296,[[["self"],["pat"]]]],[11,"visit_pat_box","","",296,[[["self"],["patbox"]]]],[11,"visit_pat_ident","","",296,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",296,[[["self"],["patlit"]]]],[11,"visit_pat_macro","","",296,[[["patmacro"],["self"]]]],[11,"visit_pat_or","","",296,[[["self"],["pator"]]]],[11,"visit_pat_path","","",296,[[["self"],["patpath"]]]],[11,"visit_pat_range","","",296,[[["self"],["patrange"]]]],[11,"visit_pat_reference","","",296,[[["self"],["patreference"]]]],[11,"visit_pat_rest","","",296,[[["patrest"],["self"]]]],[11,"visit_pat_slice","","",296,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",296,[[["self"],["patstruct"]]]],[11,"visit_pat_tuple","","",296,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct","","",296,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_type","","",296,[[["pattype"],["self"]]]],[11,"visit_pat_wild","","",296,[[["self"],["patwild"]]]],[11,"visit_path","","",296,[[["self"],["path"]]]],[11,"visit_path_arguments","","",296,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",296,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",296,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",296,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",296,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",296,[[["qself"],["self"]]]],[11,"visit_range_limits","","",296,[[["self"],["rangelimits"]]]],[11,"visit_receiver","","",296,[[["self"],["receiver"]]]],[11,"visit_return_type","","",296,[[["self"],["returntype"]]]],[11,"visit_signature","","",296,[[["self"],["signature"]]]],[11,"visit_span","","",296,[[["self"],["span"]]]],[11,"visit_stmt","","",296,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",296,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",296,[[["self"],["traitboundmodifier"]]]],[11,"visit_trait_item","","",296,[[["self"],["traititem"]]]],[11,"visit_trait_item_const","","",296,[[["self"],["traititemconst"]]]],[11,"visit_trait_item_macro","","",296,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",296,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",296,[[["traititemtype"],["self"]]]],[11,"visit_type","","",296,[[["self"],["type"]]]],[11,"visit_type_array","","",296,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",296,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",296,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",296,[[["typeimpltrait"],["self"]]]],[11,"visit_type_infer","","",296,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",296,[[["typemacro"],["self"]]]],[11,"visit_type_never","","",296,[[["typenever"],["self"]]]],[11,"visit_type_param","","",296,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",296,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",296,[[["typeparen"],["self"]]]],[11,"visit_type_path","","",296,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",296,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",296,[[["typereference"],["self"]]]],[11,"visit_type_slice","","",296,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",296,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",296,[[["typetuple"],["self"]]]],[11,"visit_un_op","","",296,[[["self"],["unop"]]]],[11,"visit_use_glob","","",296,[[["useglob"],["self"]]]],[11,"visit_use_group","","",296,[[["self"],["usegroup"]]]],[11,"visit_use_name","","",296,[[["self"],["usename"]]]],[11,"visit_use_path","","",296,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",296,[[["userename"],["self"]]]],[11,"visit_use_tree","","",296,[[["self"],["usetree"]]]],[11,"visit_variadic","","",296,[[["self"],["variadic"]]]],[11,"visit_variant","","",296,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",296,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",296,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",296,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",296,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",296,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",296,[[["self"],["wherepredicate"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",297,[[["self"]]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",298,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",299,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",299,[[["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",299,[[["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",299,[[["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",300,[[["display"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",301,[[["self"]],[["parse"],["result"]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",301,[[["self"]],["result"]]],[11,"peek","","Looks at the next token in the parse stream to determine…",301,[[["self"],["peek"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",301,[[["self"],["peek"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",301,[[["self"],["peek"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",301,[[["self"]],[["result",["punctuated"]],["punctuated"]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",301,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",301,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",301,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",301,[[["self"],["display"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",301,[[["self"],["f"]],["result"]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",301,[[["self"]],["span"]]],[11,"cursor","","Provides low-level access to the token representation…",301,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",302,[[["display"],["span"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",302,[[["display"],["totokens"]],["self"]]],[11,"span","","The source location of the error.",302,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",302,[[["self"]],["tokenstream"]]],[11,"combine","","Add another error message to self such that when…",302,[[["self"],["error"]]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",303,[[["cursor"]],["bool"]]],[11,"display","","",303,[[],["str"]]],[11,"span","","",303,[[["self"]],["span"]]],[11,"from","","",303,[[["t"]],["t"]]],[11,"into","","",303,[[],["u"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,[[["self"],["t"]]]],[11,"to_string","","",303,[[["self"]],["string"]]],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"try_into","","",303,[[],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"type_id","","",303,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"span","","",35,[[["self"]],["span"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",304,[[["self"]],["span"]]],[11,"from","","",304,[[["t"]],["t"]]],[11,"into","","",304,[[],["u"]]],[11,"to_owned","","",304,[[["self"]],["t"]]],[11,"clone_into","","",304,[[["self"],["t"]]]],[11,"try_from","","",304,[[["u"]],["result"]]],[11,"try_into","","",304,[[],["result"]]],[11,"borrow","","",304,[[["self"]],["t"]]],[11,"borrow_mut","","",304,[[["self"]],["t"]]],[11,"type_id","","",304,[[["self"]],["typeid"]]],[11,"span","","",305,[[["self"]],["span"]]],[11,"from","","",305,[[["t"]],["t"]]],[11,"into","","",305,[[],["u"]]],[11,"to_owned","","",305,[[["self"]],["t"]]],[11,"clone_into","","",305,[[["self"],["t"]]]],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"try_into","","",305,[[],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"type_id","","",305,[[["self"]],["typeid"]]],[11,"span","","",283,[[["self"]],["span"]]],[11,"from","","",283,[[["t"]],["t"]]],[11,"into","","",283,[[],["u"]]],[11,"to_owned","","",283,[[["self"]],["t"]]],[11,"clone_into","","",283,[[["self"],["t"]]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"try_into","","",283,[[],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"type_id","","",283,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"span","","",74,[[["self"]],["span"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"span","","",75,[[["self"]],["span"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"to_string","","",100,[[["self"]],["string"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"from","","",286,[[["t"]],["t"]]],[11,"into","","",286,[[],["u"]]],[11,"to_owned","","",286,[[["self"]],["t"]]],[11,"clone_into","","",286,[[["self"],["t"]]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"try_into","","",286,[[],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"type_id","","",286,[[["self"]],["typeid"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"from","","",285,[[["t"]],["t"]]],[11,"into","","",285,[[],["u"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,[[["self"],["t"]]]],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"try_into","","",285,[[],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"type_id","","",285,[[["self"]],["typeid"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"from","","",287,[[["t"]],["t"]]],[11,"into","","",287,[[],["u"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,[[["self"],["t"]]]],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"try_into","","",287,[[],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"type_id","","",287,[[["self"]],["typeid"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"from","","",289,[[["t"]],["t"]]],[11,"into","","",289,[[],["u"]]],[11,"to_owned","","",289,[[["self"]],["t"]]],[11,"clone_into","","",289,[[["self"],["t"]]]],[11,"to_string","","",289,[[["self"]],["string"]]],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"try_into","","",289,[[],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"type_id","","",289,[[["self"]],["typeid"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"from","","",288,[[["t"]],["t"]]],[11,"into","","",288,[[],["u"]]],[11,"to_owned","","",288,[[["self"]],["t"]]],[11,"clone_into","","",288,[[["self"],["t"]]]],[11,"to_string","","",288,[[["self"]],["string"]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"try_into","","",288,[[],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"type_id","","",288,[[["self"]],["typeid"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"from","","",284,[[["t"]],["t"]]],[11,"into","","",284,[[],["u"]]],[11,"to_owned","","",284,[[["self"]],["t"]]],[11,"clone_into","","",284,[[["self"],["t"]]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"try_into","","",284,[[],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"type_id","","",284,[[["self"]],["typeid"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",302,[[["t"]],["t"]]],[11,"into","","",302,[[],["u"]]],[11,"into_iter","","",302,[[],["i"]]],[11,"to_owned","","",302,[[["self"]],["t"]]],[11,"clone_into","","",302,[[["self"],["t"]]]],[11,"to_string","","",302,[[["self"]],["string"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"try_into","","",302,[[],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"type_id","","",302,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"into_iter","","",152,[[],["i"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"peek","syn::token","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"span","","",184,[[["self"]],["span"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"span","","",197,[[["self"]],["span"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,[[["self"],["t"]]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"span","","",198,[[["self"]],["span"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,[[["self"],["t"]]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"span","","",199,[[["self"]],["span"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,[[["self"],["t"]]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,[[["self"],["t"]]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"span","","",201,[[["self"]],["span"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,[[["self"],["t"]]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"span","","",202,[[["self"]],["span"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"span","","",203,[[["self"]],["span"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,[[["self"],["t"]]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"span","","",204,[[["self"]],["span"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,[[["self"],["t"]]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,[[["self"],["t"]]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,[[["self"],["t"]]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,[[["self"],["t"]]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,[[["self"],["t"]]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,[[["self"],["t"]]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,[[["self"],["t"]]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,[[["self"],["t"]]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,[[["self"],["t"]]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,[[["self"],["t"]]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,[[["self"],["t"]]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"try_into","","",227,[[],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"type_id","","",227,[[["self"]],["typeid"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,[[["self"],["t"]]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"try_into","","",228,[[],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"type_id","","",228,[[["self"]],["typeid"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,[[["self"],["t"]]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,[[["self"],["t"]]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,[[["self"],["t"]]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,[[["self"],["t"]]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,[[["self"],["t"]]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,[[["self"],["t"]]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,[[["self"],["t"]]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"try_into","","",235,[[],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"type_id","","",235,[[["self"]],["typeid"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"span","","",236,[[["self"]],["span"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,[[["self"],["t"]]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"span","","",237,[[["self"]],["span"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,[[["self"],["t"]]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"span","","",238,[[["self"]],["span"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,[[["self"],["t"]]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"span","","",239,[[["self"]],["span"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,[[["self"],["t"]]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,[[["self"],["t"]]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,[[["self"],["t"]]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"try_into","","",241,[[],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"type_id","","",241,[[["self"]],["typeid"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"span","","",242,[[["self"]],["span"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[],["u"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,[[["self"],["t"]]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"try_into","","",242,[[],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"type_id","","",242,[[["self"]],["typeid"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"span","","",243,[[["self"]],["span"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[],["u"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,[[["self"],["t"]]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"span","","",244,[[["self"]],["span"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,[[["self"],["t"]]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"try_into","","",244,[[],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"type_id","","",244,[[["self"]],["typeid"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"span","","",245,[[["self"]],["span"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[],["u"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,[[["self"],["t"]]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"try_into","","",245,[[],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"type_id","","",245,[[["self"]],["typeid"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"span","","",246,[[["self"]],["span"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[],["u"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,[[["self"],["t"]]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"try_into","","",246,[[],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"type_id","","",246,[[["self"]],["typeid"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"span","","",247,[[["self"]],["span"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[],["u"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,[[["self"],["t"]]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"try_into","","",247,[[],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"type_id","","",247,[[["self"]],["typeid"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"span","","",248,[[["self"]],["span"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"into","","",248,[[],["u"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,[[["self"],["t"]]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"try_into","","",248,[[],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"type_id","","",248,[[["self"]],["typeid"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"span","","",249,[[["self"]],["span"]]],[11,"from","","",249,[[["t"]],["t"]]],[11,"into","","",249,[[],["u"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,[[["self"],["t"]]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"try_into","","",249,[[],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"type_id","","",249,[[["self"]],["typeid"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"span","","",250,[[["self"]],["span"]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"into","","",250,[[],["u"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,[[["self"],["t"]]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"try_into","","",250,[[],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"type_id","","",250,[[["self"]],["typeid"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"span","","",251,[[["self"]],["span"]]],[11,"from","","",251,[[["t"]],["t"]]],[11,"into","","",251,[[],["u"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,[[["self"],["t"]]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"try_into","","",251,[[],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"type_id","","",251,[[["self"]],["typeid"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"span","","",252,[[["self"]],["span"]]],[11,"from","","",252,[[["t"]],["t"]]],[11,"into","","",252,[[],["u"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,[[["self"],["t"]]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"try_into","","",252,[[],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"type_id","","",252,[[["self"]],["typeid"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"span","","",253,[[["self"]],["span"]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[],["u"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,[[["self"],["t"]]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"try_into","","",253,[[],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"type_id","","",253,[[["self"]],["typeid"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"span","","",254,[[["self"]],["span"]]],[11,"from","","",254,[[["t"]],["t"]]],[11,"into","","",254,[[],["u"]]],[11,"to_owned","","",254,[[["self"]],["t"]]],[11,"clone_into","","",254,[[["self"],["t"]]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"try_into","","",254,[[],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"type_id","","",254,[[["self"]],["typeid"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"span","","",255,[[["self"]],["span"]]],[11,"from","","",255,[[["t"]],["t"]]],[11,"into","","",255,[[],["u"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,[[["self"],["t"]]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"try_into","","",255,[[],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"type_id","","",255,[[["self"]],["typeid"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"span","","",256,[[["self"]],["span"]]],[11,"from","","",256,[[["t"]],["t"]]],[11,"into","","",256,[[],["u"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,[[["self"],["t"]]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"try_into","","",256,[[],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"type_id","","",256,[[["self"]],["typeid"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"span","","",257,[[["self"]],["span"]]],[11,"from","","",257,[[["t"]],["t"]]],[11,"into","","",257,[[],["u"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,[[["self"],["t"]]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"try_into","","",257,[[],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"type_id","","",257,[[["self"]],["typeid"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"span","","",258,[[["self"]],["span"]]],[11,"from","","",258,[[["t"]],["t"]]],[11,"into","","",258,[[],["u"]]],[11,"to_owned","","",258,[[["self"]],["t"]]],[11,"clone_into","","",258,[[["self"],["t"]]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"try_into","","",258,[[],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"type_id","","",258,[[["self"]],["typeid"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"span","","",259,[[["self"]],["span"]]],[11,"from","","",259,[[["t"]],["t"]]],[11,"into","","",259,[[],["u"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,[[["self"],["t"]]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"try_into","","",259,[[],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"type_id","","",259,[[["self"]],["typeid"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"span","","",260,[[["self"]],["span"]]],[11,"from","","",260,[[["t"]],["t"]]],[11,"into","","",260,[[],["u"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,[[["self"],["t"]]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"try_into","","",260,[[],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"type_id","","",260,[[["self"]],["typeid"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"span","","",261,[[["self"]],["span"]]],[11,"from","","",261,[[["t"]],["t"]]],[11,"into","","",261,[[],["u"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,[[["self"],["t"]]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"try_into","","",261,[[],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"type_id","","",261,[[["self"]],["typeid"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"span","","",262,[[["self"]],["span"]]],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[],["u"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,[[["self"],["t"]]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"try_into","","",262,[[],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"type_id","","",262,[[["self"]],["typeid"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"span","","",263,[[["self"]],["span"]]],[11,"from","","",263,[[["t"]],["t"]]],[11,"into","","",263,[[],["u"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,[[["self"],["t"]]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"try_into","","",263,[[],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"type_id","","",263,[[["self"]],["typeid"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"span","","",264,[[["self"]],["span"]]],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[],["u"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,[[["self"],["t"]]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"try_into","","",264,[[],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"type_id","","",264,[[["self"]],["typeid"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"span","","",265,[[["self"]],["span"]]],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[],["u"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,[[["self"],["t"]]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"try_into","","",265,[[],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"type_id","","",265,[[["self"]],["typeid"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"span","","",266,[[["self"]],["span"]]],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[],["u"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,[[["self"],["t"]]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"try_into","","",266,[[],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"type_id","","",266,[[["self"]],["typeid"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"span","","",267,[[["self"]],["span"]]],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[],["u"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,[[["self"],["t"]]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"try_into","","",267,[[],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"type_id","","",267,[[["self"]],["typeid"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"span","","",268,[[["self"]],["span"]]],[11,"from","","",268,[[["t"]],["t"]]],[11,"into","","",268,[[],["u"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,[[["self"],["t"]]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"try_into","","",268,[[],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"type_id","","",268,[[["self"]],["typeid"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"span","","",269,[[["self"]],["span"]]],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[],["u"]]],[11,"to_owned","","",269,[[["self"]],["t"]]],[11,"clone_into","","",269,[[["self"],["t"]]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"try_into","","",269,[[],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"type_id","","",269,[[["self"]],["typeid"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"span","","",270,[[["self"]],["span"]]],[11,"from","","",270,[[["t"]],["t"]]],[11,"into","","",270,[[],["u"]]],[11,"to_owned","","",270,[[["self"]],["t"]]],[11,"clone_into","","",270,[[["self"],["t"]]]],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"try_into","","",270,[[],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"type_id","","",270,[[["self"]],["typeid"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"span","","",271,[[["self"]],["span"]]],[11,"from","","",271,[[["t"]],["t"]]],[11,"into","","",271,[[],["u"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,[[["self"],["t"]]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"try_into","","",271,[[],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"type_id","","",271,[[["self"]],["typeid"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"span","","",272,[[["self"]],["span"]]],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[],["u"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,[[["self"],["t"]]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"try_into","","",272,[[],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"type_id","","",272,[[["self"]],["typeid"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"span","","",273,[[["self"]],["span"]]],[11,"from","","",273,[[["t"]],["t"]]],[11,"into","","",273,[[],["u"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,[[["self"],["t"]]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"try_into","","",273,[[],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"type_id","","",273,[[["self"]],["typeid"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"span","","",274,[[["self"]],["span"]]],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[],["u"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,[[["self"],["t"]]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"try_into","","",274,[[],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"type_id","","",274,[[["self"]],["typeid"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"span","","",275,[[["self"]],["span"]]],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[],["u"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,[[["self"],["t"]]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"try_into","","",275,[[],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"type_id","","",275,[[["self"]],["typeid"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"span","","",276,[[["self"]],["span"]]],[11,"from","","",276,[[["t"]],["t"]]],[11,"into","","",276,[[],["u"]]],[11,"to_owned","","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,[[["self"],["t"]]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"try_into","","",276,[[],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"type_id","","",276,[[["self"]],["typeid"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"span","","",277,[[["self"]],["span"]]],[11,"from","","",277,[[["t"]],["t"]]],[11,"into","","",277,[[],["u"]]],[11,"to_owned","","",277,[[["self"]],["t"]]],[11,"clone_into","","",277,[[["self"],["t"]]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"try_into","","",277,[[],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"type_id","","",277,[[["self"]],["typeid"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"span","","",278,[[["self"]],["span"]]],[11,"from","","",278,[[["t"]],["t"]]],[11,"into","","",278,[[],["u"]]],[11,"to_owned","","",278,[[["self"]],["t"]]],[11,"clone_into","","",278,[[["self"],["t"]]]],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"try_into","","",278,[[],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"type_id","","",278,[[["self"]],["typeid"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"from","","",279,[[["t"]],["t"]]],[11,"into","","",279,[[],["u"]]],[11,"to_owned","","",279,[[["self"]],["t"]]],[11,"clone_into","","",279,[[["self"],["t"]]]],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"try_into","","",279,[[],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"type_id","","",279,[[["self"]],["typeid"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"from","","",280,[[["t"]],["t"]]],[11,"into","","",280,[[],["u"]]],[11,"to_owned","","",280,[[["self"]],["t"]]],[11,"clone_into","","",280,[[["self"],["t"]]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"try_into","","",280,[[],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"type_id","","",280,[[["self"]],["typeid"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"from","","",281,[[["t"]],["t"]]],[11,"into","","",281,[[],["u"]]],[11,"to_owned","","",281,[[["self"]],["t"]]],[11,"clone_into","","",281,[[["self"],["t"]]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"try_into","","",281,[[],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"type_id","","",281,[[["self"]],["typeid"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"from","","",282,[[["t"]],["t"]]],[11,"into","","",282,[[],["u"]]],[11,"to_owned","","",282,[[["self"]],["t"]]],[11,"clone_into","","",282,[[["self"],["t"]]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"try_into","","",282,[[],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"type_id","","",282,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",290,[[["t"]],["t"]]],[11,"into","","",290,[[],["u"]]],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"try_into","","",290,[[],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"type_id","","",290,[[["self"]],["typeid"]]],[11,"from","","",291,[[["t"]],["t"]]],[11,"into","","",291,[[],["u"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,[[["self"],["t"]]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"try_into","","",291,[[],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"type_id","","",291,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",294,[[["self"]],["span"]]],[11,"from","","",294,[[["t"]],["t"]]],[11,"into","","",294,[[],["u"]]],[11,"into_iter","","",294,[[],["i"]]],[11,"to_owned","","",294,[[["self"]],["t"]]],[11,"clone_into","","",294,[[["self"],["t"]]]],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"try_into","","",294,[[],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"type_id","","",294,[[["self"]],["typeid"]]],[11,"from","","",306,[[["t"]],["t"]]],[11,"into","","",306,[[],["u"]]],[11,"into_iter","","",306,[[],["i"]]],[11,"to_owned","","",306,[[["self"]],["t"]]],[11,"clone_into","","",306,[[["self"],["t"]]]],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"try_into","","",306,[[],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"type_id","","",306,[[["self"]],["typeid"]]],[11,"from","","",307,[[["t"]],["t"]]],[11,"into","","",307,[[],["u"]]],[11,"into_iter","","",307,[[],["i"]]],[11,"try_from","","",307,[[["u"]],["result"]]],[11,"try_into","","",307,[[],["result"]]],[11,"borrow","","",307,[[["self"]],["t"]]],[11,"borrow_mut","","",307,[[["self"]],["t"]]],[11,"type_id","","",307,[[["self"]],["typeid"]]],[11,"from","","",308,[[["t"]],["t"]]],[11,"into","","",308,[[],["u"]]],[11,"into_iter","","",308,[[],["i"]]],[11,"to_owned","","",308,[[["self"]],["t"]]],[11,"clone_into","","",308,[[["self"],["t"]]]],[11,"try_from","","",308,[[["u"]],["result"]]],[11,"try_into","","",308,[[],["result"]]],[11,"borrow","","",308,[[["self"]],["t"]]],[11,"borrow_mut","","",308,[[["self"]],["t"]]],[11,"type_id","","",308,[[["self"]],["typeid"]]],[11,"from","","",309,[[["t"]],["t"]]],[11,"into","","",309,[[],["u"]]],[11,"into_iter","","",309,[[],["i"]]],[11,"to_owned","","",309,[[["self"]],["t"]]],[11,"clone_into","","",309,[[["self"],["t"]]]],[11,"try_from","","",309,[[["u"]],["result"]]],[11,"try_into","","",309,[[],["result"]]],[11,"borrow","","",309,[[["self"]],["t"]]],[11,"borrow_mut","","",309,[[["self"]],["t"]]],[11,"type_id","","",309,[[["self"]],["typeid"]]],[11,"from","","",310,[[["t"]],["t"]]],[11,"into","","",310,[[],["u"]]],[11,"into_iter","","",310,[[],["i"]]],[11,"to_owned","","",310,[[["self"]],["t"]]],[11,"clone_into","","",310,[[["self"],["t"]]]],[11,"try_from","","",310,[[["u"]],["result"]]],[11,"try_into","","",310,[[],["result"]]],[11,"borrow","","",310,[[["self"]],["t"]]],[11,"borrow_mut","","",310,[[["self"]],["t"]]],[11,"type_id","","",310,[[["self"]],["typeid"]]],[11,"from","","",311,[[["t"]],["t"]]],[11,"into","","",311,[[],["u"]]],[11,"into_iter","","",311,[[],["i"]]],[11,"try_from","","",311,[[["u"]],["result"]]],[11,"try_into","","",311,[[],["result"]]],[11,"borrow","","",311,[[["self"]],["t"]]],[11,"borrow_mut","","",311,[[["self"]],["t"]]],[11,"type_id","","",311,[[["self"]],["typeid"]]],[11,"span","","",293,[[["self"]],["span"]]],[11,"from","","",293,[[["t"]],["t"]]],[11,"into","","",293,[[],["u"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,[[["self"],["t"]]]],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"try_into","","",293,[[],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"type_id","","",293,[[["self"]],["typeid"]]],[11,"from","syn::parse","",312,[[["t"]],["t"]]],[11,"into","","",312,[[],["u"]]],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"try_into","","",312,[[],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"type_id","","",312,[[["self"]],["typeid"]]],[11,"from","","",301,[[["t"]],["t"]]],[11,"into","","",301,[[],["u"]]],[11,"to_string","","",301,[[["self"]],["string"]]],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"try_into","","",301,[[],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"type_id","","",301,[[["self"]],["typeid"]]],[11,"from","","",300,[[["t"]],["t"]]],[11,"into","","",300,[[],["u"]]],[11,"to_owned","","",300,[[["self"]],["t"]]],[11,"clone_into","","",300,[[["self"],["t"]]]],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"try_into","","",300,[[],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"type_id","","",300,[[["self"]],["typeid"]]],[11,"from","","",313,[[["t"]],["t"]]],[11,"into","","",313,[[],["u"]]],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"try_into","","",313,[[],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"type_id","","",313,[[["self"]],["typeid"]]],[11,"fmt","syn","",303,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",303,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"cmp","","",303,[[["self"],["ident"]],["ordering"]]],[11,"clone","","",303,[[["self"]],["ident"]]],[11,"hash","","",303,[[["self"],["h"]]]],[11,"eq","","",303,[[["self"],["ident"]],["bool"]]],[11,"eq","","",303,[[["t"],["self"]],["bool"]]],[11,"partial_cmp","","",303,[[["self"],["ident"]],[["option",["ordering"]],["ordering"]]]],[11,"to_tokens","","",303,[[["self"],["tokenstream"]]]],[11,"span","","",303,[[["self"]],[["span"],["option",["span"]]]]],[11,"fmt","","",303,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","syn::token","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"peek","syn","",303,[[["cursor"]],["bool"]]],[11,"display","","",303,[[],["str"]]],[11,"parse_any","","",303,[[["parsestream"]],["result"]]],[11,"unraw","","",303,[[["self"]],["ident"]]],[11,"advance_to","syn::parse","",301,[[["self"]]]],[11,"parse","syn::token","",180,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",182,[[["parsestream"]],["result"]]],[11,"parse","","",183,[[["parsestream"]],["result"]]],[11,"parse","","",184,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","","",186,[[["parsestream"]],["result"]]],[11,"parse","","",187,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",189,[[["parsestream"]],["result"]]],[11,"parse","","",190,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",197,[[["parsestream"]],["result"]]],[11,"parse","","",198,[[["parsestream"]],["result"]]],[11,"parse","","",199,[[["parsestream"]],["result"]]],[11,"parse","","",200,[[["parsestream"]],["result"]]],[11,"parse","","",201,[[["parsestream"]],["result"]]],[11,"parse","","",202,[[["parsestream"]],["result"]]],[11,"parse","","",203,[[["parsestream"]],["result"]]],[11,"parse","","",204,[[["parsestream"]],["result"]]],[11,"parse","","",205,[[["parsestream"]],["result"]]],[11,"parse","","",206,[[["parsestream"]],["result"]]],[11,"parse","","",207,[[["parsestream"]],["result"]]],[11,"parse","","",208,[[["parsestream"]],["result"]]],[11,"parse","","",209,[[["parsestream"]],["result"]]],[11,"parse","","",210,[[["parsestream"]],["result"]]],[11,"parse","","",211,[[["parsestream"]],["result"]]],[11,"parse","","",212,[[["parsestream"]],["result"]]],[11,"parse","","",213,[[["parsestream"]],["result"]]],[11,"parse","","",214,[[["parsestream"]],["result"]]],[11,"parse","","",215,[[["parsestream"]],["result"]]],[11,"parse","","",216,[[["parsestream"]],["result"]]],[11,"parse","","",217,[[["parsestream"]],["result"]]],[11,"parse","","",218,[[["parsestream"]],["result"]]],[11,"parse","","",219,[[["parsestream"]],["result"]]],[11,"parse","","",220,[[["parsestream"]],["result"]]],[11,"parse","","",221,[[["parsestream"]],["result"]]],[11,"parse","","",222,[[["parsestream"]],["result"]]],[11,"parse","","",223,[[["parsestream"]],["result"]]],[11,"parse","","",224,[[["parsestream"]],["result"]]],[11,"parse","","",225,[[["parsestream"]],["result"]]],[11,"parse","","",226,[[["parsestream"]],["result"]]],[11,"parse","","",227,[[["parsestream"]],["result"]]],[11,"parse","","",228,[[["parsestream"]],["result"]]],[11,"parse","","",229,[[["parsestream"]],["result"]]],[11,"parse","","",230,[[["parsestream"]],["result"]]],[11,"parse","","",231,[[["parsestream"]],["result"]]],[11,"parse","","",232,[[["parsestream"]],["result"]]],[11,"parse","","",233,[[["parsestream"]],["result"]]],[11,"parse","","",234,[[["parsestream"]],["result"]]],[11,"parse","","",235,[[["parsestream"]],["result"]]],[11,"parse","","",236,[[["parsestream"]],["result"]]],[11,"parse","","",237,[[["parsestream"]],["result"]]],[11,"parse","","",238,[[["parsestream"]],["result"]]],[11,"parse","","",239,[[["parsestream"]],["result"]]],[11,"parse","","",240,[[["parsestream"]],["result"]]],[11,"parse","","",241,[[["parsestream"]],["result"]]],[11,"parse","","",242,[[["parsestream"]],["result"]]],[11,"parse","","",243,[[["parsestream"]],["result"]]],[11,"parse","","",244,[[["parsestream"]],["result"]]],[11,"parse","","",245,[[["parsestream"]],["result"]]],[11,"parse","","",246,[[["parsestream"]],["result"]]],[11,"parse","","",247,[[["parsestream"]],["result"]]],[11,"parse","","",248,[[["parsestream"]],["result"]]],[11,"parse","","",249,[[["parsestream"]],["result"]]],[11,"parse","","",250,[[["parsestream"]],["result"]]],[11,"parse","","",251,[[["parsestream"]],["result"]]],[11,"parse","","",252,[[["parsestream"]],["result"]]],[11,"parse","","",253,[[["parsestream"]],["result"]]],[11,"parse","","",254,[[["parsestream"]],["result"]]],[11,"parse","","",255,[[["parsestream"]],["result"]]],[11,"parse","","",256,[[["parsestream"]],["result"]]],[11,"parse","","",257,[[["parsestream"]],["result"]]],[11,"parse","","",258,[[["parsestream"]],["result"]]],[11,"parse","","",259,[[["parsestream"]],["result"]]],[11,"parse","","",260,[[["parsestream"]],["result"]]],[11,"parse","","",261,[[["parsestream"]],["result"]]],[11,"parse","","",262,[[["parsestream"]],["result"]]],[11,"parse","","",263,[[["parsestream"]],["result"]]],[11,"parse","","",264,[[["parsestream"]],["result"]]],[11,"parse","","",265,[[["parsestream"]],["result"]]],[11,"parse","","",266,[[["parsestream"]],["result"]]],[11,"parse","","",267,[[["parsestream"]],["result"]]],[11,"parse","","",268,[[["parsestream"]],["result"]]],[11,"parse","","",269,[[["parsestream"]],["result"]]],[11,"parse","","",270,[[["parsestream"]],["result"]]],[11,"parse","","",271,[[["parsestream"]],["result"]]],[11,"parse","","",272,[[["parsestream"]],["result"]]],[11,"parse","","",273,[[["parsestream"]],["result"]]],[11,"parse","","",274,[[["parsestream"]],["result"]]],[11,"parse","","",275,[[["parsestream"]],["result"]]],[11,"parse","","",276,[[["parsestream"]],["result"]]],[11,"parse","","",277,[[["parsestream"]],["result"]]],[11,"parse","","",278,[[["parsestream"]],["result"]]],[11,"parse","syn","",303,[[["parsestream"]],["result"]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",33,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"parse","","",36,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",14,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",37,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",19,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",24,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",25,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",15,[[["parsestream"]],["result"]]],[11,"parse","","",16,[[["parsestream"]],["result"]]],[11,"parse","","",27,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",26,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",35,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",12,[[["parsestream"]],["result"]]],[11,"parse","","",11,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"parse","","",10,[[["parsestream"]],[["result",["arm"]],["arm"]]]],[11,"parse","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",56,[[["parsestream"]],["result"]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",62,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",61,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",55,[[["parsestream"]],["result"]]],[11,"parse","","",63,[[["parsestream"]],["result"]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",79,[[["parsestream"]],["result"]]],[11,"parse","","",74,[[["parsestream"]],["result"]]],[11,"parse","","",87,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],[["result",["usetree"]],["usetree"]]]],[11,"parse","","",81,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",75,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",64,[[["parsestream"]],["result"]]],[11,"parse","","",66,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",82,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",86,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",77,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",284,[[["parsestream"]],["result"]]],[11,"parse","","",285,[[["parsestream"]],["result"]]],[11,"parse","","",286,[[["parsestream"]],["result"]]],[11,"parse","","",287,[[["parsestream"]],["result"]]],[11,"parse","","",288,[[["parsestream"]],["result"]]],[11,"parse","","",289,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","syn::parse","",313,[[["parsestream"]],["result"]]],[11,"drop","","",301,[[["self"]]]],[11,"from","syn","",303,[[["selfvalue"]],["ident"]]],[11,"from","","",303,[[["selftype"]],["ident"]]],[11,"from","","",303,[[["super"]],["ident"]]],[11,"from","","",303,[[["crate"]],["ident"]]],[11,"from","","",303,[[["extern"]],["ident"]]],[11,"from","","",303,[[["underscore"]],["ident"]]],[11,"from","","",150,[[["path"]],["meta"]]],[11,"from","","",150,[[["metalist"]],["meta"]]],[11,"from","","",150,[[["metanamevalue"]],["meta"]]],[11,"from","","",151,[[["meta"]],["nestedmeta"]]],[11,"from","","",151,[[["lit"]],["nestedmeta"]]],[11,"from","","",152,[[["fieldsnamed"]],["fields"]]],[11,"from","","",152,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",153,[[["vispublic"]],["visibility"]]],[11,"from","","",153,[[["viscrate"]],["visibility"]]],[11,"from","","",153,[[["visrestricted"]],["visibility"]]],[11,"from","","",156,[[["exprarray"]],["expr"]]],[11,"from","","",156,[[["exprassign"]],["expr"]]],[11,"from","","",156,[[["exprassignop"]],["expr"]]],[11,"from","","",156,[[["exprasync"]],["expr"]]],[11,"from","","",156,[[["exprawait"]],["expr"]]],[11,"from","","",156,[[["exprbinary"]],["expr"]]],[11,"from","","",156,[[["exprblock"]],["expr"]]],[11,"from","","",156,[[["exprbox"]],["expr"]]],[11,"from","","",156,[[["exprbreak"]],["expr"]]],[11,"from","","",156,[[["exprcall"]],["expr"]]],[11,"from","","",156,[[["exprcast"]],["expr"]]],[11,"from","","",156,[[["exprclosure"]],["expr"]]],[11,"from","","",156,[[["exprcontinue"]],["expr"]]],[11,"from","","",156,[[["exprfield"]],["expr"]]],[11,"from","","",156,[[["exprforloop"]],["expr"]]],[11,"from","","",156,[[["exprgroup"]],["expr"]]],[11,"from","","",156,[[["exprif"]],["expr"]]],[11,"from","","",156,[[["exprindex"]],["expr"]]],[11,"from","","",156,[[["exprlet"]],["expr"]]],[11,"from","","",156,[[["exprlit"]],["expr"]]],[11,"from","","",156,[[["exprloop"]],["expr"]]],[11,"from","","",156,[[["exprmacro"]],["expr"]]],[11,"from","","",156,[[["exprmatch"]],["expr"]]],[11,"from","","",156,[[["exprmethodcall"]],["expr"]]],[11,"from","","",156,[[["exprparen"]],["expr"]]],[11,"from","","",156,[[["exprpath"]],["expr"]]],[11,"from","","",156,[[["exprrange"]],["expr"]]],[11,"from","","",156,[[["exprreference"]],["expr"]]],[11,"from","","",156,[[["exprrepeat"]],["expr"]]],[11,"from","","",156,[[["exprreturn"]],["expr"]]],[11,"from","","",156,[[["exprstruct"]],["expr"]]],[11,"from","","",156,[[["exprtry"]],["expr"]]],[11,"from","","",156,[[["exprtryblock"]],["expr"]]],[11,"from","","",156,[[["exprtuple"]],["expr"]]],[11,"from","","",156,[[["exprtype"]],["expr"]]],[11,"from","","",156,[[["exprunary"]],["expr"]]],[11,"from","","",156,[[["exprunsafe"]],["expr"]]],[11,"from","","",156,[[["exprwhile"]],["expr"]]],[11,"from","","",156,[[["expryield"]],["expr"]]],[11,"from","","",53,[[["usize"]],["index"]]],[11,"from","","",158,[[["typeparam"]],["genericparam"]]],[11,"from","","",158,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",158,[[["constparam"]],["genericparam"]]],[11,"from","","",62,[[["ident"]],["self"]]],[11,"from","","",160,[[["traitbound"]],["typeparambound"]]],[11,"from","","",160,[[["lifetime"]],["typeparambound"]]],[11,"from","","",161,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",161,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",161,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",165,[[["itemconst"]],["item"]]],[11,"from","","",165,[[["itemenum"]],["item"]]],[11,"from","","",165,[[["itemexterncrate"]],["item"]]],[11,"from","","",165,[[["itemfn"]],["item"]]],[11,"from","","",165,[[["itemforeignmod"]],["item"]]],[11,"from","","",165,[[["itemimpl"]],["item"]]],[11,"from","","",165,[[["itemmacro"]],["item"]]],[11,"from","","",165,[[["itemmacro2"]],["item"]]],[11,"from","","",165,[[["itemmod"]],["item"]]],[11,"from","","",165,[[["itemstatic"]],["item"]]],[11,"from","","",165,[[["itemstruct"]],["item"]]],[11,"from","","",165,[[["itemtrait"]],["item"]]],[11,"from","","",165,[[["itemtraitalias"]],["item"]]],[11,"from","","",165,[[["itemtype"]],["item"]]],[11,"from","","",165,[[["itemunion"]],["item"]]],[11,"from","","",165,[[["itemuse"]],["item"]]],[11,"from","","",165,[[["deriveinput"]],["item"]]],[11,"from","","",106,[[["itemstruct"]],["deriveinput"]]],[11,"from","","",106,[[["itemenum"]],["deriveinput"]]],[11,"from","","",106,[[["itemunion"]],["deriveinput"]]],[11,"from","","",167,[[["usepath"]],["usetree"]]],[11,"from","","",167,[[["usename"]],["usetree"]]],[11,"from","","",167,[[["userename"]],["usetree"]]],[11,"from","","",167,[[["useglob"]],["usetree"]]],[11,"from","","",167,[[["usegroup"]],["usetree"]]],[11,"from","","",163,[[["foreignitemfn"]],["foreignitem"]]],[11,"from","","",163,[[["foreignitemstatic"]],["foreignitem"]]],[11,"from","","",163,[[["foreignitemtype"]],["foreignitem"]]],[11,"from","","",163,[[["foreignitemmacro"]],["foreignitem"]]],[11,"from","","",166,[[["traititemconst"]],["traititem"]]],[11,"from","","",166,[[["traititemmethod"]],["traititem"]]],[11,"from","","",166,[[["traititemtype"]],["traititem"]]],[11,"from","","",166,[[["traititemmacro"]],["traititem"]]],[11,"from","","",164,[[["implitemconst"]],["implitem"]]],[11,"from","","",164,[[["implitemmethod"]],["implitem"]]],[11,"from","","",164,[[["implitemtype"]],["implitem"]]],[11,"from","","",164,[[["implitemmacro"]],["implitem"]]],[11,"from","","",162,[[["receiver"]],["fnarg"]]],[11,"from","","",162,[[["pattype"]],["fnarg"]]],[11,"from","","",168,[[["litstr"]],["lit"]]],[11,"from","","",168,[[["litbytestr"]],["lit"]]],[11,"from","","",168,[[["litbyte"]],["lit"]]],[11,"from","","",168,[[["litchar"]],["lit"]]],[11,"from","","",168,[[["litint"]],["lit"]]],[11,"from","","",168,[[["litfloat"]],["lit"]]],[11,"from","","",168,[[["litbool"]],["lit"]]],[11,"from","","",288,[[["literal"]],["self"]]],[11,"from","","",289,[[["literal"]],["self"]]],[11,"from","","",171,[[["datastruct"]],["data"]]],[11,"from","","",171,[[["dataenum"]],["data"]]],[11,"from","","",171,[[["dataunion"]],["data"]]],[11,"from","","",176,[[["typearray"]],["type"]]],[11,"from","","",176,[[["typebarefn"]],["type"]]],[11,"from","","",176,[[["typegroup"]],["type"]]],[11,"from","","",176,[[["typeimpltrait"]],["type"]]],[11,"from","","",176,[[["typeinfer"]],["type"]]],[11,"from","","",176,[[["typemacro"]],["type"]]],[11,"from","","",176,[[["typenever"]],["type"]]],[11,"from","","",176,[[["typeparen"]],["type"]]],[11,"from","","",176,[[["typepath"]],["type"]]],[11,"from","","",176,[[["typeptr"]],["type"]]],[11,"from","","",176,[[["typereference"]],["type"]]],[11,"from","","",176,[[["typeslice"]],["type"]]],[11,"from","","",176,[[["typetraitobject"]],["type"]]],[11,"from","","",176,[[["typetuple"]],["type"]]],[11,"from","","",177,[[["patbox"]],["pat"]]],[11,"from","","",177,[[["patident"]],["pat"]]],[11,"from","","",177,[[["patlit"]],["pat"]]],[11,"from","","",177,[[["patmacro"]],["pat"]]],[11,"from","","",177,[[["pator"]],["pat"]]],[11,"from","","",177,[[["patpath"]],["pat"]]],[11,"from","","",177,[[["patrange"]],["pat"]]],[11,"from","","",177,[[["patreference"]],["pat"]]],[11,"from","","",177,[[["patrest"]],["pat"]]],[11,"from","","",177,[[["patslice"]],["pat"]]],[11,"from","","",177,[[["patstruct"]],["pat"]]],[11,"from","","",177,[[["pattuple"]],["pat"]]],[11,"from","","",177,[[["pattuplestruct"]],["pat"]]],[11,"from","","",177,[[["pattype"]],["pat"]]],[11,"from","","",177,[[["patwild"]],["pat"]]],[11,"from","","",146,[[["t"]],["self"]]],[11,"from","","",147,[[["t"]],["self"]]],[11,"from","","",302,[[["lexerror"]],["self"]]],[11,"next_back","syn::punctuated","",306,[[["self"]],["option"]]],[11,"next_back","","",307,[[["self"]],["option"]]],[11,"next_back","","",308,[[["self"]],["option"]]],[11,"next_back","","",309,[[["self"]],["option"]]],[11,"next_back","","",310,[[["self"]],["option"]]],[11,"next_back","","",311,[[["self"]],["option"]]],[11,"len","","",306,[[["self"]],["usize"]]],[11,"len","","",307,[[["self"]],["usize"]]],[11,"len","","",308,[[["self"]],["usize"]]],[11,"len","","",309,[[["self"]],["usize"]]],[11,"len","","",310,[[["self"]],["usize"]]],[11,"len","","",311,[[["self"]],["usize"]]],[11,"extend","","",294,[[["self"],["intoiterator"]]]],[11,"extend","","",294,[[["intoiterator"],["self"]]]],[11,"into_iter","syn","",152,[[]]],[11,"into_iter","syn::punctuated","",294,[[]]],[11,"into_iter","syn","",302,[[]]],[11,"next","syn::punctuated","",306,[[["self"]],["option"]]],[11,"size_hint","","",306,[[["self"]]]],[11,"next","","",307,[[["self"]],["option"]]],[11,"size_hint","","",307,[[["self"]]]],[11,"next","","",308,[[["self"]],["option"]]],[11,"size_hint","","",308,[[["self"]]]],[11,"next","","",309,[[["self"]],["option"]]],[11,"size_hint","","",309,[[["self"]]]],[11,"next","","",310,[[["self"]],["option"]]],[11,"size_hint","","",310,[[["self"]]]],[11,"next","","",311,[[["self"]],["option"]]],[11,"size_hint","","",311,[[["self"]]]],[11,"clone","syn::token","",180,[[["self"]],["underscore"]]],[11,"clone","","",181,[[["self"]],["abstract"]]],[11,"clone","","",182,[[["self"]],["as"]]],[11,"clone","","",183,[[["self"]],["async"]]],[11,"clone","","",184,[[["self"]],["auto"]]],[11,"clone","","",185,[[["self"]],["await"]]],[11,"clone","","",186,[[["self"]],["become"]]],[11,"clone","","",187,[[["self"]],["box"]]],[11,"clone","","",188,[[["self"]],["break"]]],[11,"clone","","",189,[[["self"]],["const"]]],[11,"clone","","",190,[[["self"]],["continue"]]],[11,"clone","","",191,[[["self"]],["crate"]]],[11,"clone","","",192,[[["self"]],["default"]]],[11,"clone","","",193,[[["self"]],["do"]]],[11,"clone","","",194,[[["self"]],["dyn"]]],[11,"clone","","",195,[[["self"]],["else"]]],[11,"clone","","",196,[[["self"]],["enum"]]],[11,"clone","","",197,[[["self"]],["extern"]]],[11,"clone","","",198,[[["self"]],["final"]]],[11,"clone","","",199,[[["self"]],["fn"]]],[11,"clone","","",200,[[["self"]],["for"]]],[11,"clone","","",201,[[["self"]],["if"]]],[11,"clone","","",202,[[["self"]],["impl"]]],[11,"clone","","",203,[[["self"]],["in"]]],[11,"clone","","",204,[[["self"]],["let"]]],[11,"clone","","",205,[[["self"]],["loop"]]],[11,"clone","","",206,[[["self"]],["macro"]]],[11,"clone","","",207,[[["self"]],["match"]]],[11,"clone","","",208,[[["self"]],["mod"]]],[11,"clone","","",209,[[["self"]],["move"]]],[11,"clone","","",210,[[["self"]],["mut"]]],[11,"clone","","",211,[[["self"]],["override"]]],[11,"clone","","",212,[[["self"]],["priv"]]],[11,"clone","","",213,[[["self"]],["pub"]]],[11,"clone","","",214,[[["self"]],["ref"]]],[11,"clone","","",215,[[["self"]],["return"]]],[11,"clone","","",216,[[["self"]],["selftype"]]],[11,"clone","","",217,[[["self"]],["selfvalue"]]],[11,"clone","","",218,[[["self"]],["static"]]],[11,"clone","","",219,[[["self"]],["struct"]]],[11,"clone","","",220,[[["self"]],["super"]]],[11,"clone","","",221,[[["self"]],["trait"]]],[11,"clone","","",222,[[["self"]],["try"]]],[11,"clone","","",223,[[["self"]],["type"]]],[11,"clone","","",224,[[["self"]],["typeof"]]],[11,"clone","","",225,[[["self"]],["union"]]],[11,"clone","","",226,[[["self"]],["unsafe"]]],[11,"clone","","",227,[[["self"]],["unsized"]]],[11,"clone","","",228,[[["self"]],["use"]]],[11,"clone","","",229,[[["self"]],["virtual"]]],[11,"clone","","",230,[[["self"]],["where"]]],[11,"clone","","",231,[[["self"]],["while"]]],[11,"clone","","",232,[[["self"]],["yield"]]],[11,"clone","","",233,[[["self"]],["add"]]],[11,"clone","","",234,[[["self"]],["addeq"]]],[11,"clone","","",235,[[["self"]],["and"]]],[11,"clone","","",236,[[["self"]],["andand"]]],[11,"clone","","",237,[[["self"]],["andeq"]]],[11,"clone","","",238,[[["self"]],["at"]]],[11,"clone","","",239,[[["self"]],["bang"]]],[11,"clone","","",240,[[["self"]],["caret"]]],[11,"clone","","",241,[[["self"]],["careteq"]]],[11,"clone","","",242,[[["self"]],["colon"]]],[11,"clone","","",243,[[["self"]],["colon2"]]],[11,"clone","","",244,[[["self"]],["comma"]]],[11,"clone","","",245,[[["self"]],["div"]]],[11,"clone","","",246,[[["self"]],["diveq"]]],[11,"clone","","",247,[[["self"]],["dollar"]]],[11,"clone","","",248,[[["self"]],["dot"]]],[11,"clone","","",249,[[["self"]],["dot2"]]],[11,"clone","","",250,[[["self"]],["dot3"]]],[11,"clone","","",251,[[["self"]],["dotdoteq"]]],[11,"clone","","",252,[[["self"]],["eq"]]],[11,"clone","","",253,[[["self"]],["eqeq"]]],[11,"clone","","",254,[[["self"]],["ge"]]],[11,"clone","","",255,[[["self"]],["gt"]]],[11,"clone","","",256,[[["self"]],["le"]]],[11,"clone","","",257,[[["self"]],["lt"]]],[11,"clone","","",258,[[["self"]],["muleq"]]],[11,"clone","","",259,[[["self"]],["ne"]]],[11,"clone","","",260,[[["self"]],["or"]]],[11,"clone","","",261,[[["self"]],["oreq"]]],[11,"clone","","",262,[[["self"]],["oror"]]],[11,"clone","","",263,[[["self"]],["pound"]]],[11,"clone","","",264,[[["self"]],["question"]]],[11,"clone","","",265,[[["self"]],["rarrow"]]],[11,"clone","","",266,[[["self"]],["larrow"]]],[11,"clone","","",267,[[["self"]],["rem"]]],[11,"clone","","",268,[[["self"]],["remeq"]]],[11,"clone","","",269,[[["self"]],["fatarrow"]]],[11,"clone","","",270,[[["self"]],["semi"]]],[11,"clone","","",271,[[["self"]],["shl"]]],[11,"clone","","",272,[[["self"]],["shleq"]]],[11,"clone","","",273,[[["self"]],["shr"]]],[11,"clone","","",274,[[["self"]],["shreq"]]],[11,"clone","","",275,[[["self"]],["star"]]],[11,"clone","","",276,[[["self"]],["sub"]]],[11,"clone","","",277,[[["self"]],["subeq"]]],[11,"clone","","",278,[[["self"]],["tilde"]]],[11,"clone","","",279,[[["self"]],["brace"]]],[11,"clone","","",280,[[["self"]],["bracket"]]],[11,"clone","","",281,[[["self"]],["paren"]]],[11,"clone","","",282,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",149,[[["self"]],["attrstyle"]]],[11,"clone","","",150,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",151,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",152,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",153,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",156,[[["self"]],["expr"]]],[11,"clone","","",14,[[["self"]],["exprarray"]]],[11,"clone","","",15,[[["self"]],["exprassign"]]],[11,"clone","","",16,[[["self"]],["exprassignop"]]],[11,"clone","","",17,[[["self"]],["exprasync"]]],[11,"clone","","",18,[[["self"]],["exprawait"]]],[11,"clone","","",19,[[["self"]],["exprbinary"]]],[11,"clone","","",20,[[["self"]],["exprblock"]]],[11,"clone","","",21,[[["self"]],["exprbox"]]],[11,"clone","","",22,[[["self"]],["exprbreak"]]],[11,"clone","","",23,[[["self"]],["exprcall"]]],[11,"clone","","",24,[[["self"]],["exprcast"]]],[11,"clone","","",25,[[["self"]],["exprclosure"]]],[11,"clone","","",26,[[["self"]],["exprcontinue"]]],[11,"clone","","",27,[[["self"]],["exprfield"]]],[11,"clone","","",28,[[["self"]],["exprforloop"]]],[11,"clone","","",29,[[["self"]],["exprgroup"]]],[11,"clone","","",30,[[["self"]],["exprif"]]],[11,"clone","","",31,[[["self"]],["exprindex"]]],[11,"clone","","",32,[[["self"]],["exprlet"]]],[11,"clone","","",33,[[["self"]],["exprlit"]]],[11,"clone","","",34,[[["self"]],["exprloop"]]],[11,"clone","","",35,[[["self"]],["exprmacro"]]],[11,"clone","","",36,[[["self"]],["exprmatch"]]],[11,"clone","","",37,[[["self"]],["exprmethodcall"]]],[11,"clone","","",38,[[["self"]],["exprparen"]]],[11,"clone","","",39,[[["self"]],["exprpath"]]],[11,"clone","","",40,[[["self"]],["exprrange"]]],[11,"clone","","",41,[[["self"]],["exprreference"]]],[11,"clone","","",42,[[["self"]],["exprrepeat"]]],[11,"clone","","",43,[[["self"]],["exprreturn"]]],[11,"clone","","",44,[[["self"]],["exprstruct"]]],[11,"clone","","",45,[[["self"]],["exprtry"]]],[11,"clone","","",46,[[["self"]],["exprtryblock"]]],[11,"clone","","",47,[[["self"]],["exprtuple"]]],[11,"clone","","",48,[[["self"]],["exprtype"]]],[11,"clone","","",49,[[["self"]],["exprunary"]]],[11,"clone","","",50,[[["self"]],["exprunsafe"]]],[11,"clone","","",51,[[["self"]],["exprwhile"]]],[11,"clone","","",52,[[["self"]],["expryield"]]],[11,"clone","","",157,[[["self"]],["member"]]],[11,"clone","","",53,[[["self"]],["index"]]],[11,"clone","","",13,[[["self"]],["methodturbofish"]]],[11,"clone","","",154,[[["self"]],["genericmethodargument"]]],[11,"clone","","",11,[[["self"]],["fieldvalue"]]],[11,"clone","","",12,[[["self"]],["label"]]],[11,"clone","","",10,[[["self"]],["arm"]]],[11,"clone","","",155,[[["self"]],["rangelimits"]]],[11,"clone","","",56,[[["self"]],["generics"]]],[11,"clone","","",158,[[["self"]],["genericparam"]]],[11,"clone","","",62,[[["self"]],["typeparam"]]],[11,"clone","","",57,[[["self"]],["lifetimedef"]]],[11,"clone","","",55,[[["self"]],["constparam"]]],[11,"clone","","",304,[[["self"]],["implgenerics"]]],[11,"clone","","",283,[[["self"]],["typegenerics"]]],[11,"clone","","",305,[[["self"]],["turbofish"]]],[11,"clone","","",54,[[["self"]],["boundlifetimes"]]],[11,"clone","","",160,[[["self"]],["typeparambound"]]],[11,"clone","","",61,[[["self"]],["traitbound"]]],[11,"clone","","",159,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",63,[[["self"]],["whereclause"]]],[11,"clone","","",161,[[["self"]],["wherepredicate"]]],[11,"clone","","",60,[[["self"]],["predicatetype"]]],[11,"clone","","",59,[[["self"]],["predicatelifetime"]]],[11,"clone","","",58,[[["self"]],["predicateeq"]]],[11,"clone","","",165,[[["self"]],["item"]]],[11,"clone","","",72,[[["self"]],["itemconst"]]],[11,"clone","","",73,[[["self"]],["itemenum"]]],[11,"clone","","",74,[[["self"]],["itemexterncrate"]]],[11,"clone","","",75,[[["self"]],["itemfn"]]],[11,"clone","","",76,[[["self"]],["itemforeignmod"]]],[11,"clone","","",77,[[["self"]],["itemimpl"]]],[11,"clone","","",78,[[["self"]],["itemmacro"]]],[11,"clone","","",79,[[["self"]],["itemmacro2"]]],[11,"clone","","",80,[[["self"]],["itemmod"]]],[11,"clone","","",81,[[["self"]],["itemstatic"]]],[11,"clone","","",82,[[["self"]],["itemstruct"]]],[11,"clone","","",83,[[["self"]],["itemtrait"]]],[11,"clone","","",84,[[["self"]],["itemtraitalias"]]],[11,"clone","","",85,[[["self"]],["itemtype"]]],[11,"clone","","",86,[[["self"]],["itemunion"]]],[11,"clone","","",87,[[["self"]],["itemuse"]]],[11,"clone","","",167,[[["self"]],["usetree"]]],[11,"clone","","",97,[[["self"]],["usepath"]]],[11,"clone","","",96,[[["self"]],["usename"]]],[11,"clone","","",98,[[["self"]],["userename"]]],[11,"clone","","",94,[[["self"]],["useglob"]]],[11,"clone","","",95,[[["self"]],["usegroup"]]],[11,"clone","","",163,[[["self"]],["foreignitem"]]],[11,"clone","","",64,[[["self"]],["foreignitemfn"]]],[11,"clone","","",66,[[["self"]],["foreignitemstatic"]]],[11,"clone","","",67,[[["self"]],["foreignitemtype"]]],[11,"clone","","",65,[[["self"]],["foreignitemmacro"]]],[11,"clone","","",166,[[["self"]],["traititem"]]],[11,"clone","","",90,[[["self"]],["traititemconst"]]],[11,"clone","","",92,[[["self"]],["traititemmethod"]]],[11,"clone","","",93,[[["self"]],["traititemtype"]]],[11,"clone","","",91,[[["self"]],["traititemmacro"]]],[11,"clone","","",164,[[["self"]],["implitem"]]],[11,"clone","","",68,[[["self"]],["implitemconst"]]],[11,"clone","","",70,[[["self"]],["implitemmethod"]]],[11,"clone","","",71,[[["self"]],["implitemtype"]]],[11,"clone","","",69,[[["self"]],["implitemmacro"]]],[11,"clone","","",89,[[["self"]],["signature"]]],[11,"clone","","",162,[[["self"]],["fnarg"]]],[11,"clone","","",88,[[["self"]],["receiver"]]],[11,"clone","","",99,[[["self"]],["file"]]],[11,"clone","","",100,[[["self"]],["lifetime"]]],[11,"clone","","",168,[[["self"]],["lit"]]],[11,"clone","","",284,[[["self"]],["litstr"]]],[11,"clone","","",285,[[["self"]],["litbytestr"]]],[11,"clone","","",286,[[["self"]],["litbyte"]]],[11,"clone","","",287,[[["self"]],["litchar"]]],[11,"clone","","",288,[[["self"]],["litint"]]],[11,"clone","","",289,[[["self"]],["litfloat"]]],[11,"clone","","",101,[[["self"]],["litbool"]]],[11,"clone","","",169,[[["self"]],["strstyle"]]],[11,"clone","","",102,[[["self"]],["macro"]]],[11,"clone","","",170,[[["self"]],["macrodelimiter"]]],[11,"clone","","",106,[[["self"]],["deriveinput"]]],[11,"clone","","",171,[[["self"]],["data"]]],[11,"clone","","",104,[[["self"]],["datastruct"]]],[11,"clone","","",103,[[["self"]],["dataenum"]]],[11,"clone","","",105,[[["self"]],["dataunion"]]],[11,"clone","","",172,[[["self"]],["binop"]]],[11,"clone","","",173,[[["self"]],["unop"]]],[11,"clone","","",107,[[["self"]],["block"]]],[11,"clone","","",174,[[["self"]],["stmt"]]],[11,"clone","","",108,[[["self"]],["local"]]],[11,"clone","","",176,[[["self"]],["type"]]],[11,"clone","","",111,[[["self"]],["typearray"]]],[11,"clone","","",112,[[["self"]],["typebarefn"]]],[11,"clone","","",113,[[["self"]],["typegroup"]]],[11,"clone","","",114,[[["self"]],["typeimpltrait"]]],[11,"clone","","",115,[[["self"]],["typeinfer"]]],[11,"clone","","",116,[[["self"]],["typemacro"]]],[11,"clone","","",117,[[["self"]],["typenever"]]],[11,"clone","","",118,[[["self"]],["typeparen"]]],[11,"clone","","",119,[[["self"]],["typepath"]]],[11,"clone","","",120,[[["self"]],["typeptr"]]],[11,"clone","","",121,[[["self"]],["typereference"]]],[11,"clone","","",122,[[["self"]],["typeslice"]]],[11,"clone","","",123,[[["self"]],["typetraitobject"]]],[11,"clone","","",124,[[["self"]],["typetuple"]]],[11,"clone","","",109,[[["self"]],["abi"]]],[11,"clone","","",110,[[["self"]],["barefnarg"]]],[11,"clone","","",125,[[["self"]],["variadic"]]],[11,"clone","","",175,[[["self"]],["returntype"]]],[11,"clone","","",177,[[["self"]],["pat"]]],[11,"clone","","",127,[[["self"]],["patbox"]]],[11,"clone","","",128,[[["self"]],["patident"]]],[11,"clone","","",129,[[["self"]],["patlit"]]],[11,"clone","","",130,[[["self"]],["patmacro"]]],[11,"clone","","",131,[[["self"]],["pator"]]],[11,"clone","","",132,[[["self"]],["patpath"]]],[11,"clone","","",133,[[["self"]],["patrange"]]],[11,"clone","","",134,[[["self"]],["patreference"]]],[11,"clone","","",135,[[["self"]],["patrest"]]],[11,"clone","","",136,[[["self"]],["patslice"]]],[11,"clone","","",137,[[["self"]],["patstruct"]]],[11,"clone","","",138,[[["self"]],["pattuple"]]],[11,"clone","","",139,[[["self"]],["pattuplestruct"]]],[11,"clone","","",140,[[["self"]],["pattype"]]],[11,"clone","","",141,[[["self"]],["patwild"]]],[11,"clone","","",126,[[["self"]],["fieldpat"]]],[11,"clone","","",146,[[["self"]],["path"]]],[11,"clone","","",147,[[["self"]],["pathsegment"]]],[11,"clone","","",179,[[["self"]],["patharguments"]]],[11,"clone","","",178,[[["self"]],["genericargument"]]],[11,"clone","","",142,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",143,[[["self"]],["binding"]]],[11,"clone","","",144,[[["self"]],["constraint"]]],[11,"clone","","",145,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",148,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",291,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",294,[[["self"]],["punctuated"]]],[11,"clone","","",306,[[["self"]],["self"]]],[11,"clone","","",308,[[["self"]],["intopairs"]]],[11,"clone","","",309,[[["self"]],["intoiter"]]],[11,"clone","","",310,[[["self"]],["self"]]],[11,"clone","","",293,[[["self"]],["pair"]]],[11,"clone","syn::parse","",300,[[["self"]],["stepcursor"]]],[11,"clone","syn","",302,[[["self"]],["error"]]],[11,"default","syn::token","",180,[[],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"default","","",185,[[],["self"]]],[11,"default","","",186,[[],["self"]]],[11,"default","","",187,[[],["self"]]],[11,"default","","",188,[[],["self"]]],[11,"default","","",189,[[],["self"]]],[11,"default","","",190,[[],["self"]]],[11,"default","","",191,[[],["self"]]],[11,"default","","",192,[[],["self"]]],[11,"default","","",193,[[],["self"]]],[11,"default","","",194,[[],["self"]]],[11,"default","","",195,[[],["self"]]],[11,"default","","",196,[[],["self"]]],[11,"default","","",197,[[],["self"]]],[11,"default","","",198,[[],["self"]]],[11,"default","","",199,[[],["self"]]],[11,"default","","",200,[[],["self"]]],[11,"default","","",201,[[],["self"]]],[11,"default","","",202,[[],["self"]]],[11,"default","","",203,[[],["self"]]],[11,"default","","",204,[[],["self"]]],[11,"default","","",205,[[],["self"]]],[11,"default","","",206,[[],["self"]]],[11,"default","","",207,[[],["self"]]],[11,"default","","",208,[[],["self"]]],[11,"default","","",209,[[],["self"]]],[11,"default","","",210,[[],["self"]]],[11,"default","","",211,[[],["self"]]],[11,"default","","",212,[[],["self"]]],[11,"default","","",213,[[],["self"]]],[11,"default","","",214,[[],["self"]]],[11,"default","","",215,[[],["self"]]],[11,"default","","",216,[[],["self"]]],[11,"default","","",217,[[],["self"]]],[11,"default","","",218,[[],["self"]]],[11,"default","","",219,[[],["self"]]],[11,"default","","",220,[[],["self"]]],[11,"default","","",221,[[],["self"]]],[11,"default","","",222,[[],["self"]]],[11,"default","","",223,[[],["self"]]],[11,"default","","",224,[[],["self"]]],[11,"default","","",225,[[],["self"]]],[11,"default","","",226,[[],["self"]]],[11,"default","","",227,[[],["self"]]],[11,"default","","",228,[[],["self"]]],[11,"default","","",229,[[],["self"]]],[11,"default","","",230,[[],["self"]]],[11,"default","","",231,[[],["self"]]],[11,"default","","",232,[[],["self"]]],[11,"default","","",233,[[],["self"]]],[11,"default","","",234,[[],["self"]]],[11,"default","","",235,[[],["self"]]],[11,"default","","",236,[[],["self"]]],[11,"default","","",237,[[],["self"]]],[11,"default","","",238,[[],["self"]]],[11,"default","","",239,[[],["self"]]],[11,"default","","",240,[[],["self"]]],[11,"default","","",241,[[],["self"]]],[11,"default","","",242,[[],["self"]]],[11,"default","","",243,[[],["self"]]],[11,"default","","",244,[[],["self"]]],[11,"default","","",245,[[],["self"]]],[11,"default","","",246,[[],["self"]]],[11,"default","","",247,[[],["self"]]],[11,"default","","",248,[[],["self"]]],[11,"default","","",249,[[],["self"]]],[11,"default","","",250,[[],["self"]]],[11,"default","","",251,[[],["self"]]],[11,"default","","",252,[[],["self"]]],[11,"default","","",253,[[],["self"]]],[11,"default","","",254,[[],["self"]]],[11,"default","","",255,[[],["self"]]],[11,"default","","",256,[[],["self"]]],[11,"default","","",257,[[],["self"]]],[11,"default","","",258,[[],["self"]]],[11,"default","","",259,[[],["self"]]],[11,"default","","",260,[[],["self"]]],[11,"default","","",261,[[],["self"]]],[11,"default","","",262,[[],["self"]]],[11,"default","","",263,[[],["self"]]],[11,"default","","",264,[[],["self"]]],[11,"default","","",265,[[],["self"]]],[11,"default","","",266,[[],["self"]]],[11,"default","","",267,[[],["self"]]],[11,"default","","",268,[[],["self"]]],[11,"default","","",269,[[],["self"]]],[11,"default","","",270,[[],["self"]]],[11,"default","","",271,[[],["self"]]],[11,"default","","",272,[[],["self"]]],[11,"default","","",273,[[],["self"]]],[11,"default","","",274,[[],["self"]]],[11,"default","","",275,[[],["self"]]],[11,"default","","",276,[[],["self"]]],[11,"default","","",277,[[],["self"]]],[11,"default","","",278,[[],["self"]]],[11,"default","","",279,[[],["self"]]],[11,"default","","",280,[[],["self"]]],[11,"default","","",281,[[],["self"]]],[11,"default","","",282,[[],["self"]]],[11,"default","syn","",56,[[],["generics"]]],[11,"default","","",54,[[],["boundlifetimes"]]],[11,"default","","",179,[[],["self"]]],[11,"default","syn::punctuated","",294,[[],["self"]]],[11,"cmp","syn","",100,[[["self"],["lifetime"]],["ordering"]]],[11,"eq","syn::token","",180,[[["underscore"],["self"]],["bool"]]],[11,"eq","","",181,[[["abstract"],["self"]],["bool"]]],[11,"eq","","",182,[[["as"],["self"]],["bool"]]],[11,"eq","","",183,[[["async"],["self"]],["bool"]]],[11,"eq","","",184,[[["auto"],["self"]],["bool"]]],[11,"eq","","",185,[[["self"],["await"]],["bool"]]],[11,"eq","","",186,[[["become"],["self"]],["bool"]]],[11,"eq","","",187,[[["box"],["self"]],["bool"]]],[11,"eq","","",188,[[["break"],["self"]],["bool"]]],[11,"eq","","",189,[[["const"],["self"]],["bool"]]],[11,"eq","","",190,[[["self"],["continue"]],["bool"]]],[11,"eq","","",191,[[["self"],["crate"]],["bool"]]],[11,"eq","","",192,[[["self"],["default"]],["bool"]]],[11,"eq","","",193,[[["do"],["self"]],["bool"]]],[11,"eq","","",194,[[["dyn"],["self"]],["bool"]]],[11,"eq","","",195,[[["else"],["self"]],["bool"]]],[11,"eq","","",196,[[["enum"],["self"]],["bool"]]],[11,"eq","","",197,[[["self"],["extern"]],["bool"]]],[11,"eq","","",198,[[["final"],["self"]],["bool"]]],[11,"eq","","",199,[[["fn"],["self"]],["bool"]]],[11,"eq","","",200,[[["self"],["for"]],["bool"]]],[11,"eq","","",201,[[["self"],["if"]],["bool"]]],[11,"eq","","",202,[[["impl"],["self"]],["bool"]]],[11,"eq","","",203,[[["in"],["self"]],["bool"]]],[11,"eq","","",204,[[["self"],["let"]],["bool"]]],[11,"eq","","",205,[[["self"],["loop"]],["bool"]]],[11,"eq","","",206,[[["self"],["macro"]],["bool"]]],[11,"eq","","",207,[[["self"],["match"]],["bool"]]],[11,"eq","","",208,[[["self"],["mod"]],["bool"]]],[11,"eq","","",209,[[["self"],["move"]],["bool"]]],[11,"eq","","",210,[[["self"],["mut"]],["bool"]]],[11,"eq","","",211,[[["self"],["override"]],["bool"]]],[11,"eq","","",212,[[["self"],["priv"]],["bool"]]],[11,"eq","","",213,[[["pub"],["self"]],["bool"]]],[11,"eq","","",214,[[["ref"],["self"]],["bool"]]],[11,"eq","","",215,[[["self"],["return"]],["bool"]]],[11,"eq","","",216,[[["self"],["selftype"]],["bool"]]],[11,"eq","","",217,[[["selfvalue"],["self"]],["bool"]]],[11,"eq","","",218,[[["static"],["self"]],["bool"]]],[11,"eq","","",219,[[["self"],["struct"]],["bool"]]],[11,"eq","","",220,[[["self"],["super"]],["bool"]]],[11,"eq","","",221,[[["trait"],["self"]],["bool"]]],[11,"eq","","",222,[[["self"],["try"]],["bool"]]],[11,"eq","","",223,[[["type"],["self"]],["bool"]]],[11,"eq","","",224,[[["typeof"],["self"]],["bool"]]],[11,"eq","","",225,[[["union"],["self"]],["bool"]]],[11,"eq","","",226,[[["unsafe"],["self"]],["bool"]]],[11,"eq","","",227,[[["self"],["unsized"]],["bool"]]],[11,"eq","","",228,[[["self"],["use"]],["bool"]]],[11,"eq","","",229,[[["virtual"],["self"]],["bool"]]],[11,"eq","","",230,[[["self"],["where"]],["bool"]]],[11,"eq","","",231,[[["while"],["self"]],["bool"]]],[11,"eq","","",232,[[["self"],["yield"]],["bool"]]],[11,"eq","","",233,[[["self"],["add"]],["bool"]]],[11,"eq","","",234,[[["addeq"],["self"]],["bool"]]],[11,"eq","","",235,[[["self"],["and"]],["bool"]]],[11,"eq","","",236,[[["self"],["andand"]],["bool"]]],[11,"eq","","",237,[[["andeq"],["self"]],["bool"]]],[11,"eq","","",238,[[["self"],["at"]],["bool"]]],[11,"eq","","",239,[[["bang"],["self"]],["bool"]]],[11,"eq","","",240,[[["self"],["caret"]],["bool"]]],[11,"eq","","",241,[[["careteq"],["self"]],["bool"]]],[11,"eq","","",242,[[["colon"],["self"]],["bool"]]],[11,"eq","","",243,[[["colon2"],["self"]],["bool"]]],[11,"eq","","",244,[[["self"],["comma"]],["bool"]]],[11,"eq","","",245,[[["self"],["div"]],["bool"]]],[11,"eq","","",246,[[["self"],["diveq"]],["bool"]]],[11,"eq","","",247,[[["dollar"],["self"]],["bool"]]],[11,"eq","","",248,[[["self"],["dot"]],["bool"]]],[11,"eq","","",249,[[["self"],["dot2"]],["bool"]]],[11,"eq","","",250,[[["dot3"],["self"]],["bool"]]],[11,"eq","","",251,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq","","",252,[[["self"],["eq"]],["bool"]]],[11,"eq","","",253,[[["self"],["eqeq"]],["bool"]]],[11,"eq","","",254,[[["self"],["ge"]],["bool"]]],[11,"eq","","",255,[[["self"],["gt"]],["bool"]]],[11,"eq","","",256,[[["self"],["le"]],["bool"]]],[11,"eq","","",257,[[["lt"],["self"]],["bool"]]],[11,"eq","","",258,[[["self"],["muleq"]],["bool"]]],[11,"eq","","",259,[[["ne"],["self"]],["bool"]]],[11,"eq","","",260,[[["self"],["or"]],["bool"]]],[11,"eq","","",261,[[["oreq"],["self"]],["bool"]]],[11,"eq","","",262,[[["self"],["oror"]],["bool"]]],[11,"eq","","",263,[[["self"],["pound"]],["bool"]]],[11,"eq","","",264,[[["self"],["question"]],["bool"]]],[11,"eq","","",265,[[["rarrow"],["self"]],["bool"]]],[11,"eq","","",266,[[["self"],["larrow"]],["bool"]]],[11,"eq","","",267,[[["self"],["rem"]],["bool"]]],[11,"eq","","",268,[[["self"],["remeq"]],["bool"]]],[11,"eq","","",269,[[["self"],["fatarrow"]],["bool"]]],[11,"eq","","",270,[[["self"],["semi"]],["bool"]]],[11,"eq","","",271,[[["shl"],["self"]],["bool"]]],[11,"eq","","",272,[[["self"],["shleq"]],["bool"]]],[11,"eq","","",273,[[["self"],["shr"]],["bool"]]],[11,"eq","","",274,[[["shreq"],["self"]],["bool"]]],[11,"eq","","",275,[[["self"],["star"]],["bool"]]],[11,"eq","","",276,[[["self"],["sub"]],["bool"]]],[11,"eq","","",277,[[["self"],["subeq"]],["bool"]]],[11,"eq","","",278,[[["self"],["tilde"]],["bool"]]],[11,"eq","","",279,[[["brace"],["self"]],["bool"]]],[11,"eq","","",280,[[["bracket"],["self"]],["bool"]]],[11,"eq","","",281,[[["paren"],["self"]],["bool"]]],[11,"eq","","",282,[[["group"],["self"]],["bool"]]],[11,"eq","syn","",0,[[["self"]],["bool"]]],[11,"eq","","",149,[[["self"],["attrstyle"]],["bool"]]],[11,"ne","","",149,[[["self"],["attrstyle"]],["bool"]]],[11,"eq","","",150,[[["meta"],["self"]],["bool"]]],[11,"ne","","",150,[[["meta"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["metalist"]],["bool"]]],[11,"ne","","",1,[[["self"],["metalist"]],["bool"]]],[11,"eq","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"ne","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"eq","","",151,[[["nestedmeta"],["self"]],["bool"]]],[11,"ne","","",151,[[["nestedmeta"],["self"]],["bool"]]],[11,"eq","","",6,[[["variant"],["self"]],["bool"]]],[11,"ne","","",6,[[["variant"],["self"]],["bool"]]],[11,"eq","","",152,[[["self"],["fields"]],["bool"]]],[11,"ne","","",152,[[["self"],["fields"]],["bool"]]],[11,"eq","","",4,[[["fieldsnamed"],["self"]],["bool"]]],[11,"ne","","",4,[[["fieldsnamed"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"ne","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"eq","","",3,[[["field"],["self"]],["bool"]]],[11,"ne","","",3,[[["field"],["self"]],["bool"]]],[11,"eq","","",153,[[["self"],["visibility"]],["bool"]]],[11,"ne","","",153,[[["self"],["visibility"]],["bool"]]],[11,"eq","","",8,[[["vispublic"],["self"]],["bool"]]],[11,"ne","","",8,[[["vispublic"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"ne","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"eq","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"ne","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"eq","","",14,[[["exprarray"],["self"]],["bool"]]],[11,"ne","","",14,[[["exprarray"],["self"]],["bool"]]],[11,"eq","","",15,[[["exprassign"],["self"]],["bool"]]],[11,"ne","","",15,[[["exprassign"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["exprassignop"]],["bool"]]],[11,"ne","","",16,[[["self"],["exprassignop"]],["bool"]]],[11,"eq","","",17,[[["exprasync"],["self"]],["bool"]]],[11,"ne","","",17,[[["exprasync"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["exprawait"]],["bool"]]],[11,"ne","","",18,[[["self"],["exprawait"]],["bool"]]],[11,"eq","","",19,[[["exprbinary"],["self"]],["bool"]]],[11,"ne","","",19,[[["exprbinary"],["self"]],["bool"]]],[11,"eq","","",20,[[["exprblock"],["self"]],["bool"]]],[11,"ne","","",20,[[["exprblock"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["exprbox"]],["bool"]]],[11,"ne","","",21,[[["self"],["exprbox"]],["bool"]]],[11,"eq","","",22,[[["self"],["exprbreak"]],["bool"]]],[11,"ne","","",22,[[["self"],["exprbreak"]],["bool"]]],[11,"eq","","",23,[[["self"],["exprcall"]],["bool"]]],[11,"ne","","",23,[[["self"],["exprcall"]],["bool"]]],[11,"eq","","",24,[[["self"],["exprcast"]],["bool"]]],[11,"ne","","",24,[[["self"],["exprcast"]],["bool"]]],[11,"eq","","",25,[[["self"],["exprclosure"]],["bool"]]],[11,"ne","","",25,[[["self"],["exprclosure"]],["bool"]]],[11,"eq","","",26,[[["exprcontinue"],["self"]],["bool"]]],[11,"ne","","",26,[[["exprcontinue"],["self"]],["bool"]]],[11,"eq","","",27,[[["exprfield"],["self"]],["bool"]]],[11,"ne","","",27,[[["exprfield"],["self"]],["bool"]]],[11,"eq","","",28,[[["exprforloop"],["self"]],["bool"]]],[11,"ne","","",28,[[["exprforloop"],["self"]],["bool"]]],[11,"eq","","",29,[[["self"],["exprgroup"]],["bool"]]],[11,"ne","","",29,[[["self"],["exprgroup"]],["bool"]]],[11,"eq","","",30,[[["self"],["exprif"]],["bool"]]],[11,"ne","","",30,[[["self"],["exprif"]],["bool"]]],[11,"eq","","",31,[[["exprindex"],["self"]],["bool"]]],[11,"ne","","",31,[[["exprindex"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["exprlet"]],["bool"]]],[11,"ne","","",32,[[["self"],["exprlet"]],["bool"]]],[11,"eq","","",33,[[["self"],["exprlit"]],["bool"]]],[11,"ne","","",33,[[["self"],["exprlit"]],["bool"]]],[11,"eq","","",34,[[["exprloop"],["self"]],["bool"]]],[11,"ne","","",34,[[["exprloop"],["self"]],["bool"]]],[11,"eq","","",35,[[["self"],["exprmacro"]],["bool"]]],[11,"ne","","",35,[[["self"],["exprmacro"]],["bool"]]],[11,"eq","","",36,[[["exprmatch"],["self"]],["bool"]]],[11,"ne","","",36,[[["exprmatch"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["exprmethodcall"]],["bool"]]],[11,"ne","","",37,[[["self"],["exprmethodcall"]],["bool"]]],[11,"eq","","",38,[[["self"],["exprparen"]],["bool"]]],[11,"ne","","",38,[[["self"],["exprparen"]],["bool"]]],[11,"eq","","",39,[[["self"],["exprpath"]],["bool"]]],[11,"ne","","",39,[[["self"],["exprpath"]],["bool"]]],[11,"eq","","",40,[[["exprrange"],["self"]],["bool"]]],[11,"ne","","",40,[[["exprrange"],["self"]],["bool"]]],[11,"eq","","",41,[[["self"],["exprreference"]],["bool"]]],[11,"ne","","",41,[[["self"],["exprreference"]],["bool"]]],[11,"eq","","",42,[[["exprrepeat"],["self"]],["bool"]]],[11,"ne","","",42,[[["exprrepeat"],["self"]],["bool"]]],[11,"eq","","",43,[[["exprreturn"],["self"]],["bool"]]],[11,"ne","","",43,[[["exprreturn"],["self"]],["bool"]]],[11,"eq","","",44,[[["self"],["exprstruct"]],["bool"]]],[11,"ne","","",44,[[["self"],["exprstruct"]],["bool"]]],[11,"eq","","",45,[[["self"],["exprtry"]],["bool"]]],[11,"ne","","",45,[[["self"],["exprtry"]],["bool"]]],[11,"eq","","",46,[[["exprtryblock"],["self"]],["bool"]]],[11,"ne","","",46,[[["exprtryblock"],["self"]],["bool"]]],[11,"eq","","",47,[[["exprtuple"],["self"]],["bool"]]],[11,"ne","","",47,[[["exprtuple"],["self"]],["bool"]]],[11,"eq","","",48,[[["self"],["exprtype"]],["bool"]]],[11,"ne","","",48,[[["self"],["exprtype"]],["bool"]]],[11,"eq","","",49,[[["self"],["exprunary"]],["bool"]]],[11,"ne","","",49,[[["self"],["exprunary"]],["bool"]]],[11,"eq","","",50,[[["self"],["exprunsafe"]],["bool"]]],[11,"ne","","",50,[[["self"],["exprunsafe"]],["bool"]]],[11,"eq","","",51,[[["self"],["exprwhile"]],["bool"]]],[11,"ne","","",51,[[["self"],["exprwhile"]],["bool"]]],[11,"eq","","",52,[[["expryield"],["self"]],["bool"]]],[11,"ne","","",52,[[["expryield"],["self"]],["bool"]]],[11,"eq","","",156,[[["self"]],["bool"]]],[11,"eq","","",157,[[["member"],["self"]],["bool"]]],[11,"ne","","",157,[[["member"],["self"]],["bool"]]],[11,"eq","","",53,[[["self"]],["bool"]]],[11,"eq","","",13,[[["self"],["methodturbofish"]],["bool"]]],[11,"ne","","",13,[[["self"],["methodturbofish"]],["bool"]]],[11,"eq","","",154,[[["self"],["genericmethodargument"]],["bool"]]],[11,"ne","","",154,[[["self"],["genericmethodargument"]],["bool"]]],[11,"eq","","",11,[[["self"],["fieldvalue"]],["bool"]]],[11,"ne","","",11,[[["self"],["fieldvalue"]],["bool"]]],[11,"eq","","",12,[[["self"],["label"]],["bool"]]],[11,"ne","","",12,[[["self"],["label"]],["bool"]]],[11,"eq","","",10,[[["self"],["arm"]],["bool"]]],[11,"ne","","",10,[[["self"],["arm"]],["bool"]]],[11,"eq","","",155,[[["rangelimits"],["self"]],["bool"]]],[11,"ne","","",155,[[["rangelimits"],["self"]],["bool"]]],[11,"eq","","",56,[[["self"],["generics"]],["bool"]]],[11,"ne","","",56,[[["self"],["generics"]],["bool"]]],[11,"eq","","",158,[[["self"],["genericparam"]],["bool"]]],[11,"ne","","",158,[[["self"],["genericparam"]],["bool"]]],[11,"eq","","",62,[[["typeparam"],["self"]],["bool"]]],[11,"ne","","",62,[[["typeparam"],["self"]],["bool"]]],[11,"eq","","",57,[[["lifetimedef"],["self"]],["bool"]]],[11,"ne","","",57,[[["lifetimedef"],["self"]],["bool"]]],[11,"eq","","",55,[[["self"],["constparam"]],["bool"]]],[11,"ne","","",55,[[["self"],["constparam"]],["bool"]]],[11,"eq","","",304,[[["implgenerics"],["self"]],["bool"]]],[11,"ne","","",304,[[["implgenerics"],["self"]],["bool"]]],[11,"eq","","",283,[[["typegenerics"],["self"]],["bool"]]],[11,"ne","","",283,[[["typegenerics"],["self"]],["bool"]]],[11,"eq","","",305,[[["turbofish"],["self"]],["bool"]]],[11,"ne","","",305,[[["turbofish"],["self"]],["bool"]]],[11,"eq","","",54,[[["boundlifetimes"],["self"]],["bool"]]],[11,"ne","","",54,[[["boundlifetimes"],["self"]],["bool"]]],[11,"eq","","",160,[[["typeparambound"],["self"]],["bool"]]],[11,"ne","","",160,[[["typeparambound"],["self"]],["bool"]]],[11,"eq","","",61,[[["traitbound"],["self"]],["bool"]]],[11,"ne","","",61,[[["traitbound"],["self"]],["bool"]]],[11,"eq","","",159,[[["traitboundmodifier"],["self"]],["bool"]]],[11,"ne","","",159,[[["traitboundmodifier"],["self"]],["bool"]]],[11,"eq","","",63,[[["whereclause"],["self"]],["bool"]]],[11,"ne","","",63,[[["whereclause"],["self"]],["bool"]]],[11,"eq","","",161,[[["wherepredicate"],["self"]],["bool"]]],[11,"ne","","",161,[[["wherepredicate"],["self"]],["bool"]]],[11,"eq","","",60,[[["self"],["predicatetype"]],["bool"]]],[11,"ne","","",60,[[["self"],["predicatetype"]],["bool"]]],[11,"eq","","",59,[[["self"],["predicatelifetime"]],["bool"]]],[11,"ne","","",59,[[["self"],["predicatelifetime"]],["bool"]]],[11,"eq","","",58,[[["self"],["predicateeq"]],["bool"]]],[11,"ne","","",58,[[["self"],["predicateeq"]],["bool"]]],[11,"eq","","",72,[[["self"],["itemconst"]],["bool"]]],[11,"ne","","",72,[[["self"],["itemconst"]],["bool"]]],[11,"eq","","",73,[[["itemenum"],["self"]],["bool"]]],[11,"ne","","",73,[[["itemenum"],["self"]],["bool"]]],[11,"eq","","",74,[[["self"],["itemexterncrate"]],["bool"]]],[11,"ne","","",74,[[["self"],["itemexterncrate"]],["bool"]]],[11,"eq","","",75,[[["self"],["itemfn"]],["bool"]]],[11,"ne","","",75,[[["self"],["itemfn"]],["bool"]]],[11,"eq","","",76,[[["self"],["itemforeignmod"]],["bool"]]],[11,"ne","","",76,[[["self"],["itemforeignmod"]],["bool"]]],[11,"eq","","",77,[[["self"],["itemimpl"]],["bool"]]],[11,"ne","","",77,[[["self"],["itemimpl"]],["bool"]]],[11,"eq","","",78,[[["self"],["itemmacro"]],["bool"]]],[11,"ne","","",78,[[["self"],["itemmacro"]],["bool"]]],[11,"eq","","",80,[[["self"],["itemmod"]],["bool"]]],[11,"ne","","",80,[[["self"],["itemmod"]],["bool"]]],[11,"eq","","",81,[[["self"],["itemstatic"]],["bool"]]],[11,"ne","","",81,[[["self"],["itemstatic"]],["bool"]]],[11,"eq","","",82,[[["self"],["itemstruct"]],["bool"]]],[11,"ne","","",82,[[["self"],["itemstruct"]],["bool"]]],[11,"eq","","",83,[[["itemtrait"],["self"]],["bool"]]],[11,"ne","","",83,[[["itemtrait"],["self"]],["bool"]]],[11,"eq","","",84,[[["self"],["itemtraitalias"]],["bool"]]],[11,"ne","","",84,[[["self"],["itemtraitalias"]],["bool"]]],[11,"eq","","",85,[[["itemtype"],["self"]],["bool"]]],[11,"ne","","",85,[[["itemtype"],["self"]],["bool"]]],[11,"eq","","",86,[[["self"],["itemunion"]],["bool"]]],[11,"ne","","",86,[[["self"],["itemunion"]],["bool"]]],[11,"eq","","",87,[[["itemuse"],["self"]],["bool"]]],[11,"ne","","",87,[[["itemuse"],["self"]],["bool"]]],[11,"eq","","",165,[[["self"]],["bool"]]],[11,"eq","","",79,[[["self"]],["bool"]]],[11,"eq","","",167,[[["usetree"],["self"]],["bool"]]],[11,"ne","","",167,[[["usetree"],["self"]],["bool"]]],[11,"eq","","",97,[[["self"],["usepath"]],["bool"]]],[11,"ne","","",97,[[["self"],["usepath"]],["bool"]]],[11,"eq","","",96,[[["usename"],["self"]],["bool"]]],[11,"ne","","",96,[[["usename"],["self"]],["bool"]]],[11,"eq","","",98,[[["self"],["userename"]],["bool"]]],[11,"ne","","",98,[[["self"],["userename"]],["bool"]]],[11,"eq","","",94,[[["useglob"],["self"]],["bool"]]],[11,"ne","","",94,[[["useglob"],["self"]],["bool"]]],[11,"eq","","",95,[[["self"],["usegroup"]],["bool"]]],[11,"ne","","",95,[[["self"],["usegroup"]],["bool"]]],[11,"eq","","",64,[[["self"],["foreignitemfn"]],["bool"]]],[11,"ne","","",64,[[["self"],["foreignitemfn"]],["bool"]]],[11,"eq","","",66,[[["foreignitemstatic"],["self"]],["bool"]]],[11,"ne","","",66,[[["foreignitemstatic"],["self"]],["bool"]]],[11,"eq","","",67,[[["foreignitemtype"],["self"]],["bool"]]],[11,"ne","","",67,[[["foreignitemtype"],["self"]],["bool"]]],[11,"eq","","",65,[[["foreignitemmacro"],["self"]],["bool"]]],[11,"ne","","",65,[[["foreignitemmacro"],["self"]],["bool"]]],[11,"eq","","",163,[[["self"]],["bool"]]],[11,"eq","","",90,[[["traititemconst"],["self"]],["bool"]]],[11,"ne","","",90,[[["traititemconst"],["self"]],["bool"]]],[11,"eq","","",92,[[["traititemmethod"],["self"]],["bool"]]],[11,"ne","","",92,[[["traititemmethod"],["self"]],["bool"]]],[11,"eq","","",93,[[["traititemtype"],["self"]],["bool"]]],[11,"ne","","",93,[[["traititemtype"],["self"]],["bool"]]],[11,"eq","","",91,[[["self"],["traititemmacro"]],["bool"]]],[11,"ne","","",91,[[["self"],["traititemmacro"]],["bool"]]],[11,"eq","","",166,[[["self"]],["bool"]]],[11,"eq","","",68,[[["implitemconst"],["self"]],["bool"]]],[11,"ne","","",68,[[["implitemconst"],["self"]],["bool"]]],[11,"eq","","",70,[[["implitemmethod"],["self"]],["bool"]]],[11,"ne","","",70,[[["implitemmethod"],["self"]],["bool"]]],[11,"eq","","",71,[[["self"],["implitemtype"]],["bool"]]],[11,"ne","","",71,[[["self"],["implitemtype"]],["bool"]]],[11,"eq","","",69,[[["self"],["implitemmacro"]],["bool"]]],[11,"ne","","",69,[[["self"],["implitemmacro"]],["bool"]]],[11,"eq","","",164,[[["self"]],["bool"]]],[11,"eq","","",89,[[["signature"],["self"]],["bool"]]],[11,"ne","","",89,[[["signature"],["self"]],["bool"]]],[11,"eq","","",162,[[["fnarg"],["self"]],["bool"]]],[11,"ne","","",162,[[["fnarg"],["self"]],["bool"]]],[11,"eq","","",88,[[["receiver"],["self"]],["bool"]]],[11,"ne","","",88,[[["receiver"],["self"]],["bool"]]],[11,"eq","","",99,[[["file"],["self"]],["bool"]]],[11,"ne","","",99,[[["file"],["self"]],["bool"]]],[11,"eq","","",100,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",168,[[["self"]],["bool"]]],[11,"eq","","",284,[[["self"]],["bool"]]],[11,"eq","","",285,[[["self"]],["bool"]]],[11,"eq","","",286,[[["self"]],["bool"]]],[11,"eq","","",287,[[["self"]],["bool"]]],[11,"eq","","",288,[[["self"]],["bool"]]],[11,"eq","","",289,[[["self"]],["bool"]]],[11,"eq","","",101,[[["self"]],["bool"]]],[11,"eq","","",169,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",169,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",170,[[["macrodelimiter"],["self"]],["bool"]]],[11,"ne","","",170,[[["macrodelimiter"],["self"]],["bool"]]],[11,"eq","","",102,[[["self"]],["bool"]]],[11,"eq","","",106,[[["deriveinput"],["self"]],["bool"]]],[11,"ne","","",106,[[["deriveinput"],["self"]],["bool"]]],[11,"eq","","",171,[[["data"],["self"]],["bool"]]],[11,"ne","","",171,[[["data"],["self"]],["bool"]]],[11,"eq","","",104,[[["self"],["datastruct"]],["bool"]]],[11,"ne","","",104,[[["self"],["datastruct"]],["bool"]]],[11,"eq","","",103,[[["self"],["dataenum"]],["bool"]]],[11,"ne","","",103,[[["self"],["dataenum"]],["bool"]]],[11,"eq","","",105,[[["dataunion"],["self"]],["bool"]]],[11,"ne","","",105,[[["dataunion"],["self"]],["bool"]]],[11,"eq","","",172,[[["binop"],["self"]],["bool"]]],[11,"ne","","",172,[[["binop"],["self"]],["bool"]]],[11,"eq","","",173,[[["unop"],["self"]],["bool"]]],[11,"ne","","",173,[[["unop"],["self"]],["bool"]]],[11,"eq","","",107,[[["self"],["block"]],["bool"]]],[11,"ne","","",107,[[["self"],["block"]],["bool"]]],[11,"eq","","",174,[[["self"],["stmt"]],["bool"]]],[11,"ne","","",174,[[["self"],["stmt"]],["bool"]]],[11,"eq","","",108,[[["local"],["self"]],["bool"]]],[11,"ne","","",108,[[["local"],["self"]],["bool"]]],[11,"eq","","",111,[[["typearray"],["self"]],["bool"]]],[11,"ne","","",111,[[["typearray"],["self"]],["bool"]]],[11,"eq","","",112,[[["typebarefn"],["self"]],["bool"]]],[11,"ne","","",112,[[["typebarefn"],["self"]],["bool"]]],[11,"eq","","",113,[[["self"],["typegroup"]],["bool"]]],[11,"ne","","",113,[[["self"],["typegroup"]],["bool"]]],[11,"eq","","",114,[[["typeimpltrait"],["self"]],["bool"]]],[11,"ne","","",114,[[["typeimpltrait"],["self"]],["bool"]]],[11,"eq","","",115,[[["self"],["typeinfer"]],["bool"]]],[11,"ne","","",115,[[["self"],["typeinfer"]],["bool"]]],[11,"eq","","",116,[[["self"],["typemacro"]],["bool"]]],[11,"ne","","",116,[[["self"],["typemacro"]],["bool"]]],[11,"eq","","",117,[[["self"],["typenever"]],["bool"]]],[11,"ne","","",117,[[["self"],["typenever"]],["bool"]]],[11,"eq","","",118,[[["self"],["typeparen"]],["bool"]]],[11,"ne","","",118,[[["self"],["typeparen"]],["bool"]]],[11,"eq","","",119,[[["typepath"],["self"]],["bool"]]],[11,"ne","","",119,[[["typepath"],["self"]],["bool"]]],[11,"eq","","",120,[[["typeptr"],["self"]],["bool"]]],[11,"ne","","",120,[[["typeptr"],["self"]],["bool"]]],[11,"eq","","",121,[[["typereference"],["self"]],["bool"]]],[11,"ne","","",121,[[["typereference"],["self"]],["bool"]]],[11,"eq","","",122,[[["typeslice"],["self"]],["bool"]]],[11,"ne","","",122,[[["typeslice"],["self"]],["bool"]]],[11,"eq","","",123,[[["typetraitobject"],["self"]],["bool"]]],[11,"ne","","",123,[[["typetraitobject"],["self"]],["bool"]]],[11,"eq","","",124,[[["self"],["typetuple"]],["bool"]]],[11,"ne","","",124,[[["self"],["typetuple"]],["bool"]]],[11,"eq","","",176,[[["self"]],["bool"]]],[11,"eq","","",109,[[["abi"],["self"]],["bool"]]],[11,"ne","","",109,[[["abi"],["self"]],["bool"]]],[11,"eq","","",110,[[["barefnarg"],["self"]],["bool"]]],[11,"ne","","",110,[[["barefnarg"],["self"]],["bool"]]],[11,"eq","","",125,[[["self"],["variadic"]],["bool"]]],[11,"ne","","",125,[[["self"],["variadic"]],["bool"]]],[11,"eq","","",175,[[["returntype"],["self"]],["bool"]]],[11,"ne","","",175,[[["returntype"],["self"]],["bool"]]],[11,"eq","","",127,[[["patbox"],["self"]],["bool"]]],[11,"ne","","",127,[[["patbox"],["self"]],["bool"]]],[11,"eq","","",128,[[["self"],["patident"]],["bool"]]],[11,"ne","","",128,[[["self"],["patident"]],["bool"]]],[11,"eq","","",129,[[["self"],["patlit"]],["bool"]]],[11,"ne","","",129,[[["self"],["patlit"]],["bool"]]],[11,"eq","","",130,[[["patmacro"],["self"]],["bool"]]],[11,"ne","","",130,[[["patmacro"],["self"]],["bool"]]],[11,"eq","","",131,[[["self"],["pator"]],["bool"]]],[11,"ne","","",131,[[["self"],["pator"]],["bool"]]],[11,"eq","","",132,[[["patpath"],["self"]],["bool"]]],[11,"ne","","",132,[[["patpath"],["self"]],["bool"]]],[11,"eq","","",133,[[["self"],["patrange"]],["bool"]]],[11,"ne","","",133,[[["self"],["patrange"]],["bool"]]],[11,"eq","","",134,[[["self"],["patreference"]],["bool"]]],[11,"ne","","",134,[[["self"],["patreference"]],["bool"]]],[11,"eq","","",135,[[["self"],["patrest"]],["bool"]]],[11,"ne","","",135,[[["self"],["patrest"]],["bool"]]],[11,"eq","","",136,[[["self"],["patslice"]],["bool"]]],[11,"ne","","",136,[[["self"],["patslice"]],["bool"]]],[11,"eq","","",137,[[["self"],["patstruct"]],["bool"]]],[11,"ne","","",137,[[["self"],["patstruct"]],["bool"]]],[11,"eq","","",138,[[["self"],["pattuple"]],["bool"]]],[11,"ne","","",138,[[["self"],["pattuple"]],["bool"]]],[11,"eq","","",139,[[["self"],["pattuplestruct"]],["bool"]]],[11,"ne","","",139,[[["self"],["pattuplestruct"]],["bool"]]],[11,"eq","","",140,[[["self"],["pattype"]],["bool"]]],[11,"ne","","",140,[[["self"],["pattype"]],["bool"]]],[11,"eq","","",141,[[["patwild"],["self"]],["bool"]]],[11,"ne","","",141,[[["patwild"],["self"]],["bool"]]],[11,"eq","","",126,[[["self"],["fieldpat"]],["bool"]]],[11,"ne","","",126,[[["self"],["fieldpat"]],["bool"]]],[11,"eq","","",177,[[["self"]],["bool"]]],[11,"eq","","",146,[[["self"],["path"]],["bool"]]],[11,"ne","","",146,[[["self"],["path"]],["bool"]]],[11,"eq","","",147,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",147,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",179,[[["patharguments"],["self"]],["bool"]]],[11,"ne","","",179,[[["patharguments"],["self"]],["bool"]]],[11,"eq","","",178,[[["genericargument"],["self"]],["bool"]]],[11,"ne","","",178,[[["genericargument"],["self"]],["bool"]]],[11,"eq","","",142,[[["anglebracketedgenericarguments"],["self"]],["bool"]]],[11,"ne","","",142,[[["anglebracketedgenericarguments"],["self"]],["bool"]]],[11,"eq","","",143,[[["binding"],["self"]],["bool"]]],[11,"ne","","",143,[[["binding"],["self"]],["bool"]]],[11,"eq","","",144,[[["constraint"],["self"]],["bool"]]],[11,"ne","","",144,[[["constraint"],["self"]],["bool"]]],[11,"eq","","",145,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"ne","","",145,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"eq","","",148,[[["self"],["qself"]],["bool"]]],[11,"ne","","",148,[[["self"],["qself"]],["bool"]]],[11,"eq","syn::buffer","",291,[[["cursor"],["self"]],["bool"]]],[11,"ne","","",291,[[["cursor"],["self"]],["bool"]]],[11,"eq","syn::punctuated","",294,[[["punctuated"],["self"]],["bool"]]],[11,"ne","","",294,[[["punctuated"],["self"]],["bool"]]],[11,"partial_cmp","syn","",100,[[["self"],["lifetime"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","syn::token","",180,[[["self"]]]],[11,"deref","","",233,[[["self"]]]],[11,"deref","","",235,[[["self"]]]],[11,"deref","","",238,[[["self"]]]],[11,"deref","","",239,[[["self"]]]],[11,"deref","","",240,[[["self"]]]],[11,"deref","","",242,[[["self"]]]],[11,"deref","","",244,[[["self"]]]],[11,"deref","","",245,[[["self"]]]],[11,"deref","","",247,[[["self"]]]],[11,"deref","","",248,[[["self"]]]],[11,"deref","","",252,[[["self"]]]],[11,"deref","","",255,[[["self"]]]],[11,"deref","","",257,[[["self"]]]],[11,"deref","","",260,[[["self"]]]],[11,"deref","","",263,[[["self"]]]],[11,"deref","","",264,[[["self"]]]],[11,"deref","","",267,[[["self"]]]],[11,"deref","","",270,[[["self"]]]],[11,"deref","","",275,[[["self"]]]],[11,"deref","","",276,[[["self"]]]],[11,"deref","","",278,[[["self"]]]],[11,"deref","syn::parse","",300,[[["self"]]]],[11,"deref_mut","syn::token","",180,[[["self"]]]],[11,"deref_mut","","",233,[[["self"]]]],[11,"deref_mut","","",235,[[["self"]]]],[11,"deref_mut","","",238,[[["self"]]]],[11,"deref_mut","","",239,[[["self"]]]],[11,"deref_mut","","",240,[[["self"]]]],[11,"deref_mut","","",242,[[["self"]]]],[11,"deref_mut","","",244,[[["self"]]]],[11,"deref_mut","","",245,[[["self"]]]],[11,"deref_mut","","",247,[[["self"]]]],[11,"deref_mut","","",248,[[["self"]]]],[11,"deref_mut","","",252,[[["self"]]]],[11,"deref_mut","","",255,[[["self"]]]],[11,"deref_mut","","",257,[[["self"]]]],[11,"deref_mut","","",260,[[["self"]]]],[11,"deref_mut","","",263,[[["self"]]]],[11,"deref_mut","","",264,[[["self"]]]],[11,"deref_mut","","",267,[[["self"]]]],[11,"deref_mut","","",270,[[["self"]]]],[11,"deref_mut","","",275,[[["self"]]]],[11,"deref_mut","","",276,[[["self"]]]],[11,"deref_mut","","",278,[[["self"]]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",187,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",188,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",192,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",193,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",194,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",195,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",197,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",198,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",199,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",200,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",201,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",202,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",204,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",205,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",206,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",207,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",208,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",209,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",210,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",211,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",212,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",213,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",214,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",215,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",216,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",217,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",218,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",219,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",220,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",221,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",222,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",223,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",224,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",225,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",226,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",227,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",228,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",229,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",230,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",231,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",232,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",233,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",234,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",235,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",236,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",237,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",238,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",239,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",240,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",241,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",242,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",243,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",244,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",245,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",246,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",247,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",248,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",249,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",250,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",251,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",252,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",253,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",254,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",255,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",256,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",257,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",258,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",259,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",260,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",261,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",262,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",263,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",264,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",265,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",266,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",267,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",268,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",269,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",270,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",271,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",272,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",273,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",274,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",275,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",276,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",277,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",278,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",279,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",280,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",281,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",282,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",151,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",304,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",283,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",305,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",284,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",285,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",286,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",287,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",288,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",289,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",170,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",171,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",172,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",176,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",175,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",177,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",131,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",132,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",179,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",178,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::punctuated","",294,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",301,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",302,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",288,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",289,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",301,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",302,[[["formatter"],["self"]],["result"]]],[11,"index","syn::punctuated","",294,[[["self"],["usize"]]]],[11,"index_mut","","",294,[[["self"],["usize"]]]],[11,"hash","syn::token","",180,[[["self"],["h"]]]],[11,"hash","","",181,[[["self"],["h"]]]],[11,"hash","","",182,[[["self"],["h"]]]],[11,"hash","","",183,[[["self"],["h"]]]],[11,"hash","","",184,[[["self"],["h"]]]],[11,"hash","","",185,[[["self"],["h"]]]],[11,"hash","","",186,[[["self"],["h"]]]],[11,"hash","","",187,[[["self"],["h"]]]],[11,"hash","","",188,[[["self"],["h"]]]],[11,"hash","","",189,[[["self"],["h"]]]],[11,"hash","","",190,[[["self"],["h"]]]],[11,"hash","","",191,[[["self"],["h"]]]],[11,"hash","","",192,[[["self"],["h"]]]],[11,"hash","","",193,[[["self"],["h"]]]],[11,"hash","","",194,[[["self"],["h"]]]],[11,"hash","","",195,[[["self"],["h"]]]],[11,"hash","","",196,[[["self"],["h"]]]],[11,"hash","","",197,[[["self"],["h"]]]],[11,"hash","","",198,[[["self"],["h"]]]],[11,"hash","","",199,[[["self"],["h"]]]],[11,"hash","","",200,[[["self"],["h"]]]],[11,"hash","","",201,[[["self"],["h"]]]],[11,"hash","","",202,[[["self"],["h"]]]],[11,"hash","","",203,[[["self"],["h"]]]],[11,"hash","","",204,[[["self"],["h"]]]],[11,"hash","","",205,[[["self"],["h"]]]],[11,"hash","","",206,[[["self"],["h"]]]],[11,"hash","","",207,[[["self"],["h"]]]],[11,"hash","","",208,[[["self"],["h"]]]],[11,"hash","","",209,[[["self"],["h"]]]],[11,"hash","","",210,[[["self"],["h"]]]],[11,"hash","","",211,[[["self"],["h"]]]],[11,"hash","","",212,[[["self"],["h"]]]],[11,"hash","","",213,[[["self"],["h"]]]],[11,"hash","","",214,[[["self"],["h"]]]],[11,"hash","","",215,[[["self"],["h"]]]],[11,"hash","","",216,[[["self"],["h"]]]],[11,"hash","","",217,[[["self"],["h"]]]],[11,"hash","","",218,[[["self"],["h"]]]],[11,"hash","","",219,[[["self"],["h"]]]],[11,"hash","","",220,[[["self"],["h"]]]],[11,"hash","","",221,[[["self"],["h"]]]],[11,"hash","","",222,[[["self"],["h"]]]],[11,"hash","","",223,[[["self"],["h"]]]],[11,"hash","","",224,[[["self"],["h"]]]],[11,"hash","","",225,[[["self"],["h"]]]],[11,"hash","","",226,[[["self"],["h"]]]],[11,"hash","","",227,[[["self"],["h"]]]],[11,"hash","","",228,[[["self"],["h"]]]],[11,"hash","","",229,[[["self"],["h"]]]],[11,"hash","","",230,[[["self"],["h"]]]],[11,"hash","","",231,[[["self"],["h"]]]],[11,"hash","","",232,[[["self"],["h"]]]],[11,"hash","","",233,[[["self"],["h"]]]],[11,"hash","","",234,[[["self"],["h"]]]],[11,"hash","","",235,[[["self"],["h"]]]],[11,"hash","","",236,[[["self"],["h"]]]],[11,"hash","","",237,[[["self"],["h"]]]],[11,"hash","","",238,[[["self"],["h"]]]],[11,"hash","","",239,[[["self"],["h"]]]],[11,"hash","","",240,[[["self"],["h"]]]],[11,"hash","","",241,[[["self"],["h"]]]],[11,"hash","","",242,[[["self"],["h"]]]],[11,"hash","","",243,[[["self"],["h"]]]],[11,"hash","","",244,[[["self"],["h"]]]],[11,"hash","","",245,[[["self"],["h"]]]],[11,"hash","","",246,[[["self"],["h"]]]],[11,"hash","","",247,[[["self"],["h"]]]],[11,"hash","","",248,[[["self"],["h"]]]],[11,"hash","","",249,[[["self"],["h"]]]],[11,"hash","","",250,[[["self"],["h"]]]],[11,"hash","","",251,[[["self"],["h"]]]],[11,"hash","","",252,[[["self"],["h"]]]],[11,"hash","","",253,[[["self"],["h"]]]],[11,"hash","","",254,[[["self"],["h"]]]],[11,"hash","","",255,[[["self"],["h"]]]],[11,"hash","","",256,[[["self"],["h"]]]],[11,"hash","","",257,[[["self"],["h"]]]],[11,"hash","","",258,[[["self"],["h"]]]],[11,"hash","","",259,[[["self"],["h"]]]],[11,"hash","","",260,[[["self"],["h"]]]],[11,"hash","","",261,[[["self"],["h"]]]],[11,"hash","","",262,[[["self"],["h"]]]],[11,"hash","","",263,[[["self"],["h"]]]],[11,"hash","","",264,[[["self"],["h"]]]],[11,"hash","","",265,[[["self"],["h"]]]],[11,"hash","","",266,[[["self"],["h"]]]],[11,"hash","","",267,[[["self"],["h"]]]],[11,"hash","","",268,[[["self"],["h"]]]],[11,"hash","","",269,[[["self"],["h"]]]],[11,"hash","","",270,[[["self"],["h"]]]],[11,"hash","","",271,[[["self"],["h"]]]],[11,"hash","","",272,[[["self"],["h"]]]],[11,"hash","","",273,[[["self"],["h"]]]],[11,"hash","","",274,[[["self"],["h"]]]],[11,"hash","","",275,[[["self"],["h"]]]],[11,"hash","","",276,[[["self"],["h"]]]],[11,"hash","","",277,[[["self"],["h"]]]],[11,"hash","","",278,[[["self"],["h"]]]],[11,"hash","","",279,[[["self"],["h"]]]],[11,"hash","","",280,[[["self"],["h"]]]],[11,"hash","","",281,[[["self"],["h"]]]],[11,"hash","","",282,[[["self"],["h"]]]],[11,"hash","syn","",0,[[["self"],["h"]]]],[11,"hash","","",149,[[["self"],["__h"]]]],[11,"hash","","",150,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",151,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",152,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",153,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","","",27,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"hash","","",47,[[["self"],["__h"]]]],[11,"hash","","",48,[[["self"],["__h"]]]],[11,"hash","","",49,[[["self"],["__h"]]]],[11,"hash","","",50,[[["self"],["__h"]]]],[11,"hash","","",51,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","","",156,[[["self"],["h"]]]],[11,"hash","","",157,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",154,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",155,[[["self"],["__h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",158,[[["self"],["__h"]]]],[11,"hash","","",62,[[["self"],["__h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","","",55,[[["self"],["__h"]]]],[11,"hash","","",304,[[["self"],["__h"]]]],[11,"hash","","",283,[[["self"],["__h"]]]],[11,"hash","","",305,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["__h"]]]],[11,"hash","","",160,[[["self"],["__h"]]]],[11,"hash","","",61,[[["self"],["__h"]]]],[11,"hash","","",159,[[["self"],["__h"]]]],[11,"hash","","",63,[[["self"],["__h"]]]],[11,"hash","","",161,[[["self"],["__h"]]]],[11,"hash","","",60,[[["self"],["__h"]]]],[11,"hash","","",59,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","","",72,[[["self"],["__h"]]]],[11,"hash","","",73,[[["self"],["__h"]]]],[11,"hash","","",74,[[["self"],["__h"]]]],[11,"hash","","",75,[[["self"],["__h"]]]],[11,"hash","","",76,[[["self"],["__h"]]]],[11,"hash","","",77,[[["self"],["__h"]]]],[11,"hash","","",78,[[["self"],["__h"]]]],[11,"hash","","",80,[[["self"],["__h"]]]],[11,"hash","","",81,[[["self"],["__h"]]]],[11,"hash","","",82,[[["self"],["__h"]]]],[11,"hash","","",83,[[["self"],["__h"]]]],[11,"hash","","",84,[[["self"],["__h"]]]],[11,"hash","","",85,[[["self"],["__h"]]]],[11,"hash","","",86,[[["self"],["__h"]]]],[11,"hash","","",87,[[["self"],["__h"]]]],[11,"hash","","",165,[[["self"],["h"]]]],[11,"hash","","",79,[[["self"],["h"]]]],[11,"hash","","",167,[[["self"],["__h"]]]],[11,"hash","","",97,[[["self"],["__h"]]]],[11,"hash","","",96,[[["self"],["__h"]]]],[11,"hash","","",98,[[["self"],["__h"]]]],[11,"hash","","",94,[[["self"],["__h"]]]],[11,"hash","","",95,[[["self"],["__h"]]]],[11,"hash","","",64,[[["self"],["__h"]]]],[11,"hash","","",66,[[["self"],["__h"]]]],[11,"hash","","",67,[[["self"],["__h"]]]],[11,"hash","","",65,[[["self"],["__h"]]]],[11,"hash","","",163,[[["self"],["h"]]]],[11,"hash","","",90,[[["self"],["__h"]]]],[11,"hash","","",92,[[["self"],["__h"]]]],[11,"hash","","",93,[[["self"],["__h"]]]],[11,"hash","","",91,[[["self"],["__h"]]]],[11,"hash","","",166,[[["self"],["h"]]]],[11,"hash","","",68,[[["self"],["__h"]]]],[11,"hash","","",70,[[["self"],["__h"]]]],[11,"hash","","",71,[[["self"],["__h"]]]],[11,"hash","","",69,[[["self"],["__h"]]]],[11,"hash","","",164,[[["self"],["h"]]]],[11,"hash","","",89,[[["self"],["__h"]]]],[11,"hash","","",162,[[["self"],["__h"]]]],[11,"hash","","",88,[[["self"],["__h"]]]],[11,"hash","","",99,[[["self"],["__h"]]]],[11,"hash","","",100,[[["self"],["h"]]]],[11,"hash","","",168,[[["self"],["h"]]]],[11,"hash","","",284,[[["self"],["h"]]]],[11,"hash","","",285,[[["self"],["h"]]]],[11,"hash","","",286,[[["self"],["h"]]]],[11,"hash","","",287,[[["self"],["h"]]]],[11,"hash","","",288,[[["self"],["h"]]]],[11,"hash","","",289,[[["self"],["h"]]]],[11,"hash","","",101,[[["self"],["h"]]]],[11,"hash","","",169,[[["self"],["__h"]]]],[11,"hash","","",170,[[["self"],["__h"]]]],[11,"hash","","",102,[[["self"],["h"]]]],[11,"hash","","",106,[[["self"],["__h"]]]],[11,"hash","","",171,[[["self"],["__h"]]]],[11,"hash","","",104,[[["self"],["__h"]]]],[11,"hash","","",103,[[["self"],["__h"]]]],[11,"hash","","",105,[[["self"],["__h"]]]],[11,"hash","","",172,[[["self"],["__h"]]]],[11,"hash","","",173,[[["self"],["__h"]]]],[11,"hash","","",107,[[["self"],["__h"]]]],[11,"hash","","",174,[[["self"],["__h"]]]],[11,"hash","","",108,[[["self"],["__h"]]]],[11,"hash","","",111,[[["self"],["__h"]]]],[11,"hash","","",112,[[["self"],["__h"]]]],[11,"hash","","",113,[[["self"],["__h"]]]],[11,"hash","","",114,[[["self"],["__h"]]]],[11,"hash","","",115,[[["self"],["__h"]]]],[11,"hash","","",116,[[["self"],["__h"]]]],[11,"hash","","",117,[[["self"],["__h"]]]],[11,"hash","","",118,[[["self"],["__h"]]]],[11,"hash","","",119,[[["self"],["__h"]]]],[11,"hash","","",120,[[["self"],["__h"]]]],[11,"hash","","",121,[[["self"],["__h"]]]],[11,"hash","","",122,[[["self"],["__h"]]]],[11,"hash","","",123,[[["self"],["__h"]]]],[11,"hash","","",124,[[["self"],["__h"]]]],[11,"hash","","",176,[[["self"],["h"]]]],[11,"hash","","",109,[[["self"],["__h"]]]],[11,"hash","","",110,[[["self"],["__h"]]]],[11,"hash","","",125,[[["self"],["__h"]]]],[11,"hash","","",175,[[["self"],["__h"]]]],[11,"hash","","",127,[[["self"],["__h"]]]],[11,"hash","","",128,[[["self"],["__h"]]]],[11,"hash","","",129,[[["self"],["__h"]]]],[11,"hash","","",130,[[["self"],["__h"]]]],[11,"hash","","",131,[[["self"],["__h"]]]],[11,"hash","","",132,[[["self"],["__h"]]]],[11,"hash","","",133,[[["self"],["__h"]]]],[11,"hash","","",134,[[["self"],["__h"]]]],[11,"hash","","",135,[[["self"],["__h"]]]],[11,"hash","","",136,[[["self"],["__h"]]]],[11,"hash","","",137,[[["self"],["__h"]]]],[11,"hash","","",138,[[["self"],["__h"]]]],[11,"hash","","",139,[[["self"],["__h"]]]],[11,"hash","","",140,[[["self"],["__h"]]]],[11,"hash","","",141,[[["self"],["__h"]]]],[11,"hash","","",126,[[["self"],["__h"]]]],[11,"hash","","",177,[[["self"],["h"]]]],[11,"hash","","",146,[[["self"],["__h"]]]],[11,"hash","","",147,[[["self"],["__h"]]]],[11,"hash","","",179,[[["self"],["__h"]]]],[11,"hash","","",178,[[["self"],["__h"]]]],[11,"hash","","",142,[[["self"],["__h"]]]],[11,"hash","","",143,[[["self"],["__h"]]]],[11,"hash","","",144,[[["self"],["__h"]]]],[11,"hash","","",145,[[["self"],["__h"]]]],[11,"hash","","",148,[[["self"],["__h"]]]],[11,"hash","syn::punctuated","",294,[[["self"],["__h"]]]],[11,"from_iter","","",294,[[["intoiterator"]],["self"]]],[11,"from_iter","","",294,[[["intoiterator"]],["self"]]],[11,"description","syn","",302,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",180,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",181,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",182,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",183,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",184,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",185,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",186,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",187,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",188,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",189,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",190,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",191,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",192,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",193,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",194,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",195,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",196,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",197,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",198,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",199,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",200,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",201,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",202,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",203,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",204,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",205,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",206,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",207,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",208,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",209,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",210,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",211,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",212,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",213,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",214,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",215,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",216,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",217,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",218,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",219,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",220,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",221,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",222,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",223,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",224,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",225,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",226,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",227,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",228,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",229,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",230,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",231,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",232,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",233,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",234,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",235,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",236,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",237,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",238,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",239,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",240,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",241,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",242,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",243,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",244,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",245,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",246,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",247,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",248,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",249,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",250,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",251,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",252,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",253,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",254,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",255,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",256,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",257,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",258,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",259,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",260,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",261,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",262,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",263,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",264,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",265,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",266,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",267,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",268,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",269,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",270,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",271,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",272,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",273,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",274,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",275,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",276,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",277,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",278,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn","",150,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",151,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",0,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",2,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",152,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",153,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",6,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",4,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",5,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",3,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",8,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",7,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",9,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",156,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",21,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",14,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",23,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",37,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",13,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",154,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",47,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",19,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",49,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",33,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",24,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",48,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",32,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",30,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",51,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",28,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",34,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",36,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",17,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",18,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",46,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",52,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",25,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",50,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",20,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",15,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",16,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",27,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",157,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",53,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",31,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",40,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",39,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",41,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",22,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",26,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",43,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",35,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",44,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",42,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",29,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",38,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",45,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",12,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",11,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",10,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",158,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",160,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",161,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",56,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",304,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",283,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",305,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",54,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",57,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",62,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",61,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",159,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",55,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",63,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",60,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",59,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",58,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",165,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",167,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",163,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",166,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",164,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",162,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",74,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",87,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",81,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",72,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",75,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",80,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",76,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",85,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",73,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",82,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",86,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",83,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",84,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",77,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",78,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",79,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",97,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",96,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",98,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",94,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",95,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",90,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",92,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",93,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",91,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",68,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",70,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",71,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",69,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",64,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",66,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",67,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",65,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",89,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",88,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",99,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",100,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",168,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",284,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",285,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",286,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",287,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",288,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",289,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",101,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",102,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",106,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",172,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",173,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",107,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",174,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",108,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",176,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",122,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",111,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",120,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",121,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",112,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",117,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",124,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",119,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",123,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",114,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",113,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",118,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",115,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",116,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",175,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",110,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",125,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",109,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",177,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",141,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",128,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",137,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",139,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",140,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",132,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",138,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",127,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",134,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",135,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",129,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",133,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",136,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",130,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",131,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",126,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",146,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",147,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",179,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",178,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",142,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",143,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",144,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",145,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn::punctuated","",294,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",293,[[["tokenstream"],["self"]]]],[11,"fmt","syn","",157,[[["formatter"],["self"]],["result"]]],[11,"span","","",157,[[["self"]],[["option",["span"]],["span"]]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"span","","",53,[[["self"]],[["option",["span"]],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",303,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",303,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",303,[[["self"],["span"]]]],[11,"visit_abi","syn::visit","",296,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arm","","",296,[[["self"],["arm"]]]],[11,"visit_attr_style","","",296,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",296,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",296,[[["self"],["barefnarg"]]]],[11,"visit_bin_op","","",296,[[["self"],["binop"]]]],[11,"visit_binding","","",296,[[["self"],["binding"]]]],[11,"visit_block","","",296,[[["self"],["block"]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes"],["self"]]]],[11,"visit_const_param","","",296,[[["constparam"],["self"]]]],[11,"visit_constraint","","",296,[[["self"],["constraint"]]]],[11,"visit_data","","",296,[[["data"],["self"]]]],[11,"visit_data_enum","","",296,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",296,[[["datastruct"],["self"]]]],[11,"visit_data_union","","",296,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",296,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",296,[[["self"],["expr"]]]],[11,"visit_expr_array","","",296,[[["exprarray"],["self"]]]],[11,"visit_expr_assign","","",296,[[["self"],["exprassign"]]]],[11,"visit_expr_assign_op","","",296,[[["exprassignop"],["self"]]]],[11,"visit_expr_async","","",296,[[["self"],["exprasync"]]]],[11,"visit_expr_await","","",296,[[["self"],["exprawait"]]]],[11,"visit_expr_binary","","",296,[[["self"],["exprbinary"]]]],[11,"visit_expr_block","","",296,[[["self"],["exprblock"]]]],[11,"visit_expr_box","","",296,[[["self"],["exprbox"]]]],[11,"visit_expr_break","","",296,[[["self"],["exprbreak"]]]],[11,"visit_expr_call","","",296,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",296,[[["self"],["exprcast"]]]],[11,"visit_expr_closure","","",296,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",296,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",296,[[["exprfield"],["self"]]]],[11,"visit_expr_for_loop","","",296,[[["exprforloop"],["self"]]]],[11,"visit_expr_group","","",296,[[["self"],["exprgroup"]]]],[11,"visit_expr_if","","",296,[[["exprif"],["self"]]]],[11,"visit_expr_index","","",296,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",296,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",296,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",296,[[["self"],["exprloop"]]]],[11,"visit_expr_macro","","",296,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",296,[[["self"],["exprmatch"]]]],[11,"visit_expr_method_call","","",296,[[["self"],["exprmethodcall"]]]],[11,"visit_expr_paren","","",296,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",296,[[["exprpath"],["self"]]]],[11,"visit_expr_range","","",296,[[["exprrange"],["self"]]]],[11,"visit_expr_reference","","",296,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat","","",296,[[["exprrepeat"],["self"]]]],[11,"visit_expr_return","","",296,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",296,[[["self"],["exprstruct"]]]],[11,"visit_expr_try","","",296,[[["exprtry"],["self"]]]],[11,"visit_expr_try_block","","",296,[[["exprtryblock"],["self"]]]],[11,"visit_expr_tuple","","",296,[[["exprtuple"],["self"]]]],[11,"visit_expr_type","","",296,[[["exprtype"],["self"]]]],[11,"visit_expr_unary","","",296,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",296,[[["self"],["exprunsafe"]]]],[11,"visit_expr_while","","",296,[[["self"],["exprwhile"]]]],[11,"visit_expr_yield","","",296,[[["expryield"],["self"]]]],[11,"visit_field","","",296,[[["self"],["field"]]]],[11,"visit_field_pat","","",296,[[["self"],["fieldpat"]]]],[11,"visit_field_value","","",296,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",296,[[["self"],["fields"]]]],[11,"visit_fields_named","","",296,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",296,[[["fieldsunnamed"],["self"]]]],[11,"visit_file","","",296,[[["self"],["file"]]]],[11,"visit_fn_arg","","",296,[[["self"],["fnarg"]]]],[11,"visit_foreign_item","","",296,[[["foreignitem"],["self"]]]],[11,"visit_foreign_item_fn","","",296,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",296,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",296,[[["self"],["foreignitemstatic"]]]],[11,"visit_foreign_item_type","","",296,[[["foreignitemtype"],["self"]]]],[11,"visit_generic_argument","","",296,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",296,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",296,[[["self"],["genericparam"]]]],[11,"visit_generics","","",296,[[["self"],["generics"]]]],[11,"visit_ident","","",296,[[["self"],["ident"]]]],[11,"visit_impl_item","","",296,[[["self"],["implitem"]]]],[11,"visit_impl_item_const","","",296,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_macro","","",296,[[["self"],["implitemmacro"]]]],[11,"visit_impl_item_method","","",296,[[["self"],["implitemmethod"]]]],[11,"visit_impl_item_type","","",296,[[["self"],["implitemtype"]]]],[11,"visit_index","","",296,[[["self"],["index"]]]],[11,"visit_item","","",296,[[["self"],["item"]]]],[11,"visit_item_const","","",296,[[["self"],["itemconst"]]]],[11,"visit_item_enum","","",296,[[["self"],["itemenum"]]]],[11,"visit_item_extern_crate","","",296,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",296,[[["itemfn"],["self"]]]],[11,"visit_item_foreign_mod","","",296,[[["self"],["itemforeignmod"]]]],[11,"visit_item_impl","","",296,[[["self"],["itemimpl"]]]],[11,"visit_item_macro","","",296,[[["itemmacro"],["self"]]]],[11,"visit_item_macro2","","",296,[[["self"],["itemmacro2"]]]],[11,"visit_item_mod","","",296,[[["itemmod"],["self"]]]],[11,"visit_item_static","","",296,[[["self"],["itemstatic"]]]],[11,"visit_item_struct","","",296,[[["self"],["itemstruct"]]]],[11,"visit_item_trait","","",296,[[["itemtrait"],["self"]]]],[11,"visit_item_trait_alias","","",296,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type","","",296,[[["self"],["itemtype"]]]],[11,"visit_item_union","","",296,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",296,[[["self"],["itemuse"]]]],[11,"visit_label","","",296,[[["label"],["self"]]]],[11,"visit_lifetime","","",296,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",296,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",296,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",296,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",296,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",296,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",296,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",296,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",296,[[["litint"],["self"]]]],[11,"visit_lit_str","","",296,[[["self"],["litstr"]]]],[11,"visit_local","","",296,[[["self"],["local"]]]],[11,"visit_macro","","",296,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",296,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",296,[[["member"],["self"]]]],[11,"visit_meta","","",296,[[["self"],["meta"]]]],[11,"visit_meta_list","","",296,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",296,[[["self"],["metanamevalue"]]]],[11,"visit_method_turbofish","","",296,[[["methodturbofish"],["self"]]]],[11,"visit_nested_meta","","",296,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",296,[[["self"],["pat"]]]],[11,"visit_pat_box","","",296,[[["self"],["patbox"]]]],[11,"visit_pat_ident","","",296,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",296,[[["self"],["patlit"]]]],[11,"visit_pat_macro","","",296,[[["patmacro"],["self"]]]],[11,"visit_pat_or","","",296,[[["self"],["pator"]]]],[11,"visit_pat_path","","",296,[[["self"],["patpath"]]]],[11,"visit_pat_range","","",296,[[["self"],["patrange"]]]],[11,"visit_pat_reference","","",296,[[["self"],["patreference"]]]],[11,"visit_pat_rest","","",296,[[["patrest"],["self"]]]],[11,"visit_pat_slice","","",296,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",296,[[["self"],["patstruct"]]]],[11,"visit_pat_tuple","","",296,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct","","",296,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_type","","",296,[[["pattype"],["self"]]]],[11,"visit_pat_wild","","",296,[[["self"],["patwild"]]]],[11,"visit_path","","",296,[[["self"],["path"]]]],[11,"visit_path_arguments","","",296,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",296,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",296,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",296,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",296,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",296,[[["qself"],["self"]]]],[11,"visit_range_limits","","",296,[[["self"],["rangelimits"]]]],[11,"visit_receiver","","",296,[[["self"],["receiver"]]]],[11,"visit_return_type","","",296,[[["self"],["returntype"]]]],[11,"visit_signature","","",296,[[["self"],["signature"]]]],[11,"visit_span","","",296,[[["self"],["span"]]]],[11,"visit_stmt","","",296,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",296,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",296,[[["self"],["traitboundmodifier"]]]],[11,"visit_trait_item","","",296,[[["self"],["traititem"]]]],[11,"visit_trait_item_const","","",296,[[["self"],["traititemconst"]]]],[11,"visit_trait_item_macro","","",296,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",296,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",296,[[["traititemtype"],["self"]]]],[11,"visit_type","","",296,[[["self"],["type"]]]],[11,"visit_type_array","","",296,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",296,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",296,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",296,[[["typeimpltrait"],["self"]]]],[11,"visit_type_infer","","",296,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",296,[[["typemacro"],["self"]]]],[11,"visit_type_never","","",296,[[["typenever"],["self"]]]],[11,"visit_type_param","","",296,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",296,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",296,[[["typeparen"],["self"]]]],[11,"visit_type_path","","",296,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",296,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",296,[[["typereference"],["self"]]]],[11,"visit_type_slice","","",296,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",296,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",296,[[["typetuple"],["self"]]]],[11,"visit_un_op","","",296,[[["self"],["unop"]]]],[11,"visit_use_glob","","",296,[[["useglob"],["self"]]]],[11,"visit_use_group","","",296,[[["self"],["usegroup"]]]],[11,"visit_use_name","","",296,[[["self"],["usename"]]]],[11,"visit_use_path","","",296,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",296,[[["userename"],["self"]]]],[11,"visit_use_tree","","",296,[[["self"],["usetree"]]]],[11,"visit_variadic","","",296,[[["self"],["variadic"]]]],[11,"visit_variant","","",296,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",296,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",296,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",296,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",296,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",296,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",296,[[["self"],["wherepredicate"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",312,[[["self"],["peek"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",312,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"Arm"],[3,"FieldValue"],[3,"Label"],[3,"MethodTurbofish"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Block"],[3,"Local"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"GenericMethodArgument"],[4,"RangeLimits"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"Stmt"],[4,"ReturnType"],[4,"Type"],[4,"Pat"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]};
searchIndex["synstructure"] = {"doc":"This crate provides helper types for matching against enum…","i":[[3,"BindingInfo","synstructure","Information about a specific binding. This contains both…",null,null],[12,"binding","","The name which this BindingInfo will bind to.",0,null],[12,"style","","The type of binding which this BindingInfo will create.",0,null],[3,"VariantAst","","This type is similar to `syn`'s `Variant` type, however…",null,null],[12,"attrs","","",1,null],[12,"ident","","",1,null],[12,"fields","","",1,null],[12,"discriminant","","",1,null],[3,"VariantInfo","","A wrapper around a `syn::DeriveInput`'s variant which…",null,null],[12,"prefix","","",2,null],[3,"Structure","","A wrapper around a `syn::DeriveInput` which provides…",null,null],[4,"AddBounds","","Changes how bounds are added",null,null],[13,"Both","","Add for fields and generics",3,null],[13,"Fields","","Fields only",3,null],[13,"Generics","","Generics only",3,null],[13,"None","","None",3,null],[4,"BindStyle","","The type of binding to use when generating a pattern.",null,null],[13,"Move","","`x`",4,null],[13,"MoveMut","","`mut x`",4,null],[13,"Ref","","`ref x`",4,null],[13,"RefMut","","`ref mut x`",4,null],[5,"unpretty_print","","Dumps an unpretty version of a tokenstream. Takes any type…",null,[[["display"]],["string"]]],[8,"MacroResult","","Helper trait describing values which may be returned by…",null,null],[10,"into_result","","Convert this result into a `Result` for further processing…",5,[[],[["tokenstream"],["result",["tokenstream"]]]]],[11,"into_stream","","Convert this result into a `proc_macro::TokenStream`,…",5,[[],["tokenstream"]]],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",0,[[["self"]],["field"]]],[11,"pat","","Generates the pattern fragment for this field binding.",0,[[["self"]],["tokenstream"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",0,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"bindings","","Returns a slice of the bindings in this Variant.",2,[[["self"]]]],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",2,[[["self"]]]],[11,"ast","","Returns a `VariantAst` object which contains references to…",2,[[["self"]],["variantast"]]],[11,"omitted_bindings","","True if any bindings were omitted due to a `filter` call.",2,[[["self"]],["bool"]]],[11,"pat","","Generates the match-arm pattern which could be used to…",2,[[["self"]],["tokenstream"]]],[11,"construct","","Generates the token stream required to construct the…",2,[[["self"],["f"]],["tokenstream"]]],[11,"each","","Runs the passed-in function once for each bound field,…",2,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",2,[[["i"],["self"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Variant` object. This…",2,[[["self"],["f"]],["self"]]],[11,"remove_binding","","Remove the binding at the given index.",2,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",2,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"new","","Create a new `Structure` with the variants and fields from…",6,[[["deriveinput"]],["self"]]],[11,"try_new","","Create a new `Structure` with the variants and fields from…",6,[[["deriveinput"]],["result"]]],[11,"variants","","Returns a slice of the variants in this Structure.",6,[[["self"]]]],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",6,[[["self"]]]],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",6,[[["self"]],["deriveinput"]]],[11,"omitted_variants","","True if any variants were omitted due to a…",6,[[["self"]],["bool"]]],[11,"each","","Runs the passed-in function once for each bound field,…",6,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",6,[[["i"],["self"],["f"]],["tokenstream"]]],[11,"each_variant","","Runs the passed-in function once for each variant, passing…",6,[[["self"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Structure` object.…",6,[[["self"],["f"]],["self"]]],[11,"add_where_predicate","","Specify additional where predicate bounds which should be…",6,[[["self"],["wherepredicate"]],["self"]]],[11,"add_bounds","","Specify which bounds should be generated by…",6,[[["self"],["addbounds"]],["self"]]],[11,"filter_variants","","Filter the variants matched by this `Structure` object.…",6,[[["self"],["f"]],["self"]]],[11,"remove_variant","","Remove the variant at the given index.",6,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",6,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",6,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced…",6,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"add_impl_generic","","Adds an `impl<>` generic parameter. This can be used when…",6,[[["self"],["genericparam"]],["self"]]],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each…",6,[[["option"],["traitbound"],["addbounds"],["self"]]]],[11,"bound_impl","","NOTE: This methods' features are superceded by…",6,[[["totokens"],["self"]],["tokenstream"]]],[11,"unsafe_bound_impl","","NOTE: This methods' features are superceded by…",6,[[["totokens"],["self"]],["tokenstream"]]],[11,"unbound_impl","","NOTE: This methods' features are superceded by…",6,[[["totokens"],["self"]],["tokenstream"]]],[11,"unsafe_unbound_impl","","NOTE: This methods' features are superceded by…",6,[[["totokens"],["self"]],["tokenstream"]]],[11,"gen_impl","","Generate an impl block for the given struct. This impl…",6,[[["tokenstream"],["self"]],["tokenstream"]]],[14,"decl_derive","","The `decl_derive!` macro declares a custom derive wrapper.…",null,null],[14,"decl_attribute","","The `decl_attribute!` macro declares a custom attribute…",null,null],[14,"test_derive","","Run a test on a custom derive. This macro expands both the…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"clone","","",3,[[["self"]],["addbounds"]]],[11,"clone","","",4,[[["self"]],["bindstyle"]]],[11,"clone","","",0,[[["self"]],["bindinginfo"]]],[11,"clone","","",1,[[["self"]],["variantast"]]],[11,"clone","","",2,[[["self"]],["variantinfo"]]],[11,"clone","","",6,[[["self"]],["structure"]]],[11,"eq","","",3,[[["self"],["addbounds"]],["bool"]]],[11,"eq","","",4,[[["bindstyle"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"eq","","",1,[[["variantast"],["self"]],["bool"]]],[11,"ne","","",1,[[["variantast"],["self"]],["bool"]]],[11,"eq","","",2,[[["variantinfo"],["self"]],["bool"]]],[11,"ne","","",2,[[["variantinfo"],["self"]],["bool"]]],[11,"eq","","",6,[[["structure"],["self"]],["bool"]]],[11,"ne","","",6,[[["structure"],["self"]],["bool"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]]],"p":[[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[4,"AddBounds"],[4,"BindStyle"],[8,"MacroResult"],[3,"Structure"]]};
searchIndex["terminal_size"] = {"doc":"A simple utility for getting the size of a terminal.  ","i":[[3,"Width","terminal_size","",null,null],[12,"0","","",0,null],[3,"Height","","",null,null],[12,"0","","",1,null],[5,"terminal_size","","Returns the size of the terminal defaulting to STDOUT, if…",null,[[],["option"]]],[5,"terminal_size_using_fd","","Returns the size of the terminal using the given file…",null,[[["rawfd"]],["option"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Width"],[3,"Height"]]};
searchIndex["termios"] = {"doc":"The `termios` crate provides Rust bindings for the POSIX…","i":[[3,"Termios","termios","Unix terminal I/O control structure.",null,null],[5,"cfgetispeed","","Gets the input baud rate stored in a `Termios` structure.",null,[[["termios"]],["speed_t"]]],[5,"cfgetospeed","","Gets the output baud rate stored in a `Termios` structure.",null,[[["termios"]],["speed_t"]]],[5,"cfsetispeed","","Sets the input baud rate.",null,[[["termios"],["speed_t"]],["result"]]],[5,"cfsetospeed","","Sets the output baud rate.",null,[[["termios"],["speed_t"]],["result"]]],[5,"cfsetspeed","","Sets input and output baud rates.",null,[[["termios"],["speed_t"]],["result"]]],[5,"cfmakeraw","","Sets flags to disable all input and output processing.",null,[[["termios"]]]],[5,"tcdrain","","Blocks until all output written to the file descriptor is…",null,[[["rawfd"]],["result"]]],[5,"tcflow","","Suspends or restarts transmission or reception of data.",null,[[["c_int"],["rawfd"]],["result"]]],[5,"tcflush","","Discards data waiting in the terminal device's buffers.",null,[[["c_int"],["rawfd"]],["result"]]],[5,"tcgetattr","","Populates a `Termios` structure with parameters associated…",null,[[["termios"],["rawfd"]],["result"]]],[5,"tcsetattr","","Sets a terminal device's parameters.",null,[[["c_int"],["rawfd"],["termios"]],["result"]]],[5,"tcgetsid","","Returns the process group ID of the controlling terminal's…",null,[[["rawfd"]],["pid_t"]]],[5,"tcsendbreak","","Transmits data to generate a break condition.",null,[[["c_int"],["rawfd"]],["result"]]],[0,"ffi","","Unsafe FFI bindings.",null,null],[5,"tcgetattr","termios::ffi","",null,null],[5,"tcsetattr","","",null,null],[5,"tcsendbreak","","",null,null],[5,"tcdrain","","",null,null],[5,"tcflush","","",null,null],[5,"tcflow","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetsid","","",null,null],[0,"os","termios","OS-specific definitions.",null,null],[0,"macos","termios::os","",null,null],[3,"termios","termios::os::macos","",null,null],[12,"c_iflag","","",0,null],[12,"c_oflag","","",0,null],[12,"c_cflag","","",0,null],[12,"c_lflag","","",0,null],[12,"c_cc","","",0,null],[6,"tcflag_t","","",null,null],[6,"cc_t","","",null,null],[6,"speed_t","","",null,null],[17,"NCCS","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VDSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"VSTATUS","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"IUTF8","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"OXTABS","","",null,null],[17,"ONOEOT","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"NLDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"OFDEL","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"NL2","","",null,null],[17,"NL3","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"CIGNORE","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CCTS_OFLOW","","",null,null],[17,"CRTSCTS","","",null,null],[17,"CRTS_IFLOW","","",null,null],[17,"CDTR_IFLOW","","",null,null],[17,"CDSR_OFLOW","","",null,null],[17,"CCAR_OFLOW","","",null,null],[17,"MDMBUF","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"ALTWERASE","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"NOKERNINFO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"B7200","","",null,null],[17,"B14400","","",null,null],[17,"B28800","","",null,null],[17,"B57600","","",null,null],[17,"B76800","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCSASOFT","","",null,null],[11,"from_fd","termios","Creates a `Termios` structure based on the current…",1,[[["rawfd"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","termios::os::macos","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["termios"]]],[11,"clone","termios","",1,[[["self"]],["termios"]]],[11,"eq","termios::os::macos","",0,[[["self"],["termios"]],["bool"]]],[11,"ne","","",0,[[["self"],["termios"]],["bool"]]],[11,"eq","termios","",1,[[["termios"],["self"]],["bool"]]],[11,"ne","","",1,[[["termios"],["self"]],["bool"]]],[11,"deref","","",1,[[["self"]],["termios"]]],[11,"deref_mut","","",1,[[["self"]],["termios"]]],[11,"fmt","termios::os::macos","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","termios","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"termios"],[3,"Termios"]]};
searchIndex["typenum"] = {"doc":"This crate provides type-level numbers evaluated at…","i":[[3,"Greater","typenum","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Less","","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Equal","","A potential output from `Cmp`, this is the type equivalent…",null,null],[0,"bit","","Type-level bits.",null,null],[3,"B0","typenum::bit","The type-level bit 0.",null,null],[3,"B1","","The type-level bit 1.",null,null],[11,"new","","Instantiates a singleton representing this bit.",0,[[],["b0"]]],[11,"new","","Instantiates a singleton representing this bit.",1,[[],["b1"]]],[0,"int","typenum","Type-level signed integers.",null,null],[3,"PInt","typenum::int","Type-level signed integers with positive sign.",null,null],[3,"NInt","","Type-level signed integers with negative sign.",null,null],[3,"Z0","","The type-level signed integer 0.",null,null],[11,"new","","Instantiates a singleton representing this strictly…",2,[[],["pint"]]],[11,"new","","Instantiates a singleton representing this strictly…",3,[[],["nint"]]],[11,"new","","Instantiates a singleton representing the integer 0.",4,[[],["z0"]]],[0,"marker_traits","typenum","All of the marker traits used in typenum.",null,null],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All…",null,null],[8,"Ord","","A Marker trait for the types `Greater`, `Equal`, and `Less`.",null,null],[10,"to_ordering","","",5,[[],["ordering"]]],[8,"Bit","","The marker trait for compile time bits.",null,null],[18,"U8","","",6,null],[18,"BOOL","","",6,null],[10,"to_u8","","",6,[[],["u8"]]],[10,"to_bool","","",6,[[],["bool"]]],[8,"Unsigned","","The marker trait for compile time unsigned integers.",null,null],[18,"U8","","",7,null],[18,"U16","","",7,null],[18,"U32","","",7,null],[18,"U64","","",7,null],[18,"USIZE","","",7,null],[18,"I8","","",7,null],[18,"I16","","",7,null],[18,"I32","","",7,null],[18,"I64","","",7,null],[18,"ISIZE","","",7,null],[10,"to_u8","","",7,[[],["u8"]]],[10,"to_u16","","",7,[[],["u16"]]],[10,"to_u32","","",7,[[],["u32"]]],[10,"to_u64","","",7,[[],["u64"]]],[10,"to_usize","","",7,[[],["usize"]]],[10,"to_i8","","",7,[[],["i8"]]],[10,"to_i16","","",7,[[],["i16"]]],[10,"to_i32","","",7,[[],["i32"]]],[10,"to_i64","","",7,[[],["i64"]]],[10,"to_isize","","",7,[[],["isize"]]],[8,"Integer","","The marker trait for compile time signed integers.",null,null],[18,"I8","","",8,null],[18,"I16","","",8,null],[18,"I32","","",8,null],[18,"I64","","",8,null],[18,"ISIZE","","",8,null],[10,"to_i8","","",8,[[],["i8"]]],[10,"to_i16","","",8,[[],["i16"]]],[10,"to_i32","","",8,[[],["i32"]]],[10,"to_i64","","",8,[[],["i64"]]],[10,"to_isize","","",8,[[],["isize"]]],[8,"TypeArray","","The marker trait for type-level arrays of type-level…",null,null],[8,"PowerOfTwo","","The marker trait for type-level numbers which are a power…",null,null],[0,"operator_aliases","typenum","Aliases for the type operators used in this crate. Their…",null,null],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A…",null,null],[6,"Or","","Alias for the associated type of `BitOr`: `Or<A, B> = <A…",null,null],[6,"Xor","","Alias for the associated type of `BitXor`: `Xor<A, B> = <A…",null,null],[6,"Shleft","","Alias for the associated type of `Shl`: `Shleft<A, B> = <A…",null,null],[6,"Shright","","Alias for the associated type of `Shr`: `Shright<A, B> =…",null,null],[6,"Sum","","Alias for the associated type of `Add`: `Sum<A, B> = <A as…",null,null],[6,"Diff","","Alias for the associated type of `Sub`: `Diff<A, B> = <A…",null,null],[6,"Prod","","Alias for the associated type of `Mul`: `Prod<A, B> = <A…",null,null],[6,"Quot","","Alias for the associated type of `Div`: `Quot<A, B> = <A…",null,null],[6,"Mod","","Alias for the associated type of `Rem`: `Mod<A, B> = <A as…",null,null],[6,"PartialQuot","","Alias for the associated type of `PartialDiv`:…",null,null],[6,"Negate","","Alias for the associated type of `Neg`: `Negate<A> = <A as…",null,null],[6,"AbsVal","","Alias for the associated type of `Abs`: `AbsVal<A> = <A as…",null,null],[6,"Exp","","Alias for the associated type of `Pow`: `Exp<A, B> = <A as…",null,null],[6,"Gcf","","Alias for the associated type of `Gcd`: `Gcf<A, B> = <A as…",null,null],[6,"Add1","","Alias to make it easy to add 1: `Add1<A> = <A as…",null,null],[6,"Sub1","","Alias to make it easy to subtract 1: `Sub1<A> = <A as…",null,null],[6,"Double","","Alias to make it easy to multiply by 2. `Double<A> =…",null,null],[6,"Square","","Alias to make it easy to square. `Square<A> = <A as…",null,null],[6,"Cube","","Alias to make it easy to cube. `Cube<A> = <Square<A> as…",null,null],[6,"Sqrt","","Alias for the associated type of `SquareRoot`: `Sqrt<A> =…",null,null],[6,"Compare","","Alias for the associated type of `Cmp`: `Compare<A, B> =…",null,null],[6,"Length","","Alias for the associated type of `Len`: `Length<A> = <A as…",null,null],[6,"Minimum","","Alias for the associated type of `Min`: `Minimum<A, B> =…",null,null],[6,"Maximum","","Alias for the associated type of `Max`: `Maximum<A, B> =…",null,null],[6,"Le","","Alias for the associated type of `IsLess`: `Le<A, B> = <A…",null,null],[6,"Eq","","Alias for the associated type of `IsEqual`: `Eq<A, B> = <A…",null,null],[6,"Gr","","Alias for the associated type of `IsGreater`: `Gr<A, B> =…",null,null],[6,"GrEq","","Alias for the associated type of `IsGreaterOrEqual`:…",null,null],[6,"LeEq","","Alias for the associated type of `IsLessOrEqual`: `LeEq<A,…",null,null],[6,"NotEq","","Alias for the associated type of `IsNotEqual`: `NotEq<A,…",null,null],[6,"Log2","","Alias for the associated type of `Logarithm2`: `Log2<A> =…",null,null],[0,"type_operators","typenum","Useful type operators that are not defined in `core::ops`.",null,null],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as…",null,null],[16,"Output","","Should always be `Self`",9,null],[8,"Abs","","A type operator that returns the absolute value.",null,null],[16,"Output","","The absolute value.",10,null],[8,"Pow","","A type operator that provides exponentiation by repeated…",null,null],[16,"Output","","The result of the exponentiation.",11,null],[10,"powi","","This function isn't used in this crate, but may be useful…",11,[[["exp"]]]],[8,"Cmp","","A type operator for comparing `Self` and `Rhs`. It…",null,null],[16,"Output","","The result of the comparison. It should only ever be one…",12,null],[8,"Len","","A type operator that gives the length of an `Array` or the…",null,null],[16,"Output","","The length as a type-level unsigned integer.",13,null],[10,"len","","This function isn't used in this crate, but may be useful…",13,[[["self"]]]],[8,"PartialDiv","","Division as a partial function. This type operator…",null,null],[16,"Output","","The type of the result of the division",14,null],[10,"partial_div","","Method for performing the division",14,[[["rhs"]]]],[8,"Min","","A type operator that returns the minimum of `Self` and…",null,null],[16,"Output","","The type of the minimum of `Self` and `Rhs`",15,null],[10,"min","","Method returning the minimum",15,[[["rhs"]]]],[8,"Max","","A type operator that returns the maximum of `Self` and…",null,null],[16,"Output","","The type of the maximum of `Self` and `Rhs`",16,null],[10,"max","","Method returning the maximum",16,[[["rhs"]]]],[8,"IsLess","","A type operator that returns `True` if `Self < Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",17,null],[10,"is_less","","Method returning `True` or `False`.",17,[[["rhs"]]]],[8,"IsEqual","","A type operator that returns `True` if `Self == Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",18,null],[10,"is_equal","","Method returning `True` or `False`.",18,[[["rhs"]]]],[8,"IsGreater","","A type operator that returns `True` if `Self > Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",19,null],[10,"is_greater","","Method returning `True` or `False`.",19,[[["rhs"]]]],[8,"IsLessOrEqual","","A type operator that returns `True` if `Self <= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",20,null],[10,"is_less_or_equal","","Method returning `True` or `False`.",20,[[["rhs"]]]],[8,"IsNotEqual","","A type operator that returns `True` if `Self != Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",21,null],[10,"is_not_equal","","Method returning `True` or `False`.",21,[[["rhs"]]]],[8,"IsGreaterOrEqual","","A type operator that returns `True` if `Self >= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",22,null],[10,"is_greater_or_equal","","Method returning `True` or `False`.",22,[[["rhs"]]]],[8,"SquareRoot","","A type operator for taking the integer square root of…",null,null],[16,"Output","","The result of the integer square root.",23,null],[8,"Logarithm2","","A type operator for taking the integer binary logarithm of…",null,null],[16,"Output","","The result of the integer binary logarithm.",24,null],[8,"Gcd","","A type operator that computes the [greatest common…",null,null],[16,"Output","","The greatest common divisor.",25,null],[0,"uint","typenum","Type-level unsigned integers.",null,null],[3,"UTerm","typenum::uint","The terminating type for `UInt`; it always comes after the…",null,null],[3,"UInt","","`UInt` is defined recursively, where `B` is the least…",null,null],[6,"GetBitOut","","",null,null],[6,"SetBitOut","","Alias for the result of calling `SetBit`: `SetBitOut<N, I,…",null,null],[8,"GetBit","","",null,null],[16,"Output","","",26,null],[8,"SetBit","","A type operator that, when implemented for unsigned…",null,null],[16,"Output","","",27,null],[11,"new","","Instantiates a singleton representing this unsigned integer.",28,[[],["uterm"]]],[11,"new","","Instantiates a singleton representing this unsigned integer.",29,[[],["uint"]]],[0,"array","typenum","A type-level array of type-level numbers.",null,null],[3,"ATerm","typenum::array","The terminating type for type arrays.",null,null],[3,"TArr","","`TArr` is a type that acts as an array of types. It is…",null,null],[0,"consts","typenum","Type aliases for many constants.",null,null],[6,"True","typenum::consts","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[6,"True","typenum","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[14,"op","","Convenient type operations.",null,null],[14,"cmp","","A convenience macro for comparing type numbers. Use `op!`…",null,null],[14,"tarr","","Create a new type-level arrray. Only usable on Rust 1.13.0…",null,null],[14,"assert_type_eq","","Asserts that two types are the same.",null,null],[14,"assert_type","","Asserts that a type is `True`, aka `B1`.",null,null],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"is_less","typenum::bit","",0,[[["b"]]]],[11,"is_equal","","",0,[[["b"]]]],[11,"is_greater","","",0,[[["b"]]]],[11,"is_less_or_equal","","",0,[[["b"]]]],[11,"is_not_equal","","",0,[[["b"]]]],[11,"is_greater_or_equal","","",0,[[["b"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"is_less","","",1,[[["b"]]]],[11,"is_equal","","",1,[[["b"]]]],[11,"is_greater","","",1,[[["b"]]]],[11,"is_less_or_equal","","",1,[[["b"]]]],[11,"is_not_equal","","",1,[[["b"]]]],[11,"is_greater_or_equal","","",1,[[["b"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"powi","typenum::int","",2,[[["n"]]]],[11,"partial_div","","",2,[[["n"]]]],[11,"is_less","","",2,[[["b"]]]],[11,"is_equal","","",2,[[["b"]]]],[11,"is_greater","","",2,[[["b"]]]],[11,"is_less_or_equal","","",2,[[["b"]]]],[11,"is_not_equal","","",2,[[["b"]]]],[11,"is_greater_or_equal","","",2,[[["b"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"powi","","",3,[[["n"]]]],[11,"partial_div","","",3,[[["n"]]]],[11,"is_less","","",3,[[["b"]]]],[11,"is_equal","","",3,[[["b"]]]],[11,"is_greater","","",3,[[["b"]]]],[11,"is_less_or_equal","","",3,[[["b"]]]],[11,"is_not_equal","","",3,[[["b"]]]],[11,"is_greater_or_equal","","",3,[[["b"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"powi","","",4,[[["n"]]]],[11,"partial_div","","",4,[[["n"]]]],[11,"is_less","","",4,[[["b"]]]],[11,"is_equal","","",4,[[["b"]]]],[11,"is_greater","","",4,[[["b"]]]],[11,"is_less_or_equal","","",4,[[["b"]]]],[11,"is_not_equal","","",4,[[["b"]]]],[11,"is_greater_or_equal","","",4,[[["b"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"powi","typenum::uint","",28,[[["n"]]]],[11,"partial_div","","",28,[[["n"]]]],[11,"is_less","","",28,[[["b"]]]],[11,"is_equal","","",28,[[["b"]]]],[11,"is_greater","","",28,[[["b"]]]],[11,"is_less_or_equal","","",28,[[["b"]]]],[11,"is_not_equal","","",28,[[["b"]]]],[11,"is_greater_or_equal","","",28,[[["b"]]]],[11,"set_bit","","",28,[[["i"],["b"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"powi","","",29,[[["n"]]]],[11,"partial_div","","",29,[[["n"]]]],[11,"is_less","","",29,[[["b"]]]],[11,"is_equal","","",29,[[["b"]]]],[11,"is_greater","","",29,[[["b"]]]],[11,"is_less_or_equal","","",29,[[["b"]]]],[11,"is_not_equal","","",29,[[["b"]]]],[11,"is_greater_or_equal","","",29,[[["b"]]]],[11,"set_bit","","",29,[[["i"],["b"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"partial_div","typenum::array","",33,[[["n"]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"partial_div","","",34,[[["n"]]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"to_ordering","typenum","",30,[[],["ordering"]]],[11,"to_ordering","","",31,[[],["ordering"]]],[11,"to_ordering","","",32,[[],["ordering"]]],[11,"to_u8","typenum::bit","",0,[[],["u8"]]],[11,"to_bool","","",0,[[],["bool"]]],[11,"to_u8","","",1,[[],["u8"]]],[11,"to_bool","","",1,[[],["bool"]]],[11,"to_u8","typenum::uint","",28,[[],["u8"]]],[11,"to_u16","","",28,[[],["u16"]]],[11,"to_u32","","",28,[[],["u32"]]],[11,"to_u64","","",28,[[],["u64"]]],[11,"to_usize","","",28,[[],["usize"]]],[11,"to_i8","","",28,[[],["i8"]]],[11,"to_i16","","",28,[[],["i16"]]],[11,"to_i32","","",28,[[],["i32"]]],[11,"to_i64","","",28,[[],["i64"]]],[11,"to_isize","","",28,[[],["isize"]]],[11,"to_u8","","",29,[[],["u8"]]],[11,"to_u16","","",29,[[],["u16"]]],[11,"to_u32","","",29,[[],["u32"]]],[11,"to_u64","","",29,[[],["u64"]]],[11,"to_usize","","",29,[[],["usize"]]],[11,"to_i8","","",29,[[],["i8"]]],[11,"to_i16","","",29,[[],["i16"]]],[11,"to_i32","","",29,[[],["i32"]]],[11,"to_i64","","",29,[[],["i64"]]],[11,"to_isize","","",29,[[],["isize"]]],[11,"to_i8","typenum::int","",4,[[],["i8"]]],[11,"to_i16","","",4,[[],["i16"]]],[11,"to_i32","","",4,[[],["i32"]]],[11,"to_i64","","",4,[[],["i64"]]],[11,"to_isize","","",4,[[],["isize"]]],[11,"to_i8","","",2,[[],["i8"]]],[11,"to_i16","","",2,[[],["i16"]]],[11,"to_i32","","",2,[[],["i32"]]],[11,"to_i64","","",2,[[],["i64"]]],[11,"to_isize","","",2,[[],["isize"]]],[11,"to_i8","","",3,[[],["i8"]]],[11,"to_i16","","",3,[[],["i16"]]],[11,"to_i32","","",3,[[],["i32"]]],[11,"to_i64","","",3,[[],["i64"]]],[11,"to_isize","","",3,[[],["isize"]]],[11,"powi","","",4,[[["z0"]]]],[11,"powi","","",4,[[["pint"]]]],[11,"powi","","",4,[[["nint"]]]],[11,"powi","typenum","",35,[[["nint"]]]],[11,"powi","","",36,[[["nint",["uint"]],["uint",["b0"]]]]],[11,"powi","","",36,[[["uint",["b1"]],["nint",["uint"]]]]],[11,"powi","typenum::int","",2,[[["z0"]]]],[11,"powi","","",3,[[["z0"]]]],[11,"powi","","",2,[[["pint"]]]],[11,"powi","","",3,[[["pint",["uint"]],["uint",["b0"]]]]],[11,"powi","","",3,[[["pint",["uint"]],["uint",["b1"]]]]],[11,"compare","typenum::bit","",0,[[["b0"],["self"]]]],[11,"compare","","",0,[[["b1"],["self"]]]],[11,"compare","","",1,[[["b0"],["self"]]]],[11,"compare","","",1,[[["b1"],["self"]]]],[11,"compare","typenum::int","",4,[[["z0"],["self"]]]],[11,"compare","","",4,[[["nint"],["self"]]]],[11,"compare","","",4,[[["pint"],["self"]]]],[11,"compare","","",2,[[["z0"],["self"]]]],[11,"compare","","",3,[[["z0"],["self"]]]],[11,"compare","","",3,[[["self"],["pint"]]]],[11,"compare","","",2,[[["self"],["nint"]]]],[11,"compare","","",2,[[["self"],["pint"]]]],[11,"compare","","",3,[[["self"],["nint"]]]],[11,"compare","typenum::uint","",28,[[["uterm"],["self"]]]],[11,"compare","","",29,[[["uterm"],["self"]]]],[11,"compare","","",28,[[["self"],["uint"]]]],[11,"compare","","",29,[[["self"],["uint"]]]],[11,"compare","","",29,[[["uint"],["self"]]]],[11,"compare","","",29,[[["uint"],["self"]]]],[11,"compare","","",29,[[["self"],["uint"]]]],[11,"len","","",28,[[["self"]]]],[11,"len","","",29,[[["self"]]]],[11,"len","typenum::array","",33,[[["self"]]]],[11,"len","","",34,[[["self"]]]],[11,"partial_div","typenum::uint","",28,[[["uint"]]]],[11,"partial_div","","",29,[[["uint"]]]],[11,"partial_div","typenum::array","",33,[[["rhs"]]]],[11,"partial_div","","",34,[[["rhs"]]]],[11,"min","typenum::bit","",0,[[["b0"]],["b0"]]],[11,"min","","",0,[[["b1"]],["b0"]]],[11,"min","","",1,[[["b0"]],["b0"]]],[11,"min","","",1,[[["b1"]],["b1"]]],[11,"min","typenum::int","",4,[[["z0"]]]],[11,"min","","",4,[[["pint"]]]],[11,"min","","",4,[[["nint"]]]],[11,"min","","",2,[[["z0"]]]],[11,"min","","",3,[[["z0"]]]],[11,"min","","",2,[[["pint"]]]],[11,"min","","",3,[[["pint"]]]],[11,"min","","",2,[[["nint"]]]],[11,"min","","",3,[[["nint"]]]],[11,"min","typenum::uint","",28,[[["u"]]]],[11,"min","","",29,[[["ur"]]]],[11,"max","typenum::bit","",0,[[["b0"]],["b0"]]],[11,"max","","",0,[[["b1"]],["b1"]]],[11,"max","","",1,[[["b0"]],["b1"]]],[11,"max","","",1,[[["b1"]],["b1"]]],[11,"max","typenum::int","",4,[[["z0"]]]],[11,"max","","",4,[[["pint"]]]],[11,"max","","",4,[[["nint"]]]],[11,"max","","",2,[[["z0"]]]],[11,"max","","",3,[[["z0"]]]],[11,"max","","",2,[[["pint"]]]],[11,"max","","",3,[[["pint"]]]],[11,"max","","",2,[[["nint"]]]],[11,"max","","",3,[[["nint"]]]],[11,"max","typenum::uint","",28,[[["u"]]]],[11,"max","","",29,[[["ur"]]]],[11,"get_bit","","",29,[[["u0"],["self"]]]],[11,"get_bit","","",29,[[["uint"],["self"]]]],[11,"get_bit","","",28,[[["i"],["self"]]]],[11,"fmt","typenum::bit","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum::int","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum::uint","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum::array","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"div","typenum::int","",4,[[["i"]]]],[11,"div","","",2,[[["pint"]]]],[11,"div","","",2,[[["nint"]]]],[11,"div","","",3,[[["pint"]]]],[11,"div","","",3,[[["nint"]]]],[11,"div","typenum::uint","",28,[[["uint"]]]],[11,"div","","",29,[[["uint"]]]],[11,"div","typenum::array","",33,[[["rhs"]]]],[11,"div","","",34,[[["rhs"]]]],[11,"rem","typenum::int","",4,[[["i"]]]],[11,"rem","","",2,[[["pint"]]]],[11,"rem","","",2,[[["nint"]]]],[11,"rem","","",3,[[["pint"]]]],[11,"rem","","",3,[[["nint"]]]],[11,"rem","typenum::uint","",28,[[["uint"]]]],[11,"rem","","",29,[[["uint"]]]],[11,"rem","typenum::array","",33,[[["rhs"]]]],[11,"rem","","",34,[[["rhs"]]]],[11,"sub","typenum::int","",4,[[["z0"]]]],[11,"sub","","",4,[[["pint"]]]],[11,"sub","","",4,[[["nint"]]]],[11,"sub","","",2,[[["z0"]]]],[11,"sub","","",3,[[["z0"]]]],[11,"sub","","",2,[[["nint"]]]],[11,"sub","","",3,[[["pint"]]]],[11,"sub","","",2,[[["pint"]]]],[11,"sub","","",3,[[["nint"]]]],[11,"sub","typenum::uint","",28,[[["b0"]]]],[11,"sub","","",29,[[["b0"]]]],[11,"sub","","",29,[[["b1"]]]],[11,"sub","","",29,[[["b1"]]]],[11,"sub","","",29,[[["b1"]]]],[11,"sub","","",28,[[["uterm"]]]],[11,"sub","","",29,[[["ur"]]]],[11,"sub","typenum::array","",33,[[["aterm"]]]],[11,"sub","","",34,[[["tarr"]]]],[11,"eq","typenum::bit","",0,[[["b0"],["self"]],["bool"]]],[11,"eq","","",1,[[["b1"],["self"]],["bool"]]],[11,"eq","typenum::int","",2,[[["pint"],["self"]],["bool"]]],[11,"ne","","",2,[[["pint"],["self"]],["bool"]]],[11,"eq","","",3,[[["nint"],["self"]],["bool"]]],[11,"ne","","",3,[[["nint"],["self"]],["bool"]]],[11,"eq","","",4,[[["z0"],["self"]],["bool"]]],[11,"eq","typenum::uint","",28,[[["uterm"],["self"]],["bool"]]],[11,"eq","","",29,[[["self"],["uint"]],["bool"]]],[11,"ne","","",29,[[["self"],["uint"]],["bool"]]],[11,"eq","typenum::array","",33,[[["aterm"],["self"]],["bool"]]],[11,"eq","","",34,[[["tarr"],["self"]],["bool"]]],[11,"ne","","",34,[[["tarr"],["self"]],["bool"]]],[11,"eq","typenum","",30,[[["self"],["greater"]],["bool"]]],[11,"eq","","",31,[[["less"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["equal"]],["bool"]]],[11,"cmp","typenum::bit","",0,[[["b0"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["b1"],["self"]],["ordering"]]],[11,"cmp","typenum::int","",2,[[["pint"],["self"]],["ordering"]]],[11,"cmp","","",3,[[["nint"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["z0"],["self"]],["ordering"]]],[11,"cmp","typenum::uint","",28,[[["uterm"],["self"]],["ordering"]]],[11,"cmp","","",29,[[["self"],["uint"]],["ordering"]]],[11,"cmp","typenum::array","",33,[[["aterm"],["self"]],["ordering"]]],[11,"cmp","","",34,[[["tarr"],["self"]],["ordering"]]],[11,"cmp","typenum","",30,[[["self"],["greater"]],["ordering"]]],[11,"cmp","","",31,[[["less"],["self"]],["ordering"]]],[11,"cmp","","",32,[[["self"],["equal"]],["ordering"]]],[11,"partial_cmp","typenum::bit","",0,[[["b0"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",1,[[["b1"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","typenum::int","",2,[[["pint"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["pint"],["self"]],["bool"]]],[11,"le","","",2,[[["pint"],["self"]],["bool"]]],[11,"gt","","",2,[[["pint"],["self"]],["bool"]]],[11,"ge","","",2,[[["pint"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["nint"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["nint"],["self"]],["bool"]]],[11,"le","","",3,[[["nint"],["self"]],["bool"]]],[11,"gt","","",3,[[["nint"],["self"]],["bool"]]],[11,"ge","","",3,[[["nint"],["self"]],["bool"]]],[11,"partial_cmp","","",4,[[["z0"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","typenum::uint","",28,[[["uterm"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",29,[[["self"],["uint"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",29,[[["self"],["uint"]],["bool"]]],[11,"le","","",29,[[["self"],["uint"]],["bool"]]],[11,"gt","","",29,[[["self"],["uint"]],["bool"]]],[11,"ge","","",29,[[["self"],["uint"]],["bool"]]],[11,"partial_cmp","typenum::array","",33,[[["aterm"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",34,[[["tarr"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",34,[[["tarr"],["self"]],["bool"]]],[11,"le","","",34,[[["tarr"],["self"]],["bool"]]],[11,"gt","","",34,[[["tarr"],["self"]],["bool"]]],[11,"ge","","",34,[[["tarr"],["self"]],["bool"]]],[11,"partial_cmp","typenum","",30,[[["self"],["greater"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",31,[[["less"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",32,[[["self"],["equal"]],[["option",["ordering"]],["ordering"]]]],[11,"add","typenum::int","",4,[[["i"]]]],[11,"add","","",2,[[["z0"]]]],[11,"add","","",3,[[["z0"]]]],[11,"add","","",2,[[["pint"]]]],[11,"add","","",3,[[["nint"]]]],[11,"add","","",2,[[["nint"]]]],[11,"add","","",3,[[["pint"]]]],[11,"add","typenum::uint","",28,[[["b0"]]]],[11,"add","","",29,[[["b0"]]]],[11,"add","","",28,[[["b1"]]]],[11,"add","","",29,[[["b1"]]]],[11,"add","","",29,[[["b1"]]]],[11,"add","","",28,[[["u"]]]],[11,"add","","",29,[[["uterm"]]]],[11,"add","","",29,[[["uint",["b0"]],["b0"]]]],[11,"add","","",29,[[["b1"],["uint",["b1"]]]]],[11,"add","","",29,[[["uint",["b0"]],["b0"]]]],[11,"add","","",29,[[["b1"],["uint",["b1"]]]]],[11,"add","typenum::array","",33,[[["aterm"]]]],[11,"add","","",34,[[["tarr"]]]],[11,"mul","typenum::int","",4,[[["i"]]]],[11,"mul","","",2,[[["z0"]]]],[11,"mul","","",3,[[["z0"]]]],[11,"mul","","",2,[[["pint"]]]],[11,"mul","","",3,[[["nint"]]]],[11,"mul","","",2,[[["nint"]]]],[11,"mul","","",3,[[["pint"]]]],[11,"mul","typenum::uint","",29,[[["b0"]]]],[11,"mul","","",28,[[["b0"]]]],[11,"mul","","",28,[[["b1"]]]],[11,"mul","","",29,[[["b1"]]]],[11,"mul","","",29,[[["uterm"]]]],[11,"mul","","",28,[[["u"]]]],[11,"mul","","",29,[[["uint"]]]],[11,"mul","","",29,[[["uint"]]]],[11,"mul","typenum::array","",33,[[["rhs"]]]],[11,"mul","","",34,[[["rhs"]]]],[11,"mul","typenum::int","",4,[[["aterm"]]]],[11,"mul","","",2,[[["aterm"]]]],[11,"mul","","",3,[[["aterm"]]]],[11,"mul","","",4,[[["tarr"]]]],[11,"mul","","",2,[[["tarr"]]]],[11,"mul","","",3,[[["tarr"]]]],[11,"neg","","",4,[[]]],[11,"neg","","",2,[[]]],[11,"neg","","",3,[[]]],[11,"neg","typenum::array","",33,[[]]],[11,"neg","","",34,[[]]],[11,"not","typenum::bit","",0,[[]]],[11,"not","","",1,[[]]],[11,"bitand","","",0,[[["rhs"]]]],[11,"bitand","","",1,[[["b0"]]]],[11,"bitand","","",1,[[["b1"]]]],[11,"bitand","typenum::uint","",28,[[["ur"]]]],[11,"bitand","","",29,[[["ur"]]]],[11,"bitor","typenum::bit","",0,[[["b0"]]]],[11,"bitor","","",0,[[["b1"]]]],[11,"bitor","","",1,[[["rhs"]]]],[11,"bitor","typenum::uint","",28,[[["u"]]]],[11,"bitor","","",29,[[["uterm"]]]],[11,"bitor","","",29,[[["uint",["b0"]],["b0"]]]],[11,"bitor","","",29,[[["b1"],["uint",["b1"]]]]],[11,"bitor","","",29,[[["uint",["b0"]],["b0"]]]],[11,"bitor","","",29,[[["b1"],["uint",["b1"]]]]],[11,"bitxor","typenum::bit","",0,[[["b0"]]]],[11,"bitxor","","",1,[[["b0"]]]],[11,"bitxor","","",0,[[["b1"]]]],[11,"bitxor","","",1,[[["b1"]]]],[11,"bitxor","typenum::uint","",28,[[["ur"]]]],[11,"bitxor","","",29,[[["ur"]]]],[11,"shl","","",28,[[["b0"]]]],[11,"shl","","",28,[[["b1"]]]],[11,"shl","","",29,[[["b0"]]]],[11,"shl","","",29,[[["b1"]]]],[11,"shl","","",29,[[["uterm"]]]],[11,"shl","","",28,[[["u"]]]],[11,"shl","","",29,[[["uint"]]]],[11,"shr","","",28,[[["u"]]]],[11,"shr","","",29,[[["uterm"]]]],[11,"shr","","",28,[[["b0"]]]],[11,"shr","","",28,[[["b1"]]]],[11,"shr","","",29,[[["b0"]]]],[11,"shr","","",29,[[["b1"]]]],[11,"shr","","",29,[[["uint"]]]],[11,"hash","typenum::bit","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","typenum::int","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","typenum::uint","",28,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","typenum::array","",33,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","typenum","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"clone","typenum::bit","",0,[[["self"]],["b0"]]],[11,"clone","","",1,[[["self"]],["b1"]]],[11,"clone","typenum::int","",2,[[["self"]],["pint"]]],[11,"clone","","",3,[[["self"]],["nint"]]],[11,"clone","","",4,[[["self"]],["z0"]]],[11,"clone","typenum::uint","",28,[[["self"]],["uterm"]]],[11,"clone","","",29,[[["self"]],["uint"]]],[11,"clone","typenum::array","",33,[[["self"]],["aterm"]]],[11,"clone","","",34,[[["self"]],["tarr"]]],[11,"clone","typenum","",30,[[["self"]],["greater"]]],[11,"clone","","",31,[[["self"]],["less"]]],[11,"clone","","",32,[[["self"]],["equal"]]],[11,"default","typenum::bit","",0,[[],["b0"]]],[11,"default","","",1,[[],["b1"]]],[11,"default","typenum::int","",2,[[],["pint"]]],[11,"default","","",3,[[],["nint"]]],[11,"default","","",4,[[],["z0"]]],[11,"default","typenum::uint","",28,[[],["uterm"]]],[11,"default","","",29,[[],["uint"]]],[11,"default","typenum","",30,[[],["greater"]]],[11,"default","","",31,[[],["less"]]],[11,"default","","",32,[[],["equal"]]]],"p":[[3,"B0"],[3,"B1"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,"Unsigned"],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,"PartialDiv"],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,"IsGreater"],[8,"IsLessOrEqual"],[8,"IsNotEqual"],[8,"IsGreaterOrEqual"],[8,"SquareRoot"],[8,"Logarithm2"],[8,"Gcd"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]};
searchIndex["ucd_trie"] = {"doc":"The ucd-trie crate provides a compressed trie set…","i":[[3,"TrieSetOwned","ucd_trie","An owned trie set.",null,null],[3,"TrieSetSlice","","A borrowed trie set.",null,null],[4,"Error","","An error that can occur during construction of a trie.",null,null],[13,"InvalidCodepoint","","This error is returned when an invalid codepoint is given…",0,null],[13,"GaveUp","","This error is returned when a set of Unicode codepoints…",0,null],[11,"from_scalars","","Create a new trie set from a set of Unicode scalar values.",1,[[["i"]],[["result",["triesetowned"]],["triesetowned"]]]],[11,"from_codepoints","","Create a new trie set from a set of Unicode scalar values.",1,[[["i"]],[["result",["triesetowned"]],["triesetowned"]]]],[11,"as_slice","","Return this set as a slice.",1,[[["self"]],["triesetslice"]]],[11,"contains_char","","Returns true if and only if the given Unicode scalar value…",1,[[["self"],["char"]],["bool"]]],[11,"contains_u32","","Returns true if and only if the given codepoint is in this…",1,[[["u32"],["self"]],["bool"]]],[6,"Result","","A type alias that maps to `std::result::Result<T,…",null,null],[6,"TrieSet","","A type alias for `TrieSetSlice<'static>`.",null,null],[11,"contains_char","","Returns true if and only if the given Unicode scalar value…",2,[[["self"],["char"]],["bool"]]],[11,"contains_u32","","Returns true if and only if the given codepoint is in this…",2,[[["u32"],["self"]],["bool"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["error"]]],[11,"clone","","",1,[[["self"]],["triesetowned"]]],[11,"clone","","",2,[[["self"]],["triesetslice"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"Error"],[3,"TrieSetOwned"],[3,"TrieSetSlice"]]};
searchIndex["unicode_width"] = {"doc":"Determine displayed width of `char` and `str` types…","i":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width…",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode…",null,null],[10,"width","","Returns the character's displayed width in columns, or…",0,[[],[["option",["usize"]],["usize"]]]],[10,"width_cjk","","Returns the character's displayed width in columns, or…",0,[[],[["option",["usize"]],["usize"]]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",null,null],[10,"width","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]],[10,"width_cjk","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,"UnicodeXID"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);